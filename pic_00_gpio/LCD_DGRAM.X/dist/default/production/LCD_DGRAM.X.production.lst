

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu May 25 20:34:55 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     _TRISDbits	set	3989
    55   000000                     _OSCCONbits	set	4051
    56   000000                     _PORTDbits	set	3971
    57   000000                     _LATCbits	set	3979
    58   000000                     _LATD	set	3980
    59   000000                     _TRISCbits	set	3988
    60   000000                     _TRISD	set	3989
    61   000000                     _OSCCON	set	4051
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66   007F1A                     __pcinit:
    67                           	callstack 0
    68   007F1A                     start_initialization:
    69                           	callstack 0
    70   007F1A                     __initialization:
    71                           	callstack 0
    72   007F1A                     end_of_initialization:
    73                           	callstack 0
    74   007F1A                     __end_of__initialization:
    75                           	callstack 0
    76   007F1A  0100               	movlb	0
    77   007F1C  EFA9  F03F         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMRAM
    80   000001                     __pcstackCOMRAM:
    81                           	callstack 0
    82   000001                     ??_Lcd_Send_Nibble:
    83   000001                     
    84                           ; 2 bytes @ 0x0
    85   000001                     	ds	1
    86   000002                     Lcd_Send_Nibble@byte:
    87                           	callstack 0
    88                           
    89                           ; 1 bytes @ 0x1
    90   000002                     	ds	1
    91   000003                     Lcd_Send_Nibble@upper_bits:
    92                           	callstack 0
    93                           
    94                           ; 1 bytes @ 0x2
    95   000003                     	ds	1
    96   000004                     Lcd_Send_Nibble@lower_bits:
    97                           	callstack 0
    98                           
    99                           ; 1 bytes @ 0x3
   100   000004                     	ds	1
   101   000005                     Lcd_Send_Command@command:
   102                           	callstack 0
   103   000005                     Lcd_Send_Character@character:
   104                           	callstack 0
   105                           
   106                           ; 1 bytes @ 0x4
   107   000005                     	ds	1
   108   000006                     
   109                           ; 1 bytes @ 0x5
   110 ;;
   111 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   112 ;;
   113 ;; *************** function _main *****************
   114 ;; Defined at:
   115 ;;		line 25 in file "main.c"
   116 ;; Parameters:    Size  Location     Type
   117 ;;		None
   118 ;; Auto vars:     Size  Location     Type
   119 ;;		None
   120 ;; Return value:  Size  Location     Type
   121 ;;                  2   16[None  ] int 
   122 ;; Registers used:
   123 ;;		wreg, status,2, status,0, cstack
   124 ;; Tracked objects:
   125 ;;		On entry : 0/0
   126 ;;		On exit  : 0/0
   127 ;;		Unchanged: 0/0
   128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   129 ;;      Params:         0       0       0       0       0       0       0       0       0
   130 ;;      Locals:         0       0       0       0       0       0       0       0       0
   131 ;;      Temps:          0       0       0       0       0       0       0       0       0
   132 ;;      Totals:         0       0       0       0       0       0       0       0       0
   133 ;;Total ram usage:        0 bytes
   134 ;; Hardware stack levels required when called: 2
   135 ;; This function calls:
   136 ;;		_Init_Internal_Oscillator
   137 ;;		_Init_Lcd_16x2
   138 ;;		_Lcd_Send_Character
   139 ;;		_Lcd_Send_Command
   140 ;; This function is called by:
   141 ;;		Startup code after reset
   142 ;; This function uses a non-reentrant model
   143 ;;
   144                           
   145                           	psect	text0
   146   007F52                     __ptext0:
   147                           	callstack 0
   148   007F52                     _main:
   149                           	callstack 29
   150   007F52                     
   151                           ;main.c: 28:     Init_Internal_Oscillator();
   152   007F52  ECA2  F03F         	call	_Init_Internal_Oscillator	;wreg free
   153   007F56                     
   154                           ;main.c: 30:     Init_Lcd_16x2();
   155   007F56  ECB7  F03F         	call	_Init_Lcd_16x2	;wreg free
   156   007F5A                     
   157                           ;main.c: 32:     Lcd_Send_Command(0x82);
   158   007F5A  0E82               	movlw	130
   159   007F5C  EC9C  F03F         	call	_Lcd_Send_Command
   160   007F60                     
   161                           ;main.c: 33:     Lcd_Send_Character('A');
   162   007F60  0E41               	movlw	65
   163   007F62  EC96  F03F         	call	_Lcd_Send_Character
   164   007F66                     l17:
   165   007F66  EFB3  F03F         	goto	l17
   166   007F6A  EF00  F000         	goto	start
   167   007F6E                     __end_of_main:
   168                           	callstack 0
   169                           
   170 ;; *************** function _Lcd_Send_Command *****************
   171 ;; Defined at:
   172 ;;		line 33 in file "lcd_16x2.c"
   173 ;; Parameters:    Size  Location     Type
   174 ;;  command         1    wreg     unsigned char 
   175 ;; Auto vars:     Size  Location     Type
   176 ;;  command         1    4[COMRAM] unsigned char 
   177 ;; Return value:  Size  Location     Type
   178 ;;                  1    wreg      void 
   179 ;; Registers used:
   180 ;;		wreg, status,2, status,0, cstack
   181 ;; Tracked objects:
   182 ;;		On entry : 0/0
   183 ;;		On exit  : 0/0
   184 ;;		Unchanged: 0/0
   185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   186 ;;      Params:         0       0       0       0       0       0       0       0       0
   187 ;;      Locals:         1       0       0       0       0       0       0       0       0
   188 ;;      Temps:          0       0       0       0       0       0       0       0       0
   189 ;;      Totals:         1       0       0       0       0       0       0       0       0
   190 ;;Total ram usage:        1 bytes
   191 ;; Hardware stack levels used: 1
   192 ;; Hardware stack levels required when called: 1
   193 ;; This function calls:
   194 ;;		_Lcd_Send_Nibble
   195 ;; This function is called by:
   196 ;;		_main
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           	psect	text1
   201   007F38                     __ptext1:
   202                           	callstack 0
   203   007F38                     _Lcd_Send_Command:
   204                           	callstack 29
   205                           
   206                           ;incstack = 0
   207                           ;Lcd_Send_Command@command stored from wreg
   208   007F38  6E05               	movwf	Lcd_Send_Command@command^0,c
   209   007F3A                     
   210                           ;lcd_16x2.c: 33: void Lcd_Send_Command (char command);lcd_16x2.c: 34: {;lcd_16x2.c: 35: 
      +                              LATCbits.LATC0 = 0;;
   211   007F3A  908B               	bcf	139,0,c	;volatile
   212   007F3C                     
   213                           ;lcd_16x2.c: 36:     Lcd_Send_Nibble(command);
   214   007F3C  5005               	movf	Lcd_Send_Command@command^0,w,c
   215   007F3E  ECCA  F03F         	call	_Lcd_Send_Nibble
   216   007F42  0012               	return		;funcret
   217   007F44                     __end_of_Lcd_Send_Command:
   218                           	callstack 0
   219                           
   220 ;; *************** function _Lcd_Send_Character *****************
   221 ;; Defined at:
   222 ;;		line 39 in file "lcd_16x2.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;  character       1    wreg     unsigned char 
   225 ;; Auto vars:     Size  Location     Type
   226 ;;  character       1    4[COMRAM] unsigned char 
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2, status,0, cstack
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   236 ;;      Params:         0       0       0       0       0       0       0       0       0
   237 ;;      Locals:         1       0       0       0       0       0       0       0       0
   238 ;;      Temps:          0       0       0       0       0       0       0       0       0
   239 ;;      Totals:         1       0       0       0       0       0       0       0       0
   240 ;;Total ram usage:        1 bytes
   241 ;; Hardware stack levels used: 1
   242 ;; Hardware stack levels required when called: 1
   243 ;; This function calls:
   244 ;;		_Lcd_Send_Nibble
   245 ;; This function is called by:
   246 ;;		_main
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	text2
   251   007F2C                     __ptext2:
   252                           	callstack 0
   253   007F2C                     _Lcd_Send_Character:
   254                           	callstack 29
   255                           
   256                           ;incstack = 0
   257                           ;Lcd_Send_Character@character stored from wreg
   258   007F2C  6E05               	movwf	Lcd_Send_Character@character^0,c
   259   007F2E                     
   260                           ;lcd_16x2.c: 39: void Lcd_Send_Character (char character);lcd_16x2.c: 40: {;lcd_16x2.c: 
      +                          41:     LATCbits.LATC0 = 1;;
   261   007F2E  808B               	bsf	139,0,c	;volatile
   262   007F30                     
   263                           ;lcd_16x2.c: 42:     Lcd_Send_Nibble(character);
   264   007F30  5005               	movf	Lcd_Send_Character@character^0,w,c
   265   007F32  ECCA  F03F         	call	_Lcd_Send_Nibble
   266   007F36  0012               	return		;funcret
   267   007F38                     __end_of_Lcd_Send_Character:
   268                           	callstack 0
   269                           
   270 ;; *************** function _Init_Lcd_16x2 *****************
   271 ;; Defined at:
   272 ;;		line 57 in file "lcd_16x2.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   286 ;;      Params:         0       0       0       0       0       0       0       0       0
   287 ;;      Locals:         0       0       0       0       0       0       0       0       0
   288 ;;      Temps:          0       0       0       0       0       0       0       0       0
   289 ;;      Totals:         0       0       0       0       0       0       0       0       0
   290 ;;Total ram usage:        0 bytes
   291 ;; Hardware stack levels used: 1
   292 ;; Hardware stack levels required when called: 1
   293 ;; This function calls:
   294 ;;		_Init_Lcd_Gpio
   295 ;;		_Lcd_Send_Nibble
   296 ;; This function is called by:
   297 ;;		_main
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           	psect	text3
   302   007F6E                     __ptext3:
   303                           	callstack 0
   304   007F6E                     _Init_Lcd_16x2:
   305                           	callstack 29
   306   007F6E                     
   307                           ;lcd_16x2.c: 60:     Init_Lcd_Gpio();
   308   007F6E  EC90  F03F         	call	_Init_Lcd_Gpio	;wreg free
   309   007F72                     
   310                           ;lcd_16x2.c: 61:     LATCbits.LATC2 = 0;;
   311   007F72  948B               	bcf	139,2,c	;volatile
   312   007F74                     
   313                           ;lcd_16x2.c: 63:     Lcd_Send_Nibble(0x01);
   314   007F74  0E01               	movlw	1
   315   007F76  ECCA  F03F         	call	_Lcd_Send_Nibble
   316   007F7A                     
   317                           ;lcd_16x2.c: 64:     Lcd_Send_Nibble(0x02);
   318   007F7A  0E02               	movlw	2
   319   007F7C  ECCA  F03F         	call	_Lcd_Send_Nibble
   320   007F80                     
   321                           ;lcd_16x2.c: 65:     Lcd_Send_Nibble(0x28);
   322   007F80  0E28               	movlw	40
   323   007F82  ECCA  F03F         	call	_Lcd_Send_Nibble
   324   007F86                     
   325                           ;lcd_16x2.c: 66:     Lcd_Send_Nibble(0x07);
   326   007F86  0E07               	movlw	7
   327   007F88  ECCA  F03F         	call	_Lcd_Send_Nibble
   328   007F8C                     
   329                           ;lcd_16x2.c: 67:     Lcd_Send_Nibble(0x0C);
   330   007F8C  0E0C               	movlw	12
   331   007F8E  ECCA  F03F         	call	_Lcd_Send_Nibble
   332   007F92  0012               	return		;funcret
   333   007F94                     __end_of_Init_Lcd_16x2:
   334                           	callstack 0
   335                           
   336 ;; *************** function _Lcd_Send_Nibble *****************
   337 ;; Defined at:
   338 ;;		line 15 in file "lcd_16x2.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;  byte            1    wreg     unsigned char 
   341 ;; Auto vars:     Size  Location     Type
   342 ;;  byte            1    1[COMRAM] unsigned char 
   343 ;;  lower_bits      1    3[COMRAM] unsigned char 
   344 ;;  upper_bits      1    2[COMRAM] unsigned char 
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2, status,0
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   354 ;;      Params:         0       0       0       0       0       0       0       0       0
   355 ;;      Locals:         3       0       0       0       0       0       0       0       0
   356 ;;      Temps:          1       0       0       0       0       0       0       0       0
   357 ;;      Totals:         4       0       0       0       0       0       0       0       0
   358 ;;Total ram usage:        4 bytes
   359 ;; Hardware stack levels used: 1
   360 ;; This function calls:
   361 ;;		Nothing
   362 ;; This function is called by:
   363 ;;		_Lcd_Send_Command
   364 ;;		_Lcd_Send_Character
   365 ;;		_Init_Lcd_16x2
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           	psect	text4
   370   007F94                     __ptext4:
   371                           	callstack 0
   372   007F94                     _Lcd_Send_Nibble:
   373                           	callstack 29
   374                           
   375                           ;incstack = 0
   376                           ;Lcd_Send_Nibble@byte stored from wreg
   377   007F94  6E02               	movwf	Lcd_Send_Nibble@byte^0,c
   378   007F96                     
   379                           ;lcd_16x2.c: 18:     upper_bits = byte & 0xF0;
   380   007F96  5002               	movf	Lcd_Send_Nibble@byte^0,w,c
   381   007F98  0BF0               	andlw	240
   382   007F9A  6E03               	movwf	Lcd_Send_Nibble@upper_bits^0,c
   383   007F9C                     
   384                           ;lcd_16x2.c: 19:     lower_bits = (byte & 0x0F) << 4;
   385   007F9C  C002  F001         	movff	Lcd_Send_Nibble@byte,??_Lcd_Send_Nibble
   386   007FA0  0E0F               	movlw	15
   387   007FA2  1601               	andwf	??_Lcd_Send_Nibble^0,f,c
   388   007FA4  3801               	swapf	??_Lcd_Send_Nibble^0,w,c
   389   007FA6  0BF0               	andlw	240
   390   007FA8  6E04               	movwf	Lcd_Send_Nibble@lower_bits^0,c
   391   007FAA                     
   392                           ;lcd_16x2.c: 23:     LATD |= upper_bits;
   393   007FAA  5003               	movf	Lcd_Send_Nibble@upper_bits^0,w,c	;volatile
   394   007FAC  128C               	iorwf	140,f,c	;volatile
   395   007FAE                     
   396                           ;lcd_16x2.c: 24:     LATCbits.LATC1 = 1;; _delay((unsigned long)((1)*(8000000UL/4000.0))
      +                          ); LATCbits.LATC1 = 0;; _delay((unsigned long)((1)*(8000000UL/4000.0)));;
   397   007FAE  828B               	bsf	139,1,c	;volatile
   398   007FB0  0E03               	movlw	3
   399   007FB2  6E01               	movwf	??_Lcd_Send_Nibble^0,c
   400   007FB4  0E98               	movlw	152
   401   007FB6                     u17:
   402   007FB6  2EE8               	decfsz	wreg,f,c
   403   007FB8  D7FE               	bra	u17
   404   007FBA  2E01               	decfsz	??_Lcd_Send_Nibble^0,f,c
   405   007FBC  D7FC               	bra	u17
   406   007FBE  928B               	bcf	139,1,c	;volatile
   407   007FC0  0E03               	movlw	3
   408   007FC2  6E01               	movwf	??_Lcd_Send_Nibble^0,c
   409   007FC4  0E98               	movlw	152
   410   007FC6                     u27:
   411   007FC6  2EE8               	decfsz	wreg,f,c
   412   007FC8  D7FE               	bra	u27
   413   007FCA  2E01               	decfsz	??_Lcd_Send_Nibble^0,f,c
   414   007FCC  D7FC               	bra	u27
   415   007FCE                     
   416                           ;lcd_16x2.c: 25:     LATD &= ~upper_bits;
   417   007FCE  5003               	movf	Lcd_Send_Nibble@upper_bits^0,w,c	;volatile
   418   007FD0  0AFF               	xorlw	255
   419   007FD2  168C               	andwf	140,f,c	;volatile
   420   007FD4                     
   421                           ;lcd_16x2.c: 28:     LATD |= lower_bits;
   422   007FD4  5004               	movf	Lcd_Send_Nibble@lower_bits^0,w,c	;volatile
   423   007FD6  128C               	iorwf	140,f,c	;volatile
   424   007FD8                     
   425                           ;lcd_16x2.c: 29:     LATCbits.LATC1 = 1;; _delay((unsigned long)((1)*(8000000UL/4000.0))
      +                          ); LATCbits.LATC1 = 0;; _delay((unsigned long)((1)*(8000000UL/4000.0)));;
   426   007FD8  828B               	bsf	139,1,c	;volatile
   427   007FDA  0E03               	movlw	3
   428   007FDC  6E01               	movwf	??_Lcd_Send_Nibble^0,c
   429   007FDE  0E98               	movlw	152
   430   007FE0                     u37:
   431   007FE0  2EE8               	decfsz	wreg,f,c
   432   007FE2  D7FE               	bra	u37
   433   007FE4  2E01               	decfsz	??_Lcd_Send_Nibble^0,f,c
   434   007FE6  D7FC               	bra	u37
   435   007FE8  928B               	bcf	139,1,c	;volatile
   436   007FEA  0E03               	movlw	3
   437   007FEC  6E01               	movwf	??_Lcd_Send_Nibble^0,c
   438   007FEE  0E98               	movlw	152
   439   007FF0                     u47:
   440   007FF0  2EE8               	decfsz	wreg,f,c
   441   007FF2  D7FE               	bra	u47
   442   007FF4  2E01               	decfsz	??_Lcd_Send_Nibble^0,f,c
   443   007FF6  D7FC               	bra	u47
   444   007FF8                     
   445                           ;lcd_16x2.c: 30:     LATD &= ~lower_bits;
   446   007FF8  5004               	movf	Lcd_Send_Nibble@lower_bits^0,w,c	;volatile
   447   007FFA  0AFF               	xorlw	255
   448   007FFC  168C               	andwf	140,f,c	;volatile
   449   007FFE  0012               	return		;funcret
   450   008000                     __end_of_Lcd_Send_Nibble:
   451                           	callstack 0
   452                           
   453 ;; *************** function _Init_Lcd_Gpio *****************
   454 ;; Defined at:
   455 ;;		line 7 in file "lcd_16x2.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   469 ;;      Params:         0       0       0       0       0       0       0       0       0
   470 ;;      Locals:         0       0       0       0       0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0       0       0       0       0
   472 ;;      Totals:         0       0       0       0       0       0       0       0       0
   473 ;;Total ram usage:        0 bytes
   474 ;; Hardware stack levels used: 1
   475 ;; This function calls:
   476 ;;		Nothing
   477 ;; This function is called by:
   478 ;;		_Init_Lcd_16x2
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text5
   483   007F20                     __ptext5:
   484                           	callstack 0
   485   007F20                     _Init_Lcd_Gpio:
   486                           	callstack 29
   487   007F20                     
   488                           ;lcd_16x2.c: 9:     TRISD = 0x0F;
   489   007F20  0E0F               	movlw	15
   490   007F22  6E95               	movwf	149,c	;volatile
   491   007F24                     
   492                           ;lcd_16x2.c: 10:     TRISCbits.RC0 = 0;
   493   007F24  9094               	bcf	148,0,c	;volatile
   494   007F26                     
   495                           ;lcd_16x2.c: 11:     TRISCbits.RC1 = 0;
   496   007F26  9294               	bcf	148,1,c	;volatile
   497   007F28                     
   498                           ;lcd_16x2.c: 12:     TRISCbits.RC2 = 0;
   499   007F28  9494               	bcf	148,2,c	;volatile
   500   007F2A  0012               	return		;funcret
   501   007F2C                     __end_of_Init_Lcd_Gpio:
   502                           	callstack 0
   503                           
   504 ;; *************** function _Init_Internal_Oscillator *****************
   505 ;; Defined at:
   506 ;;		line 44 in file "main.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   520 ;;      Params:         0       0       0       0       0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0       0       0       0       0
   523 ;;      Totals:         0       0       0       0       0       0       0       0       0
   524 ;;Total ram usage:        0 bytes
   525 ;; Hardware stack levels used: 1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text6
   534   007F44                     __ptext6:
   535                           	callstack 0
   536   007F44                     _Init_Internal_Oscillator:
   537                           	callstack 30
   538   007F44                     
   539                           ;main.c: 47:     OSCCON = 0x00;
   540   007F44  0E00               	movlw	0
   541   007F46  6ED3               	movwf	211,c	;volatile
   542                           
   543                           ;main.c: 49:     OSCCONbits.IRCF = 0b111;
   544   007F48  0E70               	movlw	112
   545   007F4A  12D3               	iorwf	211,f,c	;volatile
   546                           
   547                           ;main.c: 50:     OSCCONbits.SCS = 0B11;
   548   007F4C  0E03               	movlw	3
   549   007F4E  12D3               	iorwf	211,f,c	;volatile
   550   007F50  0012               	return		;funcret
   551   007F52                     __end_of_Init_Internal_Oscillator:
   552                           	callstack 0
   553   000000                     
   554                           	psect	rparam
   555   000000                     
   556                           	psect	idloc
   557                           
   558                           ;Config register IDLOC0 @ 0x200000
   559                           ;	unspecified, using default values
   560   200000                     	org	2097152
   561   200000  FF                 	db	255
   562                           
   563                           ;Config register IDLOC1 @ 0x200001
   564                           ;	unspecified, using default values
   565   200001                     	org	2097153
   566   200001  FF                 	db	255
   567                           
   568                           ;Config register IDLOC2 @ 0x200002
   569                           ;	unspecified, using default values
   570   200002                     	org	2097154
   571   200002  FF                 	db	255
   572                           
   573                           ;Config register IDLOC3 @ 0x200003
   574                           ;	unspecified, using default values
   575   200003                     	org	2097155
   576   200003  FF                 	db	255
   577                           
   578                           ;Config register IDLOC4 @ 0x200004
   579                           ;	unspecified, using default values
   580   200004                     	org	2097156
   581   200004  FF                 	db	255
   582                           
   583                           ;Config register IDLOC5 @ 0x200005
   584                           ;	unspecified, using default values
   585   200005                     	org	2097157
   586   200005  FF                 	db	255
   587                           
   588                           ;Config register IDLOC6 @ 0x200006
   589                           ;	unspecified, using default values
   590   200006                     	org	2097158
   591   200006  FF                 	db	255
   592                           
   593                           ;Config register IDLOC7 @ 0x200007
   594                           ;	unspecified, using default values
   595   200007                     	org	2097159
   596   200007  FF                 	db	255
   597                           
   598                           	psect	config
   599                           
   600                           ;Config register CONFIG1L @ 0x300000
   601                           ;	PLL Prescaler Selection bits
   602                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   603                           ;	System Clock Postscaler Selection bits
   604                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   605                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   606                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   607   300000                     	org	3145728
   608   300000  00                 	db	0
   609                           
   610                           ;Config register CONFIG1H @ 0x300001
   611                           ;	Oscillator Selection bits
   612                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   613                           ;	Fail-Safe Clock Monitor Enable bit
   614                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   615                           ;	Internal/External Oscillator Switchover bit
   616                           ;	IESO = OFF, Oscillator Switchover mode disabled
   617   300001                     	org	3145729
   618   300001  0B                 	db	11
   619                           
   620                           ;Config register CONFIG2L @ 0x300002
   621                           ;	Power-up Timer Enable bit
   622                           ;	PWRT = OFF, PWRT disabled
   623                           ;	Brown-out Reset Enable bits
   624                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   625                           ;	Brown-out Reset Voltage bits
   626                           ;	BORV = 3, Minimum setting 2.05V
   627                           ;	USB Voltage Regulator Enable bit
   628                           ;	VREGEN = OFF, USB voltage regulator disabled
   629   300002                     	org	3145730
   630   300002  19                 	db	25
   631                           
   632                           ;Config register CONFIG2H @ 0x300003
   633                           ;	Watchdog Timer Enable bit
   634                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   635                           ;	Watchdog Timer Postscale Select bits
   636                           ;	WDTPS = 32768, 1:32768
   637   300003                     	org	3145731
   638   300003  1E                 	db	30
   639                           
   640                           ; Padding undefined space
   641   300004                     	org	3145732
   642   300004  FF                 	db	255
   643                           
   644                           ;Config register CONFIG3H @ 0x300005
   645                           ;	CCP2 MUX bit
   646                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
   647                           ;	PORTB A/D Enable bit
   648                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   649                           ;	Low-Power Timer 1 Oscillator Enable bit
   650                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   651                           ;	MCLR Pin Enable bit
   652                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   653   300005                     	org	3145733
   654   300005  80                 	db	128
   655                           
   656                           ;Config register CONFIG4L @ 0x300006
   657                           ;	Stack Full/Underflow Reset Enable bit
   658                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   659                           ;	Single-Supply ICSP Enable bit
   660                           ;	LVP = OFF, Single-Supply ICSP disabled
   661                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   662                           ;	ICPRT = OFF, ICPORT disabled
   663                           ;	Extended Instruction Set Enable bit
   664                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   665                           ;	Background Debugger Enable bit
   666                           ;	DEBUG = 0x1, unprogrammed default
   667   300006                     	org	3145734
   668   300006  80                 	db	128
   669                           
   670                           ; Padding undefined space
   671   300007                     	org	3145735
   672   300007  FF                 	db	255
   673                           
   674                           ;Config register CONFIG5L @ 0x300008
   675                           ;	Code Protection bit
   676                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   677                           ;	Code Protection bit
   678                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   679                           ;	Code Protection bit
   680                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   681                           ;	Code Protection bit
   682                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   683   300008                     	org	3145736
   684   300008  0F                 	db	15
   685                           
   686                           ;Config register CONFIG5H @ 0x300009
   687                           ;	Boot Block Code Protection bit
   688                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   689                           ;	Data EEPROM Code Protection bit
   690                           ;	CPD = OFF, Data EEPROM is not code-protected
   691   300009                     	org	3145737
   692   300009  C0                 	db	192
   693                           
   694                           ;Config register CONFIG6L @ 0x30000A
   695                           ;	Write Protection bit
   696                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   697                           ;	Write Protection bit
   698                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   699                           ;	Write Protection bit
   700                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   701                           ;	Write Protection bit
   702                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   703   30000A                     	org	3145738
   704   30000A  0F                 	db	15
   705                           
   706                           ;Config register CONFIG6H @ 0x30000B
   707                           ;	Configuration Register Write Protection bit
   708                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   709                           ;	Boot Block Write Protection bit
   710                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   711                           ;	Data EEPROM Write Protection bit
   712                           ;	WRTD = OFF, Data EEPROM is not write-protected
   713   30000B                     	org	3145739
   714   30000B  E0                 	db	224
   715                           
   716                           ;Config register CONFIG7L @ 0x30000C
   717                           ;	Table Read Protection bit
   718                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   719                           ;	Table Read Protection bit
   720                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   721                           ;	Table Read Protection bit
   722                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   723                           ;	Table Read Protection bit
   724                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   725   30000C                     	org	3145740
   726   30000C  0F                 	db	15
   727                           
   728                           ;Config register CONFIG7H @ 0x30000D
   729                           ;	Boot Block Table Read Protection bit
   730                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   731   30000D                     	org	3145741
   732   30000D  40                 	db	64
   733                           tosu	equ	0xFFF
   734                           tosh	equ	0xFFE
   735                           tosl	equ	0xFFD
   736                           stkptr	equ	0xFFC
   737                           pclatu	equ	0xFFB
   738                           pclath	equ	0xFFA
   739                           pcl	equ	0xFF9
   740                           tblptru	equ	0xFF8
   741                           tblptrh	equ	0xFF7
   742                           tblptrl	equ	0xFF6
   743                           tablat	equ	0xFF5
   744                           prodh	equ	0xFF4
   745                           prodl	equ	0xFF3
   746                           indf0	equ	0xFEF
   747                           postinc0	equ	0xFEE
   748                           postdec0	equ	0xFED
   749                           preinc0	equ	0xFEC
   750                           plusw0	equ	0xFEB
   751                           fsr0h	equ	0xFEA
   752                           fsr0l	equ	0xFE9
   753                           wreg	equ	0xFE8
   754                           indf1	equ	0xFE7
   755                           postinc1	equ	0xFE6
   756                           postdec1	equ	0xFE5
   757                           preinc1	equ	0xFE4
   758                           plusw1	equ	0xFE3
   759                           fsr1h	equ	0xFE2
   760                           fsr1l	equ	0xFE1
   761                           bsr	equ	0xFE0
   762                           indf2	equ	0xFDF
   763                           postinc2	equ	0xFDE
   764                           postdec2	equ	0xFDD
   765                           preinc2	equ	0xFDC
   766                           plusw2	equ	0xFDB
   767                           fsr2h	equ	0xFDA
   768                           fsr2l	equ	0xFD9
   769                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Lcd_Send_Character
    _main->_Lcd_Send_Command
    _Lcd_Send_Command->_Lcd_Send_Nibble
    _Lcd_Send_Character->_Lcd_Send_Nibble
    _Init_Lcd_16x2->_Lcd_Send_Nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     300
           _Init_Internal_Oscillator
                      _Init_Lcd_16x2
                 _Lcd_Send_Character
                   _Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _Lcd_Send_Command                                     1     1      0     105
                                              4 COMRAM     1     1      0
                    _Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (1) _Lcd_Send_Character                                   1     1      0     105
                                              4 COMRAM     1     1      0
                    _Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (1) _Init_Lcd_16x2                                        0     0      0      90
                      _Init_Lcd_Gpio
                    _Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (2) _Lcd_Send_Nibble                                      4     4      0      90
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _Init_Lcd_Gpio                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Internal_Oscillator                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Internal_Oscillator
   _Init_Lcd_16x2
     _Init_Lcd_Gpio
     _Lcd_Send_Nibble
   _Lcd_Send_Character
     _Lcd_Send_Nibble
   _Lcd_Send_Command
     _Lcd_Send_Nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      5       5       1        5.3%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRh          2C      0       0      21        0.0%
BITBIGSFRlh         3D      0       0      22        0.0%
BITBIGSFRllh         7      0       0      23        0.0%
BITBIGSFRlllh        7      0       0      24        0.0%
BITBIGSFRllll       23      0       0      25        0.0%
BIGRAM             7FF      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu May 25 20:34:55 2023

                              l23 7F50                                l40 7F2A                                l17 7F66  
                              l18 7F66                                l43 7FFE                                l46 7F42  
                              l55 7F92                                l49 7F36                                u17 7FB6  
                              u27 7FC6                                u37 7FE0                                u47 7FF0  
     Lcd_Send_Character@character 0005                               l731 7F20                               l733 7F24  
                             l741 7F96                               l735 7F26                               l751 7FBE  
                             l743 7F9C                               l737 7F28                               l761 7FDA  
                             l753 7FC0                               l745 7FAA                               l763 7FE8  
                             l755 7FCE                               l747 7FAE                               l739 7F96  
                             l771 7F6E                               l765 7FEA                               l757 7FD4  
                             l749 7FB0                               l781 7F86                               l773 7F72  
                             l767 7FF8                               l759 7FD8                               l783 7F8C  
                             l775 7F74                               l791 7F30                               l769 7F44  
                             l777 7F7A                               l785 7F3A                               l793 7F52  
                             l779 7F80                               l787 7F3C                               l795 7F56  
                             l789 7F2E                               l797 7F5A                               l799 7F60  
                             wreg 0FE8                              _LATD 0F8C                              _main 7F52  
                   _Init_Lcd_16x2 7F6E                              start 0000                     _Init_Lcd_Gpio 7F20  
                    ___param_bank 0000                             ?_main 0001                             _TRISD 0F95  
                  ?_Init_Lcd_16x2 0001                    ?_Init_Lcd_Gpio 0001                   __initialization 7F1A  
                _Lcd_Send_Command 7F38                      __end_of_main 7F6E                            ??_main 0006  
                   __activetblptr 0000                            _OSCCON 0FD3                            isa$std 0001  
      __end_of_Lcd_Send_Character 7F38                   ??_Init_Lcd_16x2 0005                   ??_Init_Lcd_Gpio 0001  
                      __accesstop 0060           __end_of__initialization 7F1A                     ___rparam_used 0001  
                  __pcstackCOMRAM 0001                 ??_Lcd_Send_Nibble 0001         ?_Init_Internal_Oscillator 0001  
        __end_of_Lcd_Send_Command 7F44                           __Hparam 0000                           __Lparam 0000  
                         __pcinit 7F1A                           __ramtop 0800                           __ptext0 7F52  
                         __ptext1 7F38                           __ptext2 7F2C                           __ptext3 7F6E  
                         __ptext4 7F94                           __ptext5 7F20                           __ptext6 7F44  
         Lcd_Send_Command@command 0005              end_of_initialization 7F1A                         _PORTDbits 0F83  
                       _TRISCbits 0F94                         _TRISDbits 0F95                _Lcd_Send_Character 7F2C  
             Lcd_Send_Nibble@byte 0002               ?_Lcd_Send_Character 0001               start_initialization 7F1A  
            ??_Lcd_Send_Character 0005                   _Lcd_Send_Nibble 7F94             __end_of_Init_Lcd_16x2 7F94  
__end_of_Init_Internal_Oscillator 7F52             __end_of_Init_Lcd_Gpio 7F2C                 ?_Lcd_Send_Command 0001  
              ??_Lcd_Send_Command 0005           __end_of_Lcd_Send_Nibble 8000                          _LATCbits 0F8B  
        _Init_Internal_Oscillator 7F44         Lcd_Send_Nibble@lower_bits 0004                          __Hrparam 0000  
                        __Lrparam 0000                  ?_Lcd_Send_Nibble 0001         Lcd_Send_Nibble@upper_bits 0003  
                        isa$xinst 0000                        _OSCCONbits 0FD3        ??_Init_Internal_Oscillator 0001  
