

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May 23 18:38:52 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     _OSCCONbits	set	4051
    54   000000                     _INTCON2bits	set	4081
    55   000000                     _RCONbits	set	4048
    56   000000                     _INTCON	set	4082
    57   000000                     _LATDbits	set	3980
    58   000000                     _INTCONbits	set	4082
    59   000000                     _TRISBbits	set	3987
    60   000000                     _TRISDbits	set	3989
    61   000000                     _RCON	set	4048
    62   000000                     _INTCON3	set	4080
    63   000000                     _INTCON2	set	4081
    64   000000                     _OSCCON	set	4051
    65                           
    66                           ; #config settings
    67                           
    68                           	psect	cinit
    69   0000CA                     __pcinit:
    70                           	callstack 0
    71   0000CA                     start_initialization:
    72                           	callstack 0
    73   0000CA                     __initialization:
    74                           	callstack 0
    75   0000CA                     end_of_initialization:
    76                           	callstack 0
    77   0000CA                     __end_of__initialization:
    78                           	callstack 0
    79   0000CA  9004               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    80   0000CC  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    81   0000CE  0100               	movlb	0
    82   0000D0  EF09  F000         	goto	_main	;jump to C main() function
    83                           
    84                           	psect	cstackCOMRAM
    85   000001                     __pcstackCOMRAM:
    86                           	callstack 0
    87   000001                     ??_INT0_IRS:
    88   000001                     
    89                           ; 2 bytes @ 0x0
    90   000001                     	ds	1
    91   000002                     ??_main:
    92                           
    93                           ; 1 bytes @ 0x1
    94   000002                     	ds	2
    95                           
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 44 in file "main.c"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;		None
   106 ;; Return value:  Size  Location     Type
   107 ;;                  2   40[None  ] int 
   108 ;; Registers used:
   109 ;;		wreg, status,2, cstack
   110 ;; Tracked objects:
   111 ;;		On entry : 0/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   115 ;;      Params:         0       0       0       0       0       0       0       0       0
   116 ;;      Locals:         0       0       0       0       0       0       0       0       0
   117 ;;      Temps:          2       0       0       0       0       0       0       0       0
   118 ;;      Totals:         2       0       0       0       0       0       0       0       0
   119 ;;Total ram usage:        2 bytes
   120 ;; Hardware stack levels required when called: 2
   121 ;; This function calls:
   122 ;;		_Internal_Oscillator_Init
   123 ;;		_Interrupt_External_Init
   124 ;; This function is called by:
   125 ;;		Startup code after reset
   126 ;; This function uses a non-reentrant model
   127 ;;
   128                           
   129                           	psect	text0
   130   000012                     __ptext0:
   131                           	callstack 0
   132   000012                     _main:
   133                           	callstack 29
   134   000012                     
   135                           ;main.c: 47:     Internal_Oscillator_Init();
   136   000012  EC5C  F000         	call	_Internal_Oscillator_Init	;wreg free
   137                           
   138                           ;main.c: 49:     Interrupt_External_Init();
   139   000016  EC4D  F000         	call	_Interrupt_External_Init	;wreg free
   140   00001A                     
   141                           ;main.c: 51:     TRISDbits.RD0 = 0;
   142   00001A  9095               	bcf	149,0,c	;volatile
   143   00001C                     
   144                           ;main.c: 53:     TRISDbits.RD1 = 0;
   145   00001C  9295               	bcf	149,1,c	;volatile
   146   00001E                     l756:
   147                           
   148                           ;main.c: 55:     {;main.c: 56:         LATDbits.LATD0 = 1;
   149   00001E  808C               	bsf	140,0,c	;volatile
   150   000020                     
   151                           ;main.c: 57:         _delay((unsigned long)((250)*(8000000UL/4000.0)));
   152   000020  0E03               	movlw	3
   153   000022  6E03               	movwf	(??_main+1)^0,c
   154   000024  0E8A               	movlw	138
   155   000026  6E02               	movwf	??_main^0,c
   156   000028  0E56               	movlw	86
   157   00002A                     u57:
   158   00002A  2EE8               	decfsz	wreg,f,c
   159   00002C  D7FE               	bra	u57
   160   00002E  2E02               	decfsz	??_main^0,f,c
   161   000030  D7FC               	bra	u57
   162   000032  2E03               	decfsz	(??_main+1)^0,f,c
   163   000034  D7FA               	bra	u57
   164   000036                     
   165                           ;main.c: 58:         LATDbits.LATD0 = 0;
   166   000036  908C               	bcf	140,0,c	;volatile
   167   000038                     
   168                           ;main.c: 59:         _delay((unsigned long)((250)*(8000000UL/4000.0)));
   169   000038  0E03               	movlw	3
   170   00003A  6E03               	movwf	(??_main+1)^0,c
   171   00003C  0E8A               	movlw	138
   172   00003E  6E02               	movwf	??_main^0,c
   173   000040  0E56               	movlw	86
   174   000042                     u67:
   175   000042  2EE8               	decfsz	wreg,f,c
   176   000044  D7FE               	bra	u67
   177   000046  2E02               	decfsz	??_main^0,f,c
   178   000048  D7FC               	bra	u67
   179   00004A  2E03               	decfsz	(??_main+1)^0,f,c
   180   00004C  D7FA               	bra	u67
   181   00004E  EF0F  F000         	goto	l756
   182   000052  EF07  F000         	goto	start
   183   000056                     __end_of_main:
   184                           	callstack 0
   185                           
   186 ;; *************** function _Interrupt_External_Init *****************
   187 ;; Defined at:
   188 ;;		line 68 in file "main.c"
   189 ;; Parameters:    Size  Location     Type
   190 ;;		None
   191 ;; Auto vars:     Size  Location     Type
   192 ;;		None
   193 ;; Return value:  Size  Location     Type
   194 ;;                  1    wreg      void 
   195 ;; Registers used:
   196 ;;		wreg, status,2
   197 ;; Tracked objects:
   198 ;;		On entry : 0/0
   199 ;;		On exit  : 0/0
   200 ;;		Unchanged: 0/0
   201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   202 ;;      Params:         0       0       0       0       0       0       0       0       0
   203 ;;      Locals:         0       0       0       0       0       0       0       0       0
   204 ;;      Temps:          0       0       0       0       0       0       0       0       0
   205 ;;      Totals:         0       0       0       0       0       0       0       0       0
   206 ;;Total ram usage:        0 bytes
   207 ;; Hardware stack levels used: 1
   208 ;; Hardware stack levels required when called: 1
   209 ;; This function calls:
   210 ;;		Nothing
   211 ;; This function is called by:
   212 ;;		_main
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text1
   217   00009A                     __ptext1:
   218                           	callstack 0
   219   00009A                     _Interrupt_External_Init:
   220                           	callstack 29
   221   00009A                     
   222                           ;main.c: 71:     INTCON = 0x00;
   223   00009A  0E00               	movlw	0
   224   00009C  6EF2               	movwf	242,c	;volatile
   225                           
   226                           ;main.c: 72:     INTCON2 = 0x00;
   227   00009E  0E00               	movlw	0
   228   0000A0  6EF1               	movwf	241,c	;volatile
   229                           
   230                           ;main.c: 73:     INTCON3 = 0x00;
   231   0000A2  0E00               	movlw	0
   232   0000A4  6EF0               	movwf	240,c	;volatile
   233                           
   234                           ;main.c: 74:     RCON = 0x00;
   235   0000A6  0E00               	movlw	0
   236   0000A8  6ED0               	movwf	208,c	;volatile
   237   0000AA                     
   238                           ;main.c: 77:     RCONbits.IPEN = 0;
   239   0000AA  9ED0               	bcf	208,7,c	;volatile
   240   0000AC                     
   241                           ;main.c: 78:     INTCONbits.GIE = 1;
   242   0000AC  8EF2               	bsf	242,7,c	;volatile
   243   0000AE                     
   244                           ;main.c: 79:     INTCONbits.INT0IE = 1;
   245   0000AE  88F2               	bsf	242,4,c	;volatile
   246   0000B0                     
   247                           ;main.c: 80:     INTCONbits.INT0IF = 0;
   248   0000B0  92F2               	bcf	242,1,c	;volatile
   249   0000B2                     
   250                           ;main.c: 81:     INTCON2bits.INTEDG0 = 1;
   251   0000B2  8CF1               	bsf	241,6,c	;volatile
   252   0000B4                     
   253                           ;main.c: 84:     TRISBbits.RB0 = 1;
   254   0000B4  8093               	bsf	147,0,c	;volatile
   255   0000B6  0012               	return		;funcret
   256   0000B8                     __end_of_Interrupt_External_Init:
   257                           	callstack 0
   258                           
   259 ;; *************** function _Internal_Oscillator_Init *****************
   260 ;; Defined at:
   261 ;;		line 87 in file "main.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;		None
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    wreg      void 
   268 ;; Registers used:
   269 ;;		wreg, status,2
   270 ;; Tracked objects:
   271 ;;		On entry : 0/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   275 ;;      Params:         0       0       0       0       0       0       0       0       0
   276 ;;      Locals:         0       0       0       0       0       0       0       0       0
   277 ;;      Temps:          0       0       0       0       0       0       0       0       0
   278 ;;      Totals:         0       0       0       0       0       0       0       0       0
   279 ;;Total ram usage:        0 bytes
   280 ;; Hardware stack levels used: 1
   281 ;; Hardware stack levels required when called: 1
   282 ;; This function calls:
   283 ;;		Nothing
   284 ;; This function is called by:
   285 ;;		_main
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           	psect	text2
   290   0000B8                     __ptext2:
   291                           	callstack 0
   292   0000B8                     _Internal_Oscillator_Init:
   293                           	callstack 29
   294   0000B8                     
   295                           ;main.c: 90:     OSCCON = 0x00;
   296   0000B8  0E00               	movlw	0
   297   0000BA  6ED3               	movwf	211,c	;volatile
   298                           
   299                           ;main.c: 93:     OSCCONbits.IRCF = 0b111;
   300   0000BC  0E70               	movlw	112
   301   0000BE  12D3               	iorwf	211,f,c	;volatile
   302                           
   303                           ;main.c: 94:     OSCCONbits.SCS = 0b10;
   304   0000C0  50D3               	movf	211,w,c	;volatile
   305   0000C2  0BFC               	andlw	-4
   306   0000C4  0902               	iorlw	2
   307   0000C6  6ED3               	movwf	211,c	;volatile
   308   0000C8  0012               	return		;funcret
   309   0000CA                     __end_of_Internal_Oscillator_Init:
   310                           	callstack 0
   311                           
   312 ;; *************** function _INT0_IRS *****************
   313 ;; Defined at:
   314 ;;		line 23 in file "main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, status,2, status,0
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   328 ;;      Params:         0       0       0       0       0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0       0       0       0       0
   330 ;;      Temps:          1       0       0       0       0       0       0       0       0
   331 ;;      Totals:         1       0       0       0       0       0       0       0       0
   332 ;;Total ram usage:        1 bytes
   333 ;; Hardware stack levels used: 1
   334 ;; This function calls:
   335 ;;		Nothing
   336 ;; This function is called by:
   337 ;;		Interrupt level 2
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	intcode
   342   000008                     __pintcode:
   343                           	callstack 0
   344   000008                     _INT0_IRS:
   345                           	callstack 29
   346                           
   347                           ;incstack = 0
   348   000008  8204               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   349   00000A  ED2B  F000         	call	int_func,f	;refresh shadow registers
   350                           
   351                           	psect	intcode_body
   352   000056                     __pintcode_body:
   353                           	callstack 29
   354   000056                     int_func:
   355                           	callstack 29
   356   000056  0006               	pop		; remove dummy address from shadow register refresh
   357   000058                     
   358                           ;main.c: 25:     if(INTCONbits.INT0IF && INTCONbits.INT0IF)
   359   000058  A2F2               	btfss	242,1,c	;volatile
   360   00005A  EF31  F000         	goto	i2u1_41
   361   00005E  EF33  F000         	goto	i2u1_40
   362   000062                     i2u1_41:
   363   000062  EF4B  F000         	goto	i2l36
   364   000066                     i2u1_40:
   365   000066  A2F2               	btfss	242,1,c	;volatile
   366   000068  EF38  F000         	goto	i2u2_41
   367   00006C  EF3A  F000         	goto	i2u2_40
   368   000070                     i2u2_41:
   369   000070  EF4B  F000         	goto	i2l36
   370   000074                     i2u2_40:
   371   000074                     
   372                           ;main.c: 26:     {;main.c: 28:         LATDbits.LATD1 = !LATDbits.LATD1;
   373   000074  A28C               	btfss	140,1,c	;volatile
   374   000076  EF3F  F000         	goto	i2u3_41
   375   00007A  EF43  F000         	goto	i2u3_40
   376   00007E                     i2u3_41:
   377   00007E  6A01               	clrf	??_INT0_IRS^0,c
   378   000080  2A01               	incf	??_INT0_IRS^0,f,c
   379   000082  EF44  F000         	goto	i2u4_48
   380   000086                     i2u3_40:
   381   000086  6A01               	clrf	??_INT0_IRS^0,c
   382   000088                     i2u4_48:
   383   000088  4601               	rlncf	??_INT0_IRS^0,f,c
   384   00008A  508C               	movf	140,w,c	;volatile
   385   00008C  1801               	xorwf	??_INT0_IRS^0,w,c
   386   00008E  0BFD               	andlw	-3
   387   000090  1801               	xorwf	??_INT0_IRS^0,w,c
   388   000092  6E8C               	movwf	140,c	;volatile
   389   000094                     
   390                           ;main.c: 30:         INTCONbits.INT0IF = 0;
   391   000094  92F2               	bcf	242,1,c	;volatile
   392   000096                     i2l36:
   393   000096  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   394   000098  0011               	retfie		f
   395   00009A                     __end_of_INT0_IRS:
   396                           	callstack 0
   397   000000                     
   398                           	psect	rparam
   399   000000                     
   400                           	psect	temp
   401   000004                     btemp:
   402                           	callstack 0
   403   000004                     	ds	1
   404   000000                     int$flags	set	btemp
   405   000000                     wtemp8	set	btemp+1
   406   000000                     ttemp5	set	btemp+1
   407   000000                     ttemp6	set	btemp+4
   408   000000                     ttemp7	set	btemp+8
   409                           
   410                           	psect	idloc
   411                           
   412                           ;Config register IDLOC0 @ 0x200000
   413                           ;	unspecified, using default values
   414   200000                     	org	2097152
   415   200000  FF                 	db	255
   416                           
   417                           ;Config register IDLOC1 @ 0x200001
   418                           ;	unspecified, using default values
   419   200001                     	org	2097153
   420   200001  FF                 	db	255
   421                           
   422                           ;Config register IDLOC2 @ 0x200002
   423                           ;	unspecified, using default values
   424   200002                     	org	2097154
   425   200002  FF                 	db	255
   426                           
   427                           ;Config register IDLOC3 @ 0x200003
   428                           ;	unspecified, using default values
   429   200003                     	org	2097155
   430   200003  FF                 	db	255
   431                           
   432                           ;Config register IDLOC4 @ 0x200004
   433                           ;	unspecified, using default values
   434   200004                     	org	2097156
   435   200004  FF                 	db	255
   436                           
   437                           ;Config register IDLOC5 @ 0x200005
   438                           ;	unspecified, using default values
   439   200005                     	org	2097157
   440   200005  FF                 	db	255
   441                           
   442                           ;Config register IDLOC6 @ 0x200006
   443                           ;	unspecified, using default values
   444   200006                     	org	2097158
   445   200006  FF                 	db	255
   446                           
   447                           ;Config register IDLOC7 @ 0x200007
   448                           ;	unspecified, using default values
   449   200007                     	org	2097159
   450   200007  FF                 	db	255
   451                           
   452                           	psect	config
   453                           
   454                           ;Config register CONFIG1L @ 0x300000
   455                           ;	PLL Prescaler Selection bits
   456                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   457                           ;	System Clock Postscaler Selection bits
   458                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   459                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   460                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   461   300000                     	org	3145728
   462   300000  00                 	db	0
   463                           
   464                           ;Config register CONFIG1H @ 0x300001
   465                           ;	Oscillator Selection bits
   466                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   467                           ;	Fail-Safe Clock Monitor Enable bit
   468                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   469                           ;	Internal/External Oscillator Switchover bit
   470                           ;	IESO = OFF, Oscillator Switchover mode disabled
   471   300001                     	org	3145729
   472   300001  0B                 	db	11
   473                           
   474                           ;Config register CONFIG2L @ 0x300002
   475                           ;	Power-up Timer Enable bit
   476                           ;	PWRT = OFF, PWRT disabled
   477                           ;	Brown-out Reset Enable bits
   478                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   479                           ;	Brown-out Reset Voltage bits
   480                           ;	BORV = 3, Minimum setting 2.05V
   481                           ;	USB Voltage Regulator Enable bit
   482                           ;	VREGEN = OFF, USB voltage regulator disabled
   483   300002                     	org	3145730
   484   300002  19                 	db	25
   485                           
   486                           ;Config register CONFIG2H @ 0x300003
   487                           ;	Watchdog Timer Enable bit
   488                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   489                           ;	Watchdog Timer Postscale Select bits
   490                           ;	WDTPS = 32768, 1:32768
   491   300003                     	org	3145731
   492   300003  1E                 	db	30
   493                           
   494                           ; Padding undefined space
   495   300004                     	org	3145732
   496   300004  FF                 	db	255
   497                           
   498                           ;Config register CONFIG3H @ 0x300005
   499                           ;	CCP2 MUX bit
   500                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
   501                           ;	PORTB A/D Enable bit
   502                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   503                           ;	Low-Power Timer 1 Oscillator Enable bit
   504                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   505                           ;	MCLR Pin Enable bit
   506                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   507   300005                     	org	3145733
   508   300005  80                 	db	128
   509                           
   510                           ;Config register CONFIG4L @ 0x300006
   511                           ;	Stack Full/Underflow Reset Enable bit
   512                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   513                           ;	Single-Supply ICSP Enable bit
   514                           ;	LVP = OFF, Single-Supply ICSP disabled
   515                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   516                           ;	ICPRT = OFF, ICPORT disabled
   517                           ;	Extended Instruction Set Enable bit
   518                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   519                           ;	Background Debugger Enable bit
   520                           ;	DEBUG = 0x1, unprogrammed default
   521   300006                     	org	3145734
   522   300006  80                 	db	128
   523                           
   524                           ; Padding undefined space
   525   300007                     	org	3145735
   526   300007  FF                 	db	255
   527                           
   528                           ;Config register CONFIG5L @ 0x300008
   529                           ;	Code Protection bit
   530                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   531                           ;	Code Protection bit
   532                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   533                           ;	Code Protection bit
   534                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   535                           ;	Code Protection bit
   536                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   537   300008                     	org	3145736
   538   300008  0F                 	db	15
   539                           
   540                           ;Config register CONFIG5H @ 0x300009
   541                           ;	Boot Block Code Protection bit
   542                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   543                           ;	Data EEPROM Code Protection bit
   544                           ;	CPD = OFF, Data EEPROM is not code-protected
   545   300009                     	org	3145737
   546   300009  C0                 	db	192
   547                           
   548                           ;Config register CONFIG6L @ 0x30000A
   549                           ;	Write Protection bit
   550                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   551                           ;	Write Protection bit
   552                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   553                           ;	Write Protection bit
   554                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   555                           ;	Write Protection bit
   556                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   557   30000A                     	org	3145738
   558   30000A  0F                 	db	15
   559                           
   560                           ;Config register CONFIG6H @ 0x30000B
   561                           ;	Configuration Register Write Protection bit
   562                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   563                           ;	Boot Block Write Protection bit
   564                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   565                           ;	Data EEPROM Write Protection bit
   566                           ;	WRTD = OFF, Data EEPROM is not write-protected
   567   30000B                     	org	3145739
   568   30000B  E0                 	db	224
   569                           
   570                           ;Config register CONFIG7L @ 0x30000C
   571                           ;	Table Read Protection bit
   572                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   573                           ;	Table Read Protection bit
   574                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   575                           ;	Table Read Protection bit
   576                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   577                           ;	Table Read Protection bit
   578                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   579   30000C                     	org	3145740
   580   30000C  0F                 	db	15
   581                           
   582                           ;Config register CONFIG7H @ 0x30000D
   583                           ;	Boot Block Table Read Protection bit
   584                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   585   30000D                     	org	3145741
   586   30000D  40                 	db	64
   587                           tosu	equ	0xFFF
   588                           tosh	equ	0xFFE
   589                           tosl	equ	0xFFD
   590                           stkptr	equ	0xFFC
   591                           pclatu	equ	0xFFB
   592                           pclath	equ	0xFFA
   593                           pcl	equ	0xFF9
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           prodh	equ	0xFF4
   599                           prodl	equ	0xFF3
   600                           indf0	equ	0xFEF
   601                           postinc0	equ	0xFEE
   602                           postdec0	equ	0xFED
   603                           preinc0	equ	0xFEC
   604                           plusw0	equ	0xFEB
   605                           fsr0h	equ	0xFEA
   606                           fsr0l	equ	0xFE9
   607                           wreg	equ	0xFE8
   608                           indf1	equ	0xFE7
   609                           postinc1	equ	0xFE6
   610                           postdec1	equ	0xFE5
   611                           preinc1	equ	0xFE4
   612                           plusw1	equ	0xFE3
   613                           fsr1h	equ	0xFE2
   614                           fsr1l	equ	0xFE1
   615                           bsr	equ	0xFE0
   616                           indf2	equ	0xFDF
   617                           postinc2	equ	0xFDE
   618                           postdec2	equ	0xFDD
   619                           preinc2	equ	0xFDC
   620                           plusw2	equ	0xFDB
   621                           fsr2h	equ	0xFDA
   622                           fsr2l	equ	0xFD9
   623                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_IRS in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_IRS in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_IRS in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_IRS in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_IRS in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_IRS in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_IRS in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_IRS in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_IRS in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              1 COMRAM     2     2      0
           _Internal_Oscillator_Init
            _Interrupt_External_Init
 ---------------------------------------------------------------------------------
 (1) _Interrupt_External_Init                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Internal_Oscillator_Init                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT0_IRS                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Internal_Oscillator_Init
   _Interrupt_External_Init

 _INT0_IRS (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRh           D      0       0      20        0.0%
BITBIGSFRlhhhh      1C      0       0      21        0.0%
BITBIGSFRlhhhl       2      0       0      22        0.0%
BITBIGSFRlhhl       3A      0       0      23        0.0%
BITBIGSFRlhlh        1      0       0      24        0.0%
BITBIGSFRlhll        6      0       0      25        0.0%
BITBIGSFRll         2C      0       0      26        0.0%
ABS                  0      0       0      27        0.0%
BIGRAM             7FF      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May 23 18:38:52 2023

                              l50 00C8                                l47 00B6                                u57 002A  
                              u67 0042                               l730 00AA                               l740 00B4  
                             l732 00AC                               l726 00B8                               l734 00AE  
                             l750 0012                               l736 00B0                               l728 009A  
                             l760 0036                               l752 001A                               l738 00B2  
                             l762 0038                               l754 001C                               l756 001E  
                             l758 0020                               wreg 0FE8                              i2l36 0096  
                            _RCON 0FD0                              _main 0012                              btemp 0004  
       ??_Interrupt_External_Init 0002                              start 000E                      ___param_bank 0000  
                __end_of_INT0_IRS 009A                             ?_main 0001                             i2l742 0058  
                           i2l744 0066                             i2l746 0074                             i2l748 0094  
                           ttemp5 0005                             ttemp6 0008                             ttemp7 000C  
                           wtemp8 0005                   __initialization 00CA                      __end_of_main 0056  
                          ??_main 0002                     __activetblptr 0000                            _INTCON 0FF2  
                          _OSCCON 0FD3                            i2u1_40 0066                            i2u1_41 0062  
                          i2u2_40 0074                            i2u2_41 0070                            i2u3_40 0086  
                          i2u3_41 007E                            i2u4_48 0088                            isa$std 0001  
                      __accesstop 0060           __end_of__initialization 00CA                         ?_INT0_IRS 0001  
                   ___rparam_used 0001                    __pcstackCOMRAM 0001         ?_Internal_Oscillator_Init 0001  
                      ??_INT0_IRS 0001                           _INTCON2 0FF1                           _INTCON3 0FF0  
                         __Hparam 0000                           __Lparam 0000                           __pcinit 00CA  
                         __ramtop 0800                           __ptext0 0012                           __ptext1 009A  
                         __ptext2 00B8                    __pintcode_body 0056              end_of_initialization 00CA  
        ?_Interrupt_External_Init 0001                           int_func 0056                         _TRISBbits 0F93  
                       _TRISDbits 0F95  __end_of_Internal_Oscillator_Init 00CA               start_initialization 00CA  
 __end_of_Interrupt_External_Init 00B8          _Internal_Oscillator_Init 00B8                         __pintcode 0008  
                        _INT0_IRS 0008                          _LATDbits 0F8C                          _RCONbits 0FD0  
                     _INTCON2bits 0FF1                          __Hrparam 0000                          __Lrparam 0000  
                        isa$xinst 0000                          int$flags 0004                        _INTCONbits 0FF2  
      ??_Internal_Oscillator_Init 0002                          intlevel2 0000                        _OSCCONbits 0FD3  
         _Interrupt_External_Init 009A  
