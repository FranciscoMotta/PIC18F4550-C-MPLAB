

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 25 03:06:44 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _OSCCONbits	set	4051
    55  0000                     _OSCCON	set	4051
    56  0000                     _TRISDbits	set	3989
    57  0000                     _T2CONbits	set	4042
    58  0000                     _CCP2CONbits	set	4026
    59  0000                     _CCPR2L	set	4027
    60  0000                     _PR2	set	4043
    61  0000                     _TMR2	set	4044
    62  0000                     _CCP2CON	set	4026
    63  0000                     _T2CON	set	4042
    64  0000                     _TRISCbits	set	3988
    65  0000                     _LATDbits	set	3980
    66                           
    67                           ; #config settings
    68                           
    69                           	psect	cinit
    70  000094                     __pcinit:
    71                           	callstack 0
    72  000094                     start_initialization:
    73                           	callstack 0
    74  000094                     __initialization:
    75                           	callstack 0
    76  000094                     end_of_initialization:
    77                           	callstack 0
    78  000094                     __end_of__initialization:
    79                           	callstack 0
    80  000094  9003               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    81  000096  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    82  000098  0100               	movlb	0
    83  00009A  EF09  F000         	goto	_main	;jump to C main() function
    84                           
    85                           	psect	cstackCOMRAM
    86  000001                     __pcstackCOMRAM:
    87                           	callstack 0
    88  000001                     ??_main:
    89  000001                     
    90                           ; 2 bytes @ 0x0
    91  000001                     	ds	2
    92                           
    93 ;;
    94 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    95 ;;
    96 ;; *************** function _main *****************
    97 ;; Defined at:
    98 ;;		line 37 in file "main.c"
    99 ;; Parameters:    Size  Location     Type
   100 ;;		None
   101 ;; Auto vars:     Size  Location     Type
   102 ;;		None
   103 ;; Return value:  Size  Location     Type
   104 ;;                  2   41[None  ] int 
   105 ;; Registers used:
   106 ;;		wreg, status,2, status,0, cstack
   107 ;; Tracked objects:
   108 ;;		On entry : 0/0
   109 ;;		On exit  : 0/0
   110 ;;		Unchanged: 0/0
   111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   112 ;;      Params:         0       0       0       0       0       0       0       0       0
   113 ;;      Locals:         0       0       0       0       0       0       0       0       0
   114 ;;      Temps:          2       0       0       0       0       0       0       0       0
   115 ;;      Totals:         2       0       0       0       0       0       0       0       0
   116 ;;Total ram usage:        2 bytes
   117 ;; Hardware stack levels required when called: 2
   118 ;; This function calls:
   119 ;;		_Init_Gpio_System
   120 ;;		_Init_Internal_Oscillator
   121 ;;		_Init_PWM2_Config
   122 ;; This function is called by:
   123 ;;		Startup code after reset
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           	psect	text0
   128  000012                     __ptext0:
   129                           	callstack 0
   130  000012                     _main:
   131                           	callstack 29
   132  000012                     
   133                           ;main.c: 47:     Init_Internal_Oscillator();
   134  000012  EC43  F000         	call	_Init_Internal_Oscillator	;wreg free
   135  000016                     
   136                           ;main.c: 49:     Init_Gpio_System();
   137  000016  EC52  F000         	call	_Init_Gpio_System	;wreg free
   138  00001A                     
   139                           ;main.c: 51:     Init_PWM2_Config();
   140  00001A  EC2E  F000         	call	_Init_PWM2_Config	;wreg free
   141  00001E                     l746:
   142                           
   143                           ;main.c: 54:     {;main.c: 55:         LATDbits.LATD0 = !LATDbits.LATD0;
   144  00001E  A08C               	btfss	140,0,c	;volatile
   145  000020  EF14  F000         	goto	u11
   146  000024  EF18  F000         	goto	u10
   147  000028                     u11:
   148  000028  6A01               	clrf	??_main^0,c
   149  00002A  2A01               	incf	??_main^0,f,c
   150  00002C  EF19  F000         	goto	u28
   151  000030                     u10:
   152  000030  6A01               	clrf	??_main^0,c
   153  000032                     u28:
   154  000032  508C               	movf	140,w,c	;volatile
   155  000034  1801               	xorwf	??_main^0,w,c
   156  000036  0BFE               	andlw	-2
   157  000038  1801               	xorwf	??_main^0,w,c
   158  00003A  6E8C               	movwf	140,c	;volatile
   159  00003C                     
   160                           ;main.c: 56:         _delay((unsigned long)((100)*(8000000UL/4000.0)));
   161  00003C  0E02               	movlw	2
   162  00003E  6E02               	movwf	(??_main+1)^0,c
   163  000040  0E04               	movlw	4
   164  000042  6E01               	movwf	??_main^0,c
   165  000044  0EBA               	movlw	186
   166  000046                     u37:
   167  000046  2EE8               	decfsz	wreg,f,c
   168  000048  D7FE               	bra	u37
   169  00004A  2E01               	decfsz	??_main^0,f,c
   170  00004C  D7FC               	bra	u37
   171  00004E  2E02               	decfsz	(??_main+1)^0,f,c
   172  000050  D7FA               	bra	u37
   173  000052  D000               	nop2	
   174  000054  EF0F  F000         	goto	l746
   175  000058  EF07  F000         	goto	start
   176  00005C                     __end_of_main:
   177                           	callstack 0
   178                           
   179 ;; *************** function _Init_PWM2_Config *****************
   180 ;; Defined at:
   181 ;;		line 63 in file "main.c"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;		None
   186 ;; Return value:  Size  Location     Type
   187 ;;                  1    wreg      void 
   188 ;; Registers used:
   189 ;;		wreg, status,2
   190 ;; Tracked objects:
   191 ;;		On entry : 0/0
   192 ;;		On exit  : 0/0
   193 ;;		Unchanged: 0/0
   194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   195 ;;      Params:         0       0       0       0       0       0       0       0       0
   196 ;;      Locals:         0       0       0       0       0       0       0       0       0
   197 ;;      Temps:          0       0       0       0       0       0       0       0       0
   198 ;;      Totals:         0       0       0       0       0       0       0       0       0
   199 ;;Total ram usage:        0 bytes
   200 ;; Hardware stack levels used: 1
   201 ;; Hardware stack levels required when called: 1
   202 ;; This function calls:
   203 ;;		Nothing
   204 ;; This function is called by:
   205 ;;		_main
   206 ;; This function uses a non-reentrant model
   207 ;;
   208                           
   209                           	psect	text1
   210  00005C                     __ptext1:
   211                           	callstack 0
   212  00005C                     _Init_PWM2_Config:
   213                           	callstack 29
   214  00005C                     
   215                           ;main.c: 66:     TRISCbits.RC1 = 0;
   216  00005C  9294               	bcf	148,1,c	;volatile
   217  00005E                     
   218                           ;main.c: 69:     T2CON = 0x00;
   219  00005E  0E00               	movlw	0
   220  000060  6ECA               	movwf	202,c	;volatile
   221                           
   222                           ;main.c: 70:     CCP2CON = 0x00;
   223  000062  0E00               	movlw	0
   224  000064  6EBA               	movwf	186,c	;volatile
   225                           
   226                           ;main.c: 71:     TMR2 = 0x00;
   227  000066  0E00               	movlw	0
   228  000068  6ECC               	movwf	204,c	;volatile
   229                           
   230                           ;main.c: 82:     PR2 = 124;
   231  00006A  0E7C               	movlw	124
   232  00006C  6ECB               	movwf	203,c	;volatile
   233                           
   234                           ;main.c: 97:     CCPR2L = 0b00111110;
   235  00006E  0E3E               	movlw	62
   236  000070  6EBB               	movwf	187,c	;volatile
   237                           
   238                           ;main.c: 98:     CCP2CONbits.DC2B = 0b10;
   239  000072  50BA               	movf	186,w,c	;volatile
   240  000074  0BCF               	andlw	-49
   241  000076  0920               	iorlw	32
   242  000078  6EBA               	movwf	186,c	;volatile
   243                           
   244                           ;main.c: 101:     CCP2CONbits.CCP2M = 0b1111;
   245  00007A  0E0F               	movlw	15
   246  00007C  12BA               	iorwf	186,f,c	;volatile
   247                           
   248                           ;main.c: 104:     T2CONbits.T2CKPS = 0b11;
   249  00007E  0E03               	movlw	3
   250  000080  12CA               	iorwf	202,f,c	;volatile
   251  000082                     
   252                           ;main.c: 107:     T2CONbits.TMR2ON = 1;
   253  000082  84CA               	bsf	202,2,c	;volatile
   254  000084  0012               	return		;funcret
   255  000086                     __end_of_Init_PWM2_Config:
   256                           	callstack 0
   257                           
   258 ;; *************** function _Init_Internal_Oscillator *****************
   259 ;; Defined at:
   260 ;;		line 116 in file "main.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;		None
   263 ;; Auto vars:     Size  Location     Type
   264 ;;		None
   265 ;; Return value:  Size  Location     Type
   266 ;;                  1    wreg      void 
   267 ;; Registers used:
   268 ;;		wreg, status,2
   269 ;; Tracked objects:
   270 ;;		On entry : 0/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   274 ;;      Params:         0       0       0       0       0       0       0       0       0
   275 ;;      Locals:         0       0       0       0       0       0       0       0       0
   276 ;;      Temps:          0       0       0       0       0       0       0       0       0
   277 ;;      Totals:         0       0       0       0       0       0       0       0       0
   278 ;;Total ram usage:        0 bytes
   279 ;; Hardware stack levels used: 1
   280 ;; Hardware stack levels required when called: 1
   281 ;; This function calls:
   282 ;;		Nothing
   283 ;; This function is called by:
   284 ;;		_main
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288                           	psect	text2
   289  000086                     __ptext2:
   290                           	callstack 0
   291  000086                     _Init_Internal_Oscillator:
   292                           	callstack 29
   293  000086                     
   294                           ;main.c: 119:     OSCCON = 0x00;
   295  000086  0E00               	movlw	0
   296  000088  6ED3               	movwf	211,c	;volatile
   297                           
   298                           ;main.c: 121:     OSCCONbits.IRCF = 0b111;
   299  00008A  0E70               	movlw	112
   300  00008C  12D3               	iorwf	211,f,c	;volatile
   301                           
   302                           ;main.c: 122:     OSCCONbits.SCS = 0b11;
   303  00008E  0E03               	movlw	3
   304  000090  12D3               	iorwf	211,f,c	;volatile
   305  000092  0012               	return		;funcret
   306  000094                     __end_of_Init_Internal_Oscillator:
   307                           	callstack 0
   308                           
   309 ;; *************** function _Init_Gpio_System *****************
   310 ;; Defined at:
   311 ;;		line 110 in file "main.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		None
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   325 ;;      Params:         0       0       0       0       0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0       0       0       0       0
   327 ;;      Temps:          0       0       0       0       0       0       0       0       0
   328 ;;      Totals:         0       0       0       0       0       0       0       0       0
   329 ;;Total ram usage:        0 bytes
   330 ;; Hardware stack levels used: 1
   331 ;; Hardware stack levels required when called: 1
   332 ;; This function calls:
   333 ;;		Nothing
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text3
   340  0000A4                     __ptext3:
   341                           	callstack 0
   342  0000A4                     _Init_Gpio_System:
   343                           	callstack 29
   344  0000A4                     
   345                           ;main.c: 113:     TRISDbits.RD0 = 0;
   346  0000A4  9095               	bcf	149,0,c	;volatile
   347  0000A6  0012               	return		;funcret
   348  0000A8                     __end_of_Init_Gpio_System:
   349                           	callstack 0
   350                           
   351 ;; *************** function _ISR *****************
   352 ;; Defined at:
   353 ;;		line 25 in file "main.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		None
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   367 ;;      Params:         0       0       0       0       0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0       0       0       0       0
   369 ;;      Temps:          0       0       0       0       0       0       0       0       0
   370 ;;      Totals:         0       0       0       0       0       0       0       0       0
   371 ;;Total ram usage:        0 bytes
   372 ;; Hardware stack levels used: 1
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		Interrupt level 2
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	intcode
   381  000008                     __pintcode:
   382                           	callstack 0
   383  000008                     _ISR:
   384                           	callstack 29
   385                           
   386                           ;incstack = 0
   387  000008  8203               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   388  00000A  ED4F  F000         	call	int_func,f	;refresh shadow registers
   389                           
   390                           	psect	intcode_body
   391  00009E                     __pintcode_body:
   392                           	callstack 29
   393  00009E                     int_func:
   394                           	callstack 29
   395  00009E  0006               	pop		; remove dummy address from shadow register refresh
   396  0000A0  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   397  0000A2  0011               	retfie		f
   398  0000A4                     __end_of_ISR:
   399                           	callstack 0
   400  0000                     
   401                           	psect	rparam
   402  0000                     
   403                           	psect	temp
   404  000003                     btemp:
   405                           	callstack 0
   406  000003                     	ds	1
   407  0000                     int$flags	set	btemp
   408  0000                     wtemp8	set	btemp+1
   409  0000                     ttemp5	set	btemp+1
   410  0000                     ttemp6	set	btemp+4
   411  0000                     ttemp7	set	btemp+8
   412                           
   413                           	psect	idloc
   414                           
   415                           ;Config register IDLOC0 @ 0x200000
   416                           ;	unspecified, using default values
   417  200000                     	org	2097152
   418  200000  FF                 	db	255
   419                           
   420                           ;Config register IDLOC1 @ 0x200001
   421                           ;	unspecified, using default values
   422  200001                     	org	2097153
   423  200001  FF                 	db	255
   424                           
   425                           ;Config register IDLOC2 @ 0x200002
   426                           ;	unspecified, using default values
   427  200002                     	org	2097154
   428  200002  FF                 	db	255
   429                           
   430                           ;Config register IDLOC3 @ 0x200003
   431                           ;	unspecified, using default values
   432  200003                     	org	2097155
   433  200003  FF                 	db	255
   434                           
   435                           ;Config register IDLOC4 @ 0x200004
   436                           ;	unspecified, using default values
   437  200004                     	org	2097156
   438  200004  FF                 	db	255
   439                           
   440                           ;Config register IDLOC5 @ 0x200005
   441                           ;	unspecified, using default values
   442  200005                     	org	2097157
   443  200005  FF                 	db	255
   444                           
   445                           ;Config register IDLOC6 @ 0x200006
   446                           ;	unspecified, using default values
   447  200006                     	org	2097158
   448  200006  FF                 	db	255
   449                           
   450                           ;Config register IDLOC7 @ 0x200007
   451                           ;	unspecified, using default values
   452  200007                     	org	2097159
   453  200007  FF                 	db	255
   454                           
   455                           	psect	config
   456                           
   457                           ;Config register CONFIG1L @ 0x300000
   458                           ;	PLL Prescaler Selection bits
   459                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   460                           ;	System Clock Postscaler Selection bits
   461                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   462                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   463                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   464  300000                     	org	3145728
   465  300000  00                 	db	0
   466                           
   467                           ;Config register CONFIG1H @ 0x300001
   468                           ;	Oscillator Selection bits
   469                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   470                           ;	Fail-Safe Clock Monitor Enable bit
   471                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   472                           ;	Internal/External Oscillator Switchover bit
   473                           ;	IESO = OFF, Oscillator Switchover mode disabled
   474  300001                     	org	3145729
   475  300001  0B                 	db	11
   476                           
   477                           ;Config register CONFIG2L @ 0x300002
   478                           ;	Power-up Timer Enable bit
   479                           ;	PWRT = OFF, PWRT disabled
   480                           ;	Brown-out Reset Enable bits
   481                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   482                           ;	Brown-out Reset Voltage bits
   483                           ;	BORV = 3, Minimum setting 2.05V
   484                           ;	USB Voltage Regulator Enable bit
   485                           ;	VREGEN = OFF, USB voltage regulator disabled
   486  300002                     	org	3145730
   487  300002  19                 	db	25
   488                           
   489                           ;Config register CONFIG2H @ 0x300003
   490                           ;	Watchdog Timer Enable bit
   491                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   492                           ;	Watchdog Timer Postscale Select bits
   493                           ;	WDTPS = 32768, 1:32768
   494  300003                     	org	3145731
   495  300003  1E                 	db	30
   496                           
   497                           ; Padding undefined space
   498  300004                     	org	3145732
   499  300004  FF                 	db	255
   500                           
   501                           ;Config register CONFIG3H @ 0x300005
   502                           ;	CCP2 MUX bit
   503                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   504                           ;	PORTB A/D Enable bit
   505                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   506                           ;	Low-Power Timer 1 Oscillator Enable bit
   507                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   508                           ;	MCLR Pin Enable bit
   509                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   510  300005                     	org	3145733
   511  300005  81                 	db	129
   512                           
   513                           ;Config register CONFIG4L @ 0x300006
   514                           ;	Stack Full/Underflow Reset Enable bit
   515                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   516                           ;	Single-Supply ICSP Enable bit
   517                           ;	LVP = OFF, Single-Supply ICSP disabled
   518                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   519                           ;	ICPRT = OFF, ICPORT disabled
   520                           ;	Extended Instruction Set Enable bit
   521                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   522                           ;	Background Debugger Enable bit
   523                           ;	DEBUG = 0x1, unprogrammed default
   524  300006                     	org	3145734
   525  300006  80                 	db	128
   526                           
   527                           ; Padding undefined space
   528  300007                     	org	3145735
   529  300007  FF                 	db	255
   530                           
   531                           ;Config register CONFIG5L @ 0x300008
   532                           ;	Code Protection bit
   533                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   534                           ;	Code Protection bit
   535                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   536                           ;	Code Protection bit
   537                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   538                           ;	Code Protection bit
   539                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   540  300008                     	org	3145736
   541  300008  0F                 	db	15
   542                           
   543                           ;Config register CONFIG5H @ 0x300009
   544                           ;	Boot Block Code Protection bit
   545                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   546                           ;	Data EEPROM Code Protection bit
   547                           ;	CPD = OFF, Data EEPROM is not code-protected
   548  300009                     	org	3145737
   549  300009  C0                 	db	192
   550                           
   551                           ;Config register CONFIG6L @ 0x30000A
   552                           ;	Write Protection bit
   553                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   554                           ;	Write Protection bit
   555                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   556                           ;	Write Protection bit
   557                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   558                           ;	Write Protection bit
   559                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   560  30000A                     	org	3145738
   561  30000A  0F                 	db	15
   562                           
   563                           ;Config register CONFIG6H @ 0x30000B
   564                           ;	Configuration Register Write Protection bit
   565                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   566                           ;	Boot Block Write Protection bit
   567                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   568                           ;	Data EEPROM Write Protection bit
   569                           ;	WRTD = OFF, Data EEPROM is not write-protected
   570  30000B                     	org	3145739
   571  30000B  E0                 	db	224
   572                           
   573                           ;Config register CONFIG7L @ 0x30000C
   574                           ;	Table Read Protection bit
   575                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   576                           ;	Table Read Protection bit
   577                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   578                           ;	Table Read Protection bit
   579                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   580                           ;	Table Read Protection bit
   581                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   582  30000C                     	org	3145740
   583  30000C  0F                 	db	15
   584                           
   585                           ;Config register CONFIG7H @ 0x30000D
   586                           ;	Boot Block Table Read Protection bit
   587                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   588  30000D                     	org	3145741
   589  30000D  40                 	db	64
   590                           tosu	equ	0xFFF
   591                           tosh	equ	0xFFE
   592                           tosl	equ	0xFFD
   593                           stkptr	equ	0xFFC
   594                           pclatu	equ	0xFFB
   595                           pclath	equ	0xFFA
   596                           pcl	equ	0xFF9
   597                           tblptru	equ	0xFF8
   598                           tblptrh	equ	0xFF7
   599                           tblptrl	equ	0xFF6
   600                           tablat	equ	0xFF5
   601                           prodh	equ	0xFF4
   602                           prodl	equ	0xFF3
   603                           indf0	equ	0xFEF
   604                           postinc0	equ	0xFEE
   605                           postdec0	equ	0xFED
   606                           preinc0	equ	0xFEC
   607                           plusw0	equ	0xFEB
   608                           fsr0h	equ	0xFEA
   609                           fsr0l	equ	0xFE9
   610                           wreg	equ	0xFE8
   611                           indf1	equ	0xFE7
   612                           postinc1	equ	0xFE6
   613                           postdec1	equ	0xFE5
   614                           preinc1	equ	0xFE4
   615                           plusw1	equ	0xFE3
   616                           fsr1h	equ	0xFE2
   617                           fsr1l	equ	0xFE1
   618                           bsr	equ	0xFE0
   619                           indf2	equ	0xFDF
   620                           postinc2	equ	0xFDE
   621                           postdec2	equ	0xFDD
   622                           preinc2	equ	0xFDC
   623                           plusw2	equ	0xFDB
   624                           fsr2h	equ	0xFDA
   625                           fsr2l	equ	0xFD9
   626                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                   _Init_Gpio_System
           _Init_Internal_Oscillator
                   _Init_PWM2_Config
 ---------------------------------------------------------------------------------
 (1) _Init_PWM2_Config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Internal_Oscillator                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Gpio_System                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Gpio_System
   _Init_Internal_Oscillator
   _Init_PWM2_Config

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 25 03:06:44 2023

                               l51 00A6                                 l54 0092  
                               l48 0084                                 u10 0030  
                               u11 0028                                 u28 0032  
                               u37 0046                                l730 0086  
                              l732 00A4                                l740 0012  
                              l734 005C                                l742 0016  
                              l736 005E                                l744 001A  
                              l738 0082                                l746 001E  
                              l748 003C                                _PR2 000FCB  
                              _ISR 0008                                wreg 000FE8  
                             ?_ISR 0001                               i2l37 00A0  
                             _TMR2 000FCC                               _main 0012  
                             btemp 0003                               start 000E  
        __size_of_Init_PWM2_Config 002A                       ___param_bank 000000  
                            ??_ISR 0001                  ?_Init_Gpio_System 0001  
                            ?_main 0001                              _T2CON 000FCA  
               ??_Init_Gpio_System 0001                              ttemp5 0004  
                            ttemp6 0007                              ttemp7 000B  
                            wtemp8 0004                    __initialization 0094  
                     __end_of_main 005C                             ??_main 0001  
                    __activetblptr 000000                             _CCPR2L 000FBB  
                           _OSCCON 000FD3                             isa$std 000001  
                       __accesstop 0060            __end_of__initialization 0094  
                    ___rparam_used 000001                   _Init_PWM2_Config 005C  
                   __pcstackCOMRAM 0001                            _CCP2CON 000FBA  
__size_of_Init_Internal_Oscillator 000E          ?_Init_Internal_Oscillator 0001  
        __size_of_Init_Gpio_System 0004                            __Hparam 0000  
                          __Lparam 0000                            __pcinit 0094  
                          __ramtop 0800                            __ptext0 0012  
                          __ptext1 005C                            __ptext2 0086  
                          __ptext3 00A4                       __size_of_ISR 009C  
                        _T2CONbits 000FCA                     __pintcode_body 009E  
             end_of_initialization 0094                            int_func 009E  
         __end_of_Init_PWM2_Config 0086                          _TRISCbits 000F94  
                        _TRISDbits 000F95                        _CCP2CONbits 000FBA  
              start_initialization 0094                        __end_of_ISR 00A4  
                 _Init_Gpio_System 00A4   __end_of_Init_Internal_Oscillator 0094  
                        __pintcode 0008                           _LATDbits 000F8C  
         _Init_Internal_Oscillator 0086                  ?_Init_PWM2_Config 0001  
               ??_Init_PWM2_Config 0001                           __Hrparam 0000  
                         __Lrparam 0000           __end_of_Init_Gpio_System 00A8  
                    __size_of_main 004A                           isa$xinst 000000  
                         int$flags 0003                           intlevel2 0000  
                       _OSCCONbits 000FD3         ??_Init_Internal_Oscillator 0001  
