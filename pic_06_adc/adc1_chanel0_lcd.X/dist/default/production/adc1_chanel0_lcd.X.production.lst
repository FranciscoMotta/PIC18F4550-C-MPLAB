

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jun 26 15:42:09 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Version 2.40
    54                           ; Generated 17/11/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     _ADRESL	set	4035
    89   000000                     _ADRESH	set	4036
    90   000000                     _OSCCONbits	set	4051
    91   000000                     _ADCON2bits	set	4032
    92   000000                     _ADCON1bits	set	4033
    93   000000                     _ADCON0	set	4034
    94   000000                     _LATD	set	3980
    95   000000                     _TRISD	set	3989
    96   000000                     _ADCON2	set	4032
    97   000000                     _ADCON1	set	4033
    98   000000                     _ADCON0bits	set	4034
    99   000000                     _OSCCON	set	4051
   100                           
   101                           	psect	smallconst
   102   000800                     __psmallconst:
   103                           	callstack 0
   104   000800  00                 	db	0
   105   000801                     STR_1:
   106   000801  41                 	db	65	;'A'
   107   000802  44                 	db	68	;'D'
   108   000803  43                 	db	67	;'C'
   109   000804  20                 	db	32
   110   000805  4D                 	db	77	;'M'
   111   000806  65                 	db	101	;'e'
   112   000807  61                 	db	97	;'a'
   113   000808  73                 	db	115	;'s'
   114   000809  75                 	db	117	;'u'
   115   00080A  72                 	db	114	;'r'
   116   00080B  65                 	db	101	;'e'
   117   00080C  3A                 	db	58	;':'
   118   00080D  20                 	db	32
   119   00080E  00                 	db	0
   120   00080F                     STR_2:
   121   00080F  76                 	db	118	;'v'
   122   000810  61                 	db	97	;'a'
   123   000811  6C                 	db	108	;'l'
   124   000812  20                 	db	32
   125   000813  3D                 	db	61	;'='
   126   000814  20                 	db	32
   127   000815  25                 	db	37
   128   000816  2E                 	db	46
   129   000817  32                 	db	50	;'2'
   130   000818  66                 	db	102	;'f'
   131   000819  76                 	db	118	;'v'
   132   00081A  00                 	db	0
   133   00081B                     STR_3:
   134   00081B  69                 	db	105	;'i'
   135   00081C  6E                 	db	110	;'n'
   136   00081D  66                 	db	102	;'f'
   137   00081E  00                 	db	0
   138   00081F                     STR_6:
   139   00081F  6E                 	db	110	;'n'
   140   000820  61                 	db	97	;'a'
   141   000821  6E                 	db	110	;'n'
   142   000822  00                 	db	0
   143   000823  00                 	db	0	; dummy byte at the end
   144   000000                     
   145                           ; #config settings
   146                           
   147                           	psect	cinit
   148   002F8C                     __pcinit:
   149                           	callstack 0
   150   002F8C                     start_initialization:
   151                           	callstack 0
   152   002F8C                     __initialization:
   153                           	callstack 0
   154                           
   155                           ; Clear objects allocated to BANK1 (80 bytes)
   156   002F8C  EE01  F000         	lfsr	0,__pbssBANK1
   157   002F90  0E50               	movlw	80
   158   002F92                     clear_0:
   159   002F92  6AEE               	clrf	postinc0,c
   160   002F94  06E8               	decf	wreg,f,c
   161   002F96  E1FD               	bnz	clear_0
   162                           
   163                           ; Clear objects allocated to BANK0 (29 bytes)
   164   002F98  EE00  F0C3         	lfsr	0,__pbssBANK0
   165   002F9C  0E1D               	movlw	29
   166   002F9E                     clear_1:
   167   002F9E  6AEE               	clrf	postinc0,c
   168   002FA0  06E8               	decf	wreg,f,c
   169   002FA2  E1FD               	bnz	clear_1
   170   002FA4                     end_of_initialization:
   171                           	callstack 0
   172   002FA4                     __end_of__initialization:
   173                           	callstack 0
   174   002FA4  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   175   002FA6  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   176   002FA8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177   002FAA  6EF8               	movwf	tblptru,c
   178   002FAC  0100               	movlb	0
   179   002FAE  EF67  F012         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	bssBANK0
   182   0000C3                     __pbssBANK0:
   183                           	callstack 0
   184   0000C3                     floorf@F526:
   185                           	callstack 0
   186   0000C3                     	ds	4
   187   0000C7                     ___fpclassifyf@F465:
   188                           	callstack 0
   189   0000C7                     	ds	4
   190   0000CB                     _width:
   191                           	callstack 0
   192   0000CB                     	ds	2
   193   0000CD                     _prec:
   194                           	callstack 0
   195   0000CD                     	ds	2
   196   0000CF                     _flags:
   197                           	callstack 0
   198   0000CF                     	ds	1
   199   0000D0                     _data_vol:
   200                           	callstack 0
   201   0000D0                     	ds	16
   202                           
   203                           	psect	bssBANK1
   204   000100                     __pbssBANK1:
   205                           	callstack 0
   206   000100                     _dbuf:
   207                           	callstack 0
   208   000100                     	ds	80
   209                           
   210                           	psect	cstackBANK0
   211   000060                     __pcstackBANK0:
   212                           	callstack 0
   213   000060                     efgtoa@ne:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0x0
   217   000060                     	ds	2
   218   000062                     efgtoa@p:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x2
   222   000062                     	ds	2
   223   000064                     efgtoa@t:
   224                           	callstack 0
   225                           
   226                           ; 2 bytes @ 0x4
   227   000064                     	ds	2
   228   000066                     _efgtoa$893:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x6
   232   000066                     	ds	2
   233   000068                     efgtoa@pp:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x8
   237   000068                     	ds	1
   238   000069                     efgtoa@mode:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x9
   242   000069                     	ds	1
   243   00006A                     efgtoa@nmode:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0xA
   247   00006A                     	ds	1
   248   00006B                     efgtoa@d:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0xB
   252   00006B                     	ds	2
   253   00006D                     efgtoa@m:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0xD
   257   00006D                     	ds	2
   258   00006F                     efgtoa@e:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0xF
   262   00006F                     	ds	2
   263   000071                     efgtoa@w:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x11
   267   000071                     	ds	2
   268   000073                     efgtoa@ou:
   269                           	callstack 0
   270                           
   271                           ; 4 bytes @ 0x13
   272   000073                     	ds	4
   273   000077                     efgtoa@i:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x17
   277   000077                     	ds	2
   278   000079                     efgtoa@h:
   279                           	callstack 0
   280                           
   281                           ; 4 bytes @ 0x19
   282   000079                     	ds	4
   283   00007D                     efgtoa@l:
   284                           	callstack 0
   285                           
   286                           ; 4 bytes @ 0x1D
   287   00007D                     	ds	4
   288   000081                     efgtoa@sign:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x21
   292   000081                     	ds	1
   293   000082                     efgtoa@n:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x22
   297   000082                     	ds	2
   298   000084                     efgtoa@g:
   299                           	callstack 0
   300                           
   301                           ; 4 bytes @ 0x24
   302   000084                     	ds	4
   303   000088                     efgtoa@u:
   304                           	callstack 0
   305                           
   306                           ; 4 bytes @ 0x28
   307   000088                     	ds	4
   308   00008C                     vfpfcnvrt@fp:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x2C
   312   00008C                     	ds	2
   313   00008E                     vfpfcnvrt@fmt:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x2E
   317   00008E                     	ds	2
   318   000090                     vfpfcnvrt@ap:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x30
   322   000090                     	ds	2
   323   000092                     ??_vfpfcnvrt:
   324                           
   325                           ; 1 bytes @ 0x32
   326   000092                     	ds	2
   327   000094                     vfpfcnvrt@convarg:
   328                           	callstack 0
   329                           
   330                           ; 4 bytes @ 0x34
   331   000094                     	ds	4
   332   000098                     vfpfcnvrt@c:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x38
   336   000098                     	ds	1
   337   000099                     vfpfcnvrt@cp:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x39
   341   000099                     	ds	2
   342   00009B                     ?_vfprintf:
   343                           	callstack 0
   344   00009B                     vfprintf@fp:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x3B
   348   00009B                     	ds	2
   349   00009D                     vfprintf@fmt:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x3D
   353   00009D                     	ds	2
   354   00009F                     vfprintf@ap:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x3F
   358   00009F                     	ds	2
   359   0000A1                     vfprintf@cfmt:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x41
   363   0000A1                     	ds	2
   364   0000A3                     ?_sprintf:
   365                           	callstack 0
   366   0000A3                     sprintf@s:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x43
   370   0000A3                     	ds	2
   371   0000A5                     sprintf@fmt:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x45
   375   0000A5                     	ds	6
   376   0000AB                     sprintf@ap:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x4B
   380   0000AB                     	ds	2
   381   0000AD                     sprintf@f:
   382                           	callstack 0
   383                           
   384                           ; 12 bytes @ 0x4D
   385   0000AD                     	ds	12
   386   0000B9                     ??_main:
   387                           
   388                           ; 1 bytes @ 0x59
   389   0000B9                     	ds	4
   390   0000BD                     main@volts:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x5D
   394   0000BD                     	ds	4
   395   0000C1                     main@adc_val:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x61
   399   0000C1                     	ds	2
   400                           
   401                           	psect	cstackCOMRAM
   402   000001                     __pcstackCOMRAM:
   403                           	callstack 0
   404   000001                     ??_FM_Lcd_Send_Nibble:
   405   000001                     ?___fpclassifyf:
   406                           	callstack 0
   407   000001                     ?___wmul:
   408                           	callstack 0
   409   000001                     ?___fladd:
   410                           	callstack 0
   411   000001                     ?_labs:
   412                           	callstack 0
   413   000001                     ?___flneg:
   414                           	callstack 0
   415   000001                     ?___fltol:
   416                           	callstack 0
   417   000001                     ?___xxtofl:
   418                           	callstack 0
   419   000001                     ___wmul@multiplier:
   420                           	callstack 0
   421   000001                     memcpy@d1:
   422                           	callstack 0
   423   000001                     fputc@c:
   424                           	callstack 0
   425   000001                     strcpy@dest:
   426                           	callstack 0
   427   000001                     ___fleq@ff1:
   428                           	callstack 0
   429   000001                     ___flneg@f1:
   430                           	callstack 0
   431   000001                     ___fltol@f1:
   432                           	callstack 0
   433   000001                     ___fladd@b:
   434                           	callstack 0
   435   000001                     ___xxtofl@val:
   436                           	callstack 0
   437   000001                     ___fpclassifyf@x:
   438                           	callstack 0
   439   000001                     labs@a:
   440                           	callstack 0
   441                           
   442                           ; 4 bytes @ 0x0
   443   000001                     	ds	1
   444   000002                     FM_Lcd_Send_Nibble@byte_to_send:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x1
   448   000002                     	ds	1
   449   000003                     FM_Lcd_Send_Nibble@upper_bits:
   450                           	callstack 0
   451   000003                     ___wmul@multiplicand:
   452                           	callstack 0
   453   000003                     memcpy@s1:
   454                           	callstack 0
   455   000003                     fputc@fp:
   456                           	callstack 0
   457   000003                     strcpy@src:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x2
   461   000003                     	ds	1
   462   000004                     FM_Lcd_Send_Nibble@lower_bits:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x3
   466   000004                     	ds	1
   467   000005                     ??_fputc:
   468   000005                     ??___fpclassifyf:
   469   000005                     ??_labs:
   470   000005                     ??___fltol:
   471   000005                     ??___xxtofl:
   472   000005                     FM_Lcd_Send_Command@command_to_send:
   473                           	callstack 0
   474   000005                     FM_Lcd_Send_Character@character_to_send:
   475                           	callstack 0
   476   000005                     ___wmul@product:
   477                           	callstack 0
   478   000005                     memcpy@n:
   479                           	callstack 0
   480   000005                     strcpy@s:
   481                           	callstack 0
   482   000005                     ___fleq@ff2:
   483                           	callstack 0
   484   000005                     ___fladd@a:
   485                           	callstack 0
   486                           
   487                           ; 4 bytes @ 0x4
   488   000005                     	ds	1
   489   000006                     FM_Lcd_Set_Cursor@columna:
   490                           	callstack 0
   491   000006                     FM_Lcd_Send_String@cadena:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x5
   495   000006                     	ds	1
   496   000007                     ?_read_prec_or_width:
   497                           	callstack 0
   498   000007                     FM_Lcd_Set_Cursor@filas:
   499                           	callstack 0
   500   000007                     read_prec_or_width@fmt:
   501                           	callstack 0
   502   000007                     memcpy@d:
   503                           	callstack 0
   504   000007                     strcpy@d:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x6
   508   000007                     	ds	1
   509   000008                     ??_FM_Lcd_Send_String:
   510   000008                     FM_Lcd_Set_Cursor@base_pos:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x7
   514   000008                     	ds	1
   515   000009                     ??___fladd:
   516   000009                     ??___fleq:
   517   000009                     ___fltol@sign1:
   518                           	callstack 0
   519   000009                     ___xxtofl@sign:
   520                           	callstack 0
   521   000009                     read_prec_or_width@ap:
   522                           	callstack 0
   523   000009                     ___fpclassifyf@e:
   524                           	callstack 0
   525   000009                     memcpy@s:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x8
   529   000009                     	ds	1
   530   00000A                     FM_Lcd_Send_String@index:
   531                           	callstack 0
   532   00000A                     ___fltol@exp1:
   533                           	callstack 0
   534   00000A                     ___xxtofl@exp:
   535                           	callstack 0
   536   00000A                     fputs@s:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x9
   540   00000A                     	ds	1
   541   00000B                     ??_read_prec_or_width:
   542   00000B                     memcpy@tmp:
   543                           	callstack 0
   544   00000B                     ___xxtofl@arg:
   545                           	callstack 0
   546   00000B                     ___fpclassifyf@u:
   547                           	callstack 0
   548                           
   549                           ; 4 bytes @ 0xA
   550   00000B                     	ds	1
   551   00000C                     fputs@fp:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xB
   555   00000C                     	ds	1
   556   00000D                     ___fladd@signs:
   557                           	callstack 0
   558   00000D                     read_prec_or_width@c:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0xC
   562   00000D                     	ds	1
   563   00000E                     ___fladd@aexp:
   564                           	callstack 0
   565   00000E                     fputs@c:
   566                           	callstack 0
   567   00000E                     read_prec_or_width@n:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0xD
   571   00000E                     	ds	1
   572   00000F                     ?___flmul:
   573                           	callstack 0
   574   00000F                     ___fladd@bexp:
   575                           	callstack 0
   576   00000F                     fputs@i:
   577                           	callstack 0
   578   00000F                     ___flmul@b:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0xE
   582   00000F                     	ds	1
   583   000010                     ___fladd@grs:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0xF
   587   000010                     	ds	1
   588   000011                     pad@fp:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x10
   592   000011                     	ds	2
   593   000013                     pad@buf:
   594                           	callstack 0
   595   000013                     ___flmul@a:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x12
   599   000013                     	ds	2
   600   000015                     pad@p:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x14
   604   000015                     	ds	2
   605   000017                     ??___flmul:
   606   000017                     ??_pad:
   607                           
   608                           ; 1 bytes @ 0x16
   609   000017                     	ds	1
   610   000018                     pad@i:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x17
   614   000018                     	ds	2
   615   00001A                     pad@w:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x19
   619   00001A                     	ds	1
   620   00001B                     ___flmul@sign:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x1A
   624   00001B                     	ds	1
   625   00001C                     ___flmul@grs:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x1B
   629   00001C                     	ds	4
   630   000020                     ___flmul@aexp:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x1F
   634   000020                     	ds	1
   635   000021                     ___flmul@bexp:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x20
   639   000021                     	ds	1
   640   000022                     ___flmul@prod:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x21
   644   000022                     	ds	4
   645   000026                     ___flmul@temp:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x25
   649   000026                     	ds	2
   650   000028                     ?___fldiv:
   651                           	callstack 0
   652   000028                     ?___flsub:
   653                           	callstack 0
   654   000028                     ___flge@ff1:
   655                           	callstack 0
   656   000028                     ___flsub@b:
   657                           	callstack 0
   658   000028                     ___fldiv@b:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x27
   662   000028                     	ds	4
   663   00002C                     ___flge@ff2:
   664                           	callstack 0
   665   00002C                     ___flsub@a:
   666                           	callstack 0
   667   00002C                     ___fldiv@a:
   668                           	callstack 0
   669                           
   670                           ; 4 bytes @ 0x2B
   671   00002C                     	ds	4
   672   000030                     ??___fldiv:
   673   000030                     ??___flge:
   674                           
   675                           ; 1 bytes @ 0x2F
   676   000030                     	ds	4
   677   000034                     ___fldiv@rem:
   678                           	callstack 0
   679                           
   680                           ; 4 bytes @ 0x33
   681   000034                     	ds	4
   682   000038                     ___fldiv@sign:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0x37
   686   000038                     	ds	1
   687   000039                     ___fldiv@new_exp:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x38
   691   000039                     	ds	2
   692   00003B                     ___fldiv@grs:
   693                           	callstack 0
   694                           
   695                           ; 4 bytes @ 0x3A
   696   00003B                     	ds	4
   697   00003F                     ___fldiv@bexp:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x3E
   701   00003F                     	ds	1
   702   000040                     ___fldiv@aexp:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x3F
   706   000040                     	ds	1
   707   000041                     ?_floorf:
   708                           	callstack 0
   709   000041                     floorf@x:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0x40
   713   000041                     	ds	4
   714   000045                     ??_floorf:
   715                           
   716                           ; 1 bytes @ 0x44
   717   000045                     	ds	6
   718   00004B                     floorf@m:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x4A
   722   00004B                     	ds	4
   723   00004F                     floorf@e:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x4E
   727   00004F                     	ds	2
   728   000051                     floorf@u:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x50
   732   000051                     	ds	4
   733   000055                     efgtoa@fp:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x54
   737   000055                     	ds	2
   738   000057                     efgtoa@f:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x56
   742   000057                     	ds	4
   743   00005B                     efgtoa@c:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x5A
   747   00005B                     	ds	1
   748   00005C                     ??_efgtoa:
   749                           
   750                           ; 1 bytes @ 0x5B
   751   00005C                     	ds	2
   752   00005E                     
   753                           ; 1 bytes @ 0x5D
   754 ;;
   755 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   756 ;;
   757 ;; *************** function _main *****************
   758 ;; Defined at:
   759 ;;		line 37 in file "main.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  volts           4   93[BANK0 ] float 
   764 ;;  adc_val         2   97[BANK0 ] unsigned short 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  2   45[None  ] int 
   767 ;; Registers used:
   768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   774 ;;      Params:         0       0       0       0       0       0       0       0       0
   775 ;;      Locals:         0       6       0       0       0       0       0       0       0
   776 ;;      Temps:          0       4       0       0       0       0       0       0       0
   777 ;;      Totals:         0      10       0       0       0       0       0       0       0
   778 ;;Total ram usage:       10 bytes
   779 ;; Hardware stack levels required when called: 9
   780 ;; This function calls:
   781 ;;		_FM_Lcd_Easy_Init
   782 ;;		_FM_Lcd_Send_String
   783 ;;		_FM_Lcd_Set_Cursor
   784 ;;		_Init_ADC_Module
   785 ;;		_Init_Internal_Oscillator
   786 ;;		___fldiv
   787 ;;		___flmul
   788 ;;		___xxtofl
   789 ;;		_sprintf
   790 ;; This function is called by:
   791 ;;		Startup code after reset
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text0
   796   0024CE                     __ptext0:
   797                           	callstack 0
   798   0024CE                     _main:
   799                           	callstack 22
   800   0024CE                     
   801                           ;main.c: 40:     Init_Internal_Oscillator();
   802   0024CE  ECEC  F017         	call	_Init_Internal_Oscillator	;wreg free
   803                           
   804                           ;main.c: 42:     Init_ADC_Module();
   805   0024D2  EC97  F017         	call	_Init_ADC_Module	;wreg free
   806   0024D6                     
   807                           ;main.c: 44:     FM_Lcd_Easy_Init();
   808   0024D6  ECB1  F017         	call	_FM_Lcd_Easy_Init	;wreg free
   809   0024DA                     
   810                           ;main.c: 46:     FM_Lcd_Set_Cursor(ROW_1, COL_3);
   811   0024DA  0E02               	movlw	2
   812   0024DC  6E06               	movwf	FM_Lcd_Set_Cursor@columna^0,c
   813   0024DE  0E00               	movlw	0
   814   0024E0  EC39  F017         	call	_FM_Lcd_Set_Cursor
   815   0024E4                     
   816                           ;main.c: 47:     FM_Lcd_Send_String("ADC Measure: ");
   817   0024E4  0E01               	movlw	low STR_1
   818   0024E6  6E06               	movwf	FM_Lcd_Send_String@cadena^0,c
   819   0024E8  0E08               	movlw	high STR_1
   820   0024EA  6E07               	movwf	(FM_Lcd_Send_String@cadena+1)^0,c
   821   0024EC  ECD6  F015         	call	_FM_Lcd_Send_String	;wreg free
   822   0024F0                     l3292:
   823                           
   824                           ;main.c: 50:     {;main.c: 52:         ADCON0bits.GO_NOT_DONE = 1;
   825   0024F0  82C2               	bsf	194,1,c	;volatile
   826   0024F2                     l47:
   827   0024F2  B2C2               	btfsc	194,1,c	;volatile
   828   0024F4  EF7E  F012         	goto	u3571
   829   0024F8  EF80  F012         	goto	u3570
   830   0024FC                     u3571:
   831   0024FC  EF79  F012         	goto	l47
   832   002500                     u3570:
   833   002500                     
   834                           ;main.c: 56:         uint16_t adc_val = (ADRESH << 2) | (ADRESL >> 6);
   835   002500  CFC3 F0B9          	movff	4035,??_main	;volatile
   836   002504  0E06               	movlw	6
   837   002506  0100               	movlb	0	; () banked
   838   002508  6FBA               	movwf	(??_main+1)& (0+255),b
   839   00250A                     u3585:
   840   00250A  90D8               	bcf	status,0,c
   841   00250C  33B9               	rrcf	??_main& (0+255),f,b
   842   00250E  2FBA               	decfsz	(??_main+1)& (0+255),f,b
   843   002510  EF85  F012         	goto	u3585
   844   002514  51B9               	movf	??_main& (0+255),w,b
   845   002516  CFC4 F0BB          	movff	4036,??_main+2	;volatile
   846   00251A  6BBC               	clrf	(??_main+3)& (0+255),b
   847   00251C  90D8               	bcf	status,0,c
   848   00251E  37BB               	rlcf	(??_main+2)& (0+255),f,b
   849   002520  37BC               	rlcf	(??_main+3)& (0+255),f,b
   850   002522  90D8               	bcf	status,0,c
   851   002524  37BB               	rlcf	(??_main+2)& (0+255),f,b
   852   002526  37BC               	rlcf	(??_main+3)& (0+255),f,b
   853   002528  11BB               	iorwf	(??_main+2)& (0+255),w,b
   854   00252A  6FC1               	movwf	main@adc_val& (0+255),b
   855   00252C  51BC               	movf	(??_main+3)& (0+255),w,b
   856   00252E  6FC2               	movwf	(main@adc_val+1)& (0+255),b
   857   002530                     
   858                           ; BSR set to: 0
   859                           ;main.c: 64:         float volts = ((5.0 * adc_val) / 1024.0);
   860   002530  0E00               	movlw	0
   861   002532  6E13               	movwf	___flmul@a^0,c
   862   002534  0E00               	movlw	0
   863   002536  6E14               	movwf	(___flmul@a+1)^0,c
   864   002538  0EA0               	movlw	160
   865   00253A  6E15               	movwf	(___flmul@a+2)^0,c
   866   00253C  0E40               	movlw	64
   867   00253E  6E16               	movwf	(___flmul@a+3)^0,c
   868   002540  C0C1  F001         	movff	main@adc_val,___xxtofl@val
   869   002544  C0C2  F002         	movff	main@adc_val+1,___xxtofl@val+1
   870   002548  6A03               	clrf	(___xxtofl@val+2)^0,c
   871   00254A  6A04               	clrf	(___xxtofl@val+3)^0,c
   872   00254C  0E00               	movlw	0
   873   00254E  EC8D  F011         	call	___xxtofl
   874   002552  C001  F00F         	movff	?___xxtofl,___flmul@b
   875   002556  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   876   00255A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   877   00255E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   878   002562  EC6E  F00B         	call	___flmul	;wreg free
   879   002566  C00F  F028         	movff	?___flmul,___fldiv@b
   880   00256A  C010  F029         	movff	?___flmul+1,___fldiv@b+1
   881   00256E  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
   882   002572  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
   883   002576  0E00               	movlw	0
   884   002578  6E2C               	movwf	___fldiv@a^0,c
   885   00257A  0E00               	movlw	0
   886   00257C  6E2D               	movwf	(___fldiv@a+1)^0,c
   887   00257E  0E80               	movlw	128
   888   002580  6E2E               	movwf	(___fldiv@a+2)^0,c
   889   002582  0E44               	movlw	68
   890   002584  6E2F               	movwf	(___fldiv@a+3)^0,c
   891   002586  EC83  F00D         	call	___fldiv	;wreg free
   892   00258A  C028  F0BD         	movff	?___fldiv,main@volts
   893   00258E  C029  F0BE         	movff	?___fldiv+1,main@volts+1
   894   002592  C02A  F0BF         	movff	?___fldiv+2,main@volts+2
   895   002596  C02B  F0C0         	movff	?___fldiv+3,main@volts+3
   896   00259A                     
   897                           ;main.c: 65:         sprintf(data_vol, "val = %.2fv", volts);
   898   00259A  0ED0               	movlw	low _data_vol
   899   00259C  0100               	movlb	0	; () banked
   900   00259E  6FA3               	movwf	sprintf@s& (0+255),b
   901   0025A0  0E00               	movlw	high _data_vol
   902   0025A2  6FA4               	movwf	(sprintf@s+1)& (0+255),b
   903   0025A4  0E0F               	movlw	low STR_2
   904   0025A6  6FA5               	movwf	sprintf@fmt& (0+255),b
   905   0025A8  0E08               	movlw	high STR_2
   906   0025AA  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
   907   0025AC  C0BD  F0A7         	movff	main@volts,?_sprintf+4
   908   0025B0  C0BE  F0A8         	movff	main@volts+1,?_sprintf+5
   909   0025B4  C0BF  F0A9         	movff	main@volts+2,?_sprintf+6
   910   0025B8  C0C0  F0AA         	movff	main@volts+3,?_sprintf+7
   911   0025BC  ECA4  F016         	call	_sprintf	;wreg free
   912   0025C0                     
   913                           ;main.c: 66:         FM_Lcd_Set_Cursor(ROW_2, COL_3);
   914   0025C0  0E02               	movlw	2
   915   0025C2  6E06               	movwf	FM_Lcd_Set_Cursor@columna^0,c
   916   0025C4  0E01               	movlw	1
   917   0025C6  EC39  F017         	call	_FM_Lcd_Set_Cursor
   918   0025CA                     
   919                           ;main.c: 67:         FM_Lcd_Send_String(data_vol);
   920   0025CA  0ED0               	movlw	low _data_vol
   921   0025CC  6E06               	movwf	FM_Lcd_Send_String@cadena^0,c
   922   0025CE  0E00               	movlw	high _data_vol
   923   0025D0  6E07               	movwf	(FM_Lcd_Send_String@cadena+1)^0,c
   924   0025D2  ECD6  F015         	call	_FM_Lcd_Send_String	;wreg free
   925   0025D6                     
   926                           ;main.c: 69:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
   927   0025D6  0E03               	movlw	3
   928   0025D8  0100               	movlb	0	; () banked
   929   0025DA  6FB9               	movwf	??_main& (0+255),b
   930   0025DC  0E97               	movlw	151
   931   0025DE                     u3597:
   932   0025DE  2EE8               	decfsz	wreg,f,c
   933   0025E0  D7FE               	bra	u3597
   934   0025E2  2FB9               	decfsz	??_main& (0+255),f,b
   935   0025E4  D7FC               	bra	u3597
   936   0025E6  D000               	nop2	
   937   0025E8  EF78  F012         	goto	l3292
   938   0025EC  EF07  F000         	goto	start
   939   0025F0                     __end_of_main:
   940                           	callstack 0
   941                           
   942 ;; *************** function _sprintf *****************
   943 ;; Defined at:
   944 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  s               2   67[BANK0 ] PTR unsigned char 
   947 ;;		 -> data_vol(16), 
   948 ;;  fmt             2   69[BANK0 ] PTR const unsigned char 
   949 ;;		 -> STR_2(12), 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  f              12   77[BANK0 ] struct _IO_FILE
   952 ;;  ap              2   75[BANK0 ] PTR void [1]
   953 ;;		 -> ?_sprintf(2), 
   954 ;;  ret             2    0        int 
   955 ;; Return value:  Size  Location     Type
   956 ;;                  2   67[BANK0 ] int 
   957 ;; Registers used:
   958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   964 ;;      Params:         0       8       0       0       0       0       0       0       0
   965 ;;      Locals:         0      14       0       0       0       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0       0       0
   967 ;;      Totals:         0      22       0       0       0       0       0       0       0
   968 ;;Total ram usage:       22 bytes
   969 ;; Hardware stack levels used: 1
   970 ;; Hardware stack levels required when called: 8
   971 ;; This function calls:
   972 ;;		_vfprintf
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text1
   979   002D48                     __ptext1:
   980                           	callstack 0
   981   002D48                     _sprintf:
   982                           	callstack 22
   983   002D48  0EA7               	movlw	low (?_sprintf+4)
   984   002D4A  0100               	movlb	0	; () banked
   985   002D4C  6FAB               	movwf	sprintf@ap& (0+255),b
   986   002D4E  0E00               	movlw	high (?_sprintf+4)
   987   002D50  6FAC               	movwf	(sprintf@ap+1)& (0+255),b
   988   002D52  C0A3  F0AD         	movff	sprintf@s,sprintf@f
   989   002D56  C0A4  F0AE         	movff	sprintf@s+1,sprintf@f+1
   990   002D5A                     
   991                           ; BSR set to: 0
   992   002D5A  0E00               	movlw	0
   993   002D5C  6FB1               	movwf	(sprintf@f+4)& (0+255),b
   994   002D5E  0E00               	movlw	0
   995   002D60  6FB0               	movwf	(sprintf@f+3)& (0+255),b
   996   002D62                     
   997                           ; BSR set to: 0
   998   002D62  0E00               	movlw	0
   999   002D64  6FB8               	movwf	(sprintf@f+11)& (0+255),b
  1000   002D66  0E00               	movlw	0
  1001   002D68  6FB7               	movwf	(sprintf@f+10)& (0+255),b
  1002   002D6A                     
  1003                           ; BSR set to: 0
  1004   002D6A  0EAD               	movlw	low sprintf@f
  1005   002D6C  6F9B               	movwf	vfprintf@fp& (0+255),b
  1006   002D6E  0E00               	movlw	high sprintf@f
  1007   002D70  6F9C               	movwf	(vfprintf@fp+1)& (0+255),b
  1008   002D72  C0A5  F09D         	movff	sprintf@fmt,vfprintf@fmt
  1009   002D76  C0A6  F09E         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1010   002D7A  0EAB               	movlw	low sprintf@ap
  1011   002D7C  6F9F               	movwf	vfprintf@ap& (0+255),b
  1012   002D7E  0E00               	movlw	high sprintf@ap
  1013   002D80  6FA0               	movwf	(vfprintf@ap+1)& (0+255),b
  1014   002D82  EC7B  F016         	call	_vfprintf	;wreg free
  1015   002D86  0100               	movlb	0	; () banked
  1016   002D88  51B0               	movf	(sprintf@f+3)& (0+255),w,b
  1017   002D8A  25A3               	addwf	sprintf@s& (0+255),w,b
  1018   002D8C  6ED9               	movwf	fsr2l,c
  1019   002D8E  51B1               	movf	(sprintf@f+4)& (0+255),w,b
  1020   002D90  21A4               	addwfc	(sprintf@s+1)& (0+255),w,b
  1021   002D92  6EDA               	movwf	fsr2h,c
  1022   002D94  6ADF               	clrf	indf2,c
  1023   002D96                     
  1024                           ; BSR set to: 0
  1025   002D96  0012               	return		;funcret
  1026   002D98                     __end_of_sprintf:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function _vfprintf *****************
  1030 ;; Defined at:
  1031 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  1034 ;;		 -> sprintf@f(12), 
  1035 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
  1036 ;;		 -> STR_2(12), 
  1037 ;;  ap              2   63[BANK0 ] PTR PTR void 
  1038 ;;		 -> sprintf@ap(2), 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  cfmt            2   65[BANK0 ] PTR unsigned char 
  1041 ;;		 -> STR_2(12), 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  2   59[BANK0 ] int 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1051 ;;      Params:         0       6       0       0       0       0       0       0       0
  1052 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1054 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1055 ;;Total ram usage:        8 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 7
  1058 ;; This function calls:
  1059 ;;		_vfpfcnvrt
  1060 ;; This function is called by:
  1061 ;;		_sprintf
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text2
  1066   002CF6                     __ptext2:
  1067                           	callstack 0
  1068   002CF6                     _vfprintf:
  1069                           	callstack 22
  1070   002CF6                     
  1071                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1072   002CF6  C09D  F0A1         	movff	vfprintf@fmt,vfprintf@cfmt
  1073   002CFA  C09E  F0A2         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1074                           
  1075                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1076   002CFE  EF90  F016         	goto	l3184
  1077   002D02                     l3182:
  1078                           
  1079                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1080   002D02  C09B  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1081   002D06  C09C  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1082   002D0A  0EA1               	movlw	low vfprintf@cfmt
  1083   002D0C  0100               	movlb	0	; () banked
  1084   002D0E  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1085   002D10  0E00               	movlw	high vfprintf@cfmt
  1086   002D12  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1087   002D14  C09F  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  1088   002D18  C0A0  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1089   002D1C  EC50  F00F         	call	_vfpfcnvrt	;wreg free
  1090   002D20                     l3184:
  1091                           
  1092                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1093   002D20  C0A1  FFF6         	movff	vfprintf@cfmt,tblptrl
  1094   002D24  C0A2  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1095   002D28                     	if	0	;tblptru may be non-zero
  1096   002D28                     	endif
  1097   002D28                     	if	0	;tblptru may be non-zero
  1098   002D28                     	endif
  1099   002D28  0008               	tblrd		*
  1100   002D2A  50F5               	movf	tablat,w,c
  1101   002D2C  0900               	iorlw	0
  1102   002D2E  A4D8               	btfss	status,2,c
  1103   002D30  EF9C  F016         	goto	u3411
  1104   002D34  EF9E  F016         	goto	u3410
  1105   002D38                     u3411:
  1106   002D38  EF81  F016         	goto	l3182
  1107   002D3C                     u3410:
  1108   002D3C                     
  1109                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1110   002D3C  0E00               	movlw	0
  1111   002D3E  0100               	movlb	0	; () banked
  1112   002D40  6F9C               	movwf	(?_vfprintf+1)& (0+255),b
  1113   002D42  0E00               	movlw	0
  1114   002D44  6F9B               	movwf	?_vfprintf& (0+255),b
  1115   002D46                     
  1116                           ; BSR set to: 0
  1117   002D46  0012               	return		;funcret
  1118   002D48                     __end_of_vfprintf:
  1119                           	callstack 0
  1120                           
  1121 ;; *************** function _vfpfcnvrt *****************
  1122 ;; Defined at:
  1123 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1126 ;;		 -> sprintf@f(12), 
  1127 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  1128 ;;		 -> vfprintf@cfmt(2), 
  1129 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1130 ;;		 -> sprintf@ap(2), 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  convarg         4   52[BANK0 ] struct .
  1133 ;;  cp              2   57[BANK0 ] PTR unsigned char 
  1134 ;;		 -> STR_2(12), 
  1135 ;;  i               2    0        int 
  1136 ;;  done            2    0        int 
  1137 ;;  c               1   56[BANK0 ] unsigned char 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1147 ;;      Params:         0       6       0       0       0       0       0       0       0
  1148 ;;      Locals:         0       7       0       0       0       0       0       0       0
  1149 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1150 ;;      Totals:         0      15       0       0       0       0       0       0       0
  1151 ;;Total ram usage:       15 bytes
  1152 ;; Hardware stack levels used: 1
  1153 ;; Hardware stack levels required when called: 6
  1154 ;; This function calls:
  1155 ;;		_efgtoa
  1156 ;;		_fputc
  1157 ;;		_read_prec_or_width
  1158 ;; This function is called by:
  1159 ;;		_vfprintf
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text3
  1164   001EA0                     __ptext3:
  1165                           	callstack 0
  1166   001EA0                     _vfpfcnvrt:
  1167                           	callstack 22
  1168   001EA0                     
  1169                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1170   001EA0  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1171   001EA4  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1172   001EA8  CFDE FFF6          	movff	postinc2,tblptrl
  1173   001EAC  CFDD FFF7          	movff	postdec2,tblptrh
  1174   001EB0                     	if	0	;tblptru may be non-zero
  1175   001EB0                     	endif
  1176   001EB0                     	if	0	;tblptru may be non-zero
  1177   001EB0                     	endif
  1178   001EB0  0008               	tblrd		*
  1179   001EB2  50F5               	movf	tablat,w,c
  1180   001EB4  0A25               	xorlw	37
  1181   001EB6  A4D8               	btfss	status,2,c
  1182   001EB8  EF60  F00F         	goto	u3381
  1183   001EBC  EF62  F00F         	goto	u3380
  1184   001EC0                     u3381:
  1185   001EC0  EF6F  F010         	goto	l3144
  1186   001EC4                     u3380:
  1187   001EC4                     
  1188                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1189   001EC4  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1190   001EC8  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1191   001ECC  2ADE               	incf	postinc2,f,c
  1192   001ECE  0E00               	movlw	0
  1193   001ED0  22DD               	addwfc	postdec2,f,c
  1194   001ED2                     
  1195                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1196   001ED2  0E00               	movlw	0
  1197   001ED4  0100               	movlb	0	; () banked
  1198   001ED6  6FCC               	movwf	(_width+1)& (0+255),b
  1199   001ED8  0E00               	movlw	0
  1200   001EDA  6FCB               	movwf	_width& (0+255),b
  1201   001EDC  C0CB  F0CF         	movff	_width,_flags
  1202   001EE0                     
  1203                           ; BSR set to: 0
  1204                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1205   001EE0  69CD               	setf	_prec& (0+255),b
  1206   001EE2  69CE               	setf	(_prec+1)& (0+255),b
  1207   001EE4                     
  1208                           ; BSR set to: 0
  1209                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  1210   001EE4  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1211   001EE8  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1212   001EEC  CFDE FFF6          	movff	postinc2,tblptrl
  1213   001EF0  CFDD FFF7          	movff	postdec2,tblptrh
  1214   001EF4                     	if	0	;tblptru may be non-zero
  1215   001EF4                     	endif
  1216   001EF4                     	if	0	;tblptru may be non-zero
  1217   001EF4                     	endif
  1218   001EF4  0008               	tblrd		*
  1219   001EF6  50F5               	movf	tablat,w,c
  1220   001EF8  0A2E               	xorlw	46
  1221   001EFA  A4D8               	btfss	status,2,c
  1222   001EFC  EF82  F00F         	goto	u3391
  1223   001F00  EF84  F00F         	goto	u3390
  1224   001F04                     u3391:
  1225   001F04  EF99  F00F         	goto	l3106
  1226   001F08                     u3390:
  1227   001F08                     
  1228                           ; BSR set to: 0
  1229                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  1230   001F08  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1231   001F0C  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1232   001F10  2ADE               	incf	postinc2,f,c
  1233   001F12  0E00               	movlw	0
  1234   001F14  22DD               	addwfc	postdec2,f,c
  1235   001F16                     
  1236                           ; BSR set to: 0
  1237                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1238   001F16  C08E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1239   001F1A  C08F  F008         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1240   001F1E  C090  F009         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1241   001F22  C091  F00A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1242   001F26  ECE1  F014         	call	_read_prec_or_width	;wreg free
  1243   001F2A  C007  F0CD         	movff	?_read_prec_or_width,_prec
  1244   001F2E  C008  F0CE         	movff	?_read_prec_or_width+1,_prec+1
  1245   001F32                     l3106:
  1246                           
  1247                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  1248   001F32  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1249   001F36  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1250   001F3A  CFDE F099          	movff	postinc2,vfpfcnvrt@cp
  1251   001F3E  CFDD F09A          	movff	postdec2,vfpfcnvrt@cp+1
  1252   001F42                     
  1253                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  1254   001F42  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1255   001F46  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1256   001F4A                     	if	0	;tblptru may be non-zero
  1257   001F4A                     	endif
  1258   001F4A                     	if	0	;tblptru may be non-zero
  1259   001F4A                     	endif
  1260   001F4A  0008               	tblrd		*
  1261   001F4C  CFF5 F098          	movff	tablat,vfpfcnvrt@c
  1262                           
  1263                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  1264   001F50  EFB6  F00F         	goto	l3118
  1265   001F54                     l3110:
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  1269   001F54  4B99               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  1270   001F56  2B9A               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  1271                           
  1272                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  1273   001F58  EFD0  F00F         	goto	l3120
  1274   001F5C                     l3112:
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  1278   001F5C  0E6C               	movlw	108
  1279   001F5E  6F98               	movwf	vfpfcnvrt@c& (0+255),b
  1280                           
  1281                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  1282   001F60  EFD0  F00F         	goto	l3120
  1283   001F64                     l3114:
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  1287   001F64  0E00               	movlw	0
  1288   001F66  6F98               	movwf	vfpfcnvrt@c& (0+255),b
  1289                           
  1290                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  1291   001F68  EFD0  F00F         	goto	l3120
  1292   001F6C                     l3118:
  1293   001F6C  0100               	movlb	0	; () banked
  1294   001F6E  5198               	movf	vfpfcnvrt@c& (0+255),w,b
  1295   001F70  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  1296   001F72  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1297                           
  1298                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1299                           ; Switch size 1, requested type "simple"
  1300                           ; Number of cases is 1, Range of values is 0 to 0
  1301                           ; switch strategies available:
  1302                           ; Name         Instructions Cycles
  1303                           ; simple_byte            4     3 (average)
  1304                           ;	Chosen strategy is simple_byte
  1305   001F74  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1306   001F76  0A00               	xorlw	0	; case 0
  1307   001F78  B4D8               	btfsc	status,2,c
  1308   001F7A  EFC1  F00F         	goto	l3396
  1309   001F7E  EFB2  F00F         	goto	l3114
  1310   001F82                     l3396:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ; Switch size 1, requested type "simple"
  1314                           ; Number of cases is 3, Range of values is 76 to 108
  1315                           ; switch strategies available:
  1316                           ; Name         Instructions Cycles
  1317                           ; simple_byte           10     6 (average)
  1318                           ;	Chosen strategy is simple_byte
  1319   001F82  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  1320   001F84  0A4C               	xorlw	76	; case 76
  1321   001F86  B4D8               	btfsc	status,2,c
  1322   001F88  EFAA  F00F         	goto	l3110
  1323   001F8C  0A2A               	xorlw	42	; case 102
  1324   001F8E  B4D8               	btfsc	status,2,c
  1325   001F90  EFAE  F00F         	goto	l3112
  1326   001F94  0A0A               	xorlw	10	; case 108
  1327   001F96  B4D8               	btfsc	status,2,c
  1328   001F98  EFAA  F00F         	goto	l3110
  1329   001F9C  EFB2  F00F         	goto	l3114
  1330   001FA0                     l3120:
  1331                           
  1332                           ; BSR set to: 0
  1333   001FA0  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1334   001FA4  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1335   001FA8                     	if	0	;tblptru may be non-zero
  1336   001FA8                     	endif
  1337   001FA8                     	if	0	;tblptru may be non-zero
  1338   001FA8                     	endif
  1339   001FA8  0008               	tblrd		*
  1340   001FAA  50F5               	movf	tablat,w,c
  1341   001FAC  0A66               	xorlw	102
  1342   001FAE  A4D8               	btfss	status,2,c
  1343   001FB0  EFDC  F00F         	goto	u3401
  1344   001FB4  EFDE  F00F         	goto	u3400
  1345   001FB8                     u3401:
  1346   001FB8  EF66  F010         	goto	l3140
  1347   001FBC                     u3400:
  1348   001FBC  EF14  F010         	goto	l3128
  1349   001FC0                     l3122:
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1353   001FC0  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1354   001FC4  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1355   001FC8  CFDF F092          	movff	indf2,??_vfpfcnvrt
  1356   001FCC  0E04               	movlw	4
  1357   001FCE  26DE               	addwf	postinc2,f,c
  1358   001FD0  CFDF F093          	movff	indf2,??_vfpfcnvrt+1
  1359   001FD4  0E00               	movlw	0
  1360   001FD6  22DD               	addwfc	postdec2,f,c
  1361   001FD8  C092  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1362   001FDC  C093  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1363   001FE0  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg
  1364   001FE4  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+1
  1365   001FE8  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg+2
  1366   001FEC  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+3
  1367                           
  1368                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  1369   001FF0  EF29  F010         	goto	l3130
  1370   001FF4                     l3124:
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1374   001FF4  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1375   001FF8  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1376   001FFC  CFDF F092          	movff	indf2,??_vfpfcnvrt
  1377   002000  0E04               	movlw	4
  1378   002002  26DE               	addwf	postinc2,f,c
  1379   002004  CFDF F093          	movff	indf2,??_vfpfcnvrt+1
  1380   002008  0E00               	movlw	0
  1381   00200A  22DD               	addwfc	postdec2,f,c
  1382   00200C  C092  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1383   002010  C093  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1384   002014  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg
  1385   002018  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+1
  1386   00201C  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg+2
  1387   002020  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+3
  1388                           
  1389                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  1390   002024  EF29  F010         	goto	l3130
  1391   002028                     l3128:
  1392                           
  1393                           ; BSR set to: 0
  1394   002028  5198               	movf	vfpfcnvrt@c& (0+255),w,b
  1395   00202A  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  1396   00202C  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1397                           
  1398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1399                           ; Switch size 1, requested type "simple"
  1400                           ; Number of cases is 1, Range of values is 0 to 0
  1401                           ; switch strategies available:
  1402                           ; Name         Instructions Cycles
  1403                           ; simple_byte            4     3 (average)
  1404                           ;	Chosen strategy is simple_byte
  1405   00202E  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1406   002030  0A00               	xorlw	0	; case 0
  1407   002032  B4D8               	btfsc	status,2,c
  1408   002034  EF1E  F010         	goto	l3398
  1409   002038  EF29  F010         	goto	l3130
  1410   00203C                     l3398:
  1411                           
  1412                           ; BSR set to: 0
  1413                           ; Switch size 1, requested type "simple"
  1414                           ; Number of cases is 2, Range of values is 76 to 108
  1415                           ; switch strategies available:
  1416                           ; Name         Instructions Cycles
  1417                           ; simple_byte            7     4 (average)
  1418                           ;	Chosen strategy is simple_byte
  1419   00203C  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  1420   00203E  0A4C               	xorlw	76	; case 76
  1421   002040  B4D8               	btfsc	status,2,c
  1422   002042  EFFA  F00F         	goto	l3124
  1423   002046  0A20               	xorlw	32	; case 108
  1424   002048  B4D8               	btfsc	status,2,c
  1425   00204A  EFE0  F00F         	goto	l3122
  1426   00204E  EF29  F010         	goto	l3130
  1427   002052                     l3130:
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  1431   002052  0E01               	movlw	1
  1432   002054  2599               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1433   002056  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  1434   002058  0E00               	movlw	0
  1435   00205A  219A               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1436   00205C  6F93               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1437   00205E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1438   002062  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1439   002066  C092  FFDE         	movff	??_vfpfcnvrt,postinc2
  1440   00206A  C093  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1441                           
  1442                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  1443   00206E  EF50  F010         	goto	l3138
  1444   002072                     l3132:
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1448   002072  C08C  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1449   002076  C08D  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1450   00207A  C094  F057         	movff	vfpfcnvrt@convarg,efgtoa@f
  1451   00207E  C095  F058         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1452   002082  C096  F059         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1453   002086  C097  F05A         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1454   00208A  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1455   00208E  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1456   002092                     	if	0	;tblptru may be non-zero
  1457   002092                     	endif
  1458   002092                     	if	0	;tblptru may be non-zero
  1459   002092                     	endif
  1460   002092  0008               	tblrd		*
  1461   002094  CFF5 F05B          	movff	tablat,efgtoa@c
  1462   002098  EC12  F004         	call	_efgtoa	;wreg free
  1463   00209C  EF83  F010         	goto	l889
  1464   0020A0                     l3138:
  1465                           
  1466                           ; BSR set to: 0
  1467   0020A0  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1468   0020A4  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1469   0020A8                     	if	0	;tblptru may be non-zero
  1470   0020A8                     	endif
  1471   0020A8                     	if	0	;tblptru may be non-zero
  1472   0020A8                     	endif
  1473   0020A8  0008               	tblrd		*
  1474   0020AA  50F5               	movf	tablat,w,c
  1475   0020AC  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  1476   0020AE  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1477                           
  1478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1479                           ; Switch size 1, requested type "simple"
  1480                           ; Number of cases is 1, Range of values is 0 to 0
  1481                           ; switch strategies available:
  1482                           ; Name         Instructions Cycles
  1483                           ; simple_byte            4     3 (average)
  1484                           ;	Chosen strategy is simple_byte
  1485   0020B0  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1486   0020B2  0A00               	xorlw	0	; case 0
  1487   0020B4  B4D8               	btfsc	status,2,c
  1488   0020B6  EF5F  F010         	goto	l3400
  1489   0020BA  EF66  F010         	goto	l3140
  1490   0020BE                     l3400:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ; Switch size 1, requested type "simple"
  1494                           ; Number of cases is 1, Range of values is 102 to 102
  1495                           ; switch strategies available:
  1496                           ; Name         Instructions Cycles
  1497                           ; simple_byte            4     3 (average)
  1498                           ;	Chosen strategy is simple_byte
  1499   0020BE  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  1500   0020C0  0A66               	xorlw	102	; case 102
  1501   0020C2  B4D8               	btfsc	status,2,c
  1502   0020C4  EF39  F010         	goto	l3132
  1503   0020C8  EF66  F010         	goto	l3140
  1504   0020CC                     l3140:
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1507   0020CC  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1508   0020D0  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1509   0020D4  2ADE               	incf	postinc2,f,c
  1510   0020D6  0E00               	movlw	0
  1511   0020D8  22DD               	addwfc	postdec2,f,c
  1512   0020DA  EF83  F010         	goto	l889
  1513   0020DE                     l3144:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1516   0020DE  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1517   0020E2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1518   0020E6  CFDE FFF6          	movff	postinc2,tblptrl
  1519   0020EA  CFDD FFF7          	movff	postdec2,tblptrh
  1520   0020EE                     	if	0	;tblptru may be non-zero
  1521   0020EE                     	endif
  1522   0020EE                     	if	0	;tblptru may be non-zero
  1523   0020EE                     	endif
  1524   0020EE  0008               	tblrd		*
  1525   0020F0  50F5               	movf	tablat,w,c
  1526   0020F2  6E01               	movwf	fputc@c^0,c
  1527   0020F4  6A02               	clrf	(fputc@c+1)^0,c
  1528   0020F6  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1529   0020FA  C08D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1530   0020FE  EC7C  F014         	call	_fputc	;wreg free
  1531   002102  EF66  F010         	goto	l3140
  1532   002106                     l889:
  1533   002106  0012               	return		;funcret
  1534   002108                     __end_of_vfpfcnvrt:
  1535                           	callstack 0
  1536                           
  1537 ;; *************** function _read_prec_or_width *****************
  1538 ;; Defined at:
  1539 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  fmt             2    6[COMRAM] PTR PTR const unsigned c
  1542 ;;		 -> vfprintf@cfmt(2), 
  1543 ;;  ap              2    8[COMRAM] PTR PTR void [1]
  1544 ;;		 -> sprintf@ap(2), 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  c               1   12[COMRAM] unsigned char 
  1547 ;;  n               2   13[COMRAM] int 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  2    6[COMRAM] int 
  1550 ;; Registers used:
  1551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1557 ;;      Params:         4       0       0       0       0       0       0       0       0
  1558 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1559 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1560 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1561 ;;Total ram usage:        9 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; Hardware stack levels required when called: 2
  1564 ;; This function calls:
  1565 ;;		___wmul
  1566 ;; This function is called by:
  1567 ;;		_vfpfcnvrt
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text4
  1572   0029C2                     __ptext4:
  1573                           	callstack 0
  1574   0029C2                     _read_prec_or_width:
  1575                           	callstack 25
  1576   0029C2                     
  1577                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  1578   0029C2  0E00               	movlw	0
  1579   0029C4  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1580   0029C6  0E00               	movlw	0
  1581   0029C8  6E0E               	movwf	read_prec_or_width@n^0,c
  1582   0029CA                     
  1583                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  1584   0029CA  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1585   0029CE  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1586   0029D2  CFDE FFF6          	movff	postinc2,tblptrl
  1587   0029D6  CFDD FFF7          	movff	postdec2,tblptrh
  1588   0029DA                     	if	0	;tblptru may be non-zero
  1589   0029DA                     	endif
  1590   0029DA                     	if	0	;tblptru may be non-zero
  1591   0029DA                     	endif
  1592   0029DA  0008               	tblrd		*
  1593   0029DC  50F5               	movf	tablat,w,c
  1594   0029DE  0A2A               	xorlw	42
  1595   0029E0  A4D8               	btfss	status,2,c
  1596   0029E2  EFF5  F014         	goto	u3361
  1597   0029E6  EFF7  F014         	goto	u3360
  1598   0029EA                     u3361:
  1599   0029EA  EF2B  F015         	goto	l3072
  1600   0029EE                     u3360:
  1601   0029EE                     
  1602                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  1603   0029EE  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1604   0029F2  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1605   0029F6  2ADE               	incf	postinc2,f,c
  1606   0029F8  0E00               	movlw	0
  1607   0029FA  22DD               	addwfc	postdec2,f,c
  1608                           
  1609                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1610   0029FC  C009  FFD9         	movff	read_prec_or_width@ap,fsr2l
  1611   002A00  C00A  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  1612   002A04  CFDF F00B          	movff	indf2,??_read_prec_or_width
  1613   002A08  0E02               	movlw	2
  1614   002A0A  26DE               	addwf	postinc2,f,c
  1615   002A0C  CFDF F00C          	movff	indf2,??_read_prec_or_width+1
  1616   002A10  0E00               	movlw	0
  1617   002A12  22DD               	addwfc	postdec2,f,c
  1618   002A14  C00B  FFD9         	movff	??_read_prec_or_width,fsr2l
  1619   002A18  C00C  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  1620   002A1C  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  1621   002A20  CFDD F00F          	movff	postdec2,read_prec_or_width@n+1
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  1624   002A24  EF3F  F015         	goto	l865
  1625   002A28                     l3068:
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  1628   002A28  C00E  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  1629   002A2C  C00F  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1630   002A30  0E00               	movlw	0
  1631   002A32  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1632   002A34  0E0A               	movlw	10
  1633   002A36  6E03               	movwf	___wmul@multiplicand^0,c
  1634   002A38  ECD9  F017         	call	___wmul	;wreg free
  1635   002A3C  500D               	movf	read_prec_or_width@c^0,w,c
  1636   002A3E  2401               	addwf	?___wmul^0,w,c
  1637   002A40  6E0E               	movwf	read_prec_or_width@n^0,c
  1638   002A42  0E00               	movlw	0
  1639   002A44  2002               	addwfc	(?___wmul+1)^0,w,c
  1640   002A46  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1641   002A48                     
  1642                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  1643   002A48  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1644   002A4C  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1645   002A50  2ADE               	incf	postinc2,f,c
  1646   002A52  0E00               	movlw	0
  1647   002A54  22DD               	addwfc	postdec2,f,c
  1648   002A56                     l3072:
  1649                           
  1650                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1651   002A56  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1652   002A5A  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1653   002A5E  CFDE FFF6          	movff	postinc2,tblptrl
  1654   002A62  CFDD FFF7          	movff	postdec2,tblptrh
  1655   002A66                     	if	0	;tblptru may be non-zero
  1656   002A66                     	endif
  1657   002A66                     	if	0	;tblptru may be non-zero
  1658   002A66                     	endif
  1659   002A66  0008               	tblrd		*
  1660   002A68  50F5               	movf	tablat,w,c
  1661   002A6A  0FD0               	addlw	208
  1662   002A6C  6E0D               	movwf	read_prec_or_width@c^0,c
  1663   002A6E  0E09               	movlw	9
  1664   002A70  640D               	cpfsgt	read_prec_or_width@c^0,c
  1665   002A72  EF3D  F015         	goto	u3371
  1666   002A76  EF3F  F015         	goto	u3370
  1667   002A7A                     u3371:
  1668   002A7A  EF14  F015         	goto	l3068
  1669   002A7E                     u3370:
  1670   002A7E                     l865:
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  1673   002A7E  C00E  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  1674   002A82  C00F  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1675   002A86  0012               	return		;funcret
  1676   002A88                     __end_of_read_prec_or_width:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function ___wmul *****************
  1680 ;; Defined at:
  1681 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  multiplier      2    0[COMRAM] unsigned int 
  1684 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  product         2    4[COMRAM] unsigned int 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  2    0[COMRAM] unsigned int 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0, prodl, prodh
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1696 ;;      Params:         4       0       0       0       0       0       0       0       0
  1697 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1699 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1700 ;;Total ram usage:        6 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 1
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_read_prec_or_width
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text5
  1711   002FB2                     __ptext5:
  1712                           	callstack 0
  1713   002FB2                     ___wmul:
  1714                           	callstack 25
  1715   002FB2  5001               	movf	___wmul@multiplier^0,w,c
  1716   002FB4  0203               	mulwf	___wmul@multiplicand^0,c
  1717   002FB6  CFF3 F005          	movff	prodl,___wmul@product
  1718   002FBA  CFF4 F006          	movff	prodh,___wmul@product+1
  1719   002FBE  5001               	movf	___wmul@multiplier^0,w,c
  1720   002FC0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1721   002FC2  50F3               	movf	243,w,c
  1722   002FC4  2606               	addwf	(___wmul@product+1)^0,f,c
  1723   002FC6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1724   002FC8  0203               	mulwf	___wmul@multiplicand^0,c
  1725   002FCA  50F3               	movf	243,w,c
  1726   002FCC  2606               	addwf	(___wmul@product+1)^0,f,c
  1727   002FCE  C005  F001         	movff	___wmul@product,?___wmul
  1728   002FD2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1729   002FD6  0012               	return		;funcret
  1730   002FD8                     __end_of___wmul:
  1731                           	callstack 0
  1732                           
  1733 ;; *************** function _efgtoa *****************
  1734 ;; Defined at:
  1735 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  1738 ;;		 -> sprintf@f(12), 
  1739 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  1740 ;;  c               1   90[COMRAM] unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  u               4   40[BANK0 ] struct flui
  1743 ;;  g               4   36[BANK0 ] struct flui
  1744 ;;  l               4   29[BANK0 ] struct flui
  1745 ;;  h               4   25[BANK0 ] struct flui
  1746 ;;  ou              4   19[BANK0 ] struct flui
  1747 ;;  n               2   34[BANK0 ] int 
  1748 ;;  i               2   23[BANK0 ] int 
  1749 ;;  w               2   17[BANK0 ] int 
  1750 ;;  e               2   15[BANK0 ] int 
  1751 ;;  m               2   13[BANK0 ] int 
  1752 ;;  d               2   11[BANK0 ] int 
  1753 ;;  t               2    4[BANK0 ] int 
  1754 ;;  p               2    2[BANK0 ] int 
  1755 ;;  ne              2    0[BANK0 ] int 
  1756 ;;  sign            1   33[BANK0 ] unsigned char 
  1757 ;;  nmode           1   10[BANK0 ] unsigned char 
  1758 ;;  mode            1    9[BANK0 ] unsigned char 
  1759 ;;  pp              1    8[BANK0 ] unsigned char 
  1760 ;;  esign           1    0        unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1770 ;;      Params:         7       0       0       0       0       0       0       0       0
  1771 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1772 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1773 ;;      Totals:         9      44       0       0       0       0       0       0       0
  1774 ;;Total ram usage:       53 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; Hardware stack levels required when called: 5
  1777 ;; This function calls:
  1778 ;;		___fladd
  1779 ;;		___fldiv
  1780 ;;		___fleq
  1781 ;;		___flge
  1782 ;;		___flmul
  1783 ;;		___flneg
  1784 ;;		___flsub
  1785 ;;		___fltol
  1786 ;;		___fpclassifyf
  1787 ;;		_floorf
  1788 ;;		_labs
  1789 ;;		_memcpy
  1790 ;;		_pad
  1791 ;;		_strcpy
  1792 ;; This function is called by:
  1793 ;;		_vfpfcnvrt
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text6
  1798   000824                     __ptext6:
  1799                           	callstack 0
  1800   000824                     _efgtoa:
  1801                           	callstack 22
  1802   000824                     
  1803                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  1804   000824  0E00               	movlw	0
  1805   000826  0100               	movlb	0	; () banked
  1806   000828  6F81               	movwf	efgtoa@sign& (0+255),b
  1807   00082A                     
  1808                           ; BSR set to: 0
  1809                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  1810   00082A  C057  F084         	movff	efgtoa@f,efgtoa@g
  1811   00082E  C058  F085         	movff	efgtoa@f+1,efgtoa@g+1
  1812   000832  C059  F086         	movff	efgtoa@f+2,efgtoa@g+2
  1813   000836  C05A  F087         	movff	efgtoa@f+3,efgtoa@g+3
  1814   00083A                     
  1815                           ; BSR set to: 0
  1816                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  1817   00083A  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1818   00083C  EF24  F004         	goto	u3040
  1819   000840  EF22  F004         	goto	u3041
  1820   000844                     u3041:
  1821   000844  EF38  F004         	goto	l2850
  1822   000848                     u3040:
  1823   000848                     
  1824                           ; BSR set to: 0
  1825                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  1826   000848  0E01               	movlw	1
  1827   00084A  6F81               	movwf	efgtoa@sign& (0+255),b
  1828   00084C                     
  1829                           ; BSR set to: 0
  1830                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  1831   00084C  C084  F001         	movff	efgtoa@g,___flneg@f1
  1832   000850  C085  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1833   000854  C086  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1834   000858  C087  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1835   00085C  EC7B  F017         	call	___flneg	;wreg free
  1836   000860  C001  F084         	movff	?___flneg,efgtoa@g
  1837   000864  C002  F085         	movff	?___flneg+1,efgtoa@g+1
  1838   000868  C003  F086         	movff	?___flneg+2,efgtoa@g+2
  1839   00086C  C004  F087         	movff	?___flneg+3,efgtoa@g+3
  1840   000870                     l2850:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  1843   000870  0E00               	movlw	0
  1844   000872  0100               	movlb	0	; () banked
  1845   000874  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1846   000876  0E00               	movlw	0
  1847   000878  6F82               	movwf	efgtoa@n& (0+255),b
  1848   00087A                     
  1849                           ; BSR set to: 0
  1850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  1851   00087A  C0CB  F071         	movff	_width,efgtoa@w
  1852   00087E  C0CC  F072         	movff	_width+1,efgtoa@w+1
  1853   000882                     
  1854                           ; BSR set to: 0
  1855                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  1856   000882  5181               	movf	efgtoa@sign& (0+255),w,b
  1857   000884  B4D8               	btfsc	status,2,c
  1858   000886  EF47  F004         	goto	u3051
  1859   00088A  EF49  F004         	goto	u3050
  1860   00088E                     u3051:
  1861   00088E  EF5D  F004         	goto	l2864
  1862   000892                     u3050:
  1863   000892                     
  1864                           ; BSR set to: 0
  1865                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  1866   000892  5181               	movf	efgtoa@sign& (0+255),w,b
  1867   000894  A4D8               	btfss	status,2,c
  1868   000896  EF4F  F004         	goto	u3061
  1869   00089A  EF51  F004         	goto	u3060
  1870   00089E                     u3061:
  1871   00089E  EF57  F004         	goto	l2860
  1872   0008A2                     u3060:
  1873   0008A2                     
  1874                           ; BSR set to: 0
  1875   0008A2  0E00               	movlw	0
  1876   0008A4  6F67               	movwf	(_efgtoa$893+1)& (0+255),b
  1877   0008A6  0E2B               	movlw	43
  1878   0008A8  6F66               	movwf	_efgtoa$893& (0+255),b
  1879   0008AA  EF5B  F004         	goto	l2862
  1880   0008AE                     l2860:
  1881                           
  1882                           ; BSR set to: 0
  1883   0008AE  0E00               	movlw	0
  1884   0008B0  6F67               	movwf	(_efgtoa$893+1)& (0+255),b
  1885   0008B2  0E2D               	movlw	45
  1886   0008B4  6F66               	movwf	_efgtoa$893& (0+255),b
  1887   0008B6                     l2862:
  1888                           
  1889                           ; BSR set to: 0
  1890   0008B6  C066  F081         	movff	_efgtoa$893,efgtoa@sign
  1891   0008BA                     l2864:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1895   0008BA  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  1896   0008BE  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1897   0008C2  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1898   0008C6  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1899   0008CA  ECFD  F013         	call	___fpclassifyf	;wreg free
  1900   0008CE  0401               	decf	?___fpclassifyf^0,w,c
  1901   0008D0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1902   0008D2  A4D8               	btfss	status,2,c
  1903   0008D4  EF6E  F004         	goto	u3071
  1904   0008D8  EF70  F004         	goto	u3070
  1905   0008DC                     u3071:
  1906   0008DC  EFA3  F004         	goto	l2882
  1907   0008E0                     u3070:
  1908   0008E0                     
  1909                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  1910   0008E0  0100               	movlb	0	; () banked
  1911   0008E2  5181               	movf	efgtoa@sign& (0+255),w,b
  1912   0008E4  B4D8               	btfsc	status,2,c
  1913   0008E6  EF77  F004         	goto	u3081
  1914   0008EA  EF79  F004         	goto	u3080
  1915   0008EE                     u3081:
  1916   0008EE  EF82  F004         	goto	l2874
  1917   0008F2                     u3080:
  1918   0008F2                     
  1919                           ; BSR set to: 0
  1920                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  1921   0008F2  C081  F100         	movff	efgtoa@sign,_dbuf
  1922   0008F6                     
  1923                           ; BSR set to: 0
  1924                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  1925   0008F6  0771               	decf	efgtoa@w& (0+255),f,b
  1926   0008F8  A0D8               	btfss	status,0,c
  1927   0008FA  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1928   0008FC                     
  1929                           ; BSR set to: 0
  1930                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  1931   0008FC  0E00               	movlw	0
  1932   0008FE  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1933   000900  0E01               	movlw	1
  1934   000902  6F82               	movwf	efgtoa@n& (0+255),b
  1935   000904                     l2874:
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  1939   000904  0E00               	movlw	low _dbuf
  1940   000906  2582               	addwf	efgtoa@n& (0+255),w,b
  1941   000908  6E01               	movwf	strcpy@dest^0,c
  1942   00090A  0E01               	movlw	high _dbuf
  1943   00090C  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1944   00090E  6E02               	movwf	(strcpy@dest+1)^0,c
  1945   000910  0E1B               	movlw	low STR_3
  1946   000912  6E03               	movwf	strcpy@src^0,c
  1947   000914  0E08               	movlw	high STR_3
  1948   000916  6E04               	movwf	(strcpy@src+1)^0,c
  1949   000918  EC5B  F017         	call	_strcpy	;wreg free
  1950   00091C                     l2876:
  1951                           
  1952                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1953   00091C  0100               	movlb	0	; () banked
  1954   00091E  0EFD               	movlw	253
  1955   000920  2771               	addwf	efgtoa@w& (0+255),f,b
  1956   000922  0EFF               	movlw	255
  1957   000924  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1958   000926                     
  1959                           ; BSR set to: 0
  1960                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1961   000926  C055  F011         	movff	efgtoa@fp,pad@fp
  1962   00092A  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  1963   00092E  0E00               	movlw	low _dbuf
  1964   000930  6E13               	movwf	pad@buf^0,c
  1965   000932  0E01               	movlw	high _dbuf
  1966   000934  6E14               	movwf	(pad@buf+1)^0,c
  1967   000936  C071  F015         	movff	efgtoa@w,pad@p
  1968   00093A  C072  F016         	movff	efgtoa@w+1,pad@p+1
  1969   00093E  EC99  F015         	call	_pad	;wreg free
  1970   000942  EF0D  F009         	goto	l820
  1971   000946                     l2882:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  1974   000946  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  1975   00094A  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1976   00094E  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1977   000952  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1978   000956  ECFD  F013         	call	___fpclassifyf	;wreg free
  1979   00095A  5001               	movf	?___fpclassifyf^0,w,c
  1980   00095C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1981   00095E  A4D8               	btfss	status,2,c
  1982   000960  EFB4  F004         	goto	u3091
  1983   000964  EFB6  F004         	goto	u3090
  1984   000968                     u3091:
  1985   000968  EFD6  F004         	goto	l2900
  1986   00096C                     u3090:
  1987   00096C                     
  1988                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  1989   00096C  0100               	movlb	0	; () banked
  1990   00096E  5181               	movf	efgtoa@sign& (0+255),w,b
  1991   000970  B4D8               	btfsc	status,2,c
  1992   000972  EFBD  F004         	goto	u3101
  1993   000976  EFBF  F004         	goto	u3100
  1994   00097A                     u3101:
  1995   00097A  EFC8  F004         	goto	l2892
  1996   00097E                     u3100:
  1997   00097E                     
  1998                           ; BSR set to: 0
  1999                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  2000   00097E  C081  F100         	movff	efgtoa@sign,_dbuf
  2001   000982                     
  2002                           ; BSR set to: 0
  2003                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  2004   000982  0771               	decf	efgtoa@w& (0+255),f,b
  2005   000984  A0D8               	btfss	status,0,c
  2006   000986  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2007   000988                     
  2008                           ; BSR set to: 0
  2009                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  2010   000988  0E00               	movlw	0
  2011   00098A  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2012   00098C  0E01               	movlw	1
  2013   00098E  6F82               	movwf	efgtoa@n& (0+255),b
  2014   000990                     l2892:
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  2018   000990  0E00               	movlw	low _dbuf
  2019   000992  2582               	addwf	efgtoa@n& (0+255),w,b
  2020   000994  6E01               	movwf	strcpy@dest^0,c
  2021   000996  0E01               	movlw	high _dbuf
  2022   000998  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2023   00099A  6E02               	movwf	(strcpy@dest+1)^0,c
  2024   00099C  0E1F               	movlw	low STR_6
  2025   00099E  6E03               	movwf	strcpy@src^0,c
  2026   0009A0  0E08               	movlw	high STR_6
  2027   0009A2  6E04               	movwf	(strcpy@src+1)^0,c
  2028   0009A4  EC5B  F017         	call	_strcpy	;wreg free
  2029   0009A8  EF8E  F004         	goto	l2876
  2030   0009AC                     l2900:
  2031                           
  2032                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  2033   0009AC  0E00               	movlw	0
  2034   0009AE  0100               	movlb	0	; () banked
  2035   0009B0  6F88               	movwf	efgtoa@u& (0+255),b
  2036   0009B2  0E00               	movlw	0
  2037   0009B4  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2038   0009B6  0E80               	movlw	128
  2039   0009B8  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2040   0009BA  0E3F               	movlw	63
  2041   0009BC  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  2044   0009BE  0E00               	movlw	0
  2045   0009C0  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2046   0009C2  0E00               	movlw	0
  2047   0009C4  6F6F               	movwf	efgtoa@e& (0+255),b
  2048   0009C6                     
  2049                           ; BSR set to: 0
  2050                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  2051   0009C6  C084  F001         	movff	efgtoa@g,___fleq@ff1
  2052   0009CA  C085  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2053   0009CE  C086  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2054   0009D2  C087  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2055   0009D6  0E00               	movlw	0
  2056   0009D8  6E05               	movwf	___fleq@ff2^0,c
  2057   0009DA  0E00               	movlw	0
  2058   0009DC  6E06               	movwf	(___fleq@ff2+1)^0,c
  2059   0009DE  0E00               	movlw	0
  2060   0009E0  6E07               	movwf	(___fleq@ff2+2)^0,c
  2061   0009E2  0E00               	movlw	0
  2062   0009E4  6E08               	movwf	(___fleq@ff2+3)^0,c
  2063   0009E6  EC44  F015         	call	___fleq	;wreg free
  2064   0009EA  B0D8               	btfsc	status,0,c
  2065   0009EC  EFFA  F004         	goto	u3111
  2066   0009F0  EFFC  F004         	goto	u3110
  2067   0009F4                     u3111:
  2068   0009F4  EFDB  F005         	goto	l823
  2069   0009F8                     u3110:
  2070   0009F8  EF09  F005         	goto	l2908
  2071   0009FC                     l825:
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  2074   0009FC  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2075   000A00  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2076   000A04  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2077   000A08  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2078   000A0C                     
  2079                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  2080   000A0C  0100               	movlb	0	; () banked
  2081   000A0E  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2082   000A10  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2083   000A12                     l2908:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2086   000A12  C088  F00F         	movff	efgtoa@u,___flmul@b
  2087   000A16  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2088   000A1A  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2089   000A1E  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2090   000A22  0E00               	movlw	0
  2091   000A24  6E13               	movwf	___flmul@a^0,c
  2092   000A26  0E00               	movlw	0
  2093   000A28  6E14               	movwf	(___flmul@a+1)^0,c
  2094   000A2A  0E20               	movlw	32
  2095   000A2C  6E15               	movwf	(___flmul@a+2)^0,c
  2096   000A2E  0E41               	movlw	65
  2097   000A30  6E16               	movwf	(___flmul@a+3)^0,c
  2098   000A32  EC6E  F00B         	call	___flmul	;wreg free
  2099   000A36  C00F  F073         	movff	?___flmul,efgtoa@ou
  2100   000A3A  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2101   000A3E  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2102   000A42  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2103   000A46  0100               	movlb	0	; () banked
  2104   000A48  5173               	movf	efgtoa@ou& (0+255),w,b
  2105   000A4A  5D84               	subwf	efgtoa@g& (0+255),w,b
  2106   000A4C  6E01               	movwf	labs@a^0,c
  2107   000A4E  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2108   000A50  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2109   000A52  6E02               	movwf	(labs@a+1)^0,c
  2110   000A54  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2111   000A56  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2112   000A58  6E03               	movwf	(labs@a+2)^0,c
  2113   000A5A  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2114   000A5C  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2115   000A5E  6E04               	movwf	(labs@a+3)^0,c
  2116   000A60  EC48  F016         	call	_labs	;wreg free
  2117   000A64  BE04               	btfsc	(?_labs+3)^0,7,c
  2118   000A66  EF40  F005         	goto	u3121
  2119   000A6A  5004               	movf	(?_labs+3)^0,w,c
  2120   000A6C  1003               	iorwf	(?_labs+2)^0,w,c
  2121   000A6E  1002               	iorwf	(?_labs+1)^0,w,c
  2122   000A70  E109               	bnz	u3120
  2123   000A72  0E02               	movlw	2
  2124   000A74  5C01               	subwf	?_labs^0,w,c
  2125   000A76  A0D8               	btfss	status,0,c
  2126   000A78  EF40  F005         	goto	u3121
  2127   000A7C  EF42  F005         	goto	u3120
  2128   000A80                     u3121:
  2129   000A80  EFFE  F004         	goto	l825
  2130   000A84                     u3120:
  2131   000A84  C073  F028         	movff	efgtoa@ou,___flge@ff1
  2132   000A88  C074  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2133   000A8C  C075  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2134   000A90  C076  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2135   000A94  C084  F02C         	movff	efgtoa@g,___flge@ff2
  2136   000A98  C085  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2137   000A9C  C086  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2138   000AA0  C087  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2139   000AA4  EC7B  F013         	call	___flge	;wreg free
  2140   000AA8  A0D8               	btfss	status,0,c
  2141   000AAA  EF59  F005         	goto	u3131
  2142   000AAE  EF5B  F005         	goto	u3130
  2143   000AB2                     u3131:
  2144   000AB2  EFFE  F004         	goto	l825
  2145   000AB6                     u3130:
  2146   000AB6                     
  2147                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2148   000AB6  0100               	movlb	0	; () banked
  2149   000AB8  5188               	movf	efgtoa@u& (0+255),w,b
  2150   000ABA  5D84               	subwf	efgtoa@g& (0+255),w,b
  2151   000ABC  6E01               	movwf	labs@a^0,c
  2152   000ABE  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2153   000AC0  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2154   000AC2  6E02               	movwf	(labs@a+1)^0,c
  2155   000AC4  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2156   000AC6  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2157   000AC8  6E03               	movwf	(labs@a+2)^0,c
  2158   000ACA  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2159   000ACC  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2160   000ACE  6E04               	movwf	(labs@a+3)^0,c
  2161   000AD0  EC48  F016         	call	_labs	;wreg free
  2162   000AD4  BE04               	btfsc	(?_labs+3)^0,7,c
  2163   000AD6  EF7A  F005         	goto	u3140
  2164   000ADA  5004               	movf	(?_labs+3)^0,w,c
  2165   000ADC  1003               	iorwf	(?_labs+2)^0,w,c
  2166   000ADE  1002               	iorwf	(?_labs+1)^0,w,c
  2167   000AE0  E107               	bnz	u3141
  2168   000AE2  0E02               	movlw	2
  2169   000AE4  5C01               	subwf	?_labs^0,w,c
  2170   000AE6  B0D8               	btfsc	status,0,c
  2171   000AE8  EF78  F005         	goto	u3141
  2172   000AEC  EF7A  F005         	goto	u3140
  2173   000AF0                     u3141:
  2174   000AF0  EFC2  F005         	goto	l2926
  2175   000AF4                     u3140:
  2176   000AF4                     l2916:
  2177                           
  2178                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  2179   000AF4  C088  F084         	movff	efgtoa@u,efgtoa@g
  2180   000AF8  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  2181   000AFC  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  2182   000B00  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  2185   000B04  EFDB  F005         	goto	l823
  2186   000B08                     l2918:
  2187                           
  2188                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  2189   000B08  C088  F028         	movff	efgtoa@u,___fldiv@b
  2190   000B0C  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2191   000B10  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2192   000B14  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2193   000B18  0E00               	movlw	0
  2194   000B1A  6E2C               	movwf	___fldiv@a^0,c
  2195   000B1C  0E00               	movlw	0
  2196   000B1E  6E2D               	movwf	(___fldiv@a+1)^0,c
  2197   000B20  0E20               	movlw	32
  2198   000B22  6E2E               	movwf	(___fldiv@a+2)^0,c
  2199   000B24  0E41               	movlw	65
  2200   000B26  6E2F               	movwf	(___fldiv@a+3)^0,c
  2201   000B28  EC83  F00D         	call	___fldiv	;wreg free
  2202   000B2C  C028  F088         	movff	?___fldiv,efgtoa@u
  2203   000B30  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2204   000B34  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2205   000B38  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2206   000B3C                     
  2207                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  2208   000B3C  0100               	movlb	0	; () banked
  2209   000B3E  076F               	decf	efgtoa@e& (0+255),f,b
  2210   000B40  A0D8               	btfss	status,0,c
  2211   000B42  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2212   000B44                     
  2213                           ; BSR set to: 0
  2214                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2215   000B44  5188               	movf	efgtoa@u& (0+255),w,b
  2216   000B46  5D84               	subwf	efgtoa@g& (0+255),w,b
  2217   000B48  6E01               	movwf	labs@a^0,c
  2218   000B4A  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2219   000B4C  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2220   000B4E  6E02               	movwf	(labs@a+1)^0,c
  2221   000B50  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2222   000B52  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2223   000B54  6E03               	movwf	(labs@a+2)^0,c
  2224   000B56  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2225   000B58  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2226   000B5A  6E04               	movwf	(labs@a+3)^0,c
  2227   000B5C  EC48  F016         	call	_labs	;wreg free
  2228   000B60  BE04               	btfsc	(?_labs+3)^0,7,c
  2229   000B62  EFC0  F005         	goto	u3150
  2230   000B66  5004               	movf	(?_labs+3)^0,w,c
  2231   000B68  1003               	iorwf	(?_labs+2)^0,w,c
  2232   000B6A  1002               	iorwf	(?_labs+1)^0,w,c
  2233   000B6C  E107               	bnz	u3151
  2234   000B6E  0E02               	movlw	2
  2235   000B70  5C01               	subwf	?_labs^0,w,c
  2236   000B72  B0D8               	btfsc	status,0,c
  2237   000B74  EFBE  F005         	goto	u3151
  2238   000B78  EFC0  F005         	goto	u3150
  2239   000B7C                     u3151:
  2240   000B7C  EFC2  F005         	goto	l2926
  2241   000B80                     u3150:
  2242   000B80  EF7A  F005         	goto	l2916
  2243   000B84                     l2926:
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  2246   000B84  C084  F028         	movff	efgtoa@g,___flge@ff1
  2247   000B88  C085  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2248   000B8C  C086  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2249   000B90  C087  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2250   000B94  C088  F02C         	movff	efgtoa@u,___flge@ff2
  2251   000B98  C089  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2252   000B9C  C08A  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2253   000BA0  C08B  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2254   000BA4  EC7B  F013         	call	___flge	;wreg free
  2255   000BA8  A0D8               	btfss	status,0,c
  2256   000BAA  EFD9  F005         	goto	u3161
  2257   000BAE  EFDB  F005         	goto	u3160
  2258   000BB2                     u3161:
  2259   000BB2  EF84  F005         	goto	l2918
  2260   000BB6                     u3160:
  2261   000BB6                     l823:
  2262                           
  2263                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  2264   000BB6  C05B  F069         	movff	efgtoa@c,efgtoa@mode
  2265                           
  2266                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  2267   000BBA  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2268   000BBE                     
  2269                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  2270   000BBE  0100               	movlb	0	; () banked
  2271   000BC0  BFCE               	btfsc	(_prec+1)& (0+255),7,b
  2272   000BC2  EFE5  F005         	goto	u3171
  2273   000BC6  EFE7  F005         	goto	u3170
  2274   000BCA                     u3171:
  2275   000BCA  EFED  F005         	goto	l2932
  2276   000BCE                     u3170:
  2277   000BCE                     
  2278                           ; BSR set to: 0
  2279   000BCE  C0CD  F062         	movff	_prec,efgtoa@p
  2280   000BD2  C0CE  F063         	movff	_prec+1,efgtoa@p+1
  2281   000BD6  EFF1  F005         	goto	l2934
  2282   000BDA                     l2932:
  2283                           
  2284                           ; BSR set to: 0
  2285   000BDA  0E00               	movlw	0
  2286   000BDC  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2287   000BDE  0E06               	movlw	6
  2288   000BE0  6F62               	movwf	efgtoa@p& (0+255),b
  2289   000BE2                     l2934:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  2293   000BE2  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2294   000BE6  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2295   000BEA                     
  2296                           ; BSR set to: 0
  2297                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  2298   000BEA  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2299   000BEC  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2300   000BEE                     
  2301                           ; BSR set to: 0
  2302                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  2303   000BEE  0E66               	movlw	102
  2304   000BF0  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2305   000BF2  A4D8               	btfss	status,2,c
  2306   000BF4  EFFE  F005         	goto	u3181
  2307   000BF8  EF00  F006         	goto	u3180
  2308   000BFC                     u3181:
  2309   000BFC  EF20  F006         	goto	l2948
  2310   000C00                     u3180:
  2311   000C00                     
  2312                           ; BSR set to: 0
  2313                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  2314   000C00  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2315   000C02  EF07  F006         	goto	u3190
  2316   000C06  EF05  F006         	goto	u3191
  2317   000C0A                     u3191:
  2318   000C0A  EF13  F006         	goto	l2944
  2319   000C0E                     u3190:
  2320   000C0E                     
  2321                           ; BSR set to: 0
  2322                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  2323   000C0E  0E00               	movlw	0
  2324   000C10  6F88               	movwf	efgtoa@u& (0+255),b
  2325   000C12  0E00               	movlw	0
  2326   000C14  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2327   000C16  0E80               	movlw	128
  2328   000C18  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2329   000C1A  0E3F               	movlw	63
  2330   000C1C  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  2333   000C1E  0E00               	movlw	0
  2334   000C20  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2335   000C22  0E00               	movlw	0
  2336   000C24  6F6F               	movwf	efgtoa@e& (0+255),b
  2337   000C26                     l2944:
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  2341   000C26  0E67               	movlw	103
  2342   000C28  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2343   000C2A  B4D8               	btfsc	status,2,c
  2344   000C2C  EF1A  F006         	goto	u3201
  2345   000C30  EF1C  F006         	goto	u3200
  2346   000C34                     u3201:
  2347   000C34  EF20  F006         	goto	l2948
  2348   000C38                     u3200:
  2349   000C38                     
  2350                           ; BSR set to: 0
  2351                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  2352   000C38  516F               	movf	efgtoa@e& (0+255),w,b
  2353   000C3A  276D               	addwf	efgtoa@m& (0+255),f,b
  2354   000C3C  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2355   000C3E  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2356   000C40                     l2948:
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  2360   000C40  0E00               	movlw	0
  2361   000C42  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2362   000C44  0E00               	movlw	0
  2363   000C46  6F77               	movwf	efgtoa@i& (0+255),b
  2364   000C48                     
  2365                           ; BSR set to: 0
  2366                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  2367   000C48  C084  F079         	movff	efgtoa@g,efgtoa@h
  2368   000C4C  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2369   000C50  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2370   000C54  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2371   000C58                     
  2372                           ; BSR set to: 0
  2373                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  2374   000C58  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2375   000C5C  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2376   000C60  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2377   000C64  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2380   000C68  EFB1  F006         	goto	l2962
  2381   000C6C                     l2954:
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  2385   000C6C  C079  F028         	movff	efgtoa@h,___fldiv@b
  2386   000C70  C07A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2387   000C74  C07B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2388   000C78  C07C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2389   000C7C  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2390   000C80  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2391   000C84  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2392   000C88  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2393   000C8C  EC83  F00D         	call	___fldiv	;wreg free
  2394   000C90  C028  F041         	movff	?___fldiv,floorf@x
  2395   000C94  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2396   000C98  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2397   000C9C  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2398   000CA0  EC84  F010         	call	_floorf	;wreg free
  2399   000CA4  C041  F07D         	movff	?_floorf,efgtoa@l
  2400   000CA8  C042  F07E         	movff	?_floorf+1,efgtoa@l+1
  2401   000CAC  C043  F07F         	movff	?_floorf+2,efgtoa@l+2
  2402   000CB0  C044  F080         	movff	?_floorf+3,efgtoa@l+3
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  2405   000CB4  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2406   000CB8  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2407   000CBC  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2408   000CC0  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2409   000CC4  ECF8  F012         	call	___fltol	;wreg free
  2410   000CC8  C001  F06B         	movff	?___fltol,efgtoa@d
  2411   000CCC  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2412   000CD0                     
  2413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  2414   000CD0  C079  F028         	movff	efgtoa@h,___flsub@b
  2415   000CD4  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  2416   000CD8  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2417   000CDC  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2418   000CE0  C07D  F013         	movff	efgtoa@l,___flmul@a
  2419   000CE4  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  2420   000CE8  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  2421   000CEC  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  2422   000CF0  C088  F00F         	movff	efgtoa@u,___flmul@b
  2423   000CF4  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2424   000CF8  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2425   000CFC  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2426   000D00  EC6E  F00B         	call	___flmul	;wreg free
  2427   000D04  C00F  F02C         	movff	?___flmul,___flsub@a
  2428   000D08  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2429   000D0C  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2430   000D10  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2431   000D14  ECF4  F016         	call	___flsub	;wreg free
  2432   000D18  C028  F079         	movff	?___flsub,efgtoa@h
  2433   000D1C  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  2434   000D20  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  2435   000D24  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  2436   000D28                     
  2437                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  2438   000D28  C088  F028         	movff	efgtoa@u,___fldiv@b
  2439   000D2C  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2440   000D30  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2441   000D34  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2442   000D38  0E00               	movlw	0
  2443   000D3A  6E2C               	movwf	___fldiv@a^0,c
  2444   000D3C  0E00               	movlw	0
  2445   000D3E  6E2D               	movwf	(___fldiv@a+1)^0,c
  2446   000D40  0E20               	movlw	32
  2447   000D42  6E2E               	movwf	(___fldiv@a+2)^0,c
  2448   000D44  0E41               	movlw	65
  2449   000D46  6E2F               	movwf	(___fldiv@a+3)^0,c
  2450   000D48  EC83  F00D         	call	___fldiv	;wreg free
  2451   000D4C  C028  F088         	movff	?___fldiv,efgtoa@u
  2452   000D50  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2453   000D54  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2454   000D58  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2455   000D5C                     
  2456                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  2457   000D5C  0100               	movlb	0	; () banked
  2458   000D5E  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2459   000D60  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2460   000D62                     l2962:
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2464   000D62  516D               	movf	efgtoa@m& (0+255),w,b
  2465   000D64  5D77               	subwf	efgtoa@i& (0+255),w,b
  2466   000D66  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2467   000D68  0A80               	xorlw	128
  2468   000D6A  6E5C               	movwf	??_efgtoa^0,c
  2469   000D6C  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2470   000D6E  0A80               	xorlw	128
  2471   000D70  585C               	subwfb	??_efgtoa^0,w,c
  2472   000D72  A0D8               	btfss	status,0,c
  2473   000D74  EFBE  F006         	goto	u3211
  2474   000D78  EFC0  F006         	goto	u3210
  2475   000D7C                     u3211:
  2476   000D7C  EF36  F006         	goto	l2954
  2477   000D80                     u3210:
  2478   000D80                     
  2479                           ; BSR set to: 0
  2480                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  2481   000D80  C088  F00F         	movff	efgtoa@u,___flmul@b
  2482   000D84  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2483   000D88  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2484   000D8C  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2485   000D90  0E00               	movlw	0
  2486   000D92  6E13               	movwf	___flmul@a^0,c
  2487   000D94  0E00               	movlw	0
  2488   000D96  6E14               	movwf	(___flmul@a+1)^0,c
  2489   000D98  0EA0               	movlw	160
  2490   000D9A  6E15               	movwf	(___flmul@a+2)^0,c
  2491   000D9C  0E40               	movlw	64
  2492   000D9E  6E16               	movwf	(___flmul@a+3)^0,c
  2493   000DA0  EC6E  F00B         	call	___flmul	;wreg free
  2494   000DA4  C00F  F07D         	movff	?___flmul,efgtoa@l
  2495   000DA8  C010  F07E         	movff	?___flmul+1,efgtoa@l+1
  2496   000DAC  C011  F07F         	movff	?___flmul+2,efgtoa@l+2
  2497   000DB0  C012  F080         	movff	?___flmul+3,efgtoa@l+3
  2498   000DB4                     
  2499                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  2500   000DB4  C079  F028         	movff	efgtoa@h,___flge@ff1
  2501   000DB8  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2502   000DBC  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2503   000DC0  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2504   000DC4  C07D  F02C         	movff	efgtoa@l,___flge@ff2
  2505   000DC8  C07E  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2506   000DCC  C07F  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2507   000DD0  C080  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2508   000DD4  EC7B  F013         	call	___flge	;wreg free
  2509   000DD8  B0D8               	btfsc	status,0,c
  2510   000DDA  EFF1  F006         	goto	u3221
  2511   000DDE  EFF3  F006         	goto	u3220
  2512   000DE2                     u3221:
  2513   000DE2  EFFE  F006         	goto	l2970
  2514   000DE6                     u3220:
  2515   000DE6                     
  2516                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  2517   000DE6  0E00               	movlw	0
  2518   000DE8  0100               	movlb	0	; () banked
  2519   000DEA  6F7D               	movwf	efgtoa@l& (0+255),b
  2520   000DEC  0E00               	movlw	0
  2521   000DEE  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2522   000DF0  0E00               	movlw	0
  2523   000DF2  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2524   000DF4  0E00               	movlw	0
  2525   000DF6  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  2528   000DF8  EF27  F007         	goto	l2976
  2529   000DFC                     l2970:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  2532   000DFC  C079  F001         	movff	efgtoa@h,___fleq@ff1
  2533   000E00  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2534   000E04  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2535   000E08  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2536   000E0C  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  2537   000E10  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2538   000E14  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2539   000E18  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2540   000E1C  EC44  F015         	call	___fleq	;wreg free
  2541   000E20  A0D8               	btfss	status,0,c
  2542   000E22  EF15  F007         	goto	u3231
  2543   000E26  EF17  F007         	goto	u3230
  2544   000E2A                     u3231:
  2545   000E2A  EF27  F007         	goto	l2976
  2546   000E2E                     u3230:
  2547   000E2E  0100               	movlb	0	; () banked
  2548   000E30  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2549   000E32  EF1D  F007         	goto	u3241
  2550   000E36  EF1F  F007         	goto	u3240
  2551   000E3A                     u3241:
  2552   000E3A  EF27  F007         	goto	l2976
  2553   000E3E                     u3240:
  2554   000E3E                     
  2555                           ; BSR set to: 0
  2556                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  2557   000E3E  0E00               	movlw	0
  2558   000E40  6F7D               	movwf	efgtoa@l& (0+255),b
  2559   000E42  0E00               	movlw	0
  2560   000E44  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2561   000E46  0E00               	movlw	0
  2562   000E48  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2563   000E4A  0E00               	movlw	0
  2564   000E4C  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2565   000E4E                     l2976:
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  2568   000E4E  C084  F001         	movff	efgtoa@g,___fladd@b
  2569   000E52  C085  F002         	movff	efgtoa@g+1,___fladd@b+1
  2570   000E56  C086  F003         	movff	efgtoa@g+2,___fladd@b+2
  2571   000E5A  C087  F004         	movff	efgtoa@g+3,___fladd@b+3
  2572   000E5E  C07D  F005         	movff	efgtoa@l,___fladd@a
  2573   000E62  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  2574   000E66  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  2575   000E6A  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  2576   000E6E  EC0E  F009         	call	___fladd	;wreg free
  2577   000E72  C001  F079         	movff	?___fladd,efgtoa@h
  2578   000E76  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  2579   000E7A  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  2580   000E7E  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  2581   000E82                     
  2582                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  2583   000E82  C079  F028         	movff	efgtoa@h,___flge@ff1
  2584   000E86  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2585   000E8A  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2586   000E8E  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2587   000E92  0E00               	movlw	0
  2588   000E94  6E13               	movwf	___flmul@a^0,c
  2589   000E96  0E00               	movlw	0
  2590   000E98  6E14               	movwf	(___flmul@a+1)^0,c
  2591   000E9A  0E20               	movlw	32
  2592   000E9C  6E15               	movwf	(___flmul@a+2)^0,c
  2593   000E9E  0E41               	movlw	65
  2594   000EA0  6E16               	movwf	(___flmul@a+3)^0,c
  2595   000EA2  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2596   000EA6  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2597   000EAA  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2598   000EAE  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2599   000EB2  EC6E  F00B         	call	___flmul	;wreg free
  2600   000EB6  C00F  F02C         	movff	?___flmul,___flge@ff2
  2601   000EBA  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2602   000EBE  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2603   000EC2  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2604   000EC6  EC7B  F013         	call	___flge	;wreg free
  2605   000ECA  A0D8               	btfss	status,0,c
  2606   000ECC  EF6A  F007         	goto	u3251
  2607   000ED0  EF6C  F007         	goto	u3250
  2608   000ED4                     u3251:
  2609   000ED4  EF95  F007         	goto	l2988
  2610   000ED8                     u3250:
  2611   000ED8                     
  2612                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  2613   000ED8  0100               	movlb	0	; () banked
  2614   000EDA  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2615   000EDC  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2616   000EDE                     
  2617                           ; BSR set to: 0
  2618                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  2619   000EDE  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2620   000EE2  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2621   000EE6  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2622   000EEA  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2623   000EEE  0E00               	movlw	0
  2624   000EF0  6E13               	movwf	___flmul@a^0,c
  2625   000EF2  0E00               	movlw	0
  2626   000EF4  6E14               	movwf	(___flmul@a+1)^0,c
  2627   000EF6  0E20               	movlw	32
  2628   000EF8  6E15               	movwf	(___flmul@a+2)^0,c
  2629   000EFA  0E41               	movlw	65
  2630   000EFC  6E16               	movwf	(___flmul@a+3)^0,c
  2631   000EFE  EC6E  F00B         	call	___flmul	;wreg free
  2632   000F02  C00F  F073         	movff	?___flmul,efgtoa@ou
  2633   000F06  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2634   000F0A  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2635   000F0E  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2636   000F12                     
  2637                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  2638   000F12  0E66               	movlw	102
  2639   000F14  0100               	movlb	0	; () banked
  2640   000F16  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2641   000F18  A4D8               	btfss	status,2,c
  2642   000F1A  EF91  F007         	goto	u3261
  2643   000F1E  EF93  F007         	goto	u3260
  2644   000F22                     u3261:
  2645   000F22  EF95  F007         	goto	l2988
  2646   000F26                     u3260:
  2647   000F26                     
  2648                           ; BSR set to: 0
  2649                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  2650   000F26  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2651   000F28  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2652   000F2A                     l2988:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  2655   000F2A  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2656   000F2E  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2657   000F32  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2658   000F36  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2659   000F3A                     
  2660                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  2661   000F3A  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2662   000F3E  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2663   000F42                     
  2664                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  2665   000F42  0E00               	movlw	0
  2666   000F44  0100               	movlb	0	; () banked
  2667   000F46  6F68               	movwf	efgtoa@pp& (0+255),b
  2668   000F48                     
  2669                           ; BSR set to: 0
  2670                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  2671   000F48  0E00               	movlw	0
  2672   000F4A  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2673   000F4C  0E00               	movlw	0
  2674   000F4E  6F64               	movwf	efgtoa@t& (0+255),b
  2675   000F50                     
  2676                           ; BSR set to: 0
  2677                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  2678   000F50  0E00               	movlw	0
  2679   000F52  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2680   000F54  0E00               	movlw	0
  2681   000F56  6F77               	movwf	efgtoa@i& (0+255),b
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2684   000F58  EF93  F008         	goto	l3038
  2685   000F5C                     l2998:
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  2689   000F5C  C079  F028         	movff	efgtoa@h,___fldiv@b
  2690   000F60  C07A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2691   000F64  C07B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2692   000F68  C07C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2693   000F6C  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2694   000F70  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2695   000F74  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2696   000F78  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2697   000F7C  EC83  F00D         	call	___fldiv	;wreg free
  2698   000F80  C028  F041         	movff	?___fldiv,floorf@x
  2699   000F84  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2700   000F88  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2701   000F8C  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2702   000F90  EC84  F010         	call	_floorf	;wreg free
  2703   000F94  C041  F07D         	movff	?_floorf,efgtoa@l
  2704   000F98  C042  F07E         	movff	?_floorf+1,efgtoa@l+1
  2705   000F9C  C043  F07F         	movff	?_floorf+2,efgtoa@l+2
  2706   000FA0  C044  F080         	movff	?_floorf+3,efgtoa@l+3
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2709   000FA4  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2710   000FA8  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2711   000FAC  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2712   000FB0  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2713   000FB4  ECF8  F012         	call	___fltol	;wreg free
  2714   000FB8  BE02               	btfsc	(?___fltol+1)^0,7,c
  2715   000FBA  EFEA  F007         	goto	u3270
  2716   000FBE  5002               	movf	(?___fltol+1)^0,w,c
  2717   000FC0  E107               	bnz	u3271
  2718   000FC2  0E0A               	movlw	10
  2719   000FC4  5C01               	subwf	?___fltol^0,w,c
  2720   000FC6  B0D8               	btfsc	status,0,c
  2721   000FC8  EFE8  F007         	goto	u3271
  2722   000FCC  EFEA  F007         	goto	u3270
  2723   000FD0                     u3271:
  2724   000FD0  EFFA  F007         	goto	l3002
  2725   000FD4                     u3270:
  2726   000FD4  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2727   000FD8  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2728   000FDC  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2729   000FE0  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2730   000FE4  ECF8  F012         	call	___fltol	;wreg free
  2731   000FE8  C001  F06B         	movff	?___fltol,efgtoa@d
  2732   000FEC  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2733   000FF0  EFFF  F007         	goto	l853
  2734   000FF4                     l3002:
  2735   000FF4  0E00               	movlw	0
  2736   000FF6  0100               	movlb	0	; () banked
  2737   000FF8  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2738   000FFA  0E09               	movlw	9
  2739   000FFC  6F6B               	movwf	efgtoa@d& (0+255),b
  2740   000FFE                     l853:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  2743   000FFE  0100               	movlb	0	; () banked
  2744   001000  5168               	movf	efgtoa@pp& (0+255),w,b
  2745   001002  A4D8               	btfss	status,2,c
  2746   001004  EF06  F008         	goto	u3281
  2747   001008  EF08  F008         	goto	u3280
  2748   00100C                     u3281:
  2749   00100C  EF30  F008         	goto	l3022
  2750   001010                     u3280:
  2751   001010                     
  2752                           ; BSR set to: 0
  2753   001010  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2754   001012  EF0F  F008         	goto	u3290
  2755   001016  EF0D  F008         	goto	u3291
  2756   00101A                     u3291:
  2757   00101A  EF30  F008         	goto	l3022
  2758   00101E                     u3290:
  2759   00101E                     
  2760                           ; BSR set to: 0
  2761                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  2762   00101E  0E00               	movlw	low _dbuf
  2763   001020  2582               	addwf	efgtoa@n& (0+255),w,b
  2764   001022  6ED9               	movwf	fsr2l,c
  2765   001024  0E01               	movlw	high _dbuf
  2766   001026  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2767   001028  6EDA               	movwf	fsr2h,c
  2768   00102A  0E2E               	movlw	46
  2769   00102C  6EDF               	movwf	indf2,c
  2770   00102E                     
  2771                           ; BSR set to: 0
  2772   00102E  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2773   001030  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2774   001032                     
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  2777   001032  0771               	decf	efgtoa@w& (0+255),f,b
  2778   001034  A0D8               	btfss	status,0,c
  2779   001036  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2780   001038                     
  2781                           ; BSR set to: 0
  2782                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  2783   001038  0E01               	movlw	1
  2784   00103A  6F68               	movwf	efgtoa@pp& (0+255),b
  2785   00103C  EF30  F008         	goto	l3022
  2786   001040                     l3014:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  2790   001040  0E00               	movlw	low _dbuf
  2791   001042  2582               	addwf	efgtoa@n& (0+255),w,b
  2792   001044  6ED9               	movwf	fsr2l,c
  2793   001046  0E01               	movlw	high _dbuf
  2794   001048  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2795   00104A  6EDA               	movwf	fsr2h,c
  2796   00104C  0E30               	movlw	48
  2797   00104E  6EDF               	movwf	indf2,c
  2798   001050                     
  2799                           ; BSR set to: 0
  2800   001050  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2801   001052  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2802   001054                     
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  2805   001054  0771               	decf	efgtoa@w& (0+255),f,b
  2806   001056  A0D8               	btfss	status,0,c
  2807   001058  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2808   00105A                     
  2809                           ; BSR set to: 0
  2810                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  2811   00105A  0764               	decf	efgtoa@t& (0+255),f,b
  2812   00105C  A0D8               	btfss	status,0,c
  2813   00105E  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2814   001060                     l3022:
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  2818   001060  5164               	movf	efgtoa@t& (0+255),w,b
  2819   001062  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2820   001064  A4D8               	btfss	status,2,c
  2821   001066  EF37  F008         	goto	u3301
  2822   00106A  EF39  F008         	goto	u3300
  2823   00106E                     u3301:
  2824   00106E  EF20  F008         	goto	l3014
  2825   001072                     u3300:
  2826   001072                     
  2827                           ; BSR set to: 0
  2828                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2829   001072  0E00               	movlw	low _dbuf
  2830   001074  2582               	addwf	efgtoa@n& (0+255),w,b
  2831   001076  6ED9               	movwf	fsr2l,c
  2832   001078  0E01               	movlw	high _dbuf
  2833   00107A  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2834   00107C  6EDA               	movwf	fsr2h,c
  2835   00107E  516B               	movf	efgtoa@d& (0+255),w,b
  2836   001080  0F30               	addlw	48
  2837   001082  6EDF               	movwf	indf2,c
  2838   001084                     
  2839                           ; BSR set to: 0
  2840   001084  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2841   001086  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2842   001088                     
  2843                           ; BSR set to: 0
  2844                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  2845   001088  0771               	decf	efgtoa@w& (0+255),f,b
  2846   00108A  A0D8               	btfss	status,0,c
  2847   00108C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2848   00108E                     
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  2851   00108E  C079  F028         	movff	efgtoa@h,___flsub@b
  2852   001092  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  2853   001096  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2854   00109A  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2855   00109E  C07D  F013         	movff	efgtoa@l,___flmul@a
  2856   0010A2  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  2857   0010A6  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  2858   0010AA  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  2859   0010AE  C088  F00F         	movff	efgtoa@u,___flmul@b
  2860   0010B2  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2861   0010B6  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2862   0010BA  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2863   0010BE  EC6E  F00B         	call	___flmul	;wreg free
  2864   0010C2  C00F  F02C         	movff	?___flmul,___flsub@a
  2865   0010C6  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2866   0010CA  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2867   0010CE  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2868   0010D2  ECF4  F016         	call	___flsub	;wreg free
  2869   0010D6  C028  F079         	movff	?___flsub,efgtoa@h
  2870   0010DA  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  2871   0010DE  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  2872   0010E2  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  2873   0010E6                     
  2874                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  2875   0010E6  C088  F028         	movff	efgtoa@u,___fldiv@b
  2876   0010EA  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2877   0010EE  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2878   0010F2  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2879   0010F6  0E00               	movlw	0
  2880   0010F8  6E2C               	movwf	___fldiv@a^0,c
  2881   0010FA  0E00               	movlw	0
  2882   0010FC  6E2D               	movwf	(___fldiv@a+1)^0,c
  2883   0010FE  0E20               	movlw	32
  2884   001100  6E2E               	movwf	(___fldiv@a+2)^0,c
  2885   001102  0E41               	movlw	65
  2886   001104  6E2F               	movwf	(___fldiv@a+3)^0,c
  2887   001106  EC83  F00D         	call	___fldiv	;wreg free
  2888   00110A  C028  F088         	movff	?___fldiv,efgtoa@u
  2889   00110E  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2890   001112  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2891   001116  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2892   00111A                     
  2893                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  2894   00111A  0100               	movlb	0	; () banked
  2895   00111C  0760               	decf	efgtoa@ne& (0+255),f,b
  2896   00111E  A0D8               	btfss	status,0,c
  2897   001120  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2898   001122                     
  2899                           ; BSR set to: 0
  2900                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  2901   001122  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2902   001124  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2903   001126                     l3038:
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2907   001126  516D               	movf	efgtoa@m& (0+255),w,b
  2908   001128  5D77               	subwf	efgtoa@i& (0+255),w,b
  2909   00112A  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2910   00112C  0A80               	xorlw	128
  2911   00112E  6E5C               	movwf	??_efgtoa^0,c
  2912   001130  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2913   001132  0A80               	xorlw	128
  2914   001134  585C               	subwfb	??_efgtoa^0,w,c
  2915   001136  B0D8               	btfsc	status,0,c
  2916   001138  EFA0  F008         	goto	u3311
  2917   00113C  EFA2  F008         	goto	u3310
  2918   001140                     u3311:
  2919   001140  EFB0  F008         	goto	l3042
  2920   001144                     u3310:
  2921   001144                     
  2922                           ; BSR set to: 0
  2923   001144  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2924   001146  EFAE  F008         	goto	u3321
  2925   00114A  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2926   00114C  E109               	bnz	u3320
  2927   00114E  0E4B               	movlw	75
  2928   001150  5D82               	subwf	efgtoa@n& (0+255),w,b
  2929   001152  A0D8               	btfss	status,0,c
  2930   001154  EFAE  F008         	goto	u3321
  2931   001158  EFB0  F008         	goto	u3320
  2932   00115C                     u3321:
  2933   00115C  EFAE  F007         	goto	l2998
  2934   001160                     u3320:
  2935   001160                     l3042:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  2939   001160  0E00               	movlw	0
  2940   001162  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2941   001164  0E4F               	movlw	79
  2942   001166  6F77               	movwf	efgtoa@i& (0+255),b
  2943   001168                     
  2944                           ; BSR set to: 0
  2945                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  2946   001168  0E00               	movlw	low _dbuf
  2947   00116A  2577               	addwf	efgtoa@i& (0+255),w,b
  2948   00116C  6ED9               	movwf	fsr2l,c
  2949   00116E  0E01               	movlw	high _dbuf
  2950   001170  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2951   001172  6EDA               	movwf	fsr2h,c
  2952   001174  6ADF               	clrf	indf2,c
  2953   001176                     
  2954                           ; BSR set to: 0
  2955                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  2956   001176  0E00               	movlw	low _dbuf
  2957   001178  6E5C               	movwf	??_efgtoa^0,c
  2958   00117A  0E01               	movlw	high _dbuf
  2959   00117C  6E5D               	movwf	(??_efgtoa+1)^0,c
  2960   00117E  5182               	movf	efgtoa@n& (0+255),w,b
  2961   001180  5E5C               	subwf	??_efgtoa^0,f,c
  2962   001182  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2963   001184  5A5D               	subwfb	(??_efgtoa+1)^0,f,c
  2964   001186  5177               	movf	efgtoa@i& (0+255),w,b
  2965   001188  245C               	addwf	??_efgtoa^0,w,c
  2966   00118A  6E01               	movwf	memcpy@d1^0,c
  2967   00118C  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2968   00118E  205D               	addwfc	(??_efgtoa+1)^0,w,c
  2969   001190  6E02               	movwf	(memcpy@d1+1)^0,c
  2970   001192  0E00               	movlw	low _dbuf
  2971   001194  6E03               	movwf	memcpy@s1^0,c
  2972   001196  0E01               	movlw	high _dbuf
  2973   001198  6E04               	movwf	(memcpy@s1+1)^0,c
  2974   00119A  C082  F005         	movff	efgtoa@n,memcpy@n
  2975   00119E  C083  F006         	movff	efgtoa@n+1,memcpy@n+1
  2976   0011A2  ECCC  F016         	call	_memcpy	;wreg free
  2977   0011A6                     
  2978                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  2979   0011A6  0100               	movlb	0	; () banked
  2980   0011A8  5182               	movf	efgtoa@n& (0+255),w,b
  2981   0011AA  5D77               	subwf	efgtoa@i& (0+255),w,b
  2982   0011AC  6F82               	movwf	efgtoa@n& (0+255),b
  2983   0011AE  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2984   0011B0  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  2985   0011B2  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2986   0011B4                     
  2987                           ; BSR set to: 0
  2988                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  2989   0011B4  5181               	movf	efgtoa@sign& (0+255),w,b
  2990   0011B6  A4D8               	btfss	status,2,c
  2991   0011B8  EFE0  F008         	goto	u3331
  2992   0011BC  EFE3  F008         	goto	u3330
  2993   0011C0                     u3331:
  2994   0011C0  0E01               	movlw	1
  2995   0011C2  EFE4  F008         	goto	u3340
  2996   0011C6                     u3330:
  2997   0011C6  0E00               	movlw	0
  2998   0011C8                     u3340:
  2999   0011C8  6F77               	movwf	efgtoa@i& (0+255),b
  3000   0011CA  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3001   0011CC                     
  3002                           ; BSR set to: 0
  3003                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  3004   0011CC  5181               	movf	efgtoa@sign& (0+255),w,b
  3005   0011CE  B4D8               	btfsc	status,2,c
  3006   0011D0  EFEC  F008         	goto	u3351
  3007   0011D4  EFEE  F008         	goto	u3350
  3008   0011D8                     u3351:
  3009   0011D8  EFF9  F008         	goto	l3056
  3010   0011DC                     u3350:
  3011   0011DC                     
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  3014   0011DC  0782               	decf	efgtoa@n& (0+255),f,b
  3015   0011DE  A0D8               	btfss	status,0,c
  3016   0011E0  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  3017   0011E2  0E00               	movlw	low _dbuf
  3018   0011E4  2582               	addwf	efgtoa@n& (0+255),w,b
  3019   0011E6  6ED9               	movwf	fsr2l,c
  3020   0011E8  0E01               	movlw	high _dbuf
  3021   0011EA  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3022   0011EC  6EDA               	movwf	fsr2h,c
  3023   0011EE  C081  FFDF         	movff	efgtoa@sign,indf2
  3024   0011F2                     l3056:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  3028   0011F2  5177               	movf	efgtoa@i& (0+255),w,b
  3029   0011F4  5F71               	subwf	efgtoa@w& (0+255),f,b
  3030   0011F6  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3031   0011F8  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3032   0011FA                     
  3033                           ; BSR set to: 0
  3034                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3035   0011FA  C055  F011         	movff	efgtoa@fp,pad@fp
  3036   0011FE  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  3037   001202  0E00               	movlw	low _dbuf
  3038   001204  2582               	addwf	efgtoa@n& (0+255),w,b
  3039   001206  6E13               	movwf	pad@buf^0,c
  3040   001208  0E01               	movlw	high _dbuf
  3041   00120A  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3042   00120C  6E14               	movwf	(pad@buf+1)^0,c
  3043   00120E  C071  F015         	movff	efgtoa@w,pad@p
  3044   001212  C072  F016         	movff	efgtoa@w+1,pad@p+1
  3045   001216  EC99  F015         	call	_pad	;wreg free
  3046   00121A                     l820:
  3047   00121A  0012               	return		;funcret
  3048   00121C                     __end_of_efgtoa:
  3049                           	callstack 0
  3050                           
  3051 ;; *************** function _strcpy *****************
  3052 ;; Defined at:
  3053 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3056 ;;		 -> dbuf(80), 
  3057 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3058 ;;		 -> STR_6(4), STR_3(4), 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  d               2    6[COMRAM] PTR unsigned char 
  3061 ;;		 -> dbuf(80), 
  3062 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3063 ;;		 -> STR_6(4), STR_3(4), 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  2    0[COMRAM] PTR unsigned char 
  3066 ;; Registers used:
  3067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3073 ;;      Params:         4       0       0       0       0       0       0       0       0
  3074 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3076 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3077 ;;Total ram usage:        8 bytes
  3078 ;; Hardware stack levels used: 1
  3079 ;; Hardware stack levels required when called: 1
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_efgtoa
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text7
  3088   002EB6                     __ptext7:
  3089                           	callstack 0
  3090   002EB6                     _strcpy:
  3091                           	callstack 25
  3092   002EB6  C003  F005         	movff	strcpy@src,strcpy@s
  3093   002EBA  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3094   002EBE  C001  F007         	movff	strcpy@dest,strcpy@d
  3095   002EC2  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3096   002EC6                     l2794:
  3097   002EC6  C005  FFF6         	movff	strcpy@s,tblptrl
  3098   002ECA  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3099   002ECE  4A05               	infsnz	strcpy@s^0,f,c
  3100   002ED0  2A06               	incf	(strcpy@s+1)^0,f,c
  3101   002ED2                     	if	0	;tblptru may be non-zero
  3102   002ED2                     	endif
  3103   002ED2                     	if	0	;tblptru may be non-zero
  3104   002ED2                     	endif
  3105   002ED2  C007  FFD9         	movff	strcpy@d,fsr2l
  3106   002ED6  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3107   002EDA  4A07               	infsnz	strcpy@d^0,f,c
  3108   002EDC  2A08               	incf	(strcpy@d+1)^0,f,c
  3109   002EDE  0008               	tblrd		*
  3110   002EE0  CFF5 FFDF          	movff	tablat,indf2
  3111   002EE4  50DF               	movf	indf2,w,c
  3112   002EE6  A4D8               	btfss	status,2,c
  3113   002EE8  EF78  F017         	goto	u2911
  3114   002EEC  EF7A  F017         	goto	u2910
  3115   002EF0                     u2911:
  3116   002EF0  EF63  F017         	goto	l2794
  3117   002EF4                     u2910:
  3118   002EF4  0012               	return		;funcret
  3119   002EF6                     __end_of_strcpy:
  3120                           	callstack 0
  3121                           
  3122 ;; *************** function _pad *****************
  3123 ;; Defined at:
  3124 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3127 ;;		 -> sprintf@f(12), 
  3128 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3129 ;;		 -> dbuf(80), 
  3130 ;;  p               2   20[COMRAM] int 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  w               2   25[COMRAM] int 
  3133 ;;  i               2   23[COMRAM] int 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3143 ;;      Params:         6       0       0       0       0       0       0       0       0
  3144 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3145 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3146 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3147 ;;Total ram usage:       11 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 4
  3150 ;; This function calls:
  3151 ;;		_fputc
  3152 ;;		_fputs
  3153 ;; This function is called by:
  3154 ;;		_efgtoa
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text8
  3159   002B32                     __ptext8:
  3160                           	callstack 0
  3161   002B32                     _pad:
  3162                           	callstack 22
  3163   002B32                     
  3164                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3165   002B32  BE16               	btfsc	(pad@p+1)^0,7,c
  3166   002B34  EF9E  F015         	goto	u2821
  3167   002B38  EFA0  F015         	goto	u2820
  3168   002B3C                     u2821:
  3169   002B3C  EFA6  F015         	goto	l2760
  3170   002B40                     u2820:
  3171   002B40  C015  F01A         	movff	pad@p,pad@w
  3172   002B44  C016  F01B         	movff	pad@p+1,pad@w+1
  3173   002B48  EFAA  F015         	goto	l805
  3174   002B4C                     l2760:
  3175   002B4C  0E00               	movlw	0
  3176   002B4E  6E1B               	movwf	(pad@w+1)^0,c
  3177   002B50  0E00               	movlw	0
  3178   002B52  6E1A               	movwf	pad@w^0,c
  3179   002B54                     l805:
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3182   002B54  0E00               	movlw	0
  3183   002B56  6E19               	movwf	(pad@i+1)^0,c
  3184   002B58  0E00               	movlw	0
  3185   002B5A  6E18               	movwf	pad@i^0,c
  3186                           
  3187                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3188   002B5C  EFBC  F015         	goto	l2766
  3189   002B60                     l2762:
  3190                           
  3191                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3192   002B60  0E00               	movlw	0
  3193   002B62  6E02               	movwf	(fputc@c+1)^0,c
  3194   002B64  0E20               	movlw	32
  3195   002B66  6E01               	movwf	fputc@c^0,c
  3196   002B68  C011  F003         	movff	pad@fp,fputc@fp
  3197   002B6C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3198   002B70  EC7C  F014         	call	_fputc	;wreg free
  3199   002B74                     
  3200                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3201   002B74  4A18               	infsnz	pad@i^0,f,c
  3202   002B76  2A19               	incf	(pad@i+1)^0,f,c
  3203   002B78                     l2766:
  3204                           
  3205                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3206   002B78  501A               	movf	pad@w^0,w,c
  3207   002B7A  5C18               	subwf	pad@i^0,w,c
  3208   002B7C  5019               	movf	(pad@i+1)^0,w,c
  3209   002B7E  0A80               	xorlw	128
  3210   002B80  6E17               	movwf	??_pad^0,c
  3211   002B82  501B               	movf	(pad@w+1)^0,w,c
  3212   002B84  0A80               	xorlw	128
  3213   002B86  5817               	subwfb	??_pad^0,w,c
  3214   002B88  A0D8               	btfss	status,0,c
  3215   002B8A  EFC9  F015         	goto	u2831
  3216   002B8E  EFCB  F015         	goto	u2830
  3217   002B92                     u2831:
  3218   002B92  EFB0  F015         	goto	l2762
  3219   002B96                     u2830:
  3220   002B96                     
  3221                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3222   002B96  C013  F00A         	movff	pad@buf,fputs@s
  3223   002B9A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3224   002B9E  C011  F00C         	movff	pad@fp,fputs@fp
  3225   002BA2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3226   002BA6  EC17  F017         	call	_fputs	;wreg free
  3227   002BAA  0012               	return		;funcret
  3228   002BAC                     __end_of_pad:
  3229                           	callstack 0
  3230                           
  3231 ;; *************** function _fputs *****************
  3232 ;; Defined at:
  3233 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3236 ;;		 -> dbuf(80), 
  3237 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3238 ;;		 -> sprintf@f(12), 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  i               2   14[COMRAM] int 
  3241 ;;  c               1   13[COMRAM] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  2    9[COMRAM] int 
  3244 ;; Registers used:
  3245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3251 ;;      Params:         4       0       0       0       0       0       0       0       0
  3252 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3254 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3255 ;;Total ram usage:        7 bytes
  3256 ;; Hardware stack levels used: 1
  3257 ;; Hardware stack levels required when called: 3
  3258 ;; This function calls:
  3259 ;;		_fputc
  3260 ;; This function is called by:
  3261 ;;		_pad
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text9
  3266   002E2E                     __ptext9:
  3267                           	callstack 0
  3268   002E2E                     _fputs:
  3269                           	callstack 22
  3270   002E2E  0E00               	movlw	0
  3271   002E30  6E10               	movwf	(fputs@i+1)^0,c
  3272   002E32  0E00               	movlw	0
  3273   002E34  6E0F               	movwf	fputs@i^0,c
  3274   002E36  EF28  F017         	goto	l2384
  3275   002E3A                     l2380:
  3276   002E3A  C00E  F001         	movff	fputs@c,fputc@c
  3277   002E3E  6A02               	clrf	(fputc@c+1)^0,c
  3278   002E40  C00C  F003         	movff	fputs@fp,fputc@fp
  3279   002E44  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3280   002E48  EC7C  F014         	call	_fputc	;wreg free
  3281   002E4C  4A0F               	infsnz	fputs@i^0,f,c
  3282   002E4E  2A10               	incf	(fputs@i+1)^0,f,c
  3283   002E50                     l2384:
  3284   002E50  500F               	movf	fputs@i^0,w,c
  3285   002E52  240A               	addwf	fputs@s^0,w,c
  3286   002E54  6ED9               	movwf	fsr2l,c
  3287   002E56  5010               	movf	(fputs@i+1)^0,w,c
  3288   002E58  200B               	addwfc	(fputs@s+1)^0,w,c
  3289   002E5A  6EDA               	movwf	fsr2h,c
  3290   002E5C  50DF               	movf	indf2,w,c
  3291   002E5E  6E0E               	movwf	fputs@c^0,c
  3292   002E60  500E               	movf	fputs@c^0,w,c
  3293   002E62  A4D8               	btfss	status,2,c
  3294   002E64  EF36  F017         	goto	u2231
  3295   002E68  EF38  F017         	goto	u2230
  3296   002E6C                     u2231:
  3297   002E6C  EF1D  F017         	goto	l2380
  3298   002E70                     u2230:
  3299   002E70  0012               	return		;funcret
  3300   002E72                     __end_of_fputs:
  3301                           	callstack 0
  3302                           
  3303 ;; *************** function _fputc *****************
  3304 ;; Defined at:
  3305 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  c               2    0[COMRAM] int 
  3308 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3309 ;;		 -> sprintf@f(12), 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  2    0[COMRAM] int 
  3314 ;; Registers used:
  3315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3321 ;;      Params:         4       0       0       0       0       0       0       0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3323 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3324 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3325 ;;Total ram usage:        9 bytes
  3326 ;; Hardware stack levels used: 1
  3327 ;; Hardware stack levels required when called: 2
  3328 ;; This function calls:
  3329 ;;		_putch
  3330 ;; This function is called by:
  3331 ;;		_pad
  3332 ;;		_vfpfcnvrt
  3333 ;;		_fputs
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text10
  3338   0028F8                     __ptext10:
  3339                           	callstack 0
  3340   0028F8                     _fputc:
  3341                           	callstack 25
  3342   0028F8  5003               	movf	fputc@fp^0,w,c
  3343   0028FA  1004               	iorwf	(fputc@fp+1)^0,w,c
  3344   0028FC  B4D8               	btfsc	status,2,c
  3345   0028FE  EF83  F014         	goto	u1801
  3346   002902  EF85  F014         	goto	u1800
  3347   002906                     u1801:
  3348   002906  EF8E  F014         	goto	l2166
  3349   00290A                     u1800:
  3350   00290A  5003               	movf	fputc@fp^0,w,c
  3351   00290C  1004               	iorwf	(fputc@fp+1)^0,w,c
  3352   00290E  A4D8               	btfss	status,2,c
  3353   002910  EF8C  F014         	goto	u1811
  3354   002914  EF8E  F014         	goto	u1810
  3355   002918                     u1811:
  3356   002918  EF93  F014         	goto	l2168
  3357   00291C                     u1810:
  3358   00291C                     l2166:
  3359   00291C  5001               	movf	fputc@c^0,w,c
  3360   00291E  EC06  F018         	call	_putch
  3361   002922  EFE0  F014         	goto	l945
  3362   002926                     l2168:
  3363   002926  EE20 F00A          	lfsr	2,10
  3364   00292A  5003               	movf	fputc@fp^0,w,c
  3365   00292C  26D9               	addwf	fsr2l,f,c
  3366   00292E  5004               	movf	(fputc@fp+1)^0,w,c
  3367   002930  22DA               	addwfc	fsr2h,f,c
  3368   002932  50DE               	movf	postinc2,w,c
  3369   002934  10DE               	iorwf	postinc2,w,c
  3370   002936  B4D8               	btfsc	status,2,c
  3371   002938  EFA0  F014         	goto	u1821
  3372   00293C  EFA2  F014         	goto	u1820
  3373   002940                     u1821:
  3374   002940  EFBD  F014         	goto	l2172
  3375   002944                     u1820:
  3376   002944  EE20 F00A          	lfsr	2,10
  3377   002948  5003               	movf	fputc@fp^0,w,c
  3378   00294A  26D9               	addwf	fsr2l,f,c
  3379   00294C  5004               	movf	(fputc@fp+1)^0,w,c
  3380   00294E  22DA               	addwfc	fsr2h,f,c
  3381   002950  EE10 F003          	lfsr	1,3
  3382   002954  5003               	movf	fputc@fp^0,w,c
  3383   002956  26E1               	addwf	fsr1l,f,c
  3384   002958  5004               	movf	(fputc@fp+1)^0,w,c
  3385   00295A  22E2               	addwfc	fsr1h,f,c
  3386   00295C  50DE               	movf	postinc2,w,c
  3387   00295E  5CE6               	subwf	postinc1,w,c
  3388   002960  50E6               	movf	postinc1,w,c
  3389   002962  0A80               	xorlw	128
  3390   002964  6E09               	movwf	(??_fputc+4)^0,c
  3391   002966  50DE               	movf	postinc2,w,c
  3392   002968  0A80               	xorlw	128
  3393   00296A  5809               	subwfb	(??_fputc+4)^0,w,c
  3394   00296C  B0D8               	btfsc	status,0,c
  3395   00296E  EFBB  F014         	goto	u1831
  3396   002972  EFBD  F014         	goto	u1830
  3397   002976                     u1831:
  3398   002976  EFE0  F014         	goto	l945
  3399   00297A                     u1830:
  3400   00297A                     l2172:
  3401   00297A  EE20 F003          	lfsr	2,3
  3402   00297E  5003               	movf	fputc@fp^0,w,c
  3403   002980  26D9               	addwf	fsr2l,f,c
  3404   002982  5004               	movf	(fputc@fp+1)^0,w,c
  3405   002984  22DA               	addwfc	fsr2h,f,c
  3406   002986  CFDE F005          	movff	postinc2,??_fputc
  3407   00298A  CFDD F006          	movff	postdec2,??_fputc+1
  3408   00298E  C003  FFD9         	movff	fputc@fp,fsr2l
  3409   002992  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3410   002996  CFDE F007          	movff	postinc2,??_fputc+2
  3411   00299A  CFDD F008          	movff	postdec2,??_fputc+3
  3412   00299E  5005               	movf	??_fputc^0,w,c
  3413   0029A0  2407               	addwf	(??_fputc+2)^0,w,c
  3414   0029A2  6ED9               	movwf	fsr2l,c
  3415   0029A4  5006               	movf	(??_fputc+1)^0,w,c
  3416   0029A6  2008               	addwfc	(??_fputc+3)^0,w,c
  3417   0029A8  6EDA               	movwf	fsr2h,c
  3418   0029AA  C001  FFDF         	movff	fputc@c,indf2
  3419   0029AE  EE20 F003          	lfsr	2,3
  3420   0029B2  5003               	movf	fputc@fp^0,w,c
  3421   0029B4  26D9               	addwf	fsr2l,f,c
  3422   0029B6  5004               	movf	(fputc@fp+1)^0,w,c
  3423   0029B8  22DA               	addwfc	fsr2h,f,c
  3424   0029BA  2ADE               	incf	postinc2,f,c
  3425   0029BC  0E00               	movlw	0
  3426   0029BE  22DD               	addwfc	postdec2,f,c
  3427   0029C0                     l945:
  3428   0029C0  0012               	return		;funcret
  3429   0029C2                     __end_of_fputc:
  3430                           	callstack 0
  3431                           
  3432 ;; *************** function _putch *****************
  3433 ;; Defined at:
  3434 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  c               1    wreg     unsigned char 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  c               1    0[COMRAM] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3448 ;;      Params:         0       0       0       0       0       0       0       0       0
  3449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3451 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3452 ;;Total ram usage:        0 bytes
  3453 ;; Hardware stack levels used: 1
  3454 ;; Hardware stack levels required when called: 1
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_fputc
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text11
  3463   00300C                     __ptext11:
  3464                           	callstack 0
  3465   00300C                     _putch:
  3466                           	callstack 25
  3467   00300C  0012               	return		;funcret
  3468   00300E                     __end_of_putch:
  3469                           	callstack 0
  3470                           
  3471 ;; *************** function _memcpy *****************
  3472 ;; Defined at:
  3473 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  d1              2    0[COMRAM] PTR void 
  3476 ;;		 -> dbuf(80), 
  3477 ;;  s1              2    2[COMRAM] PTR const void 
  3478 ;;		 -> dbuf(80), 
  3479 ;;  n               2    4[COMRAM] unsigned int 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3482 ;;		 -> dbuf(80), 
  3483 ;;  d               2    6[COMRAM] PTR unsigned char 
  3484 ;;		 -> dbuf(80), 
  3485 ;;  tmp             1   10[COMRAM] unsigned char 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  2    0[COMRAM] PTR void 
  3488 ;; Registers used:
  3489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3495 ;;      Params:         6       0       0       0       0       0       0       0       0
  3496 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3498 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3499 ;;Total ram usage:       11 bytes
  3500 ;; Hardware stack levels used: 1
  3501 ;; Hardware stack levels required when called: 1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		_efgtoa
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text12
  3510   002D98                     __ptext12:
  3511                           	callstack 0
  3512   002D98                     _memcpy:
  3513                           	callstack 25
  3514   002D98  C003  F009         	movff	memcpy@s1,memcpy@s
  3515   002D9C  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3516   002DA0  C001  F007         	movff	memcpy@d1,memcpy@d
  3517   002DA4  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3518   002DA8  EFE6  F016         	goto	l2838
  3519   002DAC                     l2830:
  3520   002DAC  C009  FFD9         	movff	memcpy@s,fsr2l
  3521   002DB0  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3522   002DB4  50DF               	movf	indf2,w,c
  3523   002DB6  6E0B               	movwf	memcpy@tmp^0,c
  3524   002DB8  4A09               	infsnz	memcpy@s^0,f,c
  3525   002DBA  2A0A               	incf	(memcpy@s+1)^0,f,c
  3526   002DBC  C007  FFD9         	movff	memcpy@d,fsr2l
  3527   002DC0  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3528   002DC4  C00B  FFDF         	movff	memcpy@tmp,indf2
  3529   002DC8  4A07               	infsnz	memcpy@d^0,f,c
  3530   002DCA  2A08               	incf	(memcpy@d+1)^0,f,c
  3531   002DCC                     l2838:
  3532   002DCC  0605               	decf	memcpy@n^0,f,c
  3533   002DCE  A0D8               	btfss	status,0,c
  3534   002DD0  0606               	decf	(memcpy@n+1)^0,f,c
  3535   002DD2  2805               	incf	memcpy@n^0,w,c
  3536   002DD4  E106               	bnz	u3031
  3537   002DD6  2806               	incf	(memcpy@n+1)^0,w,c
  3538   002DD8  A4D8               	btfss	status,2,c
  3539   002DDA  EFF1  F016         	goto	u3031
  3540   002DDE  EFF3  F016         	goto	u3030
  3541   002DE2                     u3031:
  3542   002DE2  EFD6  F016         	goto	l2830
  3543   002DE6                     u3030:
  3544   002DE6  0012               	return		;funcret
  3545   002DE8                     __end_of_memcpy:
  3546                           	callstack 0
  3547                           
  3548 ;; *************** function _labs *****************
  3549 ;; Defined at:
  3550 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  a               4    0[COMRAM] long 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;		None
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  4    0[COMRAM] long 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3564 ;;      Params:         4       0       0       0       0       0       0       0       0
  3565 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3566 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3567 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3568 ;;Total ram usage:        8 bytes
  3569 ;; Hardware stack levels used: 1
  3570 ;; Hardware stack levels required when called: 1
  3571 ;; This function calls:
  3572 ;;		Nothing
  3573 ;; This function is called by:
  3574 ;;		_efgtoa
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text13
  3579   002C90                     __ptext13:
  3580                           	callstack 0
  3581   002C90                     _labs:
  3582                           	callstack 25
  3583   002C90  BE04               	btfsc	(labs@a+3)^0,7,c
  3584   002C92  EF57  F016         	goto	u2920
  3585   002C96  5004               	movf	(labs@a+3)^0,w,c
  3586   002C98  1003               	iorwf	(labs@a+2)^0,w,c
  3587   002C9A  1002               	iorwf	(labs@a+1)^0,w,c
  3588   002C9C  E106               	bnz	u2921
  3589   002C9E  0401               	decf	labs@a^0,w,c
  3590   002CA0  B0D8               	btfsc	status,0,c
  3591   002CA2  EF55  F016         	goto	u2921
  3592   002CA6  EF57  F016         	goto	u2920
  3593   002CAA                     u2921:
  3594   002CAA  EF72  F016         	goto	l924
  3595   002CAE                     u2920:
  3596   002CAE  C001  F005         	movff	labs@a,??_labs
  3597   002CB2  C002  F006         	movff	labs@a+1,??_labs+1
  3598   002CB6  C003  F007         	movff	labs@a+2,??_labs+2
  3599   002CBA  C004  F008         	movff	labs@a+3,??_labs+3
  3600   002CBE  1E05               	comf	??_labs^0,f,c
  3601   002CC0  1E06               	comf	(??_labs+1)^0,f,c
  3602   002CC2  1E07               	comf	(??_labs+2)^0,f,c
  3603   002CC4  1E08               	comf	(??_labs+3)^0,f,c
  3604   002CC6  2A05               	incf	??_labs^0,f,c
  3605   002CC8  0E00               	movlw	0
  3606   002CCA  2206               	addwfc	(??_labs+1)^0,f,c
  3607   002CCC  2207               	addwfc	(??_labs+2)^0,f,c
  3608   002CCE  2208               	addwfc	(??_labs+3)^0,f,c
  3609   002CD0  C005  F001         	movff	??_labs,?_labs
  3610   002CD4  C006  F002         	movff	??_labs+1,?_labs+1
  3611   002CD8  C007  F003         	movff	??_labs+2,?_labs+2
  3612   002CDC  C008  F004         	movff	??_labs+3,?_labs+3
  3613   002CE0  EF7A  F016         	goto	l927
  3614   002CE4                     l924:
  3615   002CE4  C001  F001         	movff	labs@a,?_labs
  3616   002CE8  C002  F002         	movff	labs@a+1,?_labs+1
  3617   002CEC  C003  F003         	movff	labs@a+2,?_labs+2
  3618   002CF0  C004  F004         	movff	labs@a+3,?_labs+3
  3619   002CF4                     l927:
  3620   002CF4  0012               	return		;funcret
  3621   002CF6                     __end_of_labs:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _floorf *****************
  3625 ;; Defined at:
  3626 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  x               4   64[COMRAM] float 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  u               4   80[COMRAM] struct .
  3631 ;;  m               4   74[COMRAM] unsigned long 
  3632 ;;  e               2   78[COMRAM] int 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  4   64[COMRAM] float 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3642 ;;      Params:         4       0       0       0       0       0       0       0       0
  3643 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3644 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3645 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3646 ;;Total ram usage:       20 bytes
  3647 ;; Hardware stack levels used: 1
  3648 ;; Hardware stack levels required when called: 1
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_efgtoa
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text14
  3657   002108                     __ptext14:
  3658                           	callstack 0
  3659   002108                     _floorf:
  3660                           	callstack 25
  3661   002108  C0C3  F051         	movff	floorf@F526,floorf@u
  3662   00210C  C0C4  F052         	movff	floorf@F526+1,floorf@u+1
  3663   002110  C0C5  F053         	movff	floorf@F526+2,floorf@u+2
  3664   002114  C0C6  F054         	movff	floorf@F526+3,floorf@u+3
  3665   002118  C041  F051         	movff	floorf@x,floorf@u
  3666   00211C  C042  F052         	movff	floorf@x+1,floorf@u+1
  3667   002120  C043  F053         	movff	floorf@x+2,floorf@u+2
  3668   002124  C044  F054         	movff	floorf@x+3,floorf@u+3
  3669   002128  0E81               	movlw	129
  3670   00212A  6E45               	movwf	??_floorf^0,c
  3671   00212C  0EFF               	movlw	255
  3672   00212E  6E46               	movwf	(??_floorf+1)^0,c
  3673   002130  C051  F047         	movff	floorf@u,??_floorf+2
  3674   002134  C052  F048         	movff	floorf@u+1,??_floorf+3
  3675   002138  C053  F049         	movff	floorf@u+2,??_floorf+4
  3676   00213C  C054  F04A         	movff	floorf@u+3,??_floorf+5
  3677   002140  0E18               	movlw	24
  3678   002142  EFA8  F010         	goto	u2930
  3679   002146                     u2935:
  3680   002146  90D8               	bcf	status,0,c
  3681   002148  324A               	rrcf	(??_floorf+5)^0,f,c
  3682   00214A  3249               	rrcf	(??_floorf+4)^0,f,c
  3683   00214C  3248               	rrcf	(??_floorf+3)^0,f,c
  3684   00214E  3247               	rrcf	(??_floorf+2)^0,f,c
  3685   002150                     u2930:
  3686   002150  2EE8               	decfsz	wreg,f,c
  3687   002152  EFA3  F010         	goto	u2935
  3688   002156  5047               	movf	(??_floorf+2)^0,w,c
  3689   002158  2445               	addwf	??_floorf^0,w,c
  3690   00215A  6E4F               	movwf	floorf@e^0,c
  3691   00215C  0E00               	movlw	0
  3692   00215E  2046               	addwfc	(??_floorf+1)^0,w,c
  3693   002160  6E50               	movwf	(floorf@e+1)^0,c
  3694   002162  BE50               	btfsc	(floorf@e+1)^0,7,c
  3695   002164  EFBD  F010         	goto	u2941
  3696   002168  5050               	movf	(floorf@e+1)^0,w,c
  3697   00216A  E109               	bnz	u2940
  3698   00216C  0E17               	movlw	23
  3699   00216E  5C4F               	subwf	floorf@e^0,w,c
  3700   002170  A0D8               	btfss	status,0,c
  3701   002172  EFBD  F010         	goto	u2941
  3702   002176  EFBF  F010         	goto	u2940
  3703   00217A                     u2941:
  3704   00217A  EFC9  F010         	goto	l2806
  3705   00217E                     u2940:
  3706   00217E                     l2804:
  3707   00217E  C041  F041         	movff	floorf@x,?_floorf
  3708   002182  C042  F042         	movff	floorf@x+1,?_floorf+1
  3709   002186  C043  F043         	movff	floorf@x+2,?_floorf+2
  3710   00218A  C044  F044         	movff	floorf@x+3,?_floorf+3
  3711   00218E  EF8C  F011         	goto	l913
  3712   002192                     l2806:
  3713   002192  BE50               	btfsc	(floorf@e+1)^0,7,c
  3714   002194  EFCE  F010         	goto	u2951
  3715   002198  EFD0  F010         	goto	u2950
  3716   00219C                     u2951:
  3717   00219C  EF40  F011         	goto	l2816
  3718   0021A0                     u2950:
  3719   0021A0  C04F  F045         	movff	floorf@e,??_floorf
  3720   0021A4  0EFF               	movlw	255
  3721   0021A6  6E46               	movwf	(??_floorf+1)^0,c
  3722   0021A8  0EFF               	movlw	255
  3723   0021AA  6E47               	movwf	(??_floorf+2)^0,c
  3724   0021AC  0E7F               	movlw	127
  3725   0021AE  6E48               	movwf	(??_floorf+3)^0,c
  3726   0021B0  0E00               	movlw	0
  3727   0021B2  6E49               	movwf	(??_floorf+4)^0,c
  3728   0021B4                     u2965:
  3729   0021B4  6645               	tstfsz	??_floorf^0,c
  3730   0021B6  EFDF  F010         	goto	u2966
  3731   0021BA  EFE7  F010         	goto	u2967
  3732   0021BE                     u2966:
  3733   0021BE  3449               	rlcf	(??_floorf+4)^0,w,c
  3734   0021C0  3249               	rrcf	(??_floorf+4)^0,f,c
  3735   0021C2  3248               	rrcf	(??_floorf+3)^0,f,c
  3736   0021C4  3247               	rrcf	(??_floorf+2)^0,f,c
  3737   0021C6  3246               	rrcf	(??_floorf+1)^0,f,c
  3738   0021C8  2E45               	decfsz	??_floorf^0,f,c
  3739   0021CA  EFDA  F010         	goto	u2965
  3740   0021CE                     u2967:
  3741   0021CE  C046  F04B         	movff	??_floorf+1,floorf@m
  3742   0021D2  C047  F04C         	movff	??_floorf+2,floorf@m+1
  3743   0021D6  C048  F04D         	movff	??_floorf+3,floorf@m+2
  3744   0021DA  C049  F04E         	movff	??_floorf+4,floorf@m+3
  3745   0021DE  504B               	movf	floorf@m^0,w,c
  3746   0021E0  1451               	andwf	floorf@u^0,w,c
  3747   0021E2  6E45               	movwf	??_floorf^0,c
  3748   0021E4  504C               	movf	(floorf@m+1)^0,w,c
  3749   0021E6  1452               	andwf	(floorf@u+1)^0,w,c
  3750   0021E8  6E46               	movwf	(??_floorf+1)^0,c
  3751   0021EA  504D               	movf	(floorf@m+2)^0,w,c
  3752   0021EC  1453               	andwf	(floorf@u+2)^0,w,c
  3753   0021EE  6E47               	movwf	(??_floorf+2)^0,c
  3754   0021F0  504E               	movf	(floorf@m+3)^0,w,c
  3755   0021F2  1454               	andwf	(floorf@u+3)^0,w,c
  3756   0021F4  6E48               	movwf	(??_floorf+3)^0,c
  3757   0021F6  5045               	movf	??_floorf^0,w,c
  3758   0021F8  1046               	iorwf	(??_floorf+1)^0,w,c
  3759   0021FA  1047               	iorwf	(??_floorf+2)^0,w,c
  3760   0021FC  1048               	iorwf	(??_floorf+3)^0,w,c
  3761   0021FE  A4D8               	btfss	status,2,c
  3762   002200  EF04  F011         	goto	u2971
  3763   002204  EF06  F011         	goto	u2970
  3764   002208                     u2971:
  3765   002208  EF08  F011         	goto	l2812
  3766   00220C                     u2970:
  3767   00220C  EFBF  F010         	goto	l2804
  3768   002210                     l2812:
  3769   002210  C051  F045         	movff	floorf@u,??_floorf
  3770   002214  C052  F046         	movff	floorf@u+1,??_floorf+1
  3771   002218  C053  F047         	movff	floorf@u+2,??_floorf+2
  3772   00221C  C054  F048         	movff	floorf@u+3,??_floorf+3
  3773   002220  0E20               	movlw	32
  3774   002222  EF18  F011         	goto	u2980
  3775   002226                     u2985:
  3776   002226  90D8               	bcf	status,0,c
  3777   002228  3248               	rrcf	(??_floorf+3)^0,f,c
  3778   00222A  3247               	rrcf	(??_floorf+2)^0,f,c
  3779   00222C  3246               	rrcf	(??_floorf+1)^0,f,c
  3780   00222E  3245               	rrcf	??_floorf^0,f,c
  3781   002230                     u2980:
  3782   002230  2EE8               	decfsz	wreg,f,c
  3783   002232  EF13  F011         	goto	u2985
  3784   002236  5045               	movf	??_floorf^0,w,c
  3785   002238  1046               	iorwf	(??_floorf+1)^0,w,c
  3786   00223A  1047               	iorwf	(??_floorf+2)^0,w,c
  3787   00223C  1048               	iorwf	(??_floorf+3)^0,w,c
  3788   00223E  B4D8               	btfsc	status,2,c
  3789   002240  EF24  F011         	goto	u2991
  3790   002244  EF26  F011         	goto	u2990
  3791   002248                     u2991:
  3792   002248  EF2E  F011         	goto	l916
  3793   00224C                     u2990:
  3794   00224C  504B               	movf	floorf@m^0,w,c
  3795   00224E  2651               	addwf	floorf@u^0,f,c
  3796   002250  504C               	movf	(floorf@m+1)^0,w,c
  3797   002252  2252               	addwfc	(floorf@u+1)^0,f,c
  3798   002254  504D               	movf	(floorf@m+2)^0,w,c
  3799   002256  2253               	addwfc	(floorf@u+2)^0,f,c
  3800   002258  504E               	movf	(floorf@m+3)^0,w,c
  3801   00225A  2254               	addwfc	(floorf@u+3)^0,f,c
  3802   00225C                     l916:
  3803   00225C  1C4B               	comf	floorf@m^0,w,c
  3804   00225E  6E45               	movwf	??_floorf^0,c
  3805   002260  1C4C               	comf	(floorf@m+1)^0,w,c
  3806   002262  6E46               	movwf	(??_floorf+1)^0,c
  3807   002264  1C4D               	comf	(floorf@m+2)^0,w,c
  3808   002266  6E47               	movwf	(??_floorf+2)^0,c
  3809   002268  1C4E               	comf	(floorf@m+3)^0,w,c
  3810   00226A  6E48               	movwf	(??_floorf+3)^0,c
  3811   00226C  5045               	movf	??_floorf^0,w,c
  3812   00226E  1651               	andwf	floorf@u^0,f,c
  3813   002270  5046               	movf	(??_floorf+1)^0,w,c
  3814   002272  1652               	andwf	(floorf@u+1)^0,f,c
  3815   002274  5047               	movf	(??_floorf+2)^0,w,c
  3816   002276  1653               	andwf	(floorf@u+2)^0,f,c
  3817   002278  5048               	movf	(??_floorf+3)^0,w,c
  3818   00227A  1654               	andwf	(floorf@u+3)^0,f,c
  3819   00227C  EF84  F011         	goto	l2824
  3820   002280                     l2816:
  3821   002280  C051  F045         	movff	floorf@u,??_floorf
  3822   002284  C052  F046         	movff	floorf@u+1,??_floorf+1
  3823   002288  C053  F047         	movff	floorf@u+2,??_floorf+2
  3824   00228C  C054  F048         	movff	floorf@u+3,??_floorf+3
  3825   002290  0E20               	movlw	32
  3826   002292  EF50  F011         	goto	u3000
  3827   002296                     u3005:
  3828   002296  90D8               	bcf	status,0,c
  3829   002298  3248               	rrcf	(??_floorf+3)^0,f,c
  3830   00229A  3247               	rrcf	(??_floorf+2)^0,f,c
  3831   00229C  3246               	rrcf	(??_floorf+1)^0,f,c
  3832   00229E  3245               	rrcf	??_floorf^0,f,c
  3833   0022A0                     u3000:
  3834   0022A0  2EE8               	decfsz	wreg,f,c
  3835   0022A2  EF4B  F011         	goto	u3005
  3836   0022A6  5045               	movf	??_floorf^0,w,c
  3837   0022A8  1046               	iorwf	(??_floorf+1)^0,w,c
  3838   0022AA  1047               	iorwf	(??_floorf+2)^0,w,c
  3839   0022AC  1048               	iorwf	(??_floorf+3)^0,w,c
  3840   0022AE  A4D8               	btfss	status,2,c
  3841   0022B0  EF5C  F011         	goto	u3011
  3842   0022B4  EF5E  F011         	goto	u3010
  3843   0022B8                     u3011:
  3844   0022B8  EF68  F011         	goto	l2820
  3845   0022BC                     u3010:
  3846   0022BC  0E00               	movlw	0
  3847   0022BE  6E51               	movwf	floorf@u^0,c
  3848   0022C0  0E00               	movlw	0
  3849   0022C2  6E52               	movwf	(floorf@u+1)^0,c
  3850   0022C4  0E00               	movlw	0
  3851   0022C6  6E53               	movwf	(floorf@u+2)^0,c
  3852   0022C8  0E00               	movlw	0
  3853   0022CA  6E54               	movwf	(floorf@u+3)^0,c
  3854   0022CC  EF84  F011         	goto	l2824
  3855   0022D0                     l2820:
  3856   0022D0  90D8               	bcf	status,0,c
  3857   0022D2  3451               	rlcf	floorf@u^0,w,c
  3858   0022D4  6E45               	movwf	??_floorf^0,c
  3859   0022D6  3452               	rlcf	(floorf@u+1)^0,w,c
  3860   0022D8  6E46               	movwf	(??_floorf+1)^0,c
  3861   0022DA  3453               	rlcf	(floorf@u+2)^0,w,c
  3862   0022DC  6E47               	movwf	(??_floorf+2)^0,c
  3863   0022DE  3454               	rlcf	(floorf@u+3)^0,w,c
  3864   0022E0  6E48               	movwf	(??_floorf+3)^0,c
  3865   0022E2  5045               	movf	??_floorf^0,w,c
  3866   0022E4  1046               	iorwf	(??_floorf+1)^0,w,c
  3867   0022E6  1047               	iorwf	(??_floorf+2)^0,w,c
  3868   0022E8  1048               	iorwf	(??_floorf+3)^0,w,c
  3869   0022EA  B4D8               	btfsc	status,2,c
  3870   0022EC  EF7A  F011         	goto	u3021
  3871   0022F0  EF7C  F011         	goto	u3020
  3872   0022F4                     u3021:
  3873   0022F4  EF84  F011         	goto	l2824
  3874   0022F8                     u3020:
  3875   0022F8  0E00               	movlw	0
  3876   0022FA  6E51               	movwf	floorf@u^0,c
  3877   0022FC  0E00               	movlw	0
  3878   0022FE  6E52               	movwf	(floorf@u+1)^0,c
  3879   002300  0E80               	movlw	128
  3880   002302  6E53               	movwf	(floorf@u+2)^0,c
  3881   002304  0EBF               	movlw	191
  3882   002306  6E54               	movwf	(floorf@u+3)^0,c
  3883   002308                     l2824:
  3884   002308  C051  F041         	movff	floorf@u,?_floorf
  3885   00230C  C052  F042         	movff	floorf@u+1,?_floorf+1
  3886   002310  C053  F043         	movff	floorf@u+2,?_floorf+2
  3887   002314  C054  F044         	movff	floorf@u+3,?_floorf+3
  3888   002318                     l913:
  3889   002318  0012               	return		;funcret
  3890   00231A                     __end_of_floorf:
  3891                           	callstack 0
  3892                           
  3893 ;; *************** function ___fpclassifyf *****************
  3894 ;; Defined at:
  3895 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  x               4    0[COMRAM] float 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  u               4   10[COMRAM] struct .
  3900 ;;  e               2    8[COMRAM] int 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  2    0[COMRAM] int 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3910 ;;      Params:         4       0       0       0       0       0       0       0       0
  3911 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3912 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3913 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3914 ;;Total ram usage:       14 bytes
  3915 ;; Hardware stack levels used: 1
  3916 ;; Hardware stack levels required when called: 1
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_efgtoa
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text15
  3925   0027FA                     __ptext15:
  3926                           	callstack 0
  3927   0027FA                     ___fpclassifyf:
  3928                           	callstack 25
  3929   0027FA  C0C7  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3930   0027FE  C0C8  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3931   002802  C0C9  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3932   002806  C0CA  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3933   00280A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  3934   00280E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3935   002812  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3936   002816  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3937   00281A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3938   00281E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3939   002822  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3940   002826  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3941   00282A  0E18               	movlw	24
  3942   00282C  EF1D  F014         	goto	u2840
  3943   002830                     u2845:
  3944   002830  90D8               	bcf	status,0,c
  3945   002832  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  3946   002834  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  3947   002836  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  3948   002838  3205               	rrcf	??___fpclassifyf^0,f,c
  3949   00283A                     u2840:
  3950   00283A  2EE8               	decfsz	wreg,f,c
  3951   00283C  EF18  F014         	goto	u2845
  3952   002840  5005               	movf	??___fpclassifyf^0,w,c
  3953   002842  6E09               	movwf	___fpclassifyf@e^0,c
  3954   002844  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  3955   002846  5009               	movf	___fpclassifyf@e^0,w,c
  3956   002848  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3957   00284A  A4D8               	btfss	status,2,c
  3958   00284C  EF2A  F014         	goto	u2851
  3959   002850  EF2C  F014         	goto	u2850
  3960   002854                     u2851:
  3961   002854  EF4C  F014         	goto	l2782
  3962   002858                     u2850:
  3963   002858  90D8               	bcf	status,0,c
  3964   00285A  340B               	rlcf	___fpclassifyf@u^0,w,c
  3965   00285C  6E05               	movwf	??___fpclassifyf^0,c
  3966   00285E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3967   002860  6E06               	movwf	(??___fpclassifyf+1)^0,c
  3968   002862  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3969   002864  6E07               	movwf	(??___fpclassifyf+2)^0,c
  3970   002866  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3971   002868  6E08               	movwf	(??___fpclassifyf+3)^0,c
  3972   00286A  5005               	movf	??___fpclassifyf^0,w,c
  3973   00286C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  3974   00286E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  3975   002870  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  3976   002872  A4D8               	btfss	status,2,c
  3977   002874  EF3E  F014         	goto	u2861
  3978   002878  EF40  F014         	goto	u2860
  3979   00287C                     u2861:
  3980   00287C  EF46  F014         	goto	l2778
  3981   002880                     u2860:
  3982   002880  0E00               	movlw	0
  3983   002882  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3984   002884  0E02               	movlw	2
  3985   002886  6E01               	movwf	?___fpclassifyf^0,c
  3986   002888  EF7B  F014         	goto	l906
  3987   00288C                     l2778:
  3988   00288C  0E00               	movlw	0
  3989   00288E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3990   002890  0E03               	movlw	3
  3991   002892  6E01               	movwf	?___fpclassifyf^0,c
  3992   002894  EF7B  F014         	goto	l906
  3993   002898                     l2782:
  3994   002898  2809               	incf	___fpclassifyf@e^0,w,c
  3995   00289A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3996   00289C  A4D8               	btfss	status,2,c
  3997   00289E  EF53  F014         	goto	u2871
  3998   0028A2  EF55  F014         	goto	u2870
  3999   0028A6                     u2871:
  4000   0028A6  EF77  F014         	goto	l2788
  4001   0028AA                     u2870:
  4002   0028AA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4003   0028AE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4004   0028B2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4005   0028B6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4006   0028BA  0E09               	movlw	9
  4007   0028BC                     u2885:
  4008   0028BC  90D8               	bcf	status,0,c
  4009   0028BE  3605               	rlcf	??___fpclassifyf^0,f,c
  4010   0028C0  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4011   0028C2  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4012   0028C4  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4013   0028C6  2EE8               	decfsz	wreg,f,c
  4014   0028C8  EF5E  F014         	goto	u2885
  4015   0028CC  5005               	movf	??___fpclassifyf^0,w,c
  4016   0028CE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4017   0028D0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4018   0028D2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4019   0028D4  B4D8               	btfsc	status,2,c
  4020   0028D6  EF6F  F014         	goto	u2891
  4021   0028DA  EF72  F014         	goto	u2890
  4022   0028DE                     u2891:
  4023   0028DE  0E01               	movlw	1
  4024   0028E0  EF73  F014         	goto	u2900
  4025   0028E4                     u2890:
  4026   0028E4  0E00               	movlw	0
  4027   0028E6                     u2900:
  4028   0028E6  6E01               	movwf	?___fpclassifyf^0,c
  4029   0028E8  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4030   0028EA  EF7B  F014         	goto	l906
  4031   0028EE                     l2788:
  4032   0028EE  0E00               	movlw	0
  4033   0028F0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4034   0028F2  0E04               	movlw	4
  4035   0028F4  6E01               	movwf	?___fpclassifyf^0,c
  4036   0028F6                     l906:
  4037   0028F6  0012               	return		;funcret
  4038   0028F8                     __end_of___fpclassifyf:
  4039                           	callstack 0
  4040                           
  4041 ;; *************** function ___fltol *****************
  4042 ;; Defined at:
  4043 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  f1              4    0[COMRAM] int 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  exp1            1    9[COMRAM] unsigned char 
  4048 ;;  sign1           1    8[COMRAM] unsigned char 
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  4    0[COMRAM] long 
  4051 ;; Registers used:
  4052 ;;		wreg, status,2, status,0
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4058 ;;      Params:         4       0       0       0       0       0       0       0       0
  4059 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4060 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4061 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4062 ;;Total ram usage:       10 bytes
  4063 ;; Hardware stack levels used: 1
  4064 ;; Hardware stack levels required when called: 1
  4065 ;; This function calls:
  4066 ;;		Nothing
  4067 ;; This function is called by:
  4068 ;;		_efgtoa
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text16
  4073   0025F0                     __ptext16:
  4074                           	callstack 0
  4075   0025F0                     ___fltol:
  4076                           	callstack 25
  4077   0025F0  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4078   0025F2  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4079   0025F4  6E0A               	movwf	___fltol@exp1^0,c
  4080   0025F6  500A               	movf	___fltol@exp1^0,w,c
  4081   0025F8  A4D8               	btfss	status,2,c
  4082   0025FA  EF01  F013         	goto	u2751
  4083   0025FE  EF03  F013         	goto	u2750
  4084   002602                     u2751:
  4085   002602  EF0D  F013         	goto	l2718
  4086   002606                     u2750:
  4087   002606                     l2714:
  4088   002606  0E00               	movlw	0
  4089   002608  6E01               	movwf	?___fltol^0,c
  4090   00260A  0E00               	movlw	0
  4091   00260C  6E02               	movwf	(?___fltol+1)^0,c
  4092   00260E  0E00               	movlw	0
  4093   002610  6E03               	movwf	(?___fltol+2)^0,c
  4094   002612  0E00               	movlw	0
  4095   002614  6E04               	movwf	(?___fltol+3)^0,c
  4096   002616  EF7A  F013         	goto	l394
  4097   00261A                     l2718:
  4098   00261A  C001  F005         	movff	___fltol@f1,??___fltol
  4099   00261E  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4100   002622  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4101   002626  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4102   00262A  0E20               	movlw	32
  4103   00262C  EF1D  F013         	goto	u2760
  4104   002630                     u2765:
  4105   002630  90D8               	bcf	status,0,c
  4106   002632  3208               	rrcf	(??___fltol+3)^0,f,c
  4107   002634  3207               	rrcf	(??___fltol+2)^0,f,c
  4108   002636  3206               	rrcf	(??___fltol+1)^0,f,c
  4109   002638  3205               	rrcf	??___fltol^0,f,c
  4110   00263A                     u2760:
  4111   00263A  2EE8               	decfsz	wreg,f,c
  4112   00263C  EF18  F013         	goto	u2765
  4113   002640  5005               	movf	??___fltol^0,w,c
  4114   002642  6E09               	movwf	___fltol@sign1^0,c
  4115   002644  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4116   002646  0EFF               	movlw	255
  4117   002648  1601               	andwf	___fltol@f1^0,f,c
  4118   00264A  0EFF               	movlw	255
  4119   00264C  1602               	andwf	(___fltol@f1+1)^0,f,c
  4120   00264E  0EFF               	movlw	255
  4121   002650  1603               	andwf	(___fltol@f1+2)^0,f,c
  4122   002652  0E00               	movlw	0
  4123   002654  1604               	andwf	(___fltol@f1+3)^0,f,c
  4124   002656  0E96               	movlw	150
  4125   002658  5E0A               	subwf	___fltol@exp1^0,f,c
  4126   00265A  BE0A               	btfsc	___fltol@exp1^0,7,c
  4127   00265C  EF34  F013         	goto	u2770
  4128   002660  EF32  F013         	goto	u2771
  4129   002664                     u2771:
  4130   002664  EF4A  F013         	goto	l2738
  4131   002668                     u2770:
  4132   002668  500A               	movf	___fltol@exp1^0,w,c
  4133   00266A  0A80               	xorlw	128
  4134   00266C  0F97               	addlw	151
  4135   00266E  B0D8               	btfsc	status,0,c
  4136   002670  EF3C  F013         	goto	u2781
  4137   002674  EF3E  F013         	goto	u2780
  4138   002678                     u2781:
  4139   002678  EF40  F013         	goto	l2734
  4140   00267C                     u2780:
  4141   00267C  EF03  F013         	goto	l2714
  4142   002680                     l2734:
  4143   002680  90D8               	bcf	status,0,c
  4144   002682  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4145   002684  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4146   002686  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4147   002688  3201               	rrcf	___fltol@f1^0,f,c
  4148   00268A  3E0A               	incfsz	___fltol@exp1^0,f,c
  4149   00268C  EF40  F013         	goto	l2734
  4150   002690  EF62  F013         	goto	l2748
  4151   002694                     l2738:
  4152   002694  0E1F               	movlw	31
  4153   002696  640A               	cpfsgt	___fltol@exp1^0,c
  4154   002698  EF50  F013         	goto	u2791
  4155   00269C  EF52  F013         	goto	u2790
  4156   0026A0                     u2791:
  4157   0026A0  EF5A  F013         	goto	l2746
  4158   0026A4                     u2790:
  4159   0026A4  EF03  F013         	goto	l2714
  4160   0026A8                     l2744:
  4161   0026A8  90D8               	bcf	status,0,c
  4162   0026AA  3601               	rlcf	___fltol@f1^0,f,c
  4163   0026AC  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4164   0026AE  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4165   0026B0  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4166   0026B2  060A               	decf	___fltol@exp1^0,f,c
  4167   0026B4                     l2746:
  4168   0026B4  500A               	movf	___fltol@exp1^0,w,c
  4169   0026B6  A4D8               	btfss	status,2,c
  4170   0026B8  EF60  F013         	goto	u2801
  4171   0026BC  EF62  F013         	goto	u2800
  4172   0026C0                     u2801:
  4173   0026C0  EF54  F013         	goto	l2744
  4174   0026C4                     u2800:
  4175   0026C4                     l2748:
  4176   0026C4  5009               	movf	___fltol@sign1^0,w,c
  4177   0026C6  B4D8               	btfsc	status,2,c
  4178   0026C8  EF68  F013         	goto	u2811
  4179   0026CC  EF6A  F013         	goto	u2810
  4180   0026D0                     u2811:
  4181   0026D0  EF72  F013         	goto	l2752
  4182   0026D4                     u2810:
  4183   0026D4  1E04               	comf	(___fltol@f1+3)^0,f,c
  4184   0026D6  1E03               	comf	(___fltol@f1+2)^0,f,c
  4185   0026D8  1E02               	comf	(___fltol@f1+1)^0,f,c
  4186   0026DA  6C01               	negf	___fltol@f1^0,c
  4187   0026DC  0E00               	movlw	0
  4188   0026DE  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4189   0026E0  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4190   0026E2  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4191   0026E4                     l2752:
  4192   0026E4  C001  F001         	movff	___fltol@f1,?___fltol
  4193   0026E8  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4194   0026EC  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4195   0026F0  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4196   0026F4                     l394:
  4197   0026F4  0012               	return		;funcret
  4198   0026F6                     __end_of___fltol:
  4199                           	callstack 0
  4200                           
  4201 ;; *************** function ___flsub *****************
  4202 ;; Defined at:
  4203 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  b               4   39[COMRAM] long 
  4206 ;;  a               4   43[COMRAM] long 
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;		None
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  4   39[COMRAM] long 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2, status,0, cstack
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4218 ;;      Params:         8       0       0       0       0       0       0       0       0
  4219 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4221 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4222 ;;Total ram usage:        8 bytes
  4223 ;; Hardware stack levels used: 1
  4224 ;; Hardware stack levels required when called: 2
  4225 ;; This function calls:
  4226 ;;		___fladd
  4227 ;; This function is called by:
  4228 ;;		_efgtoa
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text17
  4233   002DE8                     __ptext17:
  4234                           	callstack 0
  4235   002DE8                     ___flsub:
  4236                           	callstack 24
  4237   002DE8  0E00               	movlw	0
  4238   002DEA  1A2C               	xorwf	___flsub@a^0,f,c
  4239   002DEC  0E00               	movlw	0
  4240   002DEE  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4241   002DF0  0E00               	movlw	0
  4242   002DF2  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4243   002DF4  0E80               	movlw	128
  4244   002DF6  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4245   002DF8  C028  F001         	movff	___flsub@b,___fladd@b
  4246   002DFC  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4247   002E00  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4248   002E04  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4249   002E08  C02C  F005         	movff	___flsub@a,___fladd@a
  4250   002E0C  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4251   002E10  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4252   002E14  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4253   002E18  EC0E  F009         	call	___fladd	;wreg free
  4254   002E1C  C001  F028         	movff	?___fladd,?___flsub
  4255   002E20  C002  F029         	movff	?___fladd+1,?___flsub+1
  4256   002E24  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4257   002E28  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4258   002E2C  0012               	return		;funcret
  4259   002E2E                     __end_of___flsub:
  4260                           	callstack 0
  4261                           
  4262 ;; *************** function ___fladd *****************
  4263 ;; Defined at:
  4264 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  b               4    0[COMRAM] long 
  4267 ;;  a               4    4[COMRAM] long 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  grs             1   15[COMRAM] unsigned char 
  4270 ;;  bexp            1   14[COMRAM] unsigned char 
  4271 ;;  aexp            1   13[COMRAM] unsigned char 
  4272 ;;  signs           1   12[COMRAM] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  4    0[COMRAM] unsigned char 
  4275 ;; Registers used:
  4276 ;;		wreg, status,2, status,0
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4282 ;;      Params:         8       0       0       0       0       0       0       0       0
  4283 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4284 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4285 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4286 ;;Total ram usage:       16 bytes
  4287 ;; Hardware stack levels used: 1
  4288 ;; Hardware stack levels required when called: 1
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		___flsub
  4293 ;;		_efgtoa
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text18
  4298   00121C                     __ptext18:
  4299                           	callstack 0
  4300   00121C                     ___fladd:
  4301                           	callstack 24
  4302   00121C  5004               	movf	(___fladd@b+3)^0,w,c
  4303   00121E  0B80               	andlw	128
  4304   001220  6E0D               	movwf	___fladd@signs^0,c
  4305   001222  5004               	movf	(___fladd@b+3)^0,w,c
  4306   001224  2404               	addwf	(___fladd@b+3)^0,w,c
  4307   001226  6E0F               	movwf	___fladd@bexp^0,c
  4308   001228  AE03               	btfss	(___fladd@b+2)^0,7,c
  4309   00122A  EF19  F009         	goto	u1841
  4310   00122E  EF1B  F009         	goto	u1840
  4311   001232                     u1841:
  4312   001232  EF1C  F009         	goto	l2182
  4313   001236                     u1840:
  4314   001236  800F               	bsf	___fladd@bexp^0,0,c
  4315   001238                     l2182:
  4316   001238  500F               	movf	___fladd@bexp^0,w,c
  4317   00123A  B4D8               	btfsc	status,2,c
  4318   00123C  EF22  F009         	goto	u1851
  4319   001240  EF24  F009         	goto	u1850
  4320   001244                     u1851:
  4321   001244  EF39  F009         	goto	l2192
  4322   001248                     u1850:
  4323   001248  280F               	incf	___fladd@bexp^0,w,c
  4324   00124A  A4D8               	btfss	status,2,c
  4325   00124C  EF2A  F009         	goto	u1861
  4326   001250  EF2C  F009         	goto	u1860
  4327   001254                     u1861:
  4328   001254  EF34  F009         	goto	l2188
  4329   001258                     u1860:
  4330   001258  0E00               	movlw	0
  4331   00125A  6E01               	movwf	___fladd@b^0,c
  4332   00125C  0E00               	movlw	0
  4333   00125E  6E02               	movwf	(___fladd@b+1)^0,c
  4334   001260  0E00               	movlw	0
  4335   001262  6E03               	movwf	(___fladd@b+2)^0,c
  4336   001264  0E00               	movlw	0
  4337   001266  6E04               	movwf	(___fladd@b+3)^0,c
  4338   001268                     l2188:
  4339   001268  8E03               	bsf	(___fladd@b+2)^0,7,c
  4340   00126A  0E00               	movlw	0
  4341   00126C  6E04               	movwf	(___fladd@b+3)^0,c
  4342   00126E  EF41  F009         	goto	l2194
  4343   001272                     l2192:
  4344   001272  0E00               	movlw	0
  4345   001274  6E01               	movwf	___fladd@b^0,c
  4346   001276  0E00               	movlw	0
  4347   001278  6E02               	movwf	(___fladd@b+1)^0,c
  4348   00127A  0E00               	movlw	0
  4349   00127C  6E03               	movwf	(___fladd@b+2)^0,c
  4350   00127E  0E00               	movlw	0
  4351   001280  6E04               	movwf	(___fladd@b+3)^0,c
  4352   001282                     l2194:
  4353   001282  5008               	movf	(___fladd@a+3)^0,w,c
  4354   001284  0B80               	andlw	128
  4355   001286  6E0E               	movwf	___fladd@aexp^0,c
  4356   001288  500D               	movf	___fladd@signs^0,w,c
  4357   00128A  180E               	xorwf	___fladd@aexp^0,w,c
  4358   00128C  B4D8               	btfsc	status,2,c
  4359   00128E  EF4B  F009         	goto	u1871
  4360   001292  EF4D  F009         	goto	u1870
  4361   001296                     u1871:
  4362   001296  EF4E  F009         	goto	l2200
  4363   00129A                     u1870:
  4364   00129A  8C0D               	bsf	___fladd@signs^0,6,c
  4365   00129C                     l2200:
  4366   00129C  5008               	movf	(___fladd@a+3)^0,w,c
  4367   00129E  2408               	addwf	(___fladd@a+3)^0,w,c
  4368   0012A0  6E0E               	movwf	___fladd@aexp^0,c
  4369   0012A2  AE07               	btfss	(___fladd@a+2)^0,7,c
  4370   0012A4  EF56  F009         	goto	u1881
  4371   0012A8  EF58  F009         	goto	u1880
  4372   0012AC                     u1881:
  4373   0012AC  EF59  F009         	goto	l2206
  4374   0012B0                     u1880:
  4375   0012B0  800E               	bsf	___fladd@aexp^0,0,c
  4376   0012B2                     l2206:
  4377   0012B2  500E               	movf	___fladd@aexp^0,w,c
  4378   0012B4  B4D8               	btfsc	status,2,c
  4379   0012B6  EF5F  F009         	goto	u1891
  4380   0012BA  EF61  F009         	goto	u1890
  4381   0012BE                     u1891:
  4382   0012BE  EF76  F009         	goto	l2216
  4383   0012C2                     u1890:
  4384   0012C2  280E               	incf	___fladd@aexp^0,w,c
  4385   0012C4  A4D8               	btfss	status,2,c
  4386   0012C6  EF67  F009         	goto	u1901
  4387   0012CA  EF69  F009         	goto	u1900
  4388   0012CE                     u1901:
  4389   0012CE  EF71  F009         	goto	l2212
  4390   0012D2                     u1900:
  4391   0012D2  0E00               	movlw	0
  4392   0012D4  6E05               	movwf	___fladd@a^0,c
  4393   0012D6  0E00               	movlw	0
  4394   0012D8  6E06               	movwf	(___fladd@a+1)^0,c
  4395   0012DA  0E00               	movlw	0
  4396   0012DC  6E07               	movwf	(___fladd@a+2)^0,c
  4397   0012DE  0E00               	movlw	0
  4398   0012E0  6E08               	movwf	(___fladd@a+3)^0,c
  4399   0012E2                     l2212:
  4400   0012E2  8E07               	bsf	(___fladd@a+2)^0,7,c
  4401   0012E4  0E00               	movlw	0
  4402   0012E6  6E08               	movwf	(___fladd@a+3)^0,c
  4403   0012E8  EF7E  F009         	goto	l2218
  4404   0012EC                     l2216:
  4405   0012EC  0E00               	movlw	0
  4406   0012EE  6E05               	movwf	___fladd@a^0,c
  4407   0012F0  0E00               	movlw	0
  4408   0012F2  6E06               	movwf	(___fladd@a+1)^0,c
  4409   0012F4  0E00               	movlw	0
  4410   0012F6  6E07               	movwf	(___fladd@a+2)^0,c
  4411   0012F8  0E00               	movlw	0
  4412   0012FA  6E08               	movwf	(___fladd@a+3)^0,c
  4413   0012FC                     l2218:
  4414   0012FC  500F               	movf	___fladd@bexp^0,w,c
  4415   0012FE  5C0E               	subwf	___fladd@aexp^0,w,c
  4416   001300  B0D8               	btfsc	status,0,c
  4417   001302  EF85  F009         	goto	u1911
  4418   001306  EF87  F009         	goto	u1910
  4419   00130A                     u1911:
  4420   00130A  EFAE  F009         	goto	l2254
  4421   00130E                     u1910:
  4422   00130E  AC0D               	btfss	___fladd@signs^0,6,c
  4423   001310  EF8C  F009         	goto	u1921
  4424   001314  EF8E  F009         	goto	u1920
  4425   001318                     u1921:
  4426   001318  EF90  F009         	goto	l2224
  4427   00131C                     u1920:
  4428   00131C  0E80               	movlw	128
  4429   00131E  1A0D               	xorwf	___fladd@signs^0,f,c
  4430   001320                     l2224:
  4431   001320  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4432   001324  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4433   001328  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4434   00132C  C001  F010         	movff	___fladd@b,___fladd@grs
  4435   001330  C005  F001         	movff	___fladd@a,___fladd@b
  4436   001334  C010  F005         	movff	___fladd@grs,___fladd@a
  4437   001338  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4438   00133C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4439   001340  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4440   001344  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4441   001348  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4442   00134C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4443   001350  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4444   001354  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4445   001358  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4446   00135C                     l2254:
  4447   00135C  0E00               	movlw	0
  4448   00135E  6E10               	movwf	___fladd@grs^0,c
  4449   001360  500F               	movf	___fladd@bexp^0,w,c
  4450   001362  C00E  F009         	movff	___fladd@aexp,??___fladd
  4451   001366  6A0A               	clrf	(??___fladd+1)^0,c
  4452   001368  5E09               	subwf	??___fladd^0,f,c
  4453   00136A  0E00               	movlw	0
  4454   00136C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4455   00136E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4456   001370  EFC3  F009         	goto	u1931
  4457   001374  500A               	movf	(??___fladd+1)^0,w,c
  4458   001376  E109               	bnz	u1930
  4459   001378  0E1A               	movlw	26
  4460   00137A  5C09               	subwf	??___fladd^0,w,c
  4461   00137C  A0D8               	btfss	status,0,c
  4462   00137E  EFC3  F009         	goto	u1931
  4463   001382  EFC5  F009         	goto	u1930
  4464   001386                     u1931:
  4465   001386  EFFC  F009         	goto	l626
  4466   00138A                     u1930:
  4467   00138A  5001               	movf	___fladd@b^0,w,c
  4468   00138C  1002               	iorwf	(___fladd@b+1)^0,w,c
  4469   00138E  1003               	iorwf	(___fladd@b+2)^0,w,c
  4470   001390  1004               	iorwf	(___fladd@b+3)^0,w,c
  4471   001392  A4D8               	btfss	status,2,c
  4472   001394  EFCE  F009         	goto	u1941
  4473   001398  EFD1  F009         	goto	u1940
  4474   00139C                     u1941:
  4475   00139C  0E01               	movlw	1
  4476   00139E  EFD2  F009         	goto	u1950
  4477   0013A2                     u1940:
  4478   0013A2  0E00               	movlw	0
  4479   0013A4                     u1950:
  4480   0013A4  6E10               	movwf	___fladd@grs^0,c
  4481   0013A6  0E00               	movlw	0
  4482   0013A8  6E01               	movwf	___fladd@b^0,c
  4483   0013AA  0E00               	movlw	0
  4484   0013AC  6E02               	movwf	(___fladd@b+1)^0,c
  4485   0013AE  0E00               	movlw	0
  4486   0013B0  6E03               	movwf	(___fladd@b+2)^0,c
  4487   0013B2  0E00               	movlw	0
  4488   0013B4  6E04               	movwf	(___fladd@b+3)^0,c
  4489   0013B6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4490   0013BA  EF05  F00A         	goto	l625
  4491   0013BE                     l627:
  4492   0013BE  A010               	btfss	___fladd@grs^0,0,c
  4493   0013C0  EFE4  F009         	goto	u1961
  4494   0013C4  EFE6  F009         	goto	u1960
  4495   0013C8                     u1961:
  4496   0013C8  EFEC  F009         	goto	l2266
  4497   0013CC                     u1960:
  4498   0013CC  90D8               	bcf	status,0,c
  4499   0013CE  3010               	rrcf	___fladd@grs^0,w,c
  4500   0013D0  0901               	iorlw	1
  4501   0013D2  6E10               	movwf	___fladd@grs^0,c
  4502   0013D4  EFEE  F009         	goto	l2268
  4503   0013D8                     l2266:
  4504   0013D8  90D8               	bcf	status,0,c
  4505   0013DA  3210               	rrcf	___fladd@grs^0,f,c
  4506   0013DC                     l2268:
  4507   0013DC  A001               	btfss	___fladd@b^0,0,c
  4508   0013DE  EFF3  F009         	goto	u1971
  4509   0013E2  EFF5  F009         	goto	u1970
  4510   0013E6                     u1971:
  4511   0013E6  EFF6  F009         	goto	l2272
  4512   0013EA                     u1970:
  4513   0013EA  8E10               	bsf	___fladd@grs^0,7,c
  4514   0013EC                     l2272:
  4515   0013EC  3404               	rlcf	(___fladd@b+3)^0,w,c
  4516   0013EE  3204               	rrcf	(___fladd@b+3)^0,f,c
  4517   0013F0  3203               	rrcf	(___fladd@b+2)^0,f,c
  4518   0013F2  3202               	rrcf	(___fladd@b+1)^0,f,c
  4519   0013F4  3201               	rrcf	___fladd@b^0,f,c
  4520   0013F6  2A0F               	incf	___fladd@bexp^0,f,c
  4521   0013F8                     l626:
  4522   0013F8  500E               	movf	___fladd@aexp^0,w,c
  4523   0013FA  5C0F               	subwf	___fladd@bexp^0,w,c
  4524   0013FC  A0D8               	btfss	status,0,c
  4525   0013FE  EF03  F00A         	goto	u1981
  4526   001402  EF05  F00A         	goto	u1980
  4527   001406                     u1981:
  4528   001406  EFDF  F009         	goto	l627
  4529   00140A                     u1980:
  4530   00140A                     l625:
  4531   00140A  BC0D               	btfsc	___fladd@signs^0,6,c
  4532   00140C  EF0A  F00A         	goto	u1991
  4533   001410  EF0C  F00A         	goto	u1990
  4534   001414                     u1991:
  4535   001414  EF4C  F00A         	goto	l2300
  4536   001418                     u1990:
  4537   001418  500F               	movf	___fladd@bexp^0,w,c
  4538   00141A  A4D8               	btfss	status,2,c
  4539   00141C  EF12  F00A         	goto	u2001
  4540   001420  EF14  F00A         	goto	u2000
  4541   001424                     u2001:
  4542   001424  EF1E  F00A         	goto	l2282
  4543   001428                     u2000:
  4544   001428  0E00               	movlw	0
  4545   00142A  6E01               	movwf	?___fladd^0,c
  4546   00142C  0E00               	movlw	0
  4547   00142E  6E02               	movwf	(?___fladd+1)^0,c
  4548   001430  0E00               	movlw	0
  4549   001432  6E03               	movwf	(?___fladd+2)^0,c
  4550   001434  0E00               	movlw	0
  4551   001436  6E04               	movwf	(?___fladd+3)^0,c
  4552   001438  EF6D  F00B         	goto	l634
  4553   00143C                     l2282:
  4554   00143C  5005               	movf	___fladd@a^0,w,c
  4555   00143E  2601               	addwf	___fladd@b^0,f,c
  4556   001440  5006               	movf	(___fladd@a+1)^0,w,c
  4557   001442  2202               	addwfc	(___fladd@b+1)^0,f,c
  4558   001444  5007               	movf	(___fladd@a+2)^0,w,c
  4559   001446  2203               	addwfc	(___fladd@b+2)^0,f,c
  4560   001448  5008               	movf	(___fladd@a+3)^0,w,c
  4561   00144A  2204               	addwfc	(___fladd@b+3)^0,f,c
  4562   00144C  A004               	btfss	(___fladd@b+3)^0,0,c
  4563   00144E  EF2B  F00A         	goto	u2011
  4564   001452  EF2D  F00A         	goto	u2010
  4565   001456                     u2011:
  4566   001456  EFD9  F00A         	goto	l2336
  4567   00145A                     u2010:
  4568   00145A  A010               	btfss	___fladd@grs^0,0,c
  4569   00145C  EF32  F00A         	goto	u2021
  4570   001460  EF34  F00A         	goto	u2020
  4571   001464                     u2021:
  4572   001464  EF3A  F00A         	goto	l2290
  4573   001468                     u2020:
  4574   001468  90D8               	bcf	status,0,c
  4575   00146A  3010               	rrcf	___fladd@grs^0,w,c
  4576   00146C  0901               	iorlw	1
  4577   00146E  6E10               	movwf	___fladd@grs^0,c
  4578   001470  EF3C  F00A         	goto	l2292
  4579   001474                     l2290:
  4580   001474  90D8               	bcf	status,0,c
  4581   001476  3210               	rrcf	___fladd@grs^0,f,c
  4582   001478                     l2292:
  4583   001478  A001               	btfss	___fladd@b^0,0,c
  4584   00147A  EF41  F00A         	goto	u2031
  4585   00147E  EF43  F00A         	goto	u2030
  4586   001482                     u2031:
  4587   001482  EF44  F00A         	goto	l2296
  4588   001486                     u2030:
  4589   001486  8E10               	bsf	___fladd@grs^0,7,c
  4590   001488                     l2296:
  4591   001488  3404               	rlcf	(___fladd@b+3)^0,w,c
  4592   00148A  3204               	rrcf	(___fladd@b+3)^0,f,c
  4593   00148C  3203               	rrcf	(___fladd@b+2)^0,f,c
  4594   00148E  3202               	rrcf	(___fladd@b+1)^0,f,c
  4595   001490  3201               	rrcf	___fladd@b^0,f,c
  4596   001492  2A0F               	incf	___fladd@bexp^0,f,c
  4597   001494  EFD9  F00A         	goto	l2336
  4598   001498                     l2300:
  4599   001498  5005               	movf	___fladd@a^0,w,c
  4600   00149A  5C01               	subwf	___fladd@b^0,w,c
  4601   00149C  5006               	movf	(___fladd@a+1)^0,w,c
  4602   00149E  5802               	subwfb	(___fladd@b+1)^0,w,c
  4603   0014A0  5007               	movf	(___fladd@a+2)^0,w,c
  4604   0014A2  5803               	subwfb	(___fladd@b+2)^0,w,c
  4605   0014A4  5004               	movf	(___fladd@b+3)^0,w,c
  4606   0014A6  0A80               	xorlw	128
  4607   0014A8  6E09               	movwf	??___fladd^0,c
  4608   0014AA  5008               	movf	(___fladd@a+3)^0,w,c
  4609   0014AC  0A80               	xorlw	128
  4610   0014AE  5809               	subwfb	??___fladd^0,w,c
  4611   0014B0  B0D8               	btfsc	status,0,c
  4612   0014B2  EF5D  F00A         	goto	u2041
  4613   0014B6  EF5F  F00A         	goto	u2040
  4614   0014BA                     u2041:
  4615   0014BA  EF8A  F00A         	goto	l2310
  4616   0014BE                     u2040:
  4617   0014BE  5001               	movf	___fladd@b^0,w,c
  4618   0014C0  5C05               	subwf	___fladd@a^0,w,c
  4619   0014C2  6E09               	movwf	??___fladd^0,c
  4620   0014C4  5002               	movf	(___fladd@b+1)^0,w,c
  4621   0014C6  5806               	subwfb	(___fladd@a+1)^0,w,c
  4622   0014C8  6E0A               	movwf	(??___fladd+1)^0,c
  4623   0014CA  5003               	movf	(___fladd@b+2)^0,w,c
  4624   0014CC  5807               	subwfb	(___fladd@a+2)^0,w,c
  4625   0014CE  6E0B               	movwf	(??___fladd+2)^0,c
  4626   0014D0  5004               	movf	(___fladd@b+3)^0,w,c
  4627   0014D2  5808               	subwfb	(___fladd@a+3)^0,w,c
  4628   0014D4  6E0C               	movwf	(??___fladd+3)^0,c
  4629   0014D6  0EFF               	movlw	255
  4630   0014D8  2409               	addwf	??___fladd^0,w,c
  4631   0014DA  6E01               	movwf	___fladd@b^0,c
  4632   0014DC  0EFF               	movlw	255
  4633   0014DE  200A               	addwfc	(??___fladd+1)^0,w,c
  4634   0014E0  6E02               	movwf	(___fladd@b+1)^0,c
  4635   0014E2  0EFF               	movlw	255
  4636   0014E4  200B               	addwfc	(??___fladd+2)^0,w,c
  4637   0014E6  6E03               	movwf	(___fladd@b+2)^0,c
  4638   0014E8  0EFF               	movlw	255
  4639   0014EA  200C               	addwfc	(??___fladd+3)^0,w,c
  4640   0014EC  6E04               	movwf	(___fladd@b+3)^0,c
  4641   0014EE  0E80               	movlw	128
  4642   0014F0  1A0D               	xorwf	___fladd@signs^0,f,c
  4643   0014F2  6C10               	negf	___fladd@grs^0,c
  4644   0014F4  5010               	movf	___fladd@grs^0,w,c
  4645   0014F6  A4D8               	btfss	status,2,c
  4646   0014F8  EF80  F00A         	goto	u2051
  4647   0014FC  EF82  F00A         	goto	u2050
  4648   001500                     u2051:
  4649   001500  EF92  F00A         	goto	l642
  4650   001504                     u2050:
  4651   001504  0E01               	movlw	1
  4652   001506  2601               	addwf	___fladd@b^0,f,c
  4653   001508  0E00               	movlw	0
  4654   00150A  2202               	addwfc	(___fladd@b+1)^0,f,c
  4655   00150C  2203               	addwfc	(___fladd@b+2)^0,f,c
  4656   00150E  2204               	addwfc	(___fladd@b+3)^0,f,c
  4657   001510  EF92  F00A         	goto	l642
  4658   001514                     l2310:
  4659   001514  5005               	movf	___fladd@a^0,w,c
  4660   001516  5E01               	subwf	___fladd@b^0,f,c
  4661   001518  5006               	movf	(___fladd@a+1)^0,w,c
  4662   00151A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4663   00151C  5007               	movf	(___fladd@a+2)^0,w,c
  4664   00151E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4665   001520  5008               	movf	(___fladd@a+3)^0,w,c
  4666   001522  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4667   001524                     l642:
  4668   001524  5001               	movf	___fladd@b^0,w,c
  4669   001526  1002               	iorwf	(___fladd@b+1)^0,w,c
  4670   001528  1003               	iorwf	(___fladd@b+2)^0,w,c
  4671   00152A  1004               	iorwf	(___fladd@b+3)^0,w,c
  4672   00152C  A4D8               	btfss	status,2,c
  4673   00152E  EF9B  F00A         	goto	u2061
  4674   001532  EF9D  F00A         	goto	u2060
  4675   001536                     u2061:
  4676   001536  EFD2  F00A         	goto	l2334
  4677   00153A                     u2060:
  4678   00153A  5010               	movf	___fladd@grs^0,w,c
  4679   00153C  A4D8               	btfss	status,2,c
  4680   00153E  EFA3  F00A         	goto	u2071
  4681   001542  EFA5  F00A         	goto	u2070
  4682   001546                     u2071:
  4683   001546  EFD2  F00A         	goto	l2334
  4684   00154A                     u2070:
  4685   00154A  0E00               	movlw	0
  4686   00154C  6E01               	movwf	?___fladd^0,c
  4687   00154E  0E00               	movlw	0
  4688   001550  6E02               	movwf	(?___fladd+1)^0,c
  4689   001552  0E00               	movlw	0
  4690   001554  6E03               	movwf	(?___fladd+2)^0,c
  4691   001556  0E00               	movlw	0
  4692   001558  6E04               	movwf	(?___fladd+3)^0,c
  4693   00155A  EF6D  F00B         	goto	l634
  4694   00155E                     l2318:
  4695   00155E  90D8               	bcf	status,0,c
  4696   001560  3601               	rlcf	___fladd@b^0,f,c
  4697   001562  3602               	rlcf	(___fladd@b+1)^0,f,c
  4698   001564  3603               	rlcf	(___fladd@b+2)^0,f,c
  4699   001566  3604               	rlcf	(___fladd@b+3)^0,f,c
  4700   001568  AE10               	btfss	___fladd@grs^0,7,c
  4701   00156A  EFB9  F00A         	goto	u2081
  4702   00156E  EFBB  F00A         	goto	u2080
  4703   001572                     u2081:
  4704   001572  EFBC  F00A         	goto	l2324
  4705   001576                     u2080:
  4706   001576  8001               	bsf	___fladd@b^0,0,c
  4707   001578                     l2324:
  4708   001578  A010               	btfss	___fladd@grs^0,0,c
  4709   00157A  EFC1  F00A         	goto	u2091
  4710   00157E  EFC3  F00A         	goto	u2090
  4711   001582                     u2091:
  4712   001582  EFC7  F00A         	goto	l2328
  4713   001586                     u2090:
  4714   001586  80D8               	bsf	status,0,c
  4715   001588  3610               	rlcf	___fladd@grs^0,f,c
  4716   00158A  EFC9  F00A         	goto	l2330
  4717   00158E                     l2328:
  4718   00158E  90D8               	bcf	status,0,c
  4719   001590  3610               	rlcf	___fladd@grs^0,f,c
  4720   001592                     l2330:
  4721   001592  500F               	movf	___fladd@bexp^0,w,c
  4722   001594  B4D8               	btfsc	status,2,c
  4723   001596  EFCF  F00A         	goto	u2101
  4724   00159A  EFD1  F00A         	goto	u2100
  4725   00159E                     u2101:
  4726   00159E  EFD2  F00A         	goto	l2334
  4727   0015A2                     u2100:
  4728   0015A2  060F               	decf	___fladd@bexp^0,f,c
  4729   0015A4                     l2334:
  4730   0015A4  AE03               	btfss	(___fladd@b+2)^0,7,c
  4731   0015A6  EFD7  F00A         	goto	u2111
  4732   0015AA  EFD9  F00A         	goto	u2110
  4733   0015AE                     u2111:
  4734   0015AE  EFAF  F00A         	goto	l2318
  4735   0015B2                     u2110:
  4736   0015B2                     l2336:
  4737   0015B2  0E00               	movlw	0
  4738   0015B4  6E0E               	movwf	___fladd@aexp^0,c
  4739   0015B6  AE10               	btfss	___fladd@grs^0,7,c
  4740   0015B8  EFE0  F00A         	goto	u2121
  4741   0015BC  EFE2  F00A         	goto	u2120
  4742   0015C0                     u2121:
  4743   0015C0  EFFA  F00A         	goto	l651
  4744   0015C4                     u2120:
  4745   0015C4  C010  F009         	movff	___fladd@grs,??___fladd
  4746   0015C8  0E7F               	movlw	127
  4747   0015CA  1609               	andwf	??___fladd^0,f,c
  4748   0015CC  B4D8               	btfsc	status,2,c
  4749   0015CE  EFEB  F00A         	goto	u2131
  4750   0015D2  EFED  F00A         	goto	u2130
  4751   0015D6                     u2131:
  4752   0015D6  EFF1  F00A         	goto	l652
  4753   0015DA                     u2130:
  4754   0015DA                     l2342:
  4755   0015DA  0E01               	movlw	1
  4756   0015DC  6E0E               	movwf	___fladd@aexp^0,c
  4757   0015DE  EFFA  F00A         	goto	l651
  4758   0015E2                     l652:
  4759   0015E2  A001               	btfss	___fladd@b^0,0,c
  4760   0015E4  EFF6  F00A         	goto	u2141
  4761   0015E8  EFF8  F00A         	goto	u2140
  4762   0015EC                     u2141:
  4763   0015EC  EFFA  F00A         	goto	l651
  4764   0015F0                     u2140:
  4765   0015F0  EFED  F00A         	goto	l2342
  4766   0015F4                     l651:
  4767   0015F4  500E               	movf	___fladd@aexp^0,w,c
  4768   0015F6  B4D8               	btfsc	status,2,c
  4769   0015F8  EF00  F00B         	goto	u2151
  4770   0015FC  EF02  F00B         	goto	u2150
  4771   001600                     u2151:
  4772   001600  EF2D  F00B         	goto	l2354
  4773   001604                     u2150:
  4774   001604  0E01               	movlw	1
  4775   001606  2601               	addwf	___fladd@b^0,f,c
  4776   001608  0E00               	movlw	0
  4777   00160A  2202               	addwfc	(___fladd@b+1)^0,f,c
  4778   00160C  2203               	addwfc	(___fladd@b+2)^0,f,c
  4779   00160E  2204               	addwfc	(___fladd@b+3)^0,f,c
  4780   001610  A004               	btfss	(___fladd@b+3)^0,0,c
  4781   001612  EF0D  F00B         	goto	u2161
  4782   001616  EF0F  F00B         	goto	u2160
  4783   00161A                     u2161:
  4784   00161A  EF2D  F00B         	goto	l2354
  4785   00161E                     u2160:
  4786   00161E  C001  F009         	movff	___fladd@b,??___fladd
  4787   001622  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4788   001626  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4789   00162A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4790   00162E  340C               	rlcf	(??___fladd+3)^0,w,c
  4791   001630  320C               	rrcf	(??___fladd+3)^0,f,c
  4792   001632  320B               	rrcf	(??___fladd+2)^0,f,c
  4793   001634  320A               	rrcf	(??___fladd+1)^0,f,c
  4794   001636  3209               	rrcf	??___fladd^0,f,c
  4795   001638  C009  F001         	movff	??___fladd,___fladd@b
  4796   00163C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4797   001640  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4798   001644  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4799   001648  280F               	incf	___fladd@bexp^0,w,c
  4800   00164A  B4D8               	btfsc	status,2,c
  4801   00164C  EF2A  F00B         	goto	u2171
  4802   001650  EF2C  F00B         	goto	u2170
  4803   001654                     u2171:
  4804   001654  EF2D  F00B         	goto	l2354
  4805   001658                     u2170:
  4806   001658  2A0F               	incf	___fladd@bexp^0,f,c
  4807   00165A                     l2354:
  4808   00165A  280F               	incf	___fladd@bexp^0,w,c
  4809   00165C  B4D8               	btfsc	status,2,c
  4810   00165E  EF33  F00B         	goto	u2181
  4811   001662  EF35  F00B         	goto	u2180
  4812   001666                     u2181:
  4813   001666  EF3D  F00B         	goto	l2358
  4814   00166A                     u2180:
  4815   00166A  500F               	movf	___fladd@bexp^0,w,c
  4816   00166C  A4D8               	btfss	status,2,c
  4817   00166E  EF3B  F00B         	goto	u2191
  4818   001672  EF3D  F00B         	goto	u2190
  4819   001676                     u2191:
  4820   001676  EF4F  F00B         	goto	l2362
  4821   00167A                     u2190:
  4822   00167A                     l2358:
  4823   00167A  0E00               	movlw	0
  4824   00167C  6E01               	movwf	___fladd@b^0,c
  4825   00167E  0E00               	movlw	0
  4826   001680  6E02               	movwf	(___fladd@b+1)^0,c
  4827   001682  0E00               	movlw	0
  4828   001684  6E03               	movwf	(___fladd@b+2)^0,c
  4829   001686  0E00               	movlw	0
  4830   001688  6E04               	movwf	(___fladd@b+3)^0,c
  4831   00168A  500F               	movf	___fladd@bexp^0,w,c
  4832   00168C  A4D8               	btfss	status,2,c
  4833   00168E  EF4B  F00B         	goto	u2201
  4834   001692  EF4D  F00B         	goto	u2200
  4835   001696                     u2201:
  4836   001696  EF4F  F00B         	goto	l2362
  4837   00169A                     u2200:
  4838   00169A  0E00               	movlw	0
  4839   00169C  6E0D               	movwf	___fladd@signs^0,c
  4840   00169E                     l2362:
  4841   00169E  A00F               	btfss	___fladd@bexp^0,0,c
  4842   0016A0  EF54  F00B         	goto	u2211
  4843   0016A4  EF56  F00B         	goto	u2210
  4844   0016A8                     u2211:
  4845   0016A8  EF59  F00B         	goto	l2366
  4846   0016AC                     u2210:
  4847   0016AC  8E03               	bsf	(___fladd@b+2)^0,7,c
  4848   0016AE  EF5A  F00B         	goto	l2368
  4849   0016B2                     l2366:
  4850   0016B2  9E03               	bcf	(___fladd@b+2)^0,7,c
  4851   0016B4                     l2368:
  4852   0016B4  90D8               	bcf	status,0,c
  4853   0016B6  300F               	rrcf	___fladd@bexp^0,w,c
  4854   0016B8  6E04               	movwf	(___fladd@b+3)^0,c
  4855   0016BA  AE0D               	btfss	___fladd@signs^0,7,c
  4856   0016BC  EF62  F00B         	goto	u2221
  4857   0016C0  EF64  F00B         	goto	u2220
  4858   0016C4                     u2221:
  4859   0016C4  EF65  F00B         	goto	l2374
  4860   0016C8                     u2220:
  4861   0016C8  8E04               	bsf	(___fladd@b+3)^0,7,c
  4862   0016CA                     l2374:
  4863   0016CA  C001  F001         	movff	___fladd@b,?___fladd
  4864   0016CE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4865   0016D2  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4866   0016D6  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4867   0016DA                     l634:
  4868   0016DA  0012               	return		;funcret
  4869   0016DC                     __end_of___fladd:
  4870                           	callstack 0
  4871                           
  4872 ;; *************** function ___flneg *****************
  4873 ;; Defined at:
  4874 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;  f1              4    0[COMRAM] unsigned char 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  4    0[COMRAM] unsigned char 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2, status,0
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4888 ;;      Params:         4       0       0       0       0       0       0       0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4891 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4892 ;;Total ram usage:        4 bytes
  4893 ;; Hardware stack levels used: 1
  4894 ;; Hardware stack levels required when called: 1
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_efgtoa
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text19
  4903   002EF6                     __ptext19:
  4904                           	callstack 0
  4905   002EF6                     ___flneg:
  4906                           	callstack 25
  4907   002EF6  5001               	movf	___flneg@f1^0,w,c
  4908   002EF8  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4909   002EFA  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4910   002EFC  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4911   002EFE  B4D8               	btfsc	status,2,c
  4912   002F00  EF84  F017         	goto	u2741
  4913   002F04  EF86  F017         	goto	u2740
  4914   002F08                     u2741:
  4915   002F08  EF8E  F017         	goto	l2708
  4916   002F0C                     u2740:
  4917   002F0C  0E00               	movlw	0
  4918   002F0E  1A01               	xorwf	___flneg@f1^0,f,c
  4919   002F10  0E00               	movlw	0
  4920   002F12  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4921   002F14  0E00               	movlw	0
  4922   002F16  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4923   002F18  0E80               	movlw	128
  4924   002F1A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4925   002F1C                     l2708:
  4926   002F1C  C001  F001         	movff	___flneg@f1,?___flneg
  4927   002F20  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4928   002F24  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4929   002F28  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4930   002F2C  0012               	return		;funcret
  4931   002F2E                     __end_of___flneg:
  4932                           	callstack 0
  4933                           
  4934 ;; *************** function ___flmul *****************
  4935 ;; Defined at:
  4936 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  b               4   14[COMRAM] unsigned char 
  4939 ;;  a               4   18[COMRAM] unsigned char 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;  prod            4   33[COMRAM] struct .
  4942 ;;  grs             4   27[COMRAM] unsigned long 
  4943 ;;  temp            2   37[COMRAM] struct .
  4944 ;;  bexp            1   32[COMRAM] unsigned char 
  4945 ;;  aexp            1   31[COMRAM] unsigned char 
  4946 ;;  sign            1   26[COMRAM] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  4   14[COMRAM] unsigned char 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0, prodl, prodh
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4956 ;;      Params:         8       0       0       0       0       0       0       0       0
  4957 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4958 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4959 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4960 ;;Total ram usage:       25 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; Hardware stack levels required when called: 1
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_main
  4967 ;;		_efgtoa
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text20
  4972   0016DC                     __ptext20:
  4973                           	callstack 0
  4974   0016DC                     ___flmul:
  4975                           	callstack 25
  4976   0016DC  5012               	movf	(___flmul@b+3)^0,w,c
  4977   0016DE  0B80               	andlw	128
  4978   0016E0  6E1B               	movwf	___flmul@sign^0,c
  4979   0016E2  5012               	movf	(___flmul@b+3)^0,w,c
  4980   0016E4  2412               	addwf	(___flmul@b+3)^0,w,c
  4981   0016E6  6E21               	movwf	___flmul@bexp^0,c
  4982   0016E8  AE11               	btfss	(___flmul@b+2)^0,7,c
  4983   0016EA  EF79  F00B         	goto	u2471
  4984   0016EE  EF7B  F00B         	goto	u2470
  4985   0016F2                     u2471:
  4986   0016F2  EF7C  F00B         	goto	l2536
  4987   0016F6                     u2470:
  4988   0016F6  8021               	bsf	___flmul@bexp^0,0,c
  4989   0016F8                     l2536:
  4990   0016F8  5021               	movf	___flmul@bexp^0,w,c
  4991   0016FA  B4D8               	btfsc	status,2,c
  4992   0016FC  EF82  F00B         	goto	u2481
  4993   001700  EF84  F00B         	goto	u2480
  4994   001704                     u2481:
  4995   001704  EF97  F00B         	goto	l2544
  4996   001708                     u2480:
  4997   001708  2821               	incf	___flmul@bexp^0,w,c
  4998   00170A  A4D8               	btfss	status,2,c
  4999   00170C  EF8A  F00B         	goto	u2491
  5000   001710  EF8C  F00B         	goto	u2490
  5001   001714                     u2491:
  5002   001714  EF94  F00B         	goto	l2542
  5003   001718                     u2490:
  5004   001718  0E00               	movlw	0
  5005   00171A  6E0F               	movwf	___flmul@b^0,c
  5006   00171C  0E00               	movlw	0
  5007   00171E  6E10               	movwf	(___flmul@b+1)^0,c
  5008   001720  0E00               	movlw	0
  5009   001722  6E11               	movwf	(___flmul@b+2)^0,c
  5010   001724  0E00               	movlw	0
  5011   001726  6E12               	movwf	(___flmul@b+3)^0,c
  5012   001728                     l2542:
  5013   001728  8E11               	bsf	(___flmul@b+2)^0,7,c
  5014   00172A  EF9F  F00B         	goto	l2546
  5015   00172E                     l2544:
  5016   00172E  0E00               	movlw	0
  5017   001730  6E0F               	movwf	___flmul@b^0,c
  5018   001732  0E00               	movlw	0
  5019   001734  6E10               	movwf	(___flmul@b+1)^0,c
  5020   001736  0E00               	movlw	0
  5021   001738  6E11               	movwf	(___flmul@b+2)^0,c
  5022   00173A  0E00               	movlw	0
  5023   00173C  6E12               	movwf	(___flmul@b+3)^0,c
  5024   00173E                     l2546:
  5025   00173E  5016               	movf	(___flmul@a+3)^0,w,c
  5026   001740  0B80               	andlw	128
  5027   001742  1A1B               	xorwf	___flmul@sign^0,f,c
  5028   001744  5016               	movf	(___flmul@a+3)^0,w,c
  5029   001746  2416               	addwf	(___flmul@a+3)^0,w,c
  5030   001748  6E20               	movwf	___flmul@aexp^0,c
  5031   00174A  AE15               	btfss	(___flmul@a+2)^0,7,c
  5032   00174C  EFAA  F00B         	goto	u2501
  5033   001750  EFAC  F00B         	goto	u2500
  5034   001754                     u2501:
  5035   001754  EFAD  F00B         	goto	l2554
  5036   001758                     u2500:
  5037   001758  8020               	bsf	___flmul@aexp^0,0,c
  5038   00175A                     l2554:
  5039   00175A  5020               	movf	___flmul@aexp^0,w,c
  5040   00175C  B4D8               	btfsc	status,2,c
  5041   00175E  EFB3  F00B         	goto	u2511
  5042   001762  EFB5  F00B         	goto	u2510
  5043   001766                     u2511:
  5044   001766  EFC8  F00B         	goto	l2562
  5045   00176A                     u2510:
  5046   00176A  2820               	incf	___flmul@aexp^0,w,c
  5047   00176C  A4D8               	btfss	status,2,c
  5048   00176E  EFBB  F00B         	goto	u2521
  5049   001772  EFBD  F00B         	goto	u2520
  5050   001776                     u2521:
  5051   001776  EFC5  F00B         	goto	l2560
  5052   00177A                     u2520:
  5053   00177A  0E00               	movlw	0
  5054   00177C  6E13               	movwf	___flmul@a^0,c
  5055   00177E  0E00               	movlw	0
  5056   001780  6E14               	movwf	(___flmul@a+1)^0,c
  5057   001782  0E00               	movlw	0
  5058   001784  6E15               	movwf	(___flmul@a+2)^0,c
  5059   001786  0E00               	movlw	0
  5060   001788  6E16               	movwf	(___flmul@a+3)^0,c
  5061   00178A                     l2560:
  5062   00178A  8E15               	bsf	(___flmul@a+2)^0,7,c
  5063   00178C  EFD0  F00B         	goto	l711
  5064   001790                     l2562:
  5065   001790  0E00               	movlw	0
  5066   001792  6E13               	movwf	___flmul@a^0,c
  5067   001794  0E00               	movlw	0
  5068   001796  6E14               	movwf	(___flmul@a+1)^0,c
  5069   001798  0E00               	movlw	0
  5070   00179A  6E15               	movwf	(___flmul@a+2)^0,c
  5071   00179C  0E00               	movlw	0
  5072   00179E  6E16               	movwf	(___flmul@a+3)^0,c
  5073   0017A0                     l711:
  5074   0017A0  5020               	movf	___flmul@aexp^0,w,c
  5075   0017A2  B4D8               	btfsc	status,2,c
  5076   0017A4  EFD6  F00B         	goto	u2531
  5077   0017A8  EFD8  F00B         	goto	u2530
  5078   0017AC                     u2531:
  5079   0017AC  EFE0  F00B         	goto	l2566
  5080   0017B0                     u2530:
  5081   0017B0  5021               	movf	___flmul@bexp^0,w,c
  5082   0017B2  A4D8               	btfss	status,2,c
  5083   0017B4  EFDE  F00B         	goto	u2541
  5084   0017B8  EFE0  F00B         	goto	u2540
  5085   0017BC                     u2541:
  5086   0017BC  EFEA  F00B         	goto	l2570
  5087   0017C0                     u2540:
  5088   0017C0                     l2566:
  5089   0017C0  0E00               	movlw	0
  5090   0017C2  6E0F               	movwf	?___flmul^0,c
  5091   0017C4  0E00               	movlw	0
  5092   0017C6  6E10               	movwf	(?___flmul+1)^0,c
  5093   0017C8  0E00               	movlw	0
  5094   0017CA  6E11               	movwf	(?___flmul+2)^0,c
  5095   0017CC  0E00               	movlw	0
  5096   0017CE  6E12               	movwf	(?___flmul+3)^0,c
  5097   0017D0  EF82  F00D         	goto	l715
  5098   0017D4                     l2570:
  5099   0017D4  5015               	movf	(___flmul@a+2)^0,w,c
  5100   0017D6  020F               	mulwf	___flmul@b^0,c
  5101   0017D8  CFF3 F026          	movff	prodl,___flmul@temp
  5102   0017DC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5103   0017E0  5026               	movf	___flmul@temp^0,w,c
  5104   0017E2  6E1C               	movwf	___flmul@grs^0,c
  5105   0017E4  6A1D               	clrf	(___flmul@grs+1)^0,c
  5106   0017E6  6A1E               	clrf	(___flmul@grs+2)^0,c
  5107   0017E8  6A1F               	clrf	(___flmul@grs+3)^0,c
  5108   0017EA  5027               	movf	(___flmul@temp+1)^0,w,c
  5109   0017EC  6E22               	movwf	___flmul@prod^0,c
  5110   0017EE  6A23               	clrf	(___flmul@prod+1)^0,c
  5111   0017F0  6A24               	clrf	(___flmul@prod+2)^0,c
  5112   0017F2  6A25               	clrf	(___flmul@prod+3)^0,c
  5113   0017F4  5014               	movf	(___flmul@a+1)^0,w,c
  5114   0017F6  0210               	mulwf	(___flmul@b+1)^0,c
  5115   0017F8  CFF3 F026          	movff	prodl,___flmul@temp
  5116   0017FC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5117   001800  5026               	movf	___flmul@temp^0,w,c
  5118   001802  261C               	addwf	___flmul@grs^0,f,c
  5119   001804  0E00               	movlw	0
  5120   001806  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5121   001808  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5122   00180A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5123   00180C  5027               	movf	(___flmul@temp+1)^0,w,c
  5124   00180E  2622               	addwf	___flmul@prod^0,f,c
  5125   001810  0E00               	movlw	0
  5126   001812  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5127   001814  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5128   001816  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5129   001818  5013               	movf	___flmul@a^0,w,c
  5130   00181A  0211               	mulwf	(___flmul@b+2)^0,c
  5131   00181C  CFF3 F026          	movff	prodl,___flmul@temp
  5132   001820  CFF4 F027          	movff	prodh,___flmul@temp+1
  5133   001824  5026               	movf	___flmul@temp^0,w,c
  5134   001826  261C               	addwf	___flmul@grs^0,f,c
  5135   001828  0E00               	movlw	0
  5136   00182A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5137   00182C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5138   00182E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5139   001830  5027               	movf	(___flmul@temp+1)^0,w,c
  5140   001832  2622               	addwf	___flmul@prod^0,f,c
  5141   001834  0E00               	movlw	0
  5142   001836  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5143   001838  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5144   00183A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5145   00183C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5146   001840  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5147   001844  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5148   001848  6A1C               	clrf	___flmul@grs^0,c
  5149   00184A  5013               	movf	___flmul@a^0,w,c
  5150   00184C  0210               	mulwf	(___flmul@b+1)^0,c
  5151   00184E  CFF3 F026          	movff	prodl,___flmul@temp
  5152   001852  CFF4 F027          	movff	prodh,___flmul@temp+1
  5153   001856  5026               	movf	___flmul@temp^0,w,c
  5154   001858  261C               	addwf	___flmul@grs^0,f,c
  5155   00185A  5027               	movf	(___flmul@temp+1)^0,w,c
  5156   00185C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5157   00185E  0E00               	movlw	0
  5158   001860  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5159   001862  0E00               	movlw	0
  5160   001864  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5161   001866  5014               	movf	(___flmul@a+1)^0,w,c
  5162   001868  020F               	mulwf	___flmul@b^0,c
  5163   00186A  CFF3 F026          	movff	prodl,___flmul@temp
  5164   00186E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5165   001872  5026               	movf	___flmul@temp^0,w,c
  5166   001874  261C               	addwf	___flmul@grs^0,f,c
  5167   001876  5027               	movf	(___flmul@temp+1)^0,w,c
  5168   001878  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5169   00187A  0E00               	movlw	0
  5170   00187C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5171   00187E  0E00               	movlw	0
  5172   001880  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5173   001882  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5174   001886  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5175   00188A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5176   00188E  6A1C               	clrf	___flmul@grs^0,c
  5177   001890  5013               	movf	___flmul@a^0,w,c
  5178   001892  020F               	mulwf	___flmul@b^0,c
  5179   001894  CFF3 F026          	movff	prodl,___flmul@temp
  5180   001898  CFF4 F027          	movff	prodh,___flmul@temp+1
  5181   00189C  5026               	movf	___flmul@temp^0,w,c
  5182   00189E  261C               	addwf	___flmul@grs^0,f,c
  5183   0018A0  5027               	movf	(___flmul@temp+1)^0,w,c
  5184   0018A2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5185   0018A4  0E00               	movlw	0
  5186   0018A6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5187   0018A8  0E00               	movlw	0
  5188   0018AA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5189   0018AC  5015               	movf	(___flmul@a+2)^0,w,c
  5190   0018AE  0210               	mulwf	(___flmul@b+1)^0,c
  5191   0018B0  CFF3 F026          	movff	prodl,___flmul@temp
  5192   0018B4  CFF4 F027          	movff	prodh,___flmul@temp+1
  5193   0018B8  5026               	movf	___flmul@temp^0,w,c
  5194   0018BA  2622               	addwf	___flmul@prod^0,f,c
  5195   0018BC  5027               	movf	(___flmul@temp+1)^0,w,c
  5196   0018BE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5197   0018C0  0E00               	movlw	0
  5198   0018C2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5199   0018C4  0E00               	movlw	0
  5200   0018C6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5201   0018C8  5014               	movf	(___flmul@a+1)^0,w,c
  5202   0018CA  0211               	mulwf	(___flmul@b+2)^0,c
  5203   0018CC  CFF3 F026          	movff	prodl,___flmul@temp
  5204   0018D0  CFF4 F027          	movff	prodh,___flmul@temp+1
  5205   0018D4  5026               	movf	___flmul@temp^0,w,c
  5206   0018D6  2622               	addwf	___flmul@prod^0,f,c
  5207   0018D8  5027               	movf	(___flmul@temp+1)^0,w,c
  5208   0018DA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5209   0018DC  0E00               	movlw	0
  5210   0018DE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5211   0018E0  0E00               	movlw	0
  5212   0018E2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5213   0018E4  5015               	movf	(___flmul@a+2)^0,w,c
  5214   0018E6  0211               	mulwf	(___flmul@b+2)^0,c
  5215   0018E8  CFF3 F026          	movff	prodl,___flmul@temp
  5216   0018EC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5217   0018F0  5026               	movf	___flmul@temp^0,w,c
  5218   0018F2  6E17               	movwf	??___flmul^0,c
  5219   0018F4  5027               	movf	(___flmul@temp+1)^0,w,c
  5220   0018F6  6E18               	movwf	(??___flmul+1)^0,c
  5221   0018F8  6A19               	clrf	(??___flmul+2)^0,c
  5222   0018FA  6A1A               	clrf	(??___flmul+3)^0,c
  5223   0018FC  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5224   001900  C018  F019         	movff	??___flmul+1,??___flmul+2
  5225   001904  C017  F018         	movff	??___flmul,??___flmul+1
  5226   001908  6A17               	clrf	??___flmul^0,c
  5227   00190A  5017               	movf	??___flmul^0,w,c
  5228   00190C  2622               	addwf	___flmul@prod^0,f,c
  5229   00190E  5018               	movf	(??___flmul+1)^0,w,c
  5230   001910  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5231   001912  5019               	movf	(??___flmul+2)^0,w,c
  5232   001914  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5233   001916  501A               	movf	(??___flmul+3)^0,w,c
  5234   001918  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5235   00191A  C01C  F017         	movff	___flmul@grs,??___flmul
  5236   00191E  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5237   001922  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5238   001926  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5239   00192A  0E19               	movlw	25
  5240   00192C  EF9D  F00C         	goto	u2550
  5241   001930                     u2555:
  5242   001930  90D8               	bcf	status,0,c
  5243   001932  321A               	rrcf	(??___flmul+3)^0,f,c
  5244   001934  3219               	rrcf	(??___flmul+2)^0,f,c
  5245   001936  3218               	rrcf	(??___flmul+1)^0,f,c
  5246   001938  3217               	rrcf	??___flmul^0,f,c
  5247   00193A                     u2550:
  5248   00193A  2EE8               	decfsz	wreg,f,c
  5249   00193C  EF98  F00C         	goto	u2555
  5250   001940  5017               	movf	??___flmul^0,w,c
  5251   001942  2622               	addwf	___flmul@prod^0,f,c
  5252   001944  5018               	movf	(??___flmul+1)^0,w,c
  5253   001946  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5254   001948  5019               	movf	(??___flmul+2)^0,w,c
  5255   00194A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5256   00194C  501A               	movf	(??___flmul+3)^0,w,c
  5257   00194E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5258   001950  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5259   001954  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5260   001958  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5261   00195C  6A1C               	clrf	___flmul@grs^0,c
  5262   00195E  5020               	movf	___flmul@aexp^0,w,c
  5263   001960  C021  F017         	movff	___flmul@bexp,??___flmul
  5264   001964  6A18               	clrf	(??___flmul+1)^0,c
  5265   001966  2617               	addwf	??___flmul^0,f,c
  5266   001968  0E00               	movlw	0
  5267   00196A  2218               	addwfc	(??___flmul+1)^0,f,c
  5268   00196C  0E82               	movlw	130
  5269   00196E  2417               	addwf	??___flmul^0,w,c
  5270   001970  6E26               	movwf	___flmul@temp^0,c
  5271   001972  0EFF               	movlw	255
  5272   001974  2018               	addwfc	(??___flmul+1)^0,w,c
  5273   001976  6E27               	movwf	(___flmul@temp+1)^0,c
  5274   001978  EFD3  F00C         	goto	l2618
  5275   00197C                     l2612:
  5276   00197C  90D8               	bcf	status,0,c
  5277   00197E  3622               	rlcf	___flmul@prod^0,f,c
  5278   001980  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5279   001982  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5280   001984  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5281   001986  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5282   001988  EFC8  F00C         	goto	u2561
  5283   00198C  EFCA  F00C         	goto	u2560
  5284   001990                     u2561:
  5285   001990  EFCB  F00C         	goto	l718
  5286   001994                     u2560:
  5287   001994  8022               	bsf	___flmul@prod^0,0,c
  5288   001996                     l718:
  5289   001996  90D8               	bcf	status,0,c
  5290   001998  361C               	rlcf	___flmul@grs^0,f,c
  5291   00199A  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5292   00199C  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5293   00199E  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5294   0019A0  0626               	decf	___flmul@temp^0,f,c
  5295   0019A2  A0D8               	btfss	status,0,c
  5296   0019A4  0627               	decf	(___flmul@temp+1)^0,f,c
  5297   0019A6                     l2618:
  5298   0019A6  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5299   0019A8  EFD8  F00C         	goto	u2571
  5300   0019AC  EFDA  F00C         	goto	u2570
  5301   0019B0                     u2571:
  5302   0019B0  EFBE  F00C         	goto	l2612
  5303   0019B4                     u2570:
  5304   0019B4  0E00               	movlw	0
  5305   0019B6  6E20               	movwf	___flmul@aexp^0,c
  5306   0019B8  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5307   0019BA  EFE1  F00C         	goto	u2581
  5308   0019BE  EFE3  F00C         	goto	u2580
  5309   0019C2                     u2581:
  5310   0019C2  EF07  F00D         	goto	l720
  5311   0019C6                     u2580:
  5312   0019C6  0EFF               	movlw	255
  5313   0019C8  141C               	andwf	___flmul@grs^0,w,c
  5314   0019CA  6E17               	movwf	??___flmul^0,c
  5315   0019CC  0EFF               	movlw	255
  5316   0019CE  141D               	andwf	(___flmul@grs+1)^0,w,c
  5317   0019D0  6E18               	movwf	(??___flmul+1)^0,c
  5318   0019D2  0EFF               	movlw	255
  5319   0019D4  141E               	andwf	(___flmul@grs+2)^0,w,c
  5320   0019D6  6E19               	movwf	(??___flmul+2)^0,c
  5321   0019D8  0E7F               	movlw	127
  5322   0019DA  141F               	andwf	(___flmul@grs+3)^0,w,c
  5323   0019DC  6E1A               	movwf	(??___flmul+3)^0,c
  5324   0019DE  5017               	movf	??___flmul^0,w,c
  5325   0019E0  1018               	iorwf	(??___flmul+1)^0,w,c
  5326   0019E2  1019               	iorwf	(??___flmul+2)^0,w,c
  5327   0019E4  101A               	iorwf	(??___flmul+3)^0,w,c
  5328   0019E6  B4D8               	btfsc	status,2,c
  5329   0019E8  EFF8  F00C         	goto	u2591
  5330   0019EC  EFFA  F00C         	goto	u2590
  5331   0019F0                     u2591:
  5332   0019F0  EFFE  F00C         	goto	l721
  5333   0019F4                     u2590:
  5334   0019F4                     l2626:
  5335   0019F4  0E01               	movlw	1
  5336   0019F6  6E20               	movwf	___flmul@aexp^0,c
  5337   0019F8  EF07  F00D         	goto	l720
  5338   0019FC                     l721:
  5339   0019FC  A022               	btfss	___flmul@prod^0,0,c
  5340   0019FE  EF03  F00D         	goto	u2601
  5341   001A02  EF05  F00D         	goto	u2600
  5342   001A06                     u2601:
  5343   001A06  EF07  F00D         	goto	l720
  5344   001A0A                     u2600:
  5345   001A0A  EFFA  F00C         	goto	l2626
  5346   001A0E                     l720:
  5347   001A0E  5020               	movf	___flmul@aexp^0,w,c
  5348   001A10  B4D8               	btfsc	status,2,c
  5349   001A12  EF0D  F00D         	goto	u2611
  5350   001A16  EF0F  F00D         	goto	u2610
  5351   001A1A                     u2611:
  5352   001A1A  EF33  F00D         	goto	l2638
  5353   001A1E                     u2610:
  5354   001A1E  0E01               	movlw	1
  5355   001A20  2622               	addwf	___flmul@prod^0,f,c
  5356   001A22  0E00               	movlw	0
  5357   001A24  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5358   001A26  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5359   001A28  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5360   001A2A  A025               	btfss	(___flmul@prod+3)^0,0,c
  5361   001A2C  EF1A  F00D         	goto	u2621
  5362   001A30  EF1C  F00D         	goto	u2620
  5363   001A34                     u2621:
  5364   001A34  EF33  F00D         	goto	l2638
  5365   001A38                     u2620:
  5366   001A38  C022  F017         	movff	___flmul@prod,??___flmul
  5367   001A3C  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5368   001A40  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5369   001A44  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5370   001A48  341A               	rlcf	(??___flmul+3)^0,w,c
  5371   001A4A  321A               	rrcf	(??___flmul+3)^0,f,c
  5372   001A4C  3219               	rrcf	(??___flmul+2)^0,f,c
  5373   001A4E  3218               	rrcf	(??___flmul+1)^0,f,c
  5374   001A50  3217               	rrcf	??___flmul^0,f,c
  5375   001A52  C017  F022         	movff	??___flmul,___flmul@prod
  5376   001A56  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5377   001A5A  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5378   001A5E  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5379   001A62  4A26               	infsnz	___flmul@temp^0,f,c
  5380   001A64  2A27               	incf	(___flmul@temp+1)^0,f,c
  5381   001A66                     l2638:
  5382   001A66  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5383   001A68  EF3E  F00D         	goto	u2631
  5384   001A6C  5027               	movf	(___flmul@temp+1)^0,w,c
  5385   001A6E  E108               	bnz	u2630
  5386   001A70  2826               	incf	___flmul@temp^0,w,c
  5387   001A72  A0D8               	btfss	status,0,c
  5388   001A74  EF3E  F00D         	goto	u2631
  5389   001A78  EF40  F00D         	goto	u2630
  5390   001A7C                     u2631:
  5391   001A7C  EF4A  F00D         	goto	l2642
  5392   001A80                     u2630:
  5393   001A80  0E00               	movlw	0
  5394   001A82  6E22               	movwf	___flmul@prod^0,c
  5395   001A84  0E00               	movlw	0
  5396   001A86  6E23               	movwf	(___flmul@prod+1)^0,c
  5397   001A88  0E80               	movlw	128
  5398   001A8A  6E24               	movwf	(___flmul@prod+2)^0,c
  5399   001A8C  0E7F               	movlw	127
  5400   001A8E  6E25               	movwf	(___flmul@prod+3)^0,c
  5401   001A90  EF78  F00D         	goto	l2654
  5402   001A94                     l2642:
  5403   001A94  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5404   001A96  EF57  F00D         	goto	u2640
  5405   001A9A  5027               	movf	(___flmul@temp+1)^0,w,c
  5406   001A9C  E106               	bnz	u2641
  5407   001A9E  0426               	decf	___flmul@temp^0,w,c
  5408   001AA0  B0D8               	btfsc	status,0,c
  5409   001AA2  EF55  F00D         	goto	u2641
  5410   001AA6  EF57  F00D         	goto	u2640
  5411   001AAA                     u2641:
  5412   001AAA  EF63  F00D         	goto	l728
  5413   001AAE                     u2640:
  5414   001AAE  0E00               	movlw	0
  5415   001AB0  6E22               	movwf	___flmul@prod^0,c
  5416   001AB2  0E00               	movlw	0
  5417   001AB4  6E23               	movwf	(___flmul@prod+1)^0,c
  5418   001AB6  0E00               	movlw	0
  5419   001AB8  6E24               	movwf	(___flmul@prod+2)^0,c
  5420   001ABA  0E00               	movlw	0
  5421   001ABC  6E25               	movwf	(___flmul@prod+3)^0,c
  5422   001ABE  0E00               	movlw	0
  5423   001AC0  6E1B               	movwf	___flmul@sign^0,c
  5424   001AC2  EF78  F00D         	goto	l2654
  5425   001AC6                     l728:
  5426   001AC6  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5427   001ACA  0EFF               	movlw	255
  5428   001ACC  1622               	andwf	___flmul@prod^0,f,c
  5429   001ACE  0EFF               	movlw	255
  5430   001AD0  1623               	andwf	(___flmul@prod+1)^0,f,c
  5431   001AD2  0E7F               	movlw	127
  5432   001AD4  1624               	andwf	(___flmul@prod+2)^0,f,c
  5433   001AD6  0E00               	movlw	0
  5434   001AD8  1625               	andwf	(___flmul@prod+3)^0,f,c
  5435   001ADA  A021               	btfss	___flmul@bexp^0,0,c
  5436   001ADC  EF72  F00D         	goto	u2651
  5437   001AE0  EF74  F00D         	goto	u2650
  5438   001AE4                     u2651:
  5439   001AE4  EF75  F00D         	goto	l2652
  5440   001AE8                     u2650:
  5441   001AE8  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5442   001AEA                     l2652:
  5443   001AEA  90D8               	bcf	status,0,c
  5444   001AEC  3021               	rrcf	___flmul@bexp^0,w,c
  5445   001AEE  6E25               	movwf	(___flmul@prod+3)^0,c
  5446   001AF0                     l2654:
  5447   001AF0  501B               	movf	___flmul@sign^0,w,c
  5448   001AF2  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5449   001AF4  C022  F00F         	movff	___flmul@prod,?___flmul
  5450   001AF8  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5451   001AFC  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5452   001B00  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5453   001B04                     l715:
  5454   001B04  0012               	return		;funcret
  5455   001B06                     __end_of___flmul:
  5456                           	callstack 0
  5457                           
  5458 ;; *************** function ___flge *****************
  5459 ;; Defined at:
  5460 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;  ff1             4   39[COMRAM] unsigned char 
  5463 ;;  ff2             4   43[COMRAM] unsigned char 
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;		None
  5466 ;; Return value:  Size  Location     Type
  5467 ;;		None               void
  5468 ;; Registers used:
  5469 ;;		wreg, status,2, status,0
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5475 ;;      Params:         8       0       0       0       0       0       0       0       0
  5476 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5477 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5478 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5479 ;;Total ram usage:       12 bytes
  5480 ;; Hardware stack levels used: 1
  5481 ;; Hardware stack levels required when called: 1
  5482 ;; This function calls:
  5483 ;;		Nothing
  5484 ;; This function is called by:
  5485 ;;		_efgtoa
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           	psect	text21
  5490   0026F6                     __ptext21:
  5491                           	callstack 0
  5492   0026F6                     ___flge:
  5493                           	callstack 25
  5494   0026F6  0E00               	movlw	0
  5495   0026F8  1428               	andwf	___flge@ff1^0,w,c
  5496   0026FA  6E30               	movwf	??___flge^0,c
  5497   0026FC  0E00               	movlw	0
  5498   0026FE  1429               	andwf	(___flge@ff1+1)^0,w,c
  5499   002700  6E31               	movwf	(??___flge+1)^0,c
  5500   002702  0E80               	movlw	128
  5501   002704  142A               	andwf	(___flge@ff1+2)^0,w,c
  5502   002706  6E32               	movwf	(??___flge+2)^0,c
  5503   002708  0E7F               	movlw	127
  5504   00270A  142B               	andwf	(___flge@ff1+3)^0,w,c
  5505   00270C  6E33               	movwf	(??___flge+3)^0,c
  5506   00270E  5030               	movf	??___flge^0,w,c
  5507   002710  1031               	iorwf	(??___flge+1)^0,w,c
  5508   002712  1032               	iorwf	(??___flge+2)^0,w,c
  5509   002714  1033               	iorwf	(??___flge+3)^0,w,c
  5510   002716  A4D8               	btfss	status,2,c
  5511   002718  EF90  F013         	goto	u2691
  5512   00271C  EF92  F013         	goto	u2690
  5513   002720                     u2691:
  5514   002720  EF9A  F013         	goto	l2686
  5515   002724                     u2690:
  5516   002724  0E00               	movlw	0
  5517   002726  6E28               	movwf	___flge@ff1^0,c
  5518   002728  0E00               	movlw	0
  5519   00272A  6E29               	movwf	(___flge@ff1+1)^0,c
  5520   00272C  0E00               	movlw	0
  5521   00272E  6E2A               	movwf	(___flge@ff1+2)^0,c
  5522   002730  0E00               	movlw	0
  5523   002732  6E2B               	movwf	(___flge@ff1+3)^0,c
  5524   002734                     l2686:
  5525   002734  0E00               	movlw	0
  5526   002736  142C               	andwf	___flge@ff2^0,w,c
  5527   002738  6E30               	movwf	??___flge^0,c
  5528   00273A  0E00               	movlw	0
  5529   00273C  142D               	andwf	(___flge@ff2+1)^0,w,c
  5530   00273E  6E31               	movwf	(??___flge+1)^0,c
  5531   002740  0E80               	movlw	128
  5532   002742  142E               	andwf	(___flge@ff2+2)^0,w,c
  5533   002744  6E32               	movwf	(??___flge+2)^0,c
  5534   002746  0E7F               	movlw	127
  5535   002748  142F               	andwf	(___flge@ff2+3)^0,w,c
  5536   00274A  6E33               	movwf	(??___flge+3)^0,c
  5537   00274C  5030               	movf	??___flge^0,w,c
  5538   00274E  1031               	iorwf	(??___flge+1)^0,w,c
  5539   002750  1032               	iorwf	(??___flge+2)^0,w,c
  5540   002752  1033               	iorwf	(??___flge+3)^0,w,c
  5541   002754  A4D8               	btfss	status,2,c
  5542   002756  EFAF  F013         	goto	u2701
  5543   00275A  EFB1  F013         	goto	u2700
  5544   00275E                     u2701:
  5545   00275E  EFB9  F013         	goto	l2690
  5546   002762                     u2700:
  5547   002762  0E00               	movlw	0
  5548   002764  6E2C               	movwf	___flge@ff2^0,c
  5549   002766  0E00               	movlw	0
  5550   002768  6E2D               	movwf	(___flge@ff2+1)^0,c
  5551   00276A  0E00               	movlw	0
  5552   00276C  6E2E               	movwf	(___flge@ff2+2)^0,c
  5553   00276E  0E00               	movlw	0
  5554   002770  6E2F               	movwf	(___flge@ff2+3)^0,c
  5555   002772                     l2690:
  5556   002772  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5557   002774  EFBE  F013         	goto	u2711
  5558   002778  EFC0  F013         	goto	u2710
  5559   00277C                     u2711:
  5560   00277C  EFC9  F013         	goto	l2694
  5561   002780                     u2710:
  5562   002780  6C28               	negf	___flge@ff1^0,c
  5563   002782  1E29               	comf	(___flge@ff1+1)^0,f,c
  5564   002784  B0D8               	btfsc	status,0,c
  5565   002786  2A29               	incf	(___flge@ff1+1)^0,f,c
  5566   002788  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5567   00278A  B0D8               	btfsc	status,0,c
  5568   00278C  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5569   00278E  0E80               	movlw	128
  5570   002790  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5571   002792                     l2694:
  5572   002792  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5573   002794  EFCE  F013         	goto	u2721
  5574   002798  EFD0  F013         	goto	u2720
  5575   00279C                     u2721:
  5576   00279C  EFD9  F013         	goto	l362
  5577   0027A0                     u2720:
  5578   0027A0  6C2C               	negf	___flge@ff2^0,c
  5579   0027A2  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5580   0027A4  B0D8               	btfsc	status,0,c
  5581   0027A6  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5582   0027A8  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5583   0027AA  B0D8               	btfsc	status,0,c
  5584   0027AC  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5585   0027AE  0E80               	movlw	128
  5586   0027B0  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5587   0027B2                     l362:
  5588   0027B2  0E00               	movlw	0
  5589   0027B4  1A28               	xorwf	___flge@ff1^0,f,c
  5590   0027B6  0E00               	movlw	0
  5591   0027B8  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5592   0027BA  0E00               	movlw	0
  5593   0027BC  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5594   0027BE  0E80               	movlw	128
  5595   0027C0  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5596   0027C2  0E00               	movlw	0
  5597   0027C4  1A2C               	xorwf	___flge@ff2^0,f,c
  5598   0027C6  0E00               	movlw	0
  5599   0027C8  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5600   0027CA  0E00               	movlw	0
  5601   0027CC  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5602   0027CE  0E80               	movlw	128
  5603   0027D0  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5604   0027D2  502C               	movf	___flge@ff2^0,w,c
  5605   0027D4  5C28               	subwf	___flge@ff1^0,w,c
  5606   0027D6  502D               	movf	(___flge@ff2+1)^0,w,c
  5607   0027D8  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5608   0027DA  502E               	movf	(___flge@ff2+2)^0,w,c
  5609   0027DC  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5610   0027DE  502F               	movf	(___flge@ff2+3)^0,w,c
  5611   0027E0  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5612   0027E2  B0D8               	btfsc	status,0,c
  5613   0027E4  EFF6  F013         	goto	u2731
  5614   0027E8  EFF8  F013         	goto	u2730
  5615   0027EC                     u2731:
  5616   0027EC  EFFB  F013         	goto	l2700
  5617   0027F0                     u2730:
  5618   0027F0  90D8               	bcf	status,0,c
  5619   0027F2  EFFC  F013         	goto	l367
  5620   0027F6                     l2700:
  5621   0027F6  80D8               	bsf	status,0,c
  5622   0027F8                     l367:
  5623   0027F8  0012               	return		;funcret
  5624   0027FA                     __end_of___flge:
  5625                           	callstack 0
  5626                           
  5627 ;; *************** function ___fleq *****************
  5628 ;; Defined at:
  5629 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  ff1             4    0[COMRAM] unsigned char 
  5632 ;;  ff2             4    4[COMRAM] unsigned char 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;		None
  5635 ;; Return value:  Size  Location     Type
  5636 ;;		None               void
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5644 ;;      Params:         8       0       0       0       0       0       0       0       0
  5645 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5646 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5647 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5648 ;;Total ram usage:       12 bytes
  5649 ;; Hardware stack levels used: 1
  5650 ;; Hardware stack levels required when called: 1
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_efgtoa
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text22
  5659   002A88                     __ptext22:
  5660                           	callstack 0
  5661   002A88                     ___fleq:
  5662                           	callstack 25
  5663   002A88  0E00               	movlw	0
  5664   002A8A  1401               	andwf	___fleq@ff1^0,w,c
  5665   002A8C  6E09               	movwf	??___fleq^0,c
  5666   002A8E  0E00               	movlw	0
  5667   002A90  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5668   002A92  6E0A               	movwf	(??___fleq+1)^0,c
  5669   002A94  0E80               	movlw	128
  5670   002A96  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5671   002A98  6E0B               	movwf	(??___fleq+2)^0,c
  5672   002A9A  0E7F               	movlw	127
  5673   002A9C  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5674   002A9E  6E0C               	movwf	(??___fleq+3)^0,c
  5675   002AA0  5009               	movf	??___fleq^0,w,c
  5676   002AA2  100A               	iorwf	(??___fleq+1)^0,w,c
  5677   002AA4  100B               	iorwf	(??___fleq+2)^0,w,c
  5678   002AA6  100C               	iorwf	(??___fleq+3)^0,w,c
  5679   002AA8  A4D8               	btfss	status,2,c
  5680   002AAA  EF59  F015         	goto	u2661
  5681   002AAE  EF5B  F015         	goto	u2660
  5682   002AB2                     u2661:
  5683   002AB2  EF63  F015         	goto	l2670
  5684   002AB6                     u2660:
  5685   002AB6  0E00               	movlw	0
  5686   002AB8  6E01               	movwf	___fleq@ff1^0,c
  5687   002ABA  0E00               	movlw	0
  5688   002ABC  6E02               	movwf	(___fleq@ff1+1)^0,c
  5689   002ABE  0E00               	movlw	0
  5690   002AC0  6E03               	movwf	(___fleq@ff1+2)^0,c
  5691   002AC2  0E00               	movlw	0
  5692   002AC4  6E04               	movwf	(___fleq@ff1+3)^0,c
  5693   002AC6                     l2670:
  5694   002AC6  0E00               	movlw	0
  5695   002AC8  1405               	andwf	___fleq@ff2^0,w,c
  5696   002ACA  6E09               	movwf	??___fleq^0,c
  5697   002ACC  0E00               	movlw	0
  5698   002ACE  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5699   002AD0  6E0A               	movwf	(??___fleq+1)^0,c
  5700   002AD2  0E80               	movlw	128
  5701   002AD4  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5702   002AD6  6E0B               	movwf	(??___fleq+2)^0,c
  5703   002AD8  0E7F               	movlw	127
  5704   002ADA  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5705   002ADC  6E0C               	movwf	(??___fleq+3)^0,c
  5706   002ADE  5009               	movf	??___fleq^0,w,c
  5707   002AE0  100A               	iorwf	(??___fleq+1)^0,w,c
  5708   002AE2  100B               	iorwf	(??___fleq+2)^0,w,c
  5709   002AE4  100C               	iorwf	(??___fleq+3)^0,w,c
  5710   002AE6  A4D8               	btfss	status,2,c
  5711   002AE8  EF78  F015         	goto	u2671
  5712   002AEC  EF7A  F015         	goto	u2670
  5713   002AF0                     u2671:
  5714   002AF0  EF82  F015         	goto	l2674
  5715   002AF4                     u2670:
  5716   002AF4  0E00               	movlw	0
  5717   002AF6  6E05               	movwf	___fleq@ff2^0,c
  5718   002AF8  0E00               	movlw	0
  5719   002AFA  6E06               	movwf	(___fleq@ff2+1)^0,c
  5720   002AFC  0E00               	movlw	0
  5721   002AFE  6E07               	movwf	(___fleq@ff2+2)^0,c
  5722   002B00  0E00               	movlw	0
  5723   002B02  6E08               	movwf	(___fleq@ff2+3)^0,c
  5724   002B04                     l2674:
  5725   002B04  5005               	movf	___fleq@ff2^0,w,c
  5726   002B06  1801               	xorwf	___fleq@ff1^0,w,c
  5727   002B08  E10F               	bnz	u2680
  5728   002B0A  5006               	movf	(___fleq@ff2+1)^0,w,c
  5729   002B0C  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5730   002B0E  E10C               	bnz	u2680
  5731   002B10  5007               	movf	(___fleq@ff2+2)^0,w,c
  5732   002B12  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5733   002B14  E109               	bnz	u2680
  5734   002B16  5008               	movf	(___fleq@ff2+3)^0,w,c
  5735   002B18  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5736   002B1A  B4D8               	btfsc	status,2,c
  5737   002B1C  EF92  F015         	goto	u2681
  5738   002B20  EF94  F015         	goto	u2680
  5739   002B24                     u2681:
  5740   002B24  EF97  F015         	goto	l2678
  5741   002B28                     u2680:
  5742   002B28  90D8               	bcf	status,0,c
  5743   002B2A  EF98  F015         	goto	l356
  5744   002B2E                     l2678:
  5745   002B2E  80D8               	bsf	status,0,c
  5746   002B30                     l356:
  5747   002B30  0012               	return		;funcret
  5748   002B32                     __end_of___fleq:
  5749                           	callstack 0
  5750                           
  5751 ;; *************** function ___fldiv *****************
  5752 ;; Defined at:
  5753 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  b               4   39[COMRAM] unsigned char 
  5756 ;;  a               4   43[COMRAM] unsigned char 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  grs             4   58[COMRAM] unsigned long 
  5759 ;;  rem             4   51[COMRAM] unsigned long 
  5760 ;;  new_exp         2   56[COMRAM] short 
  5761 ;;  aexp            1   63[COMRAM] unsigned char 
  5762 ;;  bexp            1   62[COMRAM] unsigned char 
  5763 ;;  sign            1   55[COMRAM] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  4   39[COMRAM] unsigned char 
  5766 ;; Registers used:
  5767 ;;		wreg, status,2, status,0
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5773 ;;      Params:         8       0       0       0       0       0       0       0       0
  5774 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5775 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5776 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5777 ;;Total ram usage:       25 bytes
  5778 ;; Hardware stack levels used: 1
  5779 ;; Hardware stack levels required when called: 1
  5780 ;; This function calls:
  5781 ;;		Nothing
  5782 ;; This function is called by:
  5783 ;;		_main
  5784 ;;		_efgtoa
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text23
  5789   001B06                     __ptext23:
  5790                           	callstack 0
  5791   001B06                     ___fldiv:
  5792                           	callstack 25
  5793   001B06  502B               	movf	(___fldiv@b+3)^0,w,c
  5794   001B08  0B80               	andlw	128
  5795   001B0A  6E38               	movwf	___fldiv@sign^0,c
  5796   001B0C  502B               	movf	(___fldiv@b+3)^0,w,c
  5797   001B0E  242B               	addwf	(___fldiv@b+3)^0,w,c
  5798   001B10  6E3F               	movwf	___fldiv@bexp^0,c
  5799   001B12  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  5800   001B14  EF8E  F00D         	goto	u2241
  5801   001B18  EF90  F00D         	goto	u2240
  5802   001B1C                     u2241:
  5803   001B1C  EF91  F00D         	goto	l2398
  5804   001B20                     u2240:
  5805   001B20  803F               	bsf	___fldiv@bexp^0,0,c
  5806   001B22                     l2398:
  5807   001B22  503F               	movf	___fldiv@bexp^0,w,c
  5808   001B24  B4D8               	btfsc	status,2,c
  5809   001B26  EF97  F00D         	goto	u2251
  5810   001B2A  EF99  F00D         	goto	u2250
  5811   001B2E                     u2251:
  5812   001B2E  EFAE  F00D         	goto	l2408
  5813   001B32                     u2250:
  5814   001B32  283F               	incf	___fldiv@bexp^0,w,c
  5815   001B34  A4D8               	btfss	status,2,c
  5816   001B36  EF9F  F00D         	goto	u2261
  5817   001B3A  EFA1  F00D         	goto	u2260
  5818   001B3E                     u2261:
  5819   001B3E  EFA9  F00D         	goto	l2404
  5820   001B42                     u2260:
  5821   001B42  0E00               	movlw	0
  5822   001B44  6E28               	movwf	___fldiv@b^0,c
  5823   001B46  0E00               	movlw	0
  5824   001B48  6E29               	movwf	(___fldiv@b+1)^0,c
  5825   001B4A  0E00               	movlw	0
  5826   001B4C  6E2A               	movwf	(___fldiv@b+2)^0,c
  5827   001B4E  0E00               	movlw	0
  5828   001B50  6E2B               	movwf	(___fldiv@b+3)^0,c
  5829   001B52                     l2404:
  5830   001B52  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  5831   001B54  0E00               	movlw	0
  5832   001B56  6E2B               	movwf	(___fldiv@b+3)^0,c
  5833   001B58  EFB6  F00D         	goto	l2410
  5834   001B5C                     l2408:
  5835   001B5C  0E00               	movlw	0
  5836   001B5E  6E28               	movwf	___fldiv@b^0,c
  5837   001B60  0E00               	movlw	0
  5838   001B62  6E29               	movwf	(___fldiv@b+1)^0,c
  5839   001B64  0E00               	movlw	0
  5840   001B66  6E2A               	movwf	(___fldiv@b+2)^0,c
  5841   001B68  0E00               	movlw	0
  5842   001B6A  6E2B               	movwf	(___fldiv@b+3)^0,c
  5843   001B6C                     l2410:
  5844   001B6C  502F               	movf	(___fldiv@a+3)^0,w,c
  5845   001B6E  0B80               	andlw	128
  5846   001B70  1A38               	xorwf	___fldiv@sign^0,f,c
  5847   001B72  502F               	movf	(___fldiv@a+3)^0,w,c
  5848   001B74  242F               	addwf	(___fldiv@a+3)^0,w,c
  5849   001B76  6E40               	movwf	___fldiv@aexp^0,c
  5850   001B78  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  5851   001B7A  EFC1  F00D         	goto	u2271
  5852   001B7E  EFC3  F00D         	goto	u2270
  5853   001B82                     u2271:
  5854   001B82  EFC4  F00D         	goto	l2418
  5855   001B86                     u2270:
  5856   001B86  8040               	bsf	___fldiv@aexp^0,0,c
  5857   001B88                     l2418:
  5858   001B88  5040               	movf	___fldiv@aexp^0,w,c
  5859   001B8A  B4D8               	btfsc	status,2,c
  5860   001B8C  EFCA  F00D         	goto	u2281
  5861   001B90  EFCC  F00D         	goto	u2280
  5862   001B94                     u2281:
  5863   001B94  EFE1  F00D         	goto	l2428
  5864   001B98                     u2280:
  5865   001B98  2840               	incf	___fldiv@aexp^0,w,c
  5866   001B9A  A4D8               	btfss	status,2,c
  5867   001B9C  EFD2  F00D         	goto	u2291
  5868   001BA0  EFD4  F00D         	goto	u2290
  5869   001BA4                     u2291:
  5870   001BA4  EFDC  F00D         	goto	l2424
  5871   001BA8                     u2290:
  5872   001BA8  0E00               	movlw	0
  5873   001BAA  6E2C               	movwf	___fldiv@a^0,c
  5874   001BAC  0E00               	movlw	0
  5875   001BAE  6E2D               	movwf	(___fldiv@a+1)^0,c
  5876   001BB0  0E00               	movlw	0
  5877   001BB2  6E2E               	movwf	(___fldiv@a+2)^0,c
  5878   001BB4  0E00               	movlw	0
  5879   001BB6  6E2F               	movwf	(___fldiv@a+3)^0,c
  5880   001BB8                     l2424:
  5881   001BB8  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  5882   001BBA  0E00               	movlw	0
  5883   001BBC  6E2F               	movwf	(___fldiv@a+3)^0,c
  5884   001BBE  EFE9  F00D         	goto	l2430
  5885   001BC2                     l2428:
  5886   001BC2  0E00               	movlw	0
  5887   001BC4  6E2C               	movwf	___fldiv@a^0,c
  5888   001BC6  0E00               	movlw	0
  5889   001BC8  6E2D               	movwf	(___fldiv@a+1)^0,c
  5890   001BCA  0E00               	movlw	0
  5891   001BCC  6E2E               	movwf	(___fldiv@a+2)^0,c
  5892   001BCE  0E00               	movlw	0
  5893   001BD0  6E2F               	movwf	(___fldiv@a+3)^0,c
  5894   001BD2                     l2430:
  5895   001BD2  502C               	movf	___fldiv@a^0,w,c
  5896   001BD4  102D               	iorwf	(___fldiv@a+1)^0,w,c
  5897   001BD6  102E               	iorwf	(___fldiv@a+2)^0,w,c
  5898   001BD8  102F               	iorwf	(___fldiv@a+3)^0,w,c
  5899   001BDA  A4D8               	btfss	status,2,c
  5900   001BDC  EFF2  F00D         	goto	u2301
  5901   001BE0  EFF4  F00D         	goto	u2300
  5902   001BE4                     u2301:
  5903   001BE4  EF0C  F00E         	goto	l2442
  5904   001BE8                     u2300:
  5905   001BE8  0E00               	movlw	0
  5906   001BEA  6E28               	movwf	___fldiv@b^0,c
  5907   001BEC  0E00               	movlw	0
  5908   001BEE  6E29               	movwf	(___fldiv@b+1)^0,c
  5909   001BF0  0E00               	movlw	0
  5910   001BF2  6E2A               	movwf	(___fldiv@b+2)^0,c
  5911   001BF4  0E00               	movlw	0
  5912   001BF6  6E2B               	movwf	(___fldiv@b+3)^0,c
  5913   001BF8  0E80               	movlw	128
  5914   001BFA  122A               	iorwf	(___fldiv@b+2)^0,f,c
  5915   001BFC  0E7F               	movlw	127
  5916   001BFE  122B               	iorwf	(___fldiv@b+3)^0,f,c
  5917   001C00                     l2436:
  5918   001C00  5038               	movf	___fldiv@sign^0,w,c
  5919   001C02  122B               	iorwf	(___fldiv@b+3)^0,f,c
  5920   001C04  C028  F028         	movff	___fldiv@b,?___fldiv
  5921   001C08  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  5922   001C0C  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  5923   001C10  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  5924   001C14  EF4F  F00F         	goto	l679
  5925   001C18                     l2442:
  5926   001C18  503F               	movf	___fldiv@bexp^0,w,c
  5927   001C1A  A4D8               	btfss	status,2,c
  5928   001C1C  EF12  F00E         	goto	u2311
  5929   001C20  EF14  F00E         	goto	u2310
  5930   001C24                     u2311:
  5931   001C24  EF1E  F00E         	goto	l2450
  5932   001C28                     u2310:
  5933   001C28  0E00               	movlw	0
  5934   001C2A  6E28               	movwf	?___fldiv^0,c
  5935   001C2C  0E00               	movlw	0
  5936   001C2E  6E29               	movwf	(?___fldiv+1)^0,c
  5937   001C30  0E00               	movlw	0
  5938   001C32  6E2A               	movwf	(?___fldiv+2)^0,c
  5939   001C34  0E00               	movlw	0
  5940   001C36  6E2B               	movwf	(?___fldiv+3)^0,c
  5941   001C38  EF4F  F00F         	goto	l679
  5942   001C3C                     l2450:
  5943   001C3C  5040               	movf	___fldiv@aexp^0,w,c
  5944   001C3E  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  5945   001C42  6A31               	clrf	(??___fldiv+1)^0,c
  5946   001C44  5E30               	subwf	??___fldiv^0,f,c
  5947   001C46  0E00               	movlw	0
  5948   001C48  5A31               	subwfb	(??___fldiv+1)^0,f,c
  5949   001C4A  0E7F               	movlw	127
  5950   001C4C  2430               	addwf	??___fldiv^0,w,c
  5951   001C4E  6E39               	movwf	___fldiv@new_exp^0,c
  5952   001C50  0E00               	movlw	0
  5953   001C52  2031               	addwfc	(??___fldiv+1)^0,w,c
  5954   001C54  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  5955   001C56  C028  F034         	movff	___fldiv@b,___fldiv@rem
  5956   001C5A  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  5957   001C5E  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  5958   001C62  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  5959   001C66  0E00               	movlw	0
  5960   001C68  6E28               	movwf	___fldiv@b^0,c
  5961   001C6A  0E00               	movlw	0
  5962   001C6C  6E29               	movwf	(___fldiv@b+1)^0,c
  5963   001C6E  0E00               	movlw	0
  5964   001C70  6E2A               	movwf	(___fldiv@b+2)^0,c
  5965   001C72  0E00               	movlw	0
  5966   001C74  6E2B               	movwf	(___fldiv@b+3)^0,c
  5967   001C76  0E00               	movlw	0
  5968   001C78  6E3B               	movwf	___fldiv@grs^0,c
  5969   001C7A  0E00               	movlw	0
  5970   001C7C  6E3C               	movwf	(___fldiv@grs+1)^0,c
  5971   001C7E  0E00               	movlw	0
  5972   001C80  6E3D               	movwf	(___fldiv@grs+2)^0,c
  5973   001C82  0E00               	movlw	0
  5974   001C84  6E3E               	movwf	(___fldiv@grs+3)^0,c
  5975   001C86  0E00               	movlw	0
  5976   001C88  6E40               	movwf	___fldiv@aexp^0,c
  5977   001C8A  EF7F  F00E         	goto	l681
  5978   001C8E                     l2460:
  5979   001C8E  5040               	movf	___fldiv@aexp^0,w,c
  5980   001C90  B4D8               	btfsc	status,2,c
  5981   001C92  EF4D  F00E         	goto	u2321
  5982   001C96  EF4F  F00E         	goto	u2320
  5983   001C9A                     u2321:
  5984   001C9A  EF66  F00E         	goto	l2468
  5985   001C9E                     u2320:
  5986   001C9E  90D8               	bcf	status,0,c
  5987   001CA0  3634               	rlcf	___fldiv@rem^0,f,c
  5988   001CA2  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  5989   001CA4  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  5990   001CA6  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  5991   001CA8  90D8               	bcf	status,0,c
  5992   001CAA  3628               	rlcf	___fldiv@b^0,f,c
  5993   001CAC  3629               	rlcf	(___fldiv@b+1)^0,f,c
  5994   001CAE  362A               	rlcf	(___fldiv@b+2)^0,f,c
  5995   001CB0  362B               	rlcf	(___fldiv@b+3)^0,f,c
  5996   001CB2  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  5997   001CB4  EF5E  F00E         	goto	u2331
  5998   001CB8  EF60  F00E         	goto	u2330
  5999   001CBC                     u2331:
  6000   001CBC  EF61  F00E         	goto	l684
  6001   001CC0                     u2330:
  6002   001CC0  8028               	bsf	___fldiv@b^0,0,c
  6003   001CC2                     l684:
  6004   001CC2  90D8               	bcf	status,0,c
  6005   001CC4  363B               	rlcf	___fldiv@grs^0,f,c
  6006   001CC6  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6007   001CC8  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6008   001CCA  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6009   001CCC                     l2468:
  6010   001CCC  502C               	movf	___fldiv@a^0,w,c
  6011   001CCE  5C34               	subwf	___fldiv@rem^0,w,c
  6012   001CD0  502D               	movf	(___fldiv@a+1)^0,w,c
  6013   001CD2  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6014   001CD4  502E               	movf	(___fldiv@a+2)^0,w,c
  6015   001CD6  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6016   001CD8  502F               	movf	(___fldiv@a+3)^0,w,c
  6017   001CDA  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6018   001CDC  A0D8               	btfss	status,0,c
  6019   001CDE  EF73  F00E         	goto	u2341
  6020   001CE2  EF75  F00E         	goto	u2340
  6021   001CE6                     u2341:
  6022   001CE6  EF7E  F00E         	goto	l2474
  6023   001CEA                     u2340:
  6024   001CEA  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6025   001CEC  502C               	movf	___fldiv@a^0,w,c
  6026   001CEE  5E34               	subwf	___fldiv@rem^0,f,c
  6027   001CF0  502D               	movf	(___fldiv@a+1)^0,w,c
  6028   001CF2  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6029   001CF4  502E               	movf	(___fldiv@a+2)^0,w,c
  6030   001CF6  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6031   001CF8  502F               	movf	(___fldiv@a+3)^0,w,c
  6032   001CFA  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6033   001CFC                     l2474:
  6034   001CFC  2A40               	incf	___fldiv@aexp^0,f,c
  6035   001CFE                     l681:
  6036   001CFE  0E19               	movlw	25
  6037   001D00  6440               	cpfsgt	___fldiv@aexp^0,c
  6038   001D02  EF85  F00E         	goto	u2351
  6039   001D06  EF87  F00E         	goto	u2350
  6040   001D0A                     u2351:
  6041   001D0A  EF47  F00E         	goto	l2460
  6042   001D0E                     u2350:
  6043   001D0E  5034               	movf	___fldiv@rem^0,w,c
  6044   001D10  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  6045   001D12  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  6046   001D14  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  6047   001D16  B4D8               	btfsc	status,2,c
  6048   001D18  EF90  F00E         	goto	u2361
  6049   001D1C  EF92  F00E         	goto	u2360
  6050   001D20                     u2361:
  6051   001D20  EFAA  F00E         	goto	l2486
  6052   001D24                     u2360:
  6053   001D24  803B               	bsf	___fldiv@grs^0,0,c
  6054   001D26  EFAA  F00E         	goto	l2486
  6055   001D2A                     l2480:
  6056   001D2A  90D8               	bcf	status,0,c
  6057   001D2C  3628               	rlcf	___fldiv@b^0,f,c
  6058   001D2E  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6059   001D30  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6060   001D32  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6061   001D34  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6062   001D36  EF9F  F00E         	goto	u2371
  6063   001D3A  EFA1  F00E         	goto	u2370
  6064   001D3E                     u2371:
  6065   001D3E  EFA2  F00E         	goto	l690
  6066   001D42                     u2370:
  6067   001D42  8028               	bsf	___fldiv@b^0,0,c
  6068   001D44                     l690:
  6069   001D44  90D8               	bcf	status,0,c
  6070   001D46  363B               	rlcf	___fldiv@grs^0,f,c
  6071   001D48  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6072   001D4A  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6073   001D4C  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6074   001D4E  0639               	decf	___fldiv@new_exp^0,f,c
  6075   001D50  A0D8               	btfss	status,0,c
  6076   001D52  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  6077   001D54                     l2486:
  6078   001D54  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6079   001D56  EFAF  F00E         	goto	u2381
  6080   001D5A  EFB1  F00E         	goto	u2380
  6081   001D5E                     u2381:
  6082   001D5E  EF95  F00E         	goto	l2480
  6083   001D62                     u2380:
  6084   001D62  0E00               	movlw	0
  6085   001D64  6E40               	movwf	___fldiv@aexp^0,c
  6086   001D66  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6087   001D68  EFB8  F00E         	goto	u2391
  6088   001D6C  EFBA  F00E         	goto	u2390
  6089   001D70                     u2391:
  6090   001D70  EFDE  F00E         	goto	l692
  6091   001D74                     u2390:
  6092   001D74  0EFF               	movlw	255
  6093   001D76  143B               	andwf	___fldiv@grs^0,w,c
  6094   001D78  6E30               	movwf	??___fldiv^0,c
  6095   001D7A  0EFF               	movlw	255
  6096   001D7C  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6097   001D7E  6E31               	movwf	(??___fldiv+1)^0,c
  6098   001D80  0EFF               	movlw	255
  6099   001D82  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6100   001D84  6E32               	movwf	(??___fldiv+2)^0,c
  6101   001D86  0E7F               	movlw	127
  6102   001D88  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6103   001D8A  6E33               	movwf	(??___fldiv+3)^0,c
  6104   001D8C  5030               	movf	??___fldiv^0,w,c
  6105   001D8E  1031               	iorwf	(??___fldiv+1)^0,w,c
  6106   001D90  1032               	iorwf	(??___fldiv+2)^0,w,c
  6107   001D92  1033               	iorwf	(??___fldiv+3)^0,w,c
  6108   001D94  B4D8               	btfsc	status,2,c
  6109   001D96  EFCF  F00E         	goto	u2401
  6110   001D9A  EFD1  F00E         	goto	u2400
  6111   001D9E                     u2401:
  6112   001D9E  EFD5  F00E         	goto	l693
  6113   001DA2                     u2400:
  6114   001DA2                     l2494:
  6115   001DA2  0E01               	movlw	1
  6116   001DA4  6E40               	movwf	___fldiv@aexp^0,c
  6117   001DA6  EFDE  F00E         	goto	l692
  6118   001DAA                     l693:
  6119   001DAA  A028               	btfss	___fldiv@b^0,0,c
  6120   001DAC  EFDA  F00E         	goto	u2411
  6121   001DB0  EFDC  F00E         	goto	u2410
  6122   001DB4                     u2411:
  6123   001DB4  EFDE  F00E         	goto	l692
  6124   001DB8                     u2410:
  6125   001DB8  EFD1  F00E         	goto	l2494
  6126   001DBC                     l692:
  6127   001DBC  5040               	movf	___fldiv@aexp^0,w,c
  6128   001DBE  B4D8               	btfsc	status,2,c
  6129   001DC0  EFE4  F00E         	goto	u2421
  6130   001DC4  EFE6  F00E         	goto	u2420
  6131   001DC8                     u2421:
  6132   001DC8  EF0A  F00F         	goto	l2506
  6133   001DCC                     u2420:
  6134   001DCC  0E01               	movlw	1
  6135   001DCE  2628               	addwf	___fldiv@b^0,f,c
  6136   001DD0  0E00               	movlw	0
  6137   001DD2  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6138   001DD4  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6139   001DD6  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6140   001DD8  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6141   001DDA  EFF1  F00E         	goto	u2431
  6142   001DDE  EFF3  F00E         	goto	u2430
  6143   001DE2                     u2431:
  6144   001DE2  EF0A  F00F         	goto	l2506
  6145   001DE6                     u2430:
  6146   001DE6  C028  F030         	movff	___fldiv@b,??___fldiv
  6147   001DEA  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6148   001DEE  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6149   001DF2  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6150   001DF6  3433               	rlcf	(??___fldiv+3)^0,w,c
  6151   001DF8  3233               	rrcf	(??___fldiv+3)^0,f,c
  6152   001DFA  3232               	rrcf	(??___fldiv+2)^0,f,c
  6153   001DFC  3231               	rrcf	(??___fldiv+1)^0,f,c
  6154   001DFE  3230               	rrcf	??___fldiv^0,f,c
  6155   001E00  C030  F028         	movff	??___fldiv,___fldiv@b
  6156   001E04  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6157   001E08  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6158   001E0C  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6159   001E10  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6160   001E12  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6161   001E14                     l2506:
  6162   001E14  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6163   001E16  EF15  F00F         	goto	u2441
  6164   001E1A  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6165   001E1C  E108               	bnz	u2440
  6166   001E1E  2839               	incf	___fldiv@new_exp^0,w,c
  6167   001E20  A0D8               	btfss	status,0,c
  6168   001E22  EF15  F00F         	goto	u2441
  6169   001E26  EF17  F00F         	goto	u2440
  6170   001E2A                     u2441:
  6171   001E2A  EF22  F00F         	goto	l2510
  6172   001E2E                     u2440:
  6173   001E2E  0E00               	movlw	0
  6174   001E30  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6175   001E32  6839               	setf	___fldiv@new_exp^0,c
  6176   001E34  0E00               	movlw	0
  6177   001E36  6E28               	movwf	___fldiv@b^0,c
  6178   001E38  0E00               	movlw	0
  6179   001E3A  6E29               	movwf	(___fldiv@b+1)^0,c
  6180   001E3C  0E00               	movlw	0
  6181   001E3E  6E2A               	movwf	(___fldiv@b+2)^0,c
  6182   001E40  0E00               	movlw	0
  6183   001E42  6E2B               	movwf	(___fldiv@b+3)^0,c
  6184   001E44                     l2510:
  6185   001E44  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6186   001E46  EF2F  F00F         	goto	u2450
  6187   001E4A  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6188   001E4C  E106               	bnz	u2451
  6189   001E4E  0439               	decf	___fldiv@new_exp^0,w,c
  6190   001E50  B0D8               	btfsc	status,0,c
  6191   001E52  EF2D  F00F         	goto	u2451
  6192   001E56  EF2F  F00F         	goto	u2450
  6193   001E5A                     u2451:
  6194   001E5A  EF3D  F00F         	goto	l2514
  6195   001E5E                     u2450:
  6196   001E5E  0E00               	movlw	0
  6197   001E60  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6198   001E62  0E00               	movlw	0
  6199   001E64  6E39               	movwf	___fldiv@new_exp^0,c
  6200   001E66  0E00               	movlw	0
  6201   001E68  6E28               	movwf	___fldiv@b^0,c
  6202   001E6A  0E00               	movlw	0
  6203   001E6C  6E29               	movwf	(___fldiv@b+1)^0,c
  6204   001E6E  0E00               	movlw	0
  6205   001E70  6E2A               	movwf	(___fldiv@b+2)^0,c
  6206   001E72  0E00               	movlw	0
  6207   001E74  6E2B               	movwf	(___fldiv@b+3)^0,c
  6208   001E76  0E00               	movlw	0
  6209   001E78  6E38               	movwf	___fldiv@sign^0,c
  6210   001E7A                     l2514:
  6211   001E7A  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6212   001E7E  A03F               	btfss	___fldiv@bexp^0,0,c
  6213   001E80  EF44  F00F         	goto	u2461
  6214   001E84  EF46  F00F         	goto	u2460
  6215   001E88                     u2461:
  6216   001E88  EF49  F00F         	goto	l2520
  6217   001E8C                     u2460:
  6218   001E8C  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6219   001E8E  EF4A  F00F         	goto	l2522
  6220   001E92                     l2520:
  6221   001E92  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  6222   001E94                     l2522:
  6223   001E94  90D8               	bcf	status,0,c
  6224   001E96  303F               	rrcf	___fldiv@bexp^0,w,c
  6225   001E98  6E2B               	movwf	(___fldiv@b+3)^0,c
  6226   001E9A  EF00  F00E         	goto	l2436
  6227   001E9E                     l679:
  6228   001E9E  0012               	return		;funcret
  6229   001EA0                     __end_of___fldiv:
  6230                           	callstack 0
  6231                           
  6232 ;; *************** function ___xxtofl *****************
  6233 ;; Defined at:
  6234 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;  sign            1    wreg     unsigned char 
  6237 ;;  val             4    0[COMRAM] long 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;  sign            1    8[COMRAM] unsigned char 
  6240 ;;  arg             4   10[COMRAM] unsigned long 
  6241 ;;  exp             1    9[COMRAM] unsigned char 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  4    0[COMRAM] unsigned char 
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6251 ;;      Params:         4       0       0       0       0       0       0       0       0
  6252 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6253 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6254 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6255 ;;Total ram usage:       14 bytes
  6256 ;; Hardware stack levels used: 1
  6257 ;; Hardware stack levels required when called: 1
  6258 ;; This function calls:
  6259 ;;		Nothing
  6260 ;; This function is called by:
  6261 ;;		_main
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text24
  6266   00231A                     __ptext24:
  6267                           	callstack 0
  6268   00231A                     ___xxtofl:
  6269                           	callstack 29
  6270                           
  6271                           ;incstack = 0
  6272                           ;___xxtofl@sign stored from wreg
  6273   00231A  6E09               	movwf	___xxtofl@sign^0,c
  6274   00231C  5009               	movf	___xxtofl@sign^0,w,c
  6275   00231E  B4D8               	btfsc	status,2,c
  6276   002320  EF94  F011         	goto	u3471
  6277   002324  EF96  F011         	goto	u3470
  6278   002328                     u3471:
  6279   002328  EFB8  F011         	goto	l752
  6280   00232C                     u3470:
  6281   00232C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6282   00232E  EF9D  F011         	goto	u3480
  6283   002332  EF9B  F011         	goto	u3481
  6284   002336                     u3481:
  6285   002336  EFB8  F011         	goto	l752
  6286   00233A                     u3480:
  6287   00233A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6288   00233E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6289   002342  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6290   002346  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6291   00234A  1E05               	comf	??___xxtofl^0,f,c
  6292   00234C  1E06               	comf	(??___xxtofl+1)^0,f,c
  6293   00234E  1E07               	comf	(??___xxtofl+2)^0,f,c
  6294   002350  1E08               	comf	(??___xxtofl+3)^0,f,c
  6295   002352  2A05               	incf	??___xxtofl^0,f,c
  6296   002354  0E00               	movlw	0
  6297   002356  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6298   002358  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6299   00235A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6300   00235C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6301   002360  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6302   002364  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6303   002368  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6304   00236C  EFC0  F011         	goto	l3244
  6305   002370                     l752:
  6306   002370  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6307   002374  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6308   002378  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6309   00237C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6310   002380                     l3244:
  6311   002380  5001               	movf	___xxtofl@val^0,w,c
  6312   002382  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6313   002384  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6314   002386  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6315   002388  A4D8               	btfss	status,2,c
  6316   00238A  EFC9  F011         	goto	u3491
  6317   00238E  EFCB  F011         	goto	u3490
  6318   002392                     u3491:
  6319   002392  EFD5  F011         	goto	l3250
  6320   002396                     u3490:
  6321   002396  0E00               	movlw	0
  6322   002398  6E01               	movwf	?___xxtofl^0,c
  6323   00239A  0E00               	movlw	0
  6324   00239C  6E02               	movwf	(?___xxtofl+1)^0,c
  6325   00239E  0E00               	movlw	0
  6326   0023A0  6E03               	movwf	(?___xxtofl+2)^0,c
  6327   0023A2  0E00               	movlw	0
  6328   0023A4  6E04               	movwf	(?___xxtofl+3)^0,c
  6329   0023A6  EF66  F012         	goto	l755
  6330   0023AA                     l3250:
  6331   0023AA  0E96               	movlw	150
  6332   0023AC  6E0A               	movwf	___xxtofl@exp^0,c
  6333   0023AE  EFDF  F011         	goto	l3254
  6334   0023B2                     l3252:
  6335   0023B2  2A0A               	incf	___xxtofl@exp^0,f,c
  6336   0023B4  90D8               	bcf	status,0,c
  6337   0023B6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6338   0023B8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6339   0023BA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6340   0023BC  320B               	rrcf	___xxtofl@arg^0,f,c
  6341   0023BE                     l3254:
  6342   0023BE  0E00               	movlw	0
  6343   0023C0  140B               	andwf	___xxtofl@arg^0,w,c
  6344   0023C2  6E05               	movwf	??___xxtofl^0,c
  6345   0023C4  0E00               	movlw	0
  6346   0023C6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6347   0023C8  6E06               	movwf	(??___xxtofl+1)^0,c
  6348   0023CA  0E00               	movlw	0
  6349   0023CC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6350   0023CE  6E07               	movwf	(??___xxtofl+2)^0,c
  6351   0023D0  0EFE               	movlw	254
  6352   0023D2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6353   0023D4  6E08               	movwf	(??___xxtofl+3)^0,c
  6354   0023D6  5005               	movf	??___xxtofl^0,w,c
  6355   0023D8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6356   0023DA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6357   0023DC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6358   0023DE  A4D8               	btfss	status,2,c
  6359   0023E0  EFF4  F011         	goto	u3501
  6360   0023E4  EFF6  F011         	goto	u3500
  6361   0023E8                     u3501:
  6362   0023E8  EFD9  F011         	goto	l3252
  6363   0023EC                     u3500:
  6364   0023EC  EF04  F012         	goto	l759
  6365   0023F0                     l3256:
  6366   0023F0  2A0A               	incf	___xxtofl@exp^0,f,c
  6367   0023F2  0E01               	movlw	1
  6368   0023F4  260B               	addwf	___xxtofl@arg^0,f,c
  6369   0023F6  0E00               	movlw	0
  6370   0023F8  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6371   0023FA  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6372   0023FC  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6373   0023FE  90D8               	bcf	status,0,c
  6374   002400  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6375   002402  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6376   002404  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6377   002406  320B               	rrcf	___xxtofl@arg^0,f,c
  6378   002408                     l759:
  6379   002408  0E00               	movlw	0
  6380   00240A  140B               	andwf	___xxtofl@arg^0,w,c
  6381   00240C  6E05               	movwf	??___xxtofl^0,c
  6382   00240E  0E00               	movlw	0
  6383   002410  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6384   002412  6E06               	movwf	(??___xxtofl+1)^0,c
  6385   002414  0E00               	movlw	0
  6386   002416  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6387   002418  6E07               	movwf	(??___xxtofl+2)^0,c
  6388   00241A  0EFF               	movlw	255
  6389   00241C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6390   00241E  6E08               	movwf	(??___xxtofl+3)^0,c
  6391   002420  5005               	movf	??___xxtofl^0,w,c
  6392   002422  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6393   002424  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6394   002426  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6395   002428  A4D8               	btfss	status,2,c
  6396   00242A  EF19  F012         	goto	u3511
  6397   00242E  EF1B  F012         	goto	u3510
  6398   002432                     u3511:
  6399   002432  EFF8  F011         	goto	l3256
  6400   002436                     u3510:
  6401   002436  EF23  F012         	goto	l3264
  6402   00243A                     l3262:
  6403   00243A  060A               	decf	___xxtofl@exp^0,f,c
  6404   00243C  90D8               	bcf	status,0,c
  6405   00243E  360B               	rlcf	___xxtofl@arg^0,f,c
  6406   002440  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6407   002442  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6408   002444  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6409   002446                     l3264:
  6410   002446  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6411   002448  EF28  F012         	goto	u3521
  6412   00244C  EF2A  F012         	goto	u3520
  6413   002450                     u3521:
  6414   002450  EF32  F012         	goto	l766
  6415   002454                     u3520:
  6416   002454  0E02               	movlw	2
  6417   002456  600A               	cpfslt	___xxtofl@exp^0,c
  6418   002458  EF30  F012         	goto	u3531
  6419   00245C  EF32  F012         	goto	u3530
  6420   002460                     u3531:
  6421   002460  EF1D  F012         	goto	l3262
  6422   002464                     u3530:
  6423   002464                     l766:
  6424   002464  B00A               	btfsc	___xxtofl@exp^0,0,c
  6425   002466  EF37  F012         	goto	u3541
  6426   00246A  EF39  F012         	goto	u3540
  6427   00246E                     u3541:
  6428   00246E  EF3A  F012         	goto	l3270
  6429   002472                     u3540:
  6430   002472  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6431   002474                     l3270:
  6432   002474  90D8               	bcf	status,0,c
  6433   002476  320A               	rrcf	___xxtofl@exp^0,f,c
  6434   002478  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6435   00247C  6A06               	clrf	(??___xxtofl+1)^0,c
  6436   00247E  6A07               	clrf	(??___xxtofl+2)^0,c
  6437   002480  6A08               	clrf	(??___xxtofl+3)^0,c
  6438   002482  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6439   002486  6A07               	clrf	(??___xxtofl+2)^0,c
  6440   002488  6A06               	clrf	(??___xxtofl+1)^0,c
  6441   00248A  6A05               	clrf	??___xxtofl^0,c
  6442   00248C  5005               	movf	??___xxtofl^0,w,c
  6443   00248E  120B               	iorwf	___xxtofl@arg^0,f,c
  6444   002490  5006               	movf	(??___xxtofl+1)^0,w,c
  6445   002492  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6446   002494  5007               	movf	(??___xxtofl+2)^0,w,c
  6447   002496  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6448   002498  5008               	movf	(??___xxtofl+3)^0,w,c
  6449   00249A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6450   00249C  5009               	movf	___xxtofl@sign^0,w,c
  6451   00249E  B4D8               	btfsc	status,2,c
  6452   0024A0  EF54  F012         	goto	u3551
  6453   0024A4  EF56  F012         	goto	u3550
  6454   0024A8                     u3551:
  6455   0024A8  EF5E  F012         	goto	l3280
  6456   0024AC                     u3550:
  6457   0024AC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6458   0024AE  EF5D  F012         	goto	u3560
  6459   0024B2  EF5B  F012         	goto	u3561
  6460   0024B6                     u3561:
  6461   0024B6  EF5E  F012         	goto	l3280
  6462   0024BA                     u3560:
  6463   0024BA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6464   0024BC                     l3280:
  6465   0024BC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6466   0024C0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6467   0024C4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6468   0024C8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6469   0024CC                     l755:
  6470   0024CC  0012               	return		;funcret
  6471   0024CE                     __end_of___xxtofl:
  6472                           	callstack 0
  6473                           
  6474 ;; *************** function _Init_Internal_Oscillator *****************
  6475 ;; Defined at:
  6476 ;;		line 106 in file "main.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;		None
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;		None
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      void 
  6483 ;; Registers used:
  6484 ;;		wreg, status,2
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6490 ;;      Params:         0       0       0       0       0       0       0       0       0
  6491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6493 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6494 ;;Total ram usage:        0 bytes
  6495 ;; Hardware stack levels used: 1
  6496 ;; Hardware stack levels required when called: 1
  6497 ;; This function calls:
  6498 ;;		Nothing
  6499 ;; This function is called by:
  6500 ;;		_main
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504                           	psect	text25
  6505   002FD8                     __ptext25:
  6506                           	callstack 0
  6507   002FD8                     _Init_Internal_Oscillator:
  6508                           	callstack 29
  6509   002FD8                     
  6510                           ;main.c: 109:     OSCCON = 0x00;
  6511   002FD8  0E00               	movlw	0
  6512   002FDA  6ED3               	movwf	211,c	;volatile
  6513                           
  6514                           ;main.c: 112:     OSCCONbits.IRCF = 0b111;
  6515   002FDC  0E70               	movlw	112
  6516   002FDE  12D3               	iorwf	211,f,c	;volatile
  6517                           
  6518                           ;main.c: 113:     OSCCONbits.SCS = 0b11;
  6519   002FE0  0E03               	movlw	3
  6520   002FE2  12D3               	iorwf	211,f,c	;volatile
  6521   002FE4  0012               	return		;funcret
  6522   002FE6                     __end_of_Init_Internal_Oscillator:
  6523                           	callstack 0
  6524                           
  6525 ;; *************** function _Init_ADC_Module *****************
  6526 ;; Defined at:
  6527 ;;		line 76 in file "main.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;		None
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      void 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6541 ;;      Params:         0       0       0       0       0       0       0       0       0
  6542 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6544 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6545 ;;Total ram usage:        0 bytes
  6546 ;; Hardware stack levels used: 1
  6547 ;; Hardware stack levels required when called: 1
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_main
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           	psect	text26
  6556   002F2E                     __ptext26:
  6557                           	callstack 0
  6558   002F2E                     _Init_ADC_Module:
  6559                           	callstack 29
  6560   002F2E                     
  6561                           ;main.c: 79:     ADCON0 = 0x00;
  6562   002F2E  0E00               	movlw	0
  6563   002F30  6EC2               	movwf	194,c	;volatile
  6564                           
  6565                           ;main.c: 80:     ADCON1 = 0x00;
  6566   002F32  0E00               	movlw	0
  6567   002F34  6EC1               	movwf	193,c	;volatile
  6568                           
  6569                           ;main.c: 81:     ADCON2 = 0x00;
  6570   002F36  0E00               	movlw	0
  6571   002F38  6EC0               	movwf	192,c	;volatile
  6572   002F3A                     
  6573                           ;main.c: 84:     ADCON0bits.ADON = 0;
  6574   002F3A  90C2               	bcf	194,0,c	;volatile
  6575                           
  6576                           ;main.c: 85:     ADCON0bits.CHS = 0b0000;
  6577   002F3C  0EC3               	movlw	-61
  6578   002F3E  16C2               	andwf	194,f,c	;volatile
  6579                           
  6580                           ;main.c: 87:     ADCON1bits.VCFG = 0b00;
  6581   002F40  0ECF               	movlw	-49
  6582   002F42  16C1               	andwf	193,f,c	;volatile
  6583                           
  6584                           ;main.c: 88:     ADCON1bits.PCFG = 0b1110;
  6585   002F44  50C1               	movf	193,w,c	;volatile
  6586   002F46  0BF0               	andlw	-16
  6587   002F48  090E               	iorlw	14
  6588   002F4A  6EC1               	movwf	193,c	;volatile
  6589   002F4C                     
  6590                           ;main.c: 90:     ADCON2bits.ADFM = 0;
  6591   002F4C  9EC0               	bcf	192,7,c	;volatile
  6592                           
  6593                           ;main.c: 91:     ADCON2bits.ADCS = 0b001;
  6594   002F4E  50C0               	movf	192,w,c	;volatile
  6595   002F50  0BF8               	andlw	-8
  6596   002F52  0901               	iorlw	1
  6597   002F54  6EC0               	movwf	192,c	;volatile
  6598                           
  6599                           ;main.c: 100:     ADCON2bits.ACQT = 0b110;
  6600   002F56  50C0               	movf	192,w,c	;volatile
  6601   002F58  0BC7               	andlw	-57
  6602   002F5A  0930               	iorlw	48
  6603   002F5C  6EC0               	movwf	192,c	;volatile
  6604   002F5E                     
  6605                           ;main.c: 103:     ADCON0bits.ADON = 1;
  6606   002F5E  80C2               	bsf	194,0,c	;volatile
  6607   002F60  0012               	return		;funcret
  6608   002F62                     __end_of_Init_ADC_Module:
  6609                           	callstack 0
  6610                           
  6611 ;; *************** function _FM_Lcd_Set_Cursor *****************
  6612 ;; Defined at:
  6613 ;;		line 62 in file "FM_LCD16X2_Easy.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;  filas           1    wreg     enum E3201
  6616 ;;  columna         1    5[COMRAM] enum E3205
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;  filas           1    6[COMRAM] enum E3201
  6619 ;;  base_pos        1    7[COMRAM] unsigned char 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  1    wreg      void 
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, status,0, cstack
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6629 ;;      Params:         1       0       0       0       0       0       0       0       0
  6630 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6632 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6633 ;;Total ram usage:        3 bytes
  6634 ;; Hardware stack levels used: 1
  6635 ;; Hardware stack levels required when called: 3
  6636 ;; This function calls:
  6637 ;;		_FM_Lcd_Send_Command
  6638 ;; This function is called by:
  6639 ;;		_main
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           	psect	text27
  6644   002E72                     __ptext27:
  6645                           	callstack 0
  6646   002E72                     _FM_Lcd_Set_Cursor:
  6647                           	callstack 27
  6648                           
  6649                           ;incstack = 0
  6650                           ;FM_Lcd_Set_Cursor@filas stored from wreg
  6651   002E72  6E07               	movwf	FM_Lcd_Set_Cursor@filas^0,c
  6652   002E74                     
  6653                           ;FM_LCD16X2_Easy.c: 62: void FM_Lcd_Set_Cursor (_row_lcd_t filas, _column_lcd_t columna)
      +                          ;FM_LCD16X2_Easy.c: 63: {;FM_LCD16X2_Easy.c: 64:     char base_pos = 0x00;
  6654   002E74  0E00               	movlw	0
  6655   002E76  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^0,c
  6656   002E78                     
  6657                           ;FM_LCD16X2_Easy.c: 65:     if(filas == ROW_1)
  6658   002E78  5007               	movf	FM_Lcd_Set_Cursor@filas^0,w,c
  6659   002E7A  A4D8               	btfss	status,2,c
  6660   002E7C  EF42  F017         	goto	u3421
  6661   002E80  EF44  F017         	goto	u3420
  6662   002E84                     u3421:
  6663   002E84  EF48  F017         	goto	l3208
  6664   002E88                     u3420:
  6665   002E88                     
  6666                           ;FM_LCD16X2_Easy.c: 66:     {;FM_LCD16X2_Easy.c: 67:         base_pos = 0x80;
  6667   002E88  0E80               	movlw	128
  6668   002E8A  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^0,c
  6669                           
  6670                           ;FM_LCD16X2_Easy.c: 68:     }
  6671   002E8C  EF55  F017         	goto	l3212
  6672   002E90                     l3208:
  6673   002E90  0407               	decf	FM_Lcd_Set_Cursor@filas^0,w,c
  6674   002E92  A4D8               	btfss	status,2,c
  6675   002E94  EF4E  F017         	goto	u3431
  6676   002E98  EF50  F017         	goto	u3430
  6677   002E9C                     u3431:
  6678   002E9C  EF54  F017         	goto	l89
  6679   002EA0                     u3430:
  6680   002EA0                     
  6681                           ;FM_LCD16X2_Easy.c: 70:     {;FM_LCD16X2_Easy.c: 71:         base_pos = 0xC0;
  6682   002EA0  0EC0               	movlw	192
  6683   002EA2  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^0,c
  6684                           
  6685                           ;FM_LCD16X2_Easy.c: 72:     }
  6686   002EA4  EF55  F017         	goto	l3212
  6687   002EA8                     l89:
  6688                           
  6689                           ;FM_LCD16X2_Easy.c: 74:     {;FM_LCD16X2_Easy.c: 75:         __nop();
  6690   002EA8  F000               	nop	
  6691   002EAA                     l3212:
  6692                           
  6693                           ;FM_LCD16X2_Easy.c: 79:     base_pos += columna;
  6694   002EAA  5006               	movf	FM_Lcd_Set_Cursor@columna^0,w,c
  6695   002EAC  2608               	addwf	FM_Lcd_Set_Cursor@base_pos^0,f,c
  6696   002EAE                     
  6697                           ;FM_LCD16X2_Easy.c: 80:     FM_Lcd_Send_Command(base_pos);
  6698   002EAE  5008               	movf	FM_Lcd_Set_Cursor@base_pos^0,w,c
  6699   002EB0  ECF9  F017         	call	_FM_Lcd_Send_Command
  6700   002EB4  0012               	return		;funcret
  6701   002EB6                     __end_of_FM_Lcd_Set_Cursor:
  6702                           	callstack 0
  6703                           
  6704 ;; *************** function _FM_Lcd_Send_String *****************
  6705 ;; Defined at:
  6706 ;;		line 52 in file "FM_LCD16X2_Easy.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  cadena          2    5[COMRAM] PTR unsigned char 
  6709 ;;		 -> data_vol(16), STR_1(14), 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  index           1    9[COMRAM] unsigned char 
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6721 ;;      Params:         2       0       0       0       0       0       0       0       0
  6722 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6723 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6724 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6725 ;;Total ram usage:        5 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 3
  6728 ;; This function calls:
  6729 ;;		_FM_Lcd_Send_Character
  6730 ;; This function is called by:
  6731 ;;		_main
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text28
  6736   002BAC                     __ptext28:
  6737                           	callstack 0
  6738   002BAC                     _FM_Lcd_Send_String:
  6739                           	callstack 27
  6740   002BAC                     
  6741                           ;FM_LCD16X2_Easy.c: 52: void FM_Lcd_Send_String (char *cadena);FM_LCD16X2_Easy.c: 53: {;
      +                          FM_LCD16X2_Easy.c: 54:     uint8_t index = 0;
  6742   002BAC  0E00               	movlw	0
  6743   002BAE  6E0A               	movwf	FM_Lcd_Send_String@index^0,c
  6744                           
  6745                           ;FM_LCD16X2_Easy.c: 55:     while(cadena[index] != '\0')
  6746   002BB0  EFF3  F015         	goto	l3224
  6747   002BB4                     l3220:
  6748                           
  6749                           ;FM_LCD16X2_Easy.c: 56:     {;FM_LCD16X2_Easy.c: 57:         FM_Lcd_Send_Character(caden
      +                          a[index]);
  6750   002BB4  500A               	movf	FM_Lcd_Send_String@index^0,w,c
  6751   002BB6  2406               	addwf	FM_Lcd_Send_String@cadena^0,w,c
  6752   002BB8  6E08               	movwf	??_FM_Lcd_Send_String^0,c
  6753   002BBA  0E00               	movlw	0
  6754   002BBC  2007               	addwfc	(FM_Lcd_Send_String@cadena+1)^0,w,c
  6755   002BBE  6E09               	movwf	(??_FM_Lcd_Send_String+1)^0,c
  6756   002BC0  C008  FFF6         	movff	??_FM_Lcd_Send_String,tblptrl
  6757   002BC4  C009  FFF7         	movff	??_FM_Lcd_Send_String+1,tblptrh
  6758   002BC8  6AF8               	clrf	tblptru,c
  6759   002BCA  0E07               	movlw	(high __ramtop+-1)
  6760   002BCC  64F7               	cpfsgt	tblptrh,c
  6761   002BCE  D003               	bra	u3447
  6762   002BD0  0008               	tblrd		*
  6763   002BD2  50F5               	movf	tablat,w,c
  6764   002BD4  D005               	bra	u3440
  6765   002BD6                     u3447:
  6766   002BD6  CFF6 FFE1          	movff	tblptrl,fsr1l
  6767   002BDA  CFF7 FFE2          	movff	tblptrh,fsr1h
  6768   002BDE  50E7               	movf	indf1,w,c
  6769   002BE0                     u3440:
  6770   002BE0  ECF3  F017         	call	_FM_Lcd_Send_Character
  6771   002BE4                     
  6772                           ;FM_LCD16X2_Easy.c: 58:         index++;
  6773   002BE4  2A0A               	incf	FM_Lcd_Send_String@index^0,f,c
  6774   002BE6                     l3224:
  6775                           
  6776                           ;FM_LCD16X2_Easy.c: 55:     while(cadena[index] != '\0')
  6777   002BE6  500A               	movf	FM_Lcd_Send_String@index^0,w,c
  6778   002BE8  2406               	addwf	FM_Lcd_Send_String@cadena^0,w,c
  6779   002BEA  6E08               	movwf	??_FM_Lcd_Send_String^0,c
  6780   002BEC  0E00               	movlw	0
  6781   002BEE  2007               	addwfc	(FM_Lcd_Send_String@cadena+1)^0,w,c
  6782   002BF0  6E09               	movwf	(??_FM_Lcd_Send_String+1)^0,c
  6783   002BF2  C008  FFF6         	movff	??_FM_Lcd_Send_String,tblptrl
  6784   002BF6  C009  FFF7         	movff	??_FM_Lcd_Send_String+1,tblptrh
  6785   002BFA  6AF8               	clrf	tblptru,c
  6786   002BFC  0E07               	movlw	(high __ramtop+-1)
  6787   002BFE  64F7               	cpfsgt	tblptrh,c
  6788   002C00  D003               	bra	u3457
  6789   002C02  0008               	tblrd		*
  6790   002C04  50F5               	movf	tablat,w,c
  6791   002C06  D005               	bra	u3450
  6792   002C08                     u3457:
  6793   002C08  CFF6 FFE1          	movff	tblptrl,fsr1l
  6794   002C0C  CFF7 FFE2          	movff	tblptrh,fsr1h
  6795   002C10  50E7               	movf	indf1,w,c
  6796   002C12                     u3450:
  6797   002C12  0900               	iorlw	0
  6798   002C14  A4D8               	btfss	status,2,c
  6799   002C16  EF0F  F016         	goto	u3461
  6800   002C1A  EF11  F016         	goto	u3460
  6801   002C1E                     u3461:
  6802   002C1E  EFDA  F015         	goto	l3220
  6803   002C22                     u3460:
  6804   002C22  0012               	return		;funcret
  6805   002C24                     __end_of_FM_Lcd_Send_String:
  6806                           	callstack 0
  6807                           
  6808 ;; *************** function _FM_Lcd_Send_Character *****************
  6809 ;; Defined at:
  6810 ;;		line 45 in file "FM_LCD16X2_Easy.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;  character_to    1    wreg     unsigned char 
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;  character_to    1    4[COMRAM] unsigned char 
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  1    wreg      void 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0, cstack
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6824 ;;      Params:         0       0       0       0       0       0       0       0       0
  6825 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6827 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6828 ;;Total ram usage:        1 bytes
  6829 ;; Hardware stack levels used: 1
  6830 ;; Hardware stack levels required when called: 2
  6831 ;; This function calls:
  6832 ;;		_FM_Lcd_Send_Nibble
  6833 ;; This function is called by:
  6834 ;;		_FM_Lcd_Send_String
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text29
  6839   002FE6                     __ptext29:
  6840                           	callstack 0
  6841   002FE6                     _FM_Lcd_Send_Character:
  6842                           	callstack 27
  6843                           
  6844                           ;incstack = 0
  6845                           ;FM_Lcd_Send_Character@character_to_send stored from wreg
  6846   002FE6  6E05               	movwf	FM_Lcd_Send_Character@character_to_send^0,c
  6847   002FE8                     
  6848                           ;FM_LCD16X2_Easy.c: 45: void FM_Lcd_Send_Character (char character_to_send);FM_LCD16X2_E
      +                          asy.c: 46: {;FM_LCD16X2_Easy.c: 47:     LATD |= (1 << 0);;
  6849   002FE8  808C               	bsf	140,0,c	;volatile
  6850   002FEA                     
  6851                           ;FM_LCD16X2_Easy.c: 48:     FM_Lcd_Send_Nibble(character_to_send);
  6852   002FEA  5005               	movf	FM_Lcd_Send_Character@character_to_send^0,w,c
  6853   002FEC  EC12  F016         	call	_FM_Lcd_Send_Nibble
  6854   002FF0  0012               	return		;funcret
  6855   002FF2                     __end_of_FM_Lcd_Send_Character:
  6856                           	callstack 0
  6857                           
  6858 ;; *************** function _FM_Lcd_Easy_Init *****************
  6859 ;; Defined at:
  6860 ;;		line 84 in file "FM_LCD16X2_Easy.c"
  6861 ;; Parameters:    Size  Location     Type
  6862 ;;		None
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;		None
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  1    wreg      void 
  6867 ;; Registers used:
  6868 ;;		wreg, status,2, status,0, cstack
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6874 ;;      Params:         0       0       0       0       0       0       0       0       0
  6875 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6877 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6878 ;;Total ram usage:        0 bytes
  6879 ;; Hardware stack levels used: 1
  6880 ;; Hardware stack levels required when called: 3
  6881 ;; This function calls:
  6882 ;;		_FM_Lcd_Easy_Gpio_Init
  6883 ;;		_FM_Lcd_Send_Command
  6884 ;; This function is called by:
  6885 ;;		_main
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889                           	psect	text30
  6890   002F62                     __ptext30:
  6891                           	callstack 0
  6892   002F62                     _FM_Lcd_Easy_Init:
  6893                           	callstack 27
  6894   002F62                     
  6895                           ;FM_LCD16X2_Easy.c: 86:     FM_Lcd_Easy_Gpio_Init();
  6896   002F62  ECFF  F017         	call	_FM_Lcd_Easy_Gpio_Init	;wreg free
  6897                           
  6898                           ;FM_LCD16X2_Easy.c: 88:     FM_Lcd_Send_Command(0x01);
  6899   002F66  0E01               	movlw	1
  6900   002F68  ECF9  F017         	call	_FM_Lcd_Send_Command
  6901                           
  6902                           ;FM_LCD16X2_Easy.c: 89:     FM_Lcd_Send_Command(0x02);
  6903   002F6C  0E02               	movlw	2
  6904   002F6E  ECF9  F017         	call	_FM_Lcd_Send_Command
  6905                           
  6906                           ;FM_LCD16X2_Easy.c: 90:     FM_Lcd_Send_Command(0x06);
  6907   002F72  0E06               	movlw	6
  6908   002F74  ECF9  F017         	call	_FM_Lcd_Send_Command
  6909                           
  6910                           ;FM_LCD16X2_Easy.c: 91:     FM_Lcd_Send_Command(0x0C);
  6911   002F78  0E0C               	movlw	12
  6912   002F7A  ECF9  F017         	call	_FM_Lcd_Send_Command
  6913                           
  6914                           ;FM_LCD16X2_Easy.c: 92:     FM_Lcd_Send_Command(0x10);
  6915   002F7E  0E10               	movlw	16
  6916   002F80  ECF9  F017         	call	_FM_Lcd_Send_Command
  6917                           
  6918                           ;FM_LCD16X2_Easy.c: 93:     FM_Lcd_Send_Command(0x2C);
  6919   002F84  0E2C               	movlw	44
  6920   002F86  ECF9  F017         	call	_FM_Lcd_Send_Command
  6921   002F8A  0012               	return		;funcret
  6922   002F8C                     __end_of_FM_Lcd_Easy_Init:
  6923                           	callstack 0
  6924                           
  6925 ;; *************** function _FM_Lcd_Send_Command *****************
  6926 ;; Defined at:
  6927 ;;		line 39 in file "FM_LCD16X2_Easy.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;  command_to_s    1    wreg     unsigned char 
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;  command_to_s    1    4[COMRAM] unsigned char 
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  1    wreg      void 
  6934 ;; Registers used:
  6935 ;;		wreg, status,2, status,0, cstack
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6941 ;;      Params:         0       0       0       0       0       0       0       0       0
  6942 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6944 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6945 ;;Total ram usage:        1 bytes
  6946 ;; Hardware stack levels used: 1
  6947 ;; Hardware stack levels required when called: 2
  6948 ;; This function calls:
  6949 ;;		_FM_Lcd_Send_Nibble
  6950 ;; This function is called by:
  6951 ;;		_FM_Lcd_Set_Cursor
  6952 ;;		_FM_Lcd_Easy_Init
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           	psect	text31
  6957   002FF2                     __ptext31:
  6958                           	callstack 0
  6959   002FF2                     _FM_Lcd_Send_Command:
  6960                           	callstack 27
  6961                           
  6962                           ;incstack = 0
  6963                           ;FM_Lcd_Send_Command@command_to_send stored from wreg
  6964   002FF2  6E05               	movwf	FM_Lcd_Send_Command@command_to_send^0,c
  6965   002FF4                     
  6966                           ;FM_LCD16X2_Easy.c: 39: void FM_Lcd_Send_Command (char command_to_send);FM_LCD16X2_Easy.
      +                          c: 40: {;FM_LCD16X2_Easy.c: 41:     LATD &= ~(1 << 0);;
  6967   002FF4  908C               	bcf	140,0,c	;volatile
  6968   002FF6                     
  6969                           ;FM_LCD16X2_Easy.c: 42:     FM_Lcd_Send_Nibble(command_to_send);
  6970   002FF6  5005               	movf	FM_Lcd_Send_Command@command_to_send^0,w,c
  6971   002FF8  EC12  F016         	call	_FM_Lcd_Send_Nibble
  6972   002FFC  0012               	return		;funcret
  6973   002FFE                     __end_of_FM_Lcd_Send_Command:
  6974                           	callstack 0
  6975                           
  6976 ;; *************** function _FM_Lcd_Send_Nibble *****************
  6977 ;; Defined at:
  6978 ;;		line 19 in file "FM_LCD16X2_Easy.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;  byte_to_send    1    wreg     unsigned char 
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;  byte_to_send    1    1[COMRAM] unsigned char 
  6983 ;;  lower_bits      1    3[COMRAM] unsigned char 
  6984 ;;  upper_bits      1    2[COMRAM] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      void 
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6994 ;;      Params:         0       0       0       0       0       0       0       0       0
  6995 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6996 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6997 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6998 ;;Total ram usage:        4 bytes
  6999 ;; Hardware stack levels used: 1
  7000 ;; Hardware stack levels required when called: 1
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_FM_Lcd_Send_Command
  7005 ;;		_FM_Lcd_Send_Character
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text32
  7010   002C24                     __ptext32:
  7011                           	callstack 0
  7012   002C24                     _FM_Lcd_Send_Nibble:
  7013                           	callstack 27
  7014                           
  7015                           ;incstack = 0
  7016                           ;FM_Lcd_Send_Nibble@byte_to_send stored from wreg
  7017   002C24  6E02               	movwf	FM_Lcd_Send_Nibble@byte_to_send^0,c
  7018   002C26                     
  7019                           ;FM_LCD16X2_Easy.c: 19: void FM_Lcd_Send_Nibble (char byte_to_send);FM_LCD16X2_Easy.c: 2
      +                          0: {;FM_LCD16X2_Easy.c: 21:     char upper_bits, lower_bits;;FM_LCD16X2_Easy.c: 23:     
      +                          upper_bits = (byte_to_send & 0xF0);
  7020   002C26  5002               	movf	FM_Lcd_Send_Nibble@byte_to_send^0,w,c
  7021   002C28  0BF0               	andlw	240
  7022   002C2A  6E03               	movwf	FM_Lcd_Send_Nibble@upper_bits^0,c
  7023                           
  7024                           ;FM_LCD16X2_Easy.c: 24:     lower_bits = (byte_to_send & 0x0F) << 4;
  7025   002C2C  C002  F001         	movff	FM_Lcd_Send_Nibble@byte_to_send,??_FM_Lcd_Send_Nibble
  7026   002C30  0E0F               	movlw	15
  7027   002C32  1601               	andwf	??_FM_Lcd_Send_Nibble^0,f,c
  7028   002C34  3801               	swapf	??_FM_Lcd_Send_Nibble^0,w,c
  7029   002C36  0BF0               	andlw	240
  7030   002C38  6E04               	movwf	FM_Lcd_Send_Nibble@lower_bits^0,c
  7031                           
  7032                           ;FM_LCD16X2_Easy.c: 30:     LATD |= upper_bits;
  7033   002C3A  5003               	movf	FM_Lcd_Send_Nibble@upper_bits^0,w,c	;volatile
  7034   002C3C  128C               	iorwf	140,f,c	;volatile
  7035   002C3E                     
  7036                           ;FM_LCD16X2_Easy.c: 31:     LATD |= (1 << 2);; _delay((unsigned long)((1)*(8000000UL/400
      +                          0.0))); LATD &= ~(1 << 2);; _delay((unsigned long)((1)*(8000000UL/4000.0)));;
  7037   002C3E  848C               	bsf	140,2,c	;volatile
  7038   002C40  0E03               	movlw	3
  7039   002C42  6E01               	movwf	??_FM_Lcd_Send_Nibble^0,c
  7040   002C44  0E98               	movlw	152
  7041   002C46                     u3607:
  7042   002C46  2EE8               	decfsz	wreg,f,c
  7043   002C48  D7FE               	bra	u3607
  7044   002C4A  2E01               	decfsz	??_FM_Lcd_Send_Nibble^0,f,c
  7045   002C4C  D7FC               	bra	u3607
  7046   002C4E  948C               	bcf	140,2,c	;volatile
  7047   002C50  0E03               	movlw	3
  7048   002C52  6E01               	movwf	??_FM_Lcd_Send_Nibble^0,c
  7049   002C54  0E98               	movlw	152
  7050   002C56                     u3617:
  7051   002C56  2EE8               	decfsz	wreg,f,c
  7052   002C58  D7FE               	bra	u3617
  7053   002C5A  2E01               	decfsz	??_FM_Lcd_Send_Nibble^0,f,c
  7054   002C5C  D7FC               	bra	u3617
  7055   002C5E                     
  7056                           ;FM_LCD16X2_Easy.c: 32:     LATD &= ~upper_bits;
  7057   002C5E  5003               	movf	FM_Lcd_Send_Nibble@upper_bits^0,w,c	;volatile
  7058   002C60  0AFF               	xorlw	255
  7059   002C62  168C               	andwf	140,f,c	;volatile
  7060   002C64                     
  7061                           ;FM_LCD16X2_Easy.c: 33:     LATD |= lower_bits;
  7062   002C64  5004               	movf	FM_Lcd_Send_Nibble@lower_bits^0,w,c	;volatile
  7063   002C66  128C               	iorwf	140,f,c	;volatile
  7064                           
  7065                           ;FM_LCD16X2_Easy.c: 34:     LATD |= (1 << 2);; _delay((unsigned long)((1)*(8000000UL/400
      +                          0.0))); LATD &= ~(1 << 2);; _delay((unsigned long)((1)*(8000000UL/4000.0)));;
  7066   002C68  848C               	bsf	140,2,c	;volatile
  7067   002C6A  0E03               	movlw	3
  7068   002C6C  6E01               	movwf	??_FM_Lcd_Send_Nibble^0,c
  7069   002C6E  0E98               	movlw	152
  7070   002C70                     u3627:
  7071   002C70  2EE8               	decfsz	wreg,f,c
  7072   002C72  D7FE               	bra	u3627
  7073   002C74  2E01               	decfsz	??_FM_Lcd_Send_Nibble^0,f,c
  7074   002C76  D7FC               	bra	u3627
  7075   002C78  948C               	bcf	140,2,c	;volatile
  7076   002C7A  0E03               	movlw	3
  7077   002C7C  6E01               	movwf	??_FM_Lcd_Send_Nibble^0,c
  7078   002C7E  0E98               	movlw	152
  7079   002C80                     u3637:
  7080   002C80  2EE8               	decfsz	wreg,f,c
  7081   002C82  D7FE               	bra	u3637
  7082   002C84  2E01               	decfsz	??_FM_Lcd_Send_Nibble^0,f,c
  7083   002C86  D7FC               	bra	u3637
  7084   002C88                     
  7085                           ;FM_LCD16X2_Easy.c: 35:     LATD &= ~lower_bits;
  7086   002C88  5004               	movf	FM_Lcd_Send_Nibble@lower_bits^0,w,c	;volatile
  7087   002C8A  0AFF               	xorlw	255
  7088   002C8C  168C               	andwf	140,f,c	;volatile
  7089   002C8E  0012               	return		;funcret
  7090   002C90                     __end_of_FM_Lcd_Send_Nibble:
  7091                           	callstack 0
  7092                           
  7093 ;; *************** function _FM_Lcd_Easy_Gpio_Init *****************
  7094 ;; Defined at:
  7095 ;;		line 7 in file "FM_LCD16X2_Easy.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;		None
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;  bits_data       1    0        unsigned char 
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  1    wreg      void 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2, status,0
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7109 ;;      Params:         0       0       0       0       0       0       0       0       0
  7110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7112 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7113 ;;Total ram usage:        0 bytes
  7114 ;; Hardware stack levels used: 1
  7115 ;; Hardware stack levels required when called: 1
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_FM_Lcd_Easy_Init
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text33
  7124   002FFE                     __ptext33:
  7125                           	callstack 0
  7126   002FFE                     _FM_Lcd_Easy_Gpio_Init:
  7127                           	callstack 28
  7128   002FFE                     
  7129                           ;FM_LCD16X2_Easy.c: 15:     TRISD = 0x00;
  7130   002FFE  0E00               	movlw	0
  7131   003000  6E95               	movwf	149,c	;volatile
  7132   003002                     
  7133                           ;FM_LCD16X2_Easy.c: 16:     LATD &= ~(1 << 1);
  7134   003002  928C               	bcf	140,1,c	;volatile
  7135   003004  0012               	return		;funcret
  7136   003006                     __end_of_FM_Lcd_Easy_Gpio_Init:
  7137                           	callstack 0
  7138                           
  7139 ;; *************** function _ISR *****************
  7140 ;; Defined at:
  7141 ;;		line 22 in file "main.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;		None
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  1    wreg      void 
  7148 ;; Registers used:
  7149 ;;		None
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7155 ;;      Params:         0       0       0       0       0       0       0       0       0
  7156 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7158 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7159 ;;Total ram usage:        0 bytes
  7160 ;; Hardware stack levels used: 1
  7161 ;; This function calls:
  7162 ;;		Nothing
  7163 ;; This function is called by:
  7164 ;;		Interrupt level 2
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           	psect	intcode
  7169   000008                     __pintcode:
  7170                           	callstack 0
  7171   000008                     _ISR:
  7172                           	callstack 22
  7173                           
  7174                           ;incstack = 0
  7175   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7176   00000A  ED03  F018         	call	int_func,f	;refresh shadow registers
  7177                           
  7178                           	psect	intcode_body
  7179   003006                     __pintcode_body:
  7180                           	callstack 22
  7181   003006                     int_func:
  7182                           	callstack 22
  7183   003006  0006               	pop		; remove dummy address from shadow register refresh
  7184   003008  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7185   00300A  0011               	retfie		f
  7186   00300C                     __end_of_ISR:
  7187                           	callstack 0
  7188                           
  7189                           	psect	rparam
  7190   000000                     
  7191                           	psect	temp
  7192   00005E                     btemp:
  7193                           	callstack 0
  7194   00005E                     	ds	1
  7195   000000                     int$flags	set	btemp
  7196   000000                     wtemp8	set	btemp+1
  7197   000000                     ttemp5	set	btemp+1
  7198   000000                     ttemp6	set	btemp+4
  7199   000000                     ttemp7	set	btemp+8
  7200                           
  7201                           	psect	idloc
  7202                           
  7203                           ;Config register IDLOC0 @ 0x200000
  7204                           ;	unspecified, using default values
  7205   200000                     	org	2097152
  7206   200000  FF                 	db	255
  7207                           
  7208                           ;Config register IDLOC1 @ 0x200001
  7209                           ;	unspecified, using default values
  7210   200001                     	org	2097153
  7211   200001  FF                 	db	255
  7212                           
  7213                           ;Config register IDLOC2 @ 0x200002
  7214                           ;	unspecified, using default values
  7215   200002                     	org	2097154
  7216   200002  FF                 	db	255
  7217                           
  7218                           ;Config register IDLOC3 @ 0x200003
  7219                           ;	unspecified, using default values
  7220   200003                     	org	2097155
  7221   200003  FF                 	db	255
  7222                           
  7223                           ;Config register IDLOC4 @ 0x200004
  7224                           ;	unspecified, using default values
  7225   200004                     	org	2097156
  7226   200004  FF                 	db	255
  7227                           
  7228                           ;Config register IDLOC5 @ 0x200005
  7229                           ;	unspecified, using default values
  7230   200005                     	org	2097157
  7231   200005  FF                 	db	255
  7232                           
  7233                           ;Config register IDLOC6 @ 0x200006
  7234                           ;	unspecified, using default values
  7235   200006                     	org	2097158
  7236   200006  FF                 	db	255
  7237                           
  7238                           ;Config register IDLOC7 @ 0x200007
  7239                           ;	unspecified, using default values
  7240   200007                     	org	2097159
  7241   200007  FF                 	db	255
  7242                           
  7243                           	psect	config
  7244                           
  7245                           ;Config register CONFIG1L @ 0x300000
  7246                           ;	PLL Prescaler Selection bits
  7247                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  7248                           ;	System Clock Postscaler Selection bits
  7249                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  7250                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7251                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  7252   300000                     	org	3145728
  7253   300000  00                 	db	0
  7254                           
  7255                           ;Config register CONFIG1H @ 0x300001
  7256                           ;	Oscillator Selection bits
  7257                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
  7258                           ;	Fail-Safe Clock Monitor Enable bit
  7259                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7260                           ;	Internal/External Oscillator Switchover bit
  7261                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7262   300001                     	org	3145729
  7263   300001  0B                 	db	11
  7264                           
  7265                           ;Config register CONFIG2L @ 0x300002
  7266                           ;	Power-up Timer Enable bit
  7267                           ;	PWRT = OFF, PWRT disabled
  7268                           ;	Brown-out Reset Enable bits
  7269                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  7270                           ;	Brown-out Reset Voltage bits
  7271                           ;	BORV = 3, Minimum setting 2.05V
  7272                           ;	USB Voltage Regulator Enable bit
  7273                           ;	VREGEN = OFF, USB voltage regulator disabled
  7274   300002                     	org	3145730
  7275   300002  19                 	db	25
  7276                           
  7277                           ;Config register CONFIG2H @ 0x300003
  7278                           ;	Watchdog Timer Enable bit
  7279                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7280                           ;	Watchdog Timer Postscale Select bits
  7281                           ;	WDTPS = 32768, 1:32768
  7282   300003                     	org	3145731
  7283   300003  1E                 	db	30
  7284                           
  7285                           ; Padding undefined space
  7286   300004                     	org	3145732
  7287   300004  FF                 	db	255
  7288                           
  7289                           ;Config register CONFIG3H @ 0x300005
  7290                           ;	CCP2 MUX bit
  7291                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  7292                           ;	PORTB A/D Enable bit
  7293                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7294                           ;	Low-Power Timer 1 Oscillator Enable bit
  7295                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7296                           ;	MCLR Pin Enable bit
  7297                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7298   300005                     	org	3145733
  7299   300005  81                 	db	129
  7300                           
  7301                           ;Config register CONFIG4L @ 0x300006
  7302                           ;	Stack Full/Underflow Reset Enable bit
  7303                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  7304                           ;	Single-Supply ICSP Enable bit
  7305                           ;	LVP = OFF, Single-Supply ICSP disabled
  7306                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7307                           ;	ICPRT = OFF, ICPORT disabled
  7308                           ;	Extended Instruction Set Enable bit
  7309                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7310                           ;	Background Debugger Enable bit
  7311                           ;	DEBUG = 0x1, unprogrammed default
  7312   300006                     	org	3145734
  7313   300006  80                 	db	128
  7314                           
  7315                           ; Padding undefined space
  7316   300007                     	org	3145735
  7317   300007  FF                 	db	255
  7318                           
  7319                           ;Config register CONFIG5L @ 0x300008
  7320                           ;	Code Protection bit
  7321                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  7322                           ;	Code Protection bit
  7323                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  7324                           ;	Code Protection bit
  7325                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  7326                           ;	Code Protection bit
  7327                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  7328   300008                     	org	3145736
  7329   300008  0F                 	db	15
  7330                           
  7331                           ;Config register CONFIG5H @ 0x300009
  7332                           ;	Boot Block Code Protection bit
  7333                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  7334                           ;	Data EEPROM Code Protection bit
  7335                           ;	CPD = OFF, Data EEPROM is not code-protected
  7336   300009                     	org	3145737
  7337   300009  C0                 	db	192
  7338                           
  7339                           ;Config register CONFIG6L @ 0x30000A
  7340                           ;	Write Protection bit
  7341                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  7342                           ;	Write Protection bit
  7343                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  7344                           ;	Write Protection bit
  7345                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  7346                           ;	Write Protection bit
  7347                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  7348   30000A                     	org	3145738
  7349   30000A  0F                 	db	15
  7350                           
  7351                           ;Config register CONFIG6H @ 0x30000B
  7352                           ;	Configuration Register Write Protection bit
  7353                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7354                           ;	Boot Block Write Protection bit
  7355                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  7356                           ;	Data EEPROM Write Protection bit
  7357                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7358   30000B                     	org	3145739
  7359   30000B  E0                 	db	224
  7360                           
  7361                           ;Config register CONFIG7L @ 0x30000C
  7362                           ;	Table Read Protection bit
  7363                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7364                           ;	Table Read Protection bit
  7365                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7366                           ;	Table Read Protection bit
  7367                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7368                           ;	Table Read Protection bit
  7369                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7370   30000C                     	org	3145740
  7371   30000C  0F                 	db	15
  7372                           
  7373                           ;Config register CONFIG7H @ 0x30000D
  7374                           ;	Boot Block Table Read Protection bit
  7375                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  7376   30000D                     	org	3145741
  7377   30000D  40                 	db	64
  7378                           tosu	equ	0xFFF
  7379                           tosh	equ	0xFFE
  7380                           tosl	equ	0xFFD
  7381                           stkptr	equ	0xFFC
  7382                           pclatu	equ	0xFFB
  7383                           pclath	equ	0xFFA
  7384                           pcl	equ	0xFF9
  7385                           tblptru	equ	0xFF8
  7386                           tblptrh	equ	0xFF7
  7387                           tblptrl	equ	0xFF6
  7388                           tablat	equ	0xFF5
  7389                           prodh	equ	0xFF4
  7390                           prodl	equ	0xFF3
  7391                           indf0	equ	0xFEF
  7392                           postinc0	equ	0xFEE
  7393                           postdec0	equ	0xFED
  7394                           preinc0	equ	0xFEC
  7395                           plusw0	equ	0xFEB
  7396                           fsr0h	equ	0xFEA
  7397                           fsr0l	equ	0xFE9
  7398                           wreg	equ	0xFE8
  7399                           indf1	equ	0xFE7
  7400                           postinc1	equ	0xFE6
  7401                           postdec1	equ	0xFE5
  7402                           preinc1	equ	0xFE4
  7403                           plusw1	equ	0xFE3
  7404                           fsr1h	equ	0xFE2
  7405                           fsr1l	equ	0xFE1
  7406                           bsr	equ	0xFE0
  7407                           indf2	equ	0xFDF
  7408                           postinc2	equ	0xFDE
  7409                           postdec2	equ	0xFDD
  7410                           preinc2	equ	0xFDC
  7411                           plusw2	equ	0xFDB
  7412                           fsr2h	equ	0xFDA
  7413                           fsr2l	equ	0xFD9
  7414                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         109
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160     99     128
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S851$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> data_vol(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S766$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S766$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    FM_Lcd_Send_String@cadena	PTR unsigned char  size(2) Largest target is 16
		 -> data_vol(BANK0[16]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _FM_Lcd_Set_Cursor->_FM_Lcd_Send_Command
    _FM_Lcd_Send_String->_FM_Lcd_Send_Character
    _FM_Lcd_Send_Character->_FM_Lcd_Send_Nibble
    _FM_Lcd_Easy_Init->_FM_Lcd_Send_Command
    _FM_Lcd_Send_Command->_FM_Lcd_Send_Nibble

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   27880
                                             89 BANK0     10    10      0
                   _FM_Lcd_Easy_Init
                 _FM_Lcd_Send_String
                  _FM_Lcd_Set_Cursor
                    _Init_ADC_Module
           _Init_Internal_Oscillator
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8   21665
                                             67 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   21310
                                             59 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6   20951
                                             44 BANK0     15     9      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     643
                                              6 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   18885
                                             84 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2455
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Init_Internal_Oscillator                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC_Module                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Set_Cursor                                    3     2      1     401
                                              5 COMRAM     3     2      1
                _FM_Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Send_String                                   5     3      2     398
                                              5 COMRAM     5     3      2
              _FM_Lcd_Send_Character
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Send_Character                                1     1      0     156
                                              4 COMRAM     1     1      0
                 _FM_Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Easy_Init                                     0     0      0     157
              _FM_Lcd_Easy_Gpio_Init
                _FM_Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Send_Command                                  1     1      0     156
                                              4 COMRAM     1     1      0
                 _FM_Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (3) _FM_Lcd_Send_Nibble                                   4     4      0     134
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Easy_Gpio_Init                                1     1      0       1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FM_Lcd_Easy_Init
     _FM_Lcd_Easy_Gpio_Init
     _FM_Lcd_Send_Command
       _FM_Lcd_Send_Nibble
   _FM_Lcd_Send_String
     _FM_Lcd_Send_Character
       _FM_Lcd_Send_Nibble
   _FM_Lcd_Set_Cursor
     _FM_Lcd_Send_Command
   _Init_ADC_Module
   _Init_Internal_Oscillator
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      50       8       31.2%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     63      80       6       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITBIGSFRhhh        2C      0       0      21        0.0%
BITBIGSFRlll        2C      0       0      25        0.0%
BITBIGSFRlh         2A      0       0      23        0.0%
BITBIGSFRhhl         E      0       0      22        0.0%
BITBIGSFRllh         8      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12D       3        0.0%
DATA                 0      0     12D       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jun 26 15:42:09 2023

                          ___fldiv@aexp 0040                            ___fldiv@bexp 003F  
                          ___fldiv@sign 0038                                      l55 2F60  
                                    l47 24F2                                      l72 2C8E  
                                    l58 2FE4                                      l75 2FFC  
                                    l91 2EB4                                      l84 2C22  
                                    l69 3004                                      l94 2F8A  
                                    l78 2FF0                                      l89 2EA8  
                                    l97 2FD6                     ___wmul@multiplicand 0003  
                                   l362 27B2                                     l371 2F2C  
                                   l356 2B30                                     l367 27F8  
                                   l711 17A0                                     l720 1A0E  
                                   l721 19FC                                     l625 140A  
                                   l642 1524                                     l634 16DA  
                                   l626 13F8                                     l394 26F4  
                                   l715 1B04                                     l651 15F4  
                                   l627 13BE                                     l652 15E2  
                                   l820 121A                                     l805 2B54  
                                   l718 1996                                     l823 0BB6  
                                   l752 2370                                     l728 1AC6  
                                   l681 1CFE                                     l913 2318  
                                   l809 2BAA                                     l825 09FC  
                                   l690 1D44                                     l906 28F6  
                                   l755 24CC                                     l667 2E2C  
                                   l692 1DBC                                     l684 1CC2  
                                   l916 225C                                     l924 2CE4  
                                   l693 1DAA                                     l933 2DE6  
                                   l853 0FFE                                     l766 2464  
                                   l759 2408                                     l679 1E9E  
                                   l927 2CF4                                     l775 2D96  
                                   l945 29C0                                     l953 2E70  
                                   l865 2A7E                                     l962 2EF4  
                                   l956 300C                                     l869 2A86  
                                   l896 2D46                                     l889 2106  
                                   _ISR 0008                                     _pad 2B32  
                                   wreg 0FE8                             main@adc_val 00C1  
                          ___flmul@aexp 0020                            ___flmul@bexp 0021  
                          ___flmul@sign 001B                            ___flmul@temp 0026  
                          ___flmul@prod 0022                                    ?_ISR 0001  
                          ___fltol@exp1 000A                                    l2200 129C  
                                  l3000 0FD4                                    l2210 12D2  
                                  l2202 12A2                                    l3010 1032  
                                  l3002 0FF4                                    l2300 1498  
                                  l2220 130E                                    l2212 12E2  
                                  l2204 12B0                                    l3020 105A  
                                  l3012 1038                                    l3004 1010  
                                  l3100 1EE4                                    l2302 14BE  
                                  l2310 1514                                    l2230 132C  
                                  l2222 131C                                    l2214 12E4  
                                  l2206 12B2                                    l3030 108E  
                                  l3014 1040                                    l3006 101E  
                                  l3022 1060                                    l3110 1F54  
                                  l3102 1F08                                    l3200 2F62  
                                  l2400 1B32                                    l2320 1568  
                                  l2312 153A                                    l2304 14F2  
                                  l2240 1340                                    l2232 1330  
                                  l2224 1320                                    l2208 12C2  
                                  l2216 12EC                                    l3040 1144  
                                  l3032 10E6                                    l3024 1072  
                                  l3016 1050                                    l3008 102E  
                                  l3112 1F5C                                    l3120 1FA0  
                                  l3104 1F16                                    l3210 2EA0  
                                  l3202 2E74                                    l2410 1B6C  
                                  l2402 1B42                                    l2330 1592  
                                  l2322 1576                                    l2314 154A  
                                  l2306 14F4                                    l2250 1354  
                                  l2242 1344                                    l2234 1334  
                                  l2226 1324                                    l2218 12FC  
                                  l2170 2944                                    l2162 28F8  
                                  l3050 11B4                                    l3042 1160  
                                  l3034 111A                                    l3026 1084  
                                  l3018 1054                                    l3130 2052  
                                  l3122 1FC0                                    l3114 1F64  
                                  l3106 1F32                                    l3220 2BB4  
                                  l3212 2EAA                                    l3204 2E78  
                                  l2500 1DD8                                    l2420 1B98  
                                  l2412 1B72                                    l2404 1B52  
                                  l2340 15C4                                    l2332 15A2  
                                  l2324 1578                                    l2308 1504  
                                  l2260 13A6                                    l2252 1358  
                                  l2244 1348                                    l2236 1338  
                                  l2228 1328                                    l2180 1236  
                                  l2172 297A                                    l2164 290A  
                                  l3052 11CC                                    l3044 1168  
                                  l3036 1122                                    l3028 1088  
                                  l3132 2072                                    l3124 1FF4  
                                  l3140 20CC                                    l3108 1F42  
                                  l3300 25C0                                    l3222 2BE4  
                                  l3214 2EAE                                    l3206 2E88  
                                  l2510 1E44                                    l2502 1DE6  
                                  l2430 1BD2                                    l2422 1BA8  
                                  l2414 1B78                                    l2406 1B54  
                                  l2350 161E                                    l2342 15DA  
                                  l2326 1586                                    l2318 155E  
                                  l2334 15A4                                    l2270 13EA  
                                  l2262 13B6                                    l2246 134C  
                                  l2238 133C                                    l2254 135C  
                                  l2190 126A                                    l2182 1238  
                                  l2166 291C                                    l3054 11DC  
                                  l3046 1176                                    l3038 1126  
                                  l3070 2A48                                    l3062 29C2  
                                  l3118 1F6C                                    l3230 2D62  
                                  l3302 25CA                                    l3080 2C50  
                                  l3224 2BE6                                    l3216 2EB4  
                                  l3208 2E90                                    l3240 232C  
                                  l2520 1E92                                    l2512 1E5E  
                                  l2504 1E10                                    l2432 1BE8  
                                  l2424 1BB8                                    l2416 1B86  
                                  l2408 1B5C                                    l2600 18C8  
                                  l2360 169A                                    l2352 1658  
                                  l2328 158E                                    l2336 15B2  
                                  l2272 13EC                                    l2264 13CC  
                                  l2256 1360                                    l2248 1350  
                                  l2184 1248                                    l2192 1272  
                                  l2176 121C                                    l2168 2926  
                                  l3056 11F2                                    l3048 11A6  
                                  l3072 2A56                                    l3064 29CA  
                                  l3400 20BE                                    l3128 2028  
                                  l3144 20DE                                    l3232 2D6A  
                                  l3304 25D6                                    l3170 3002  
                                  l3090 2C88                                    l3082 2C5E  
                                  l3074 2C26                                    l3218 2BAC  
                                  l3250 23AA                                    l3242 233A  
                                  l2522 1E94                                    l2514 1E7A  
                                  l2506 1E14                                    l2450 1C3C  
                                  l2434 1BF8                                    l2442 1C18  
                                  l2426 1BBA                                    l2418 1B88  
                                  l2610 195E                                    l2602 18D4  
                                  l2530 16DC                                    l2370 16BA  
                                  l2362 169E                                    l2346 1604  
                                  l2354 165A                                    l2338 15B6  
                                  l2290 1474                                    l2282 143C  
                                  l2274 13F6                                    l2266 13D8  
                                  l2258 138A                                    l2194 1282  
                                  l2186 1258                                    l2178 1228  
                                  l3058 11FA                                    l3066 29EE  
                                  l3138 20A0                                    l3234 2D86  
                                  l3226 2D48                                    l3084 2C64  
                                  l3076 2C3E                                    l3172 2FF4  
                                  l3260 23FE                                    l3252 23B2  
                                  l3244 2380                                    l2516 1E7E  
                                  l2508 1E2E                                    l2460 1C8E  
                                  l2452 1C56                                    l2444 1C28  
                                  l2436 1C00                                    l2428 1BC2  
                                  l2700 27F6                                    l2620 19B4  
                                  l2612 197C                                    l2604 18F0  
                                  l2540 1718                                    l2532 16E8  
                                  l2372 16C8                                    l2364 16AC  
                                  l2356 166A                                    l2348 1610  
                                  l2292 1478                                    l2284 144C  
                                  l2276 1418                                    l2268 13DC  
                                  l2196 1288                                    l2188 1268  
                                  l2380 2E3A                                    l3068 2A28  
                                  l3092 1EA0                                    l3180 2CF6  
                                  l3228 2D5A                                    l3086 2C6A  
                                  l3078 2C4E                                    l3174 2FF6  
                                  l3190 2FD8                                    l3270 2474  
                                  l3262 243A                                    l3254 23BE  
                                  l3246 2396                                    l3238 231C  
                                  l2518 1E8C                                    l2470 1CEA  
                                  l2462 1C9E                                    l2454 1C66  
                                  l2446 1C28                                    l2438 1C04  
                                  l2630 1A1E                                    l2622 19B8  
                                  l2614 1986                                    l2606 191A  
                                  l2550 174A                                    l2542 1728  
                                  l2534 16F6                                    l2374 16CA  
                                  l2366 16B2                                    l2358 167A  
                                  l2294 1486                                    l2286 145A  
                                  l2278 1428                                    l2198 129A  
                                  l2382 2E4C                                    l3094 1EC4  
                                  l3182 2D02                                    l3168 2FFE  
                                  l3088 2C78                                    l3176 2FE8  
                                  l3192 2F2E                                    l3280 24BC  
                                  l3272 2478                                    l3264 2446  
                                  l3256 23F0                                    l2480 1D2A  
                                  l2472 1CEC                                    l2464 1CB2  
                                  l2456 1C76                                    l2392 1B06  
                                  l2640 1A80                                    l2632 1A2A  
                                  l2624 19C6                                    l2616 1994  
                                  l2608 1950                                    l2560 178A  
                                  l2552 1758                                    l2544 172E  
                                  l2536 16F8                                    l2704 2EF6  
                                  l2368 16B4                                    l2296 1488  
                                  l2288 1468                                    l2720 2644  
                                  l2712 25F0                                    l2800 2108  
                                  l2384 2E50                                    l3096 1ED2  
                                  l3184 2D20                                    l3178 2FEA  
                                  l3194 2F3A                                    l3274 249C  
                                  l3266 2454                                    l3258 23F2  
                                  l2490 1D66                                    l2482 1D34  
                                  l2474 1CFC                                    l2466 1CC0  
                                  l2458 1C86                                    l2394 1B12  
                                  l2650 1AE8                                    l2642 1A94  
                                  l2634 1A38                                    l2626 19F4  
                                  l2618 19A6                                    l2570 17D4  
                                  l2562 1790                                    l2554 175A  
                                  l2546 173E                                    l2538 1708  
                                  l2706 2F0C                                    l2298 1492  
                                  l2722 2646                                    l2714 2606  
                                  l2802 2128                                    l2378 2E2E  
                                  l2386 2FB2                                    l3098 1EE0  
                                  l3186 2D3C                                    l3290 24E4  
                                  l3196 2F4C                                    l3276 24AC  
                                  l3268 2472                                    l2492 1D74  
                                  l2484 1D42                                    l2476 1D0E  
                                  l2468 1CCC                                    l2396 1B20  
                                  l2652 1AEA                                    l2644 1AAE  
                                  l2636 1A62                                    l2580 1824  
                                  l2572 17E0                                    l2564 17B0  
                                  l2556 176A                                    l2548 1744  
                                  l2708 2F1C                                    l2660 2DE8  
                                  l2724 2656                                    l2820 22D0  
                                  l2812 2210                                    l2804 217E  
                                  l2900 09AC                                    l2388 2FCE  
                                  l3292 24F0                                    l3284 24CE  
                                  l3198 2F5E                                    l3278 24BA  
                                  l2494 1DA2                                    l2478 1D24  
                                  l2486 1D54                                    l2398 1B22  
                                  l2670 2AC6                                    l2646 1ACA  
                                  l2654 1AF0                                    l2638 1A66  
                                  l2590 1866                                    l2582 1830  
                                  l2574 17EA                                    l2566 17C0  
                                  l2558 177A                                    l2662 2DF8  
                                  l2750 26D4                                    l2734 2680  
                                  l2726 265A                                    l2718 261A  
                                  l2822 22F8                                    l2814 224C  
                                  l2806 2192                                    l2830 2DAC  
                                  l2910 0A46                                    l2902 09C6  
                                  l3294 2500                                    l3286 24D6  
                                  l2488 1D62                                    l2672 2AF4  
                                  l2656 1AF4                                    l2648 1ADA  
                                  l2592 1872                                    l2584 183C  
                                  l2576 1800                                    l2752 26E4  
                                  l2744 26A8                                    l2736 268A  
                                  l2728 2668                                    l2824 2308  
                                  l2808 21A0                                    l2816 2280  
                                  l2832 2DB8                                    l2760 2B4C  
                                  l2920 0B3C                                    l2912 0A84  
                                  l2840 0824                                    l3296 2530  
                                  l3288 24DA                                    l2498 1DCC  
                                  l2674 2B04                                    l2666 2A88  
                                  l2690 2772                                    l2682 26F6  
                                  l2594 1882                                    l2586 184A  
                                  l2578 180C                                    l2746 26B4  
                                  l2738 2694                                    l2770 27FA  
                                  l2818 22BC                                    l2834 2DBC  
                                  l2762 2B60                                    l2930 0BCE  
                                  l2922 0B44                                    l2914 0AB6  
                                  l2906 0A0C                                    l2850 0870  
                                  l2842 082A                                    l3298 259A  
                                  l2676 2B28                                    l2668 2AB6  
                                  l2692 2780                                    l2684 2724  
                                  l2596 189C                                    l2588 1856  
                                  l2748 26C4                                    l2772 281A  
                                  l2836 2DC8                                    l2828 2D98  
                                  l2764 2B74                                    l2756 2B32  
                                  l2940 0C00                                    l2932 0BDA  
                                  l2916 0AF4                                    l2908 0A12  
                                  l2860 08AE                                    l2852 087A  
                                  l2844 083A                                    l3396 1F82  
                                  l2678 2B2E                                    l2694 2792  
                                  l2686 2734                                    l2598 18AC  
                                  l2774 2858                                    l2782 2898  
                                  l2838 2DCC                                    l2766 2B78  
                                  l2758 2B40                                    l2950 0C48  
                                  l2942 0C0E                                    l2934 0BE2  
                                  l2918 0B08                                    l2926 0B84  
                                  l2870 08F6                                    l2862 08B6  
                                  l2854 0882                                    l2846 0848  
                                  l3398 203C                                    ?_pad 0011  
                                  l2696 27A0                                    l2688 2762  
                                  l2784 28AA                                    l2776 2880  
                                  l2768 2B96                                    l2792 2EB6  
                                  l2960 0D5C                                    l2952 0C58  
                                  l2944 0C26                                    l2936 0BEA  
                                  l2928 0BBE                                    l2872 08FC  
                                  l2856 0892                                    l2864 08BA  
                                  l2848 084C                                    l2698 27F0  
                                  l2778 288C                                    l2794 2EC6  
                                  l2970 0DFC                                    l2954 0C6C  
                                  l2962 0D62                                    l2946 0C38  
                                  l2938 0BEE                                    l2890 0988  
                                  l2874 0904                                    l2866 08E0  
                                  l2882 0946                                    l2858 08A2  
                                  l2788 28EE                                    l2796 2C90  
                                  l2980 0ED8                                    l2972 0E2E  
                                  l2964 0D80                                    l2956 0CD0  
                                  l2948 0C40                                    l2892 0990  
                                  l2884 096C                                    l2876 091C  
                                  l2868 08F2                                    l2798 2CAE  
                                  l2990 0F3A                                    l2982 0EDE  
                                  l2974 0E3E                                    l2966 0DB4  
                                  l2958 0D28                                    l2886 097E  
                                  l2878 0926                                    l2992 0F42  
                                  l2984 0F12                                    l2976 0E4E  
                                  l2968 0DE6                                    l2888 0982  
                                  l2994 0F48                                    l2986 0F26  
                                  l2978 0E82                                    l2996 0F50  
                                  l2988 0F2A                                    l2998 0F5C  
                                  STR_1 0801                                    STR_2 080F  
                                  STR_3 081B                                    STR_6 081F  
                                  u2000 1428                                    u2001 1424  
                                  u2010 145A                                    u2011 1456  
                                  u2100 15A2                                    u2020 1468  
                                  u2101 159E                                    u2021 1464  
                                  u2110 15B2                                    u2030 1486  
                                  u2111 15AE                                    u2031 1482  
                                  u2200 169A                                    u2120 15C4  
                                  u2040 14BE                                    u3000 22A0  
                                  u2201 1696                                    u2121 15C0  
                                  u2041 14BA                                    u2210 16AC  
                                  u2130 15DA                                    u2050 1504  
                                  u3010 22BC                                    u2211 16A8  
                                  u2131 15D6                                    u2051 1500  
                                  u3011 22B8                                    u2300 1BE8  
                                  u2220 16C8                                    u2140 15F0  
                                  u2060 153A                                    u3020 22F8  
                                  u3100 097E                                    u2301 1BE4  
                                  u2221 16C4                                    u2141 15EC  
                                  u2061 1536                                    u3021 22F4  
                                  u3005 2296                                    u3101 097A  
                                  u2310 1C28                                    u2150 1604  
                                  u2070 154A                                    u3030 2DE6  
                                  u2230 2E70                                    u3110 09F8  
                                  u2311 1C24                                    u2151 1600  
                                  u2071 1546                                    u3031 2DE2  
                                  u2231 2E6C                                    u3111 09F4  
                                  u2400 1DA2                                    u2320 1C9E  
                                  u2240 1B20                                    u2160 161E  
                                  u2080 1576                                    u3200 0C38  
                                  u3120 0A84                                    u3040 0848  
                                  _LATD 0F8C                                    u2401 1D9E  
                                  u2321 1C9A                                    u2241 1B1C  
                                  u2161 161A                                    u2081 1572  
                                  u3201 0C34                                    u3121 0A80  
                                  u3041 0844                                    u2410 1DB8  
                                  u2330 1CC0                                    u2250 1B32  
                                  u2170 1658                                    u2090 1586  
                                  u3210 0D80                                    u3130 0AB6  
                                  u3050 0892                                    u2411 1DB4  
                                  u2331 1CBC                                    u2251 1B2E  
                                  u2171 1654                                    u2091 1582  
                                  u3211 0D7C                                    u3131 0AB2  
                                  u3051 088E                                    u2420 1DCC  
                                  u2340 1CEA                                    u2260 1B42  
                                  u2500 1758                                    u2180 166A  
                                  u3300 1072                                    u3220 0DE6  
                                  u3140 0AF4                                    u3060 08A2  
                                  u2421 1DC8                                    u2341 1CE6  
                                  u2261 1B3E                                    u2501 1754  
                                  u2181 1666                                    u3301 106E  
                                  u3221 0DE2                                    u3141 0AF0  
                                  u3061 089E                                    u2430 1DE6  
                                  u2350 1D0E                                    u2270 1B86  
                                  u2510 176A                                    u2190 167A  
                                  u3310 1144                                    u3230 0E2E  
                                  u3150 0B80                                    u3070 08E0  
                                  u2431 1DE2                                    u2351 1D0A  
                                  u2271 1B82                                    u2511 1766  
                                  u2191 1676                                    u3311 1140  
                                  u3231 0E2A                                    u3151 0B7C  
                                  u3071 08DC                                    u2440 1E2E  
                                  u2360 1D24                                    u2280 1B98  
                                  u2600 1A0A                                    u2520 177A  
                                  u1800 290A                                    u3320 1160  
                                  u3240 0E3E                                    u3160 0BB6  
                                  u3080 08F2                                    u3400 1FBC  
                                  u2441 1E2A                                    u2361 1D20  
                                  u2281 1B94                                    u2601 1A06  
                                  u2521 1776                                    u1801 2906  
                                  u3321 115C                                    u3241 0E3A  
                                  u3161 0BB2                                    u3081 08EE  
                                  u3401 1FB8                                    u2450 1E5E  
                                  u2370 1D42                                    u2290 1BA8  
                                  u2610 1A1E                                    u2530 17B0  
                                  u1810 291C                                    u3330 11C6  
                                  u3250 0ED8                                    u3170 0BCE  
                                  u3090 096C                                    u3410 2D3C  
                                  u2451 1E5A                                    u2371 1D3E  
                                  u2291 1BA4                                    u2611 1A1A  
                                  u2531 17AC                                    u1811 2918  
                                  u3331 11C0                                    u3251 0ED4  
                                  u3171 0BCA                                    u3091 0968  
                                  u3411 2D38                                    u3420 2E88  
                                  u3500 23EC                                    u2460 1E8C  
                                  u2380 1D62                                    u2700 2762  
                                  u2620 1A38                                    u2540 17C0  
                                  u1900 12D2                                    u1820 2944  
                                  u3340 11C8                                    u3260 0F26  
                                  u3180 0C00                                    u3421 2E84  
                                  u3501 23E8                                    u2461 1E88  
                                  u2381 1D5E                                    u2701 275E  
                                  u2621 1A34                                    u2541 17BC  
                                  u1901 12CE                                    u1821 2940  
                                  u3261 0F22                                    u3181 0BFC  
                                  u3430 2EA0                                    u3510 2436  
                                  u2390 1D74                                    u2710 2780  
                                  u2630 1A80                                    u2550 193A  
                                  u2470 16F6                                    u1910 130E  
                                  u1830 297A                                    u3350 11DC  
                                  u3270 0FD4                                    u3190 0C0E  
                                  u3431 2E9C                                    u3511 2432  
                                  u2391 1D70                                    u2711 277C  
                                  u2631 1A7C                                    u2471 16F2  
                                  u1911 130A                                    u1831 2976  
                                  u3351 11D8                                    u3271 0FD0  
                                  u3191 0C0A                                    u3440 2BE0  
                                  u3520 2454                                    u2720 27A0  
                                  u2640 1AAE                                    u2560 1994  
                                  u2480 1708                                    u1920 131C  
                                  u1840 1236                                    u2800 26C4  
                                  u3280 1010                                    u3360 29EE  
                                  u3521 2450                                    u2721 279C  
                                  u2641 1AAA                                    u2561 1990  
                                  u2481 1704                                    u1921 1318  
                                  u1841 1232                                    u2801 26C0  
                                  u3281 100C                                    u3361 29EA  
                                  u3450 2C12                                    u3530 2464  
                                  u2730 27F0                                    u2650 1AE8  
                                  u2570 19B4                                    u2490 1718  
                                  u1930 138A                                    u1850 1248  
                                  u2810 26D4                                    u3290 101E  
                                  u3370 2A7E                                    u3531 2460  
                                  u2731 27EC                                    u2651 1AE4  
                                  u2571 19B0                                    u2555 1930  
                                  u2491 1714                                    u1931 1386  
                                  u1851 1244                                    u2811 26D0  
                                  u3291 101A                                    u3371 2A7A  
                                  u3460 2C22                                    u3540 2472  
                                  u2660 2AB6                                    u2580 19C6  
                                  u2740 2F0C                                    u1940 13A2  
                                  u1860 1258                                    u2900 28E6  
                                  u2820 2B40                                    u3380 1EC4  
                                  u3461 2C1E                                    u3541 246E  
                                  u2661 2AB2                                    u2581 19C2  
                                  u2741 2F08                                    u1941 139C  
                                  u1861 1254                                    u2821 2B3C  
                                  u3381 1EC0                                    u3550 24AC  
                                  u3470 232C                                    u2670 2AF4  
                                  u2590 19F4                                    u1950 13A4  
                                  u1870 129A                                    u2750 2606  
                                  u2830 2B96                                    u2910 2EF4  
                                  u3390 1F08                                    u3607 2C46  
                                  u3447 2BD6                                    u3551 24A8  
                                  u3471 2328                                    u2671 2AF0  
                                  u2591 19F0                                    u1871 1296  
                                  u2751 2602                                    u2831 2B92  
                                  u2911 2EF0                                    u3391 1F04  
                                  u3560 24BA                                    u3480 233A  
                                  u2680 2B28                                    u1960 13CC  
                                  u1880 12B0                                    u2760 263A  
                                  u2840 283A                                    u2920 2CAE  
                                  u3617 2C56                                    u3457 2C08  
                                  u3561 24B6                                    u3481 2336  
                                  u2681 2B24                                    u1961 13C8  
                                  u1881 12AC                                    u2921 2CAA  
                                  u3490 2396                                    u2690 2724  
                                  u1970 13EA                                    u1890 12C2  
                                  u2770 2668                                    u2850 2858  
                                  u2930 2150                                    u3570 2500  
                                  u3627 2C70                                    u3491 2392  
                                  u2691 2720                                    u1971 13E6  
                                  u1891 12BE                                    u2771 2664  
                                  u2851 2854                                    u3571 24FC  
                                  u1980 140A                                    u2780 267C  
                                  u2860 2880                                    u2940 217E  
                                  u3637 2C80                                    u1981 1406  
                                  u2781 2678                                    u2765 2630  
                                  u2861 287C                                    u2845 2830  
                                  u2941 217A                                    u1990 1418  
                                  u2790 26A4                                    u2870 28AA  
                                  u2950 21A0                                    u1991 1414  
                                  u2791 26A0                                    u2871 28A6  
                                  u2951 219C                                    u2935 2146  
                                  u3585 250A                                    u2890 28E4  
                                  u2970 220C                                    u2891 28DE  
                                  u2971 2208                                    u2980 2230  
                                  u2885 28BC                                    u2965 21B4  
                                  u3597 25DE                                    u2990 224C  
                                  u2966 21BE                                    u2991 2248  
                                  u2967 21CE                                    u2985 2226  
                                  i2l39 3008              __end_of_FM_Lcd_Send_Nibble 2C90  
                                  _dbuf 0100                                    _labs 2C90  
                                  _main 24CE            FM_Lcd_Send_Nibble@upper_bits 0003  
                                  _prec 00CD                                    pad@i 0018  
                                  pad@p 0015                                    fsr1h 0FE2  
                                  fsr2h 0FDA                                    indf1 0FE7  
                                  indf2 0FDF                                    fsr1l 0FE1  
                                  pad@w 001A                                    fsr2l 0FD9  
            __end_of_FM_Lcd_Send_String 2C24                                    btemp 005E  
               ??_FM_Lcd_Send_Character 0005                           ___fpclassifyf 27FA  
                                  prodh 0FF4                                    prodl 0FF3  
                                  start 000E  FM_Lcd_Send_Character@character_to_send 0005  
                       ___fldiv@new_exp 0039                   _FM_Lcd_Easy_Gpio_Init 2FFE  
               __end_of_Init_ADC_Module 2F62                            ___param_bank 0000  
                                 ??_ISR 0001                                   ??_pad 0017  
                         ___fltol@sign1 0009                                   ?_labs 0001  
                       __end_of___fladd 16DC                                   ?_main 0001  
                       __end_of___fldiv 1EA0                         __end_of___flneg 2F2E  
                       __end_of___flmul 1B06                         __end_of___flsub 2E2E  
                       __end_of___fltol 26F6             __end_of_FM_Lcd_Send_Command 2FFE  
                          vfpfcnvrt@fmt 008E                                   _TRISD 0F95  
                                 _flags 00CF                     read_prec_or_width@c 000D  
                   read_prec_or_width@n 000E                                   _fputc 28F8  
                                 _fputs 2E2E                                   labs@a 0001  
                                 pad@fp 0011                                   _width 00CB  
                                 _putch 300C                                   tablat 0FF5  
                                 ttemp5 005F                                   ttemp6 0062  
                                 ttemp7 0066                                   status 0FD8  
                                 wtemp8 005F                         __end_of_sprintf 2D98  
                        ?___fpclassifyf 0001                         __initialization 2F8C  
                          __end_of_labs 2CF6                            __end_of_main 25F0  
                                ??_labs 0005                                  ??_main 00B9  
                         __activetblptr 0002              __end_of_read_prec_or_width 2A88  
                                _ADCON0 0FC2                                  _ADCON1 0FC1  
                                _ADCON2 0FC0                                  ?_fputc 0001  
                                ?_fputs 000A                                  _ADRESH 0FC4  
                                _ADRESL 0FC3                                  ?_putch 0001  
                                _OSCCON 0FD3                        __end_of___xxtofl 24CE  
                ?_FM_Lcd_Easy_Gpio_Init 0001                            vfprintf@cfmt 00A1  
                      ?_Init_ADC_Module 0001                                  ___flge 26F6  
                                ___fleq 2A88                               ??___fladd 0009  
                                ___wmul 2FB2                               ??___fldiv 0030  
                             ??___flneg 0005                               ??___flmul 0017  
                             ??___flsub 0030                               ??___fltol 0005  
                                _efgtoa 0824                                  _floorf 2108  
                                _memcpy 2D98                    read_prec_or_width@ap 0009  
                                clear_0 2F92                                  clear_1 2F9E  
                                isa$std 0001                                  pad@buf 0013  
                                _strcpy 2EB6                                  fputc@c 0001  
                                fputs@c 000E                                  fputs@i 000F  
                                fputs@s 000A                         ___fpclassifyf@e 0009  
                       ___fpclassifyf@u 000B                         ___fpclassifyf@x 0001  
                          __mediumconst 0000                                  tblptrh 0FF7  
                                tblptrl 0FF6                                  tblptru 0FF8  
                                putch@c 0001                        __end_of_vfprintf 2D48  
                             ??_sprintf 005E                              ___flge@ff1 0028  
                            ___flge@ff2 002C                         ??___fpclassifyf 0005  
                          ___xxtofl@arg 000B                            ___xxtofl@exp 000A  
                          ___xxtofl@val 0001                              ___fleq@ff1 0001  
                            ___fleq@ff2 0005                              __accesstop 0060  
               __end_of__initialization 2FA4                              ___flneg@f1 0001  
                         ___rparam_used 0001                              ___fltol@f1 0001  
                        __pcstackCOMRAM 0001                           __end_of_fputc 29C2  
                         __end_of_fputs 2E72                           __end_of_putch 300E  
                      _FM_Lcd_Easy_Init 2F62                                 ??_fputc 0005  
                               ??_fputs 000E                                 ??_putch 0001  
                            __pbssBANK0 00C3                              __pbssBANK1 0100  
         __end_of_FM_Lcd_Send_Character 2FF2                              _efgtoa$893 0066  
                               ?___flge 0028                                 ?___fleq 0001  
                    _FM_Lcd_Send_Nibble 2C24                                 ?___wmul 0001  
                               ?_efgtoa 0055                                 ?_floorf 0041  
                               ?_memcpy 0001                      _FM_Lcd_Send_String 2BAC  
             ?_Init_Internal_Oscillator 0001                                 ?_strcpy 0001  
                   ?_FM_Lcd_Send_Nibble 0001                               ?___xxtofl 0001  
                   ?_FM_Lcd_Send_String 0006                    ??_FM_Lcd_Send_Nibble 0001  
                  ??_FM_Lcd_Send_String 0008                                 __Hparam 0000  
                               __Lparam 0000                                 ___fladd 121C  
                               ___fldiv 1B06                                 ___flneg 2EF6  
                               ___flmul 16DC                                 ___flsub 2DE8  
                               ___fltol 25F0                               ?_vfprintf 009B  
                          __psmallconst 0800                                 __pcinit 2F8C  
                               __ramtop 0800                                 __ptext0 24CE  
                               __ptext1 2D48                                 __ptext2 2CF6  
                               __ptext3 1EA0                                 __ptext4 29C2  
                               __ptext5 2FB2                                 __ptext6 0824  
                               __ptext7 2EB6                                 __ptext8 2B32  
                               __ptext9 2E2E                   read_prec_or_width@fmt 0007  
                            ??___xxtofl 0005                                 efgtoa@c 005B  
                               efgtoa@d 006B                                 efgtoa@e 006F  
                               efgtoa@f 0057                                 efgtoa@g 0084  
                               efgtoa@h 0079                                 efgtoa@i 0077  
                               efgtoa@l 007D                                 efgtoa@m 006D  
                               efgtoa@n 0082                                 efgtoa@p 0062  
                               efgtoa@t 0064                                 efgtoa@u 0088  
                               efgtoa@w 0071                                 _sprintf 2D48  
                        __pintcode_body 3006                    end_of_initialization 2FA4  
                               floorf@e 004F                                 floorf@m 004B  
                               floorf@u 0051                                 floorf@x 0041  
                               memcpy@d 0007                                 memcpy@n 0005  
                               memcpy@s 0009                 ??_FM_Lcd_Easy_Gpio_Init 0001  
                               fputc@fp 0003                           __Lmediumconst 0000  
                               int_func 3006                                 fputs@fp 000C  
                    _read_prec_or_width 29C2                       __end_of_vfpfcnvrt 2108  
                            efgtoa@mode 0069                              efgtoa@sign 0081  
                               postdec2 0FDD                     ?_read_prec_or_width 0007  
                               postinc0 0FEE                                 postinc1 0FE6  
                               postinc2 0FDE                        vfpfcnvrt@convarg 0094  
                            ??_vfprintf 005E                                 strcpy@d 0007  
                               strcpy@s 0005                  FM_Lcd_Set_Cursor@filas 0007  
                           ___fladd@grs 0010                           ___xxtofl@sign 0009  
                  ??_read_prec_or_width 000B                             ___fldiv@grs 003B  
                           ___fldiv@rem 0034                             ___flmul@grs 001C  
              __end_of_FM_Lcd_Easy_Init 2F8C               FM_Lcd_Set_Cursor@base_pos 0008  
                        __end_of___flge 27FA                          __end_of___fleq 2B32  
                           vfpfcnvrt@ap 0090                             vfpfcnvrt@cp 0099  
                           vfpfcnvrt@fp 008C                          __end_of___wmul 2FD8  
                        __end_of_efgtoa 121C                          __end_of_floorf 231A  
                        __end_of_memcpy 2DE8                              floorf@F526 00C3  
                        __end_of_strcpy 2EF6                     start_initialization 2F8C  
                           __end_of_ISR 300C                             __end_of_pad 2BAC  
              FM_Lcd_Send_String@cadena 0006                   __end_of___fpclassifyf 28F8  
      __end_of_Init_Internal_Oscillator 2FE6                             vfprintf@fmt 009D  
                              ??___flge 0030                                ??___fleq 0009  
                              ??___wmul 0005                                ??_efgtoa 005C  
                              ??_floorf 0045                                ??_memcpy 0007  
                              ??_strcpy 0005                               ___fladd@a 0005  
                             ___fladd@b 0001                               ___fldiv@a 002C  
                             ___fldiv@b 0028                               ___flmul@a 0013  
                             ___flmul@b 000F                               ___flsub@a 002C  
                             ___flsub@b 0028                           __pcstackBANK0 0060  
                             __pintcode 0008                   _FM_Lcd_Send_Character 2FE6  
                              ?___fladd 0001                                ?___fldiv 0028  
                              ?___flneg 0001                                ?___flmul 000F  
                   _FM_Lcd_Send_Command 2FF2                                ?___flsub 0028  
                              ?___fltol 0001                       _FM_Lcd_Set_Cursor 2E72  
                    ?_FM_Lcd_Set_Cursor 0006      FM_Lcd_Send_Command@command_to_send 0005  
                           __smallconst 0800                     ??_FM_Lcd_Set_Cursor 0007  
                  ?_FM_Lcd_Send_Command 0001                       ??_Init_ADC_Module 0001  
                              ?_sprintf 00A3                          ___wmul@product 0005  
         __end_of_FM_Lcd_Easy_Gpio_Init 3006               __end_of_FM_Lcd_Set_Cursor 2EB6  
              _Init_Internal_Oscillator 2FD8                               _vfpfcnvrt 1EA0  
                            _ADCON0bits 0FC2                              _ADCON1bits 0FC1  
                            _ADCON2bits 0FC0                       ___wmul@multiplier 0001  
                             main@volts 00BD                   ??_FM_Lcd_Send_Command 0005  
                            vfpfcnvrt@c 0098                       ?_FM_Lcd_Easy_Init 0001  
                    ??_FM_Lcd_Easy_Init 0006                 FM_Lcd_Send_String@index 000A  
                              __Hrparam 0000                               memcpy@tmp 000B  
                ?_FM_Lcd_Send_Character 0001                              vfprintf@ap 009F  
                              __Lrparam 0000                              vfprintf@fp 009B  
                            ?_vfpfcnvrt 008C                      ___fpclassifyf@F465 00C7  
                            sprintf@fmt 00A5                                ___xxtofl 231A  
                              _data_vol 00D0                                __ptext10 28F8  
                              __ptext11 300C                                __ptext20 16DC  
                              __ptext12 2D98                                __ptext21 26F6  
                              __ptext13 2C90                                __ptext30 2F62  
                              __ptext22 2A88                                __ptext14 2108  
                              __ptext31 2FF2                                __ptext23 1B06  
                              __ptext15 27FA                                __ptext32 2C24  
                              __ptext24 231A                                __ptext16 25F0  
                              __ptext33 2FFE                                __ptext25 2FD8  
                              __ptext17 2DE8                                __ptext26 2F2E  
                              __ptext18 121C                                __ptext27 2E72  
                              __ptext19 2EF6                                __ptext28 2BAC  
                              __ptext29 2FE6                              strcpy@dest 0001  
                              efgtoa@fp 0055                                efgtoa@ne 0060  
                              efgtoa@pp 0068                                efgtoa@ou 0073  
                              isa$xinst 0000                                int$flags 005E  
                              _vfprintf 2CF6                                memcpy@d1 0001  
                              memcpy@s1 0003                                intlevel2 0000  
                             sprintf@ap 00AB          FM_Lcd_Send_Nibble@byte_to_send 0002  
                             strcpy@src 0003                              _OSCCONbits 0FD3  
                           efgtoa@nmode 006A                             ??_vfpfcnvrt 0092  
                       _Init_ADC_Module 2F2E                                sprintf@f 00AD  
                              sprintf@s 00A3                           ___fladd@signs 000D  
              FM_Lcd_Set_Cursor@columna 0006              ??_Init_Internal_Oscillator 0001  
                          ___fladd@aexp 000E                            ___fladd@bexp 000F  
          FM_Lcd_Send_Nibble@lower_bits 0004  
