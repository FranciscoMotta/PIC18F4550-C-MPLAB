

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 27 02:07:37 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61  0000                     
    62                           ; Version 2.40
    63                           ; Generated 17/11/2021 GMT
    64                           ; 
    65                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4550 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     _LATD	set	3980
    98  0000                     _TRISD	set	3989
    99  0000                     _OSCCONbits	set	4051
   100  0000                     _OSCCON	set	4051
   101  0000                     _TMR2	set	4044
   102  0000                     _T2CON	set	4042
   103  0000                     _TRISCbits	set	3988
   104  0000                     _CCP1CONbits	set	4029
   105  0000                     _CCP1CON	set	4029
   106  0000                     _T2CONbits	set	4042
   107  0000                     _ADCON2bits	set	4032
   108  0000                     _TRISAbits	set	3986
   109  0000                     _ADCON1bits	set	4033
   110  0000                     _ADCON2	set	4032
   111  0000                     _ADCON1	set	4033
   112  0000                     _ADCON0	set	4034
   113  0000                     _PR2	set	4043
   114  0000                     _CCPR1L	set	4030
   115  0000                     _ADRESL	set	4035
   116  0000                     _ADRESH	set	4036
   117  0000                     _ADCON0bits	set	4034
   118                           
   119                           	psect	smallconst
   120  000800                     __psmallconst:
   121                           	callstack 0
   122  000800  00                 	db	0
   123  000801                     STR_2:
   124  000801  50                 	db	80	;'P'
   125  000802  65                 	db	101	;'e'
   126  000803  72                 	db	114	;'r'
   127  000804  63                 	db	99	;'c'
   128  000805  2E                 	db	46
   129  000806  20                 	db	32
   130  000807  3D                 	db	61	;'='
   131  000808  20                 	db	32
   132  000809  25                 	db	37
   133  00080A  2E                 	db	46
   134  00080B  32                 	db	50	;'2'
   135  00080C  66                 	db	102	;'f'
   136  00080D  25                 	db	37
   137  00080E  25                 	db	37
   138  00080F  00                 	db	0
   139  000810                     STR_1:
   140  000810  50                 	db	80	;'P'
   141  000811  57                 	db	87	;'W'
   142  000812  4D                 	db	77	;'M'
   143  000813  20                 	db	32
   144  000814  2D                 	db	45
   145  000815  20                 	db	32
   146  000816  4D                 	db	77	;'M'
   147  000817  4F                 	db	79	;'O'
   148  000818  54                 	db	84	;'T'
   149  000819  4F                 	db	79	;'O'
   150  00081A  52                 	db	82	;'R'
   151  00081B  00                 	db	0
   152  00081C                     STR_3:
   153  00081C  49                 	db	73	;'I'
   154  00081D  4E                 	db	78	;'N'
   155  00081E  46                 	db	70	;'F'
   156  00081F  00                 	db	0
   157  000820                     STR_7:
   158  000820  4E                 	db	78	;'N'
   159  000821  41                 	db	65	;'A'
   160  000822  4E                 	db	78	;'N'
   161  000823  00                 	db	0
   162  000824                     STR_4:
   163  000824  69                 	db	105	;'i'
   164  000825  6E                 	db	110	;'n'
   165  000826  66                 	db	102	;'f'
   166  000827  00                 	db	0
   167  000828                     STR_8:
   168  000828  6E                 	db	110	;'n'
   169  000829  61                 	db	97	;'a'
   170  00082A  6E                 	db	110	;'n'
   171  00082B  00                 	db	0
   172  00082C                     STR_11:
   173  00082C  6C                 	db	108	;'l'
   174  00082D  66                 	db	102	;'f'
   175  00082E  00                 	db	0
   176  00082F  00                 	db	0	; dummy byte at the end
   177  0000                     
   178                           ; #config settings
   179                           
   180                           	psect	cinit
   181  00388E                     __pcinit:
   182                           	callstack 0
   183  00388E                     start_initialization:
   184                           	callstack 0
   185  00388E                     __initialization:
   186                           	callstack 0
   187                           
   188                           ; Clear objects allocated to BANK1 (80 bytes)
   189  00388E  EE01  F000         	lfsr	0,__pbssBANK1
   190  003892  0E50               	movlw	80
   191  003894                     clear_0:
   192  003894  6AEE               	clrf	postinc0,c
   193  003896  06E8               	decf	wreg,f,c
   194  003898  E1FD               	bnz	clear_0
   195                           
   196                           ; Clear objects allocated to BANK0 (32 bytes)
   197  00389A  EE00  F0C8         	lfsr	0,__pbssBANK0
   198  00389E  0E20               	movlw	32
   199  0038A0                     clear_1:
   200  0038A0  6AEE               	clrf	postinc0,c
   201  0038A2  06E8               	decf	wreg,f,c
   202  0038A4  E1FD               	bnz	clear_1
   203  0038A6                     end_of_initialization:
   204                           	callstack 0
   205  0038A6                     __end_of__initialization:
   206                           	callstack 0
   207  0038A6  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   208  0038A8  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   209  0038AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   210  0038AC  6EF8               	movwf	tblptru,c
   211  0038AE  0100               	movlb	0
   212  0038B0  EF66  F015         	goto	_main	;jump to C main() function
   213                           
   214                           	psect	bssBANK0
   215  0000C8                     __pbssBANK0:
   216                           	callstack 0
   217  0000C8                     floorf@F527:
   218                           	callstack 0
   219  0000C8                     	ds	4
   220  0000CC                     ___fpclassifyf@F465:
   221                           	callstack 0
   222  0000CC                     	ds	4
   223  0000D0                     _nout:
   224                           	callstack 0
   225  0000D0                     	ds	2
   226  0000D2                     _width:
   227                           	callstack 0
   228  0000D2                     	ds	2
   229  0000D4                     _prec:
   230                           	callstack 0
   231  0000D4                     	ds	2
   232  0000D6                     _flags:
   233                           	callstack 0
   234  0000D6                     	ds	2
   235  0000D8                     _mens:
   236                           	callstack 0
   237  0000D8                     	ds	16
   238                           
   239                           	psect	bssBANK1
   240  000100                     __pbssBANK1:
   241                           	callstack 0
   242  000100                     _dbuf:
   243                           	callstack 0
   244  000100                     	ds	80
   245                           
   246                           	psect	cstackBANK0
   247  000060                     __pcstackBANK0:
   248                           	callstack 0
   249  000060                     _efgtoa$1074:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x0
   253  000060                     	ds	2
   254  000062                     _efgtoa$1075:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x2
   258  000062                     	ds	2
   259  000064                     _efgtoa$1080:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x4
   263  000064                     	ds	2
   264  000066                     _efgtoa$1084:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x6
   268  000066                     	ds	2
   269  000068                     _efgtoa$1085:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x8
   273  000068                     	ds	2
   274  00006A                     _efgtoa$1086:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0xA
   278  00006A                     	ds	2
   279  00006C                     efgtoa@t:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0xC
   283  00006C                     	ds	2
   284  00006E                     efgtoa@pp:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0xE
   288  00006E                     	ds	2
   289  000070                     efgtoa@ne:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x10
   293  000070                     	ds	2
   294  000072                     efgtoa@m:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x12
   298  000072                     	ds	2
   299  000074                     efgtoa@ou:
   300                           	callstack 0
   301                           
   302                           ; 4 bytes @ 0x14
   303  000074                     	ds	4
   304  000078                     efgtoa@d:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x18
   308  000078                     	ds	2
   309  00007A                     efgtoa@sign:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x1A
   313  00007A                     	ds	2
   314  00007C                     efgtoa@p:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x1C
   318  00007C                     	ds	2
   319  00007E                     efgtoa@w:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x1E
   323  00007E                     	ds	2
   324  000080                     efgtoa@nmode:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x20
   328  000080                     	ds	1
   329  000081                     efgtoa@mode:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x21
   333  000081                     	ds	1
   334  000082                     efgtoa@h:
   335                           	callstack 0
   336                           
   337                           ; 4 bytes @ 0x22
   338  000082                     	ds	4
   339  000086                     efgtoa@l:
   340                           	callstack 0
   341                           
   342                           ; 4 bytes @ 0x26
   343  000086                     	ds	4
   344  00008A                     efgtoa@i:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x2A
   348  00008A                     	ds	2
   349  00008C                     efgtoa@g:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0x2C
   353  00008C                     	ds	4
   354  000090                     efgtoa@e:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x30
   358  000090                     	ds	2
   359  000092                     efgtoa@n:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x32
   363  000092                     	ds	2
   364  000094                     efgtoa@u:
   365                           	callstack 0
   366                           
   367                           ; 4 bytes @ 0x34
   368  000094                     	ds	4
   369  000098                     ??_vfpfcnvrt:
   370                           
   371                           ; 1 bytes @ 0x38
   372  000098                     	ds	4
   373  00009C                     _vfpfcnvrt$1100:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x3C
   377  00009C                     	ds	2
   378  00009E                     _vfpfcnvrt$1104:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x3E
   382  00009E                     	ds	2
   383  0000A0                     vfpfcnvrt@f:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x40
   387  0000A0                     	ds	4
   388  0000A4                     vfpfcnvrt@ct:
   389                           	callstack 0
   390                           
   391                           ; 3 bytes @ 0x44
   392  0000A4                     	ds	3
   393  0000A7                     vfpfcnvrt@c:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x47
   397  0000A7                     	ds	1
   398  0000A8                     ?_vfprintf:
   399                           	callstack 0
   400  0000A8                     vfprintf@fp:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x48
   404  0000A8                     	ds	2
   405  0000AA                     vfprintf@fmt:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x4A
   409  0000AA                     	ds	2
   410  0000AC                     vfprintf@ap:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x4C
   414  0000AC                     	ds	2
   415  0000AE                     vfprintf@cfmt:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x4E
   419  0000AE                     	ds	2
   420  0000B0                     ?_sprintf:
   421                           	callstack 0
   422  0000B0                     sprintf@s:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x50
   426  0000B0                     	ds	2
   427  0000B2                     sprintf@fmt:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x52
   431  0000B2                     	ds	6
   432  0000B8                     sprintf@ap:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x58
   436  0000B8                     	ds	2
   437  0000BA                     sprintf@f:
   438                           	callstack 0
   439                           
   440                           ; 6 bytes @ 0x5A
   441  0000BA                     	ds	6
   442  0000C0                     ??_main:
   443                           
   444                           ; 1 bytes @ 0x60
   445  0000C0                     	ds	2
   446  0000C2                     main@adc_val:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x62
   450  0000C2                     	ds	2
   451  0000C4                     main@percent:
   452                           	callstack 0
   453                           
   454                           ; 4 bytes @ 0x64
   455  0000C4                     	ds	4
   456                           
   457                           	psect	cstackCOMRAM
   458  000001                     __pcstackCOMRAM:
   459                           	callstack 0
   460  000001                     ??_FM_Lcd_Send_Nibble:
   461  000001                     ?_strlen:
   462                           	callstack 0
   463  000001                     ?___fpclassifyf:
   464                           	callstack 0
   465  000001                     ?_isupper:
   466                           	callstack 0
   467  000001                     ?_isdigit:
   468                           	callstack 0
   469  000001                     ?_strncmp:
   470                           	callstack 0
   471  000001                     ?_isspace:
   472                           	callstack 0
   473  000001                     ?___wmul:
   474                           	callstack 0
   475  000001                     ?___awdiv:
   476                           	callstack 0
   477  000001                     ?___awmod:
   478                           	callstack 0
   479  000001                     ?___fladd:
   480                           	callstack 0
   481  000001                     ?___flneg:
   482                           	callstack 0
   483  000001                     ?___xxtofl:
   484                           	callstack 0
   485  000001                     Run_Timer_And_CCP1PWM@mod:
   486                           	callstack 0
   487  000001                     ___wmul@multiplier:
   488                           	callstack 0
   489  000001                     ___awdiv@dividend:
   490                           	callstack 0
   491  000001                     ___awmod@dividend:
   492                           	callstack 0
   493  000001                     isdigit@c:
   494                           	callstack 0
   495  000001                     isspace@c:
   496                           	callstack 0
   497  000001                     isupper@c:
   498                           	callstack 0
   499  000001                     fputc@c:
   500                           	callstack 0
   501  000001                     strcpy@dest:
   502                           	callstack 0
   503  000001                     strlen@s:
   504                           	callstack 0
   505  000001                     strncmp@_l:
   506                           	callstack 0
   507  000001                     ___fleq@ff1:
   508                           	callstack 0
   509  000001                     ___flneg@f1:
   510                           	callstack 0
   511  000001                     ___fladd@b:
   512                           	callstack 0
   513  000001                     ___xxtofl@val:
   514                           	callstack 0
   515  000001                     ___fpclassifyf@x:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x0
   519  000001                     	ds	1
   520  000002                     FM_Lcd_Send_Nibble@byte_to_send:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x1
   524  000002                     	ds	1
   525  000003                     ??_isupper:
   526  000003                     ??_isdigit:
   527  000003                     ??_isspace:
   528  000003                     FM_Lcd_Send_Nibble@upper_bits:
   529                           	callstack 0
   530  000003                     ___wmul@multiplicand:
   531                           	callstack 0
   532  000003                     ___awdiv@divisor:
   533                           	callstack 0
   534  000003                     ___awmod@divisor:
   535                           	callstack 0
   536  000003                     fputc@fp:
   537                           	callstack 0
   538  000003                     strcpy@src:
   539                           	callstack 0
   540  000003                     strlen@a:
   541                           	callstack 0
   542  000003                     strncmp@_r:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x2
   546  000003                     	ds	1
   547  000004                     FM_Lcd_Send_Nibble@lower_bits:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x3
   551  000004                     	ds	1
   552  000005                     ??_fputc:
   553  000005                     ??___fpclassifyf:
   554  000005                     ??_strcpy:
   555  000005                     ??___xxtofl:
   556  000005                     FM_Lcd_Send_Command@command_to_send:
   557                           	callstack 0
   558  000005                     FM_Lcd_Send_Character@character_to_send:
   559                           	callstack 0
   560  000005                     ___awdiv@counter:
   561                           	callstack 0
   562  000005                     ___awmod@counter:
   563                           	callstack 0
   564  000005                     ___wmul@product:
   565                           	callstack 0
   566  000005                     strncmp@n:
   567                           	callstack 0
   568  000005                     ___fleq@ff2:
   569                           	callstack 0
   570  000005                     ___fladd@a:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x4
   574  000005                     	ds	1
   575  000006                     FM_Lcd_Set_Cursor@columna:
   576                           	callstack 0
   577  000006                     ___awdiv@sign:
   578                           	callstack 0
   579  000006                     ___awmod@sign:
   580                           	callstack 0
   581  000006                     FM_Lcd_Send_String@cadena:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x5
   585  000006                     	ds	1
   586  000007                     ??_strncmp:
   587  000007                     ?_tolower:
   588                           	callstack 0
   589  000007                     FM_Lcd_Set_Cursor@filas:
   590                           	callstack 0
   591  000007                     _isspace$1169:
   592                           	callstack 0
   593  000007                     ___awdiv@quotient:
   594                           	callstack 0
   595  000007                     strcpy@s:
   596                           	callstack 0
   597  000007                     tolower@c:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x6
   601  000007                     	ds	1
   602  000008                     ??_FM_Lcd_Send_String:
   603  000008                     ?_atoi:
   604                           	callstack 0
   605  000008                     FM_Lcd_Set_Cursor@base_pos:
   606                           	callstack 0
   607  000008                     atoi@s:
   608                           	callstack 0
   609  000008                     strncmp@l:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x7
   613  000008                     	ds	1
   614  000009                     ??___fladd:
   615  000009                     ??_tolower:
   616  000009                     ??___fleq:
   617  000009                     ___xxtofl@sign:
   618                           	callstack 0
   619  000009                     ___fpclassifyf@e:
   620                           	callstack 0
   621  000009                     strcpy@d:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x8
   625  000009                     	ds	1
   626  00000A                     ??_atoi:
   627  00000A                     FM_Lcd_Send_String@index:
   628                           	callstack 0
   629  00000A                     ___xxtofl@exp:
   630                           	callstack 0
   631  00000A                     fputs@s:
   632                           	callstack 0
   633  00000A                     strncmp@r:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x9
   637  00000A                     	ds	1
   638  00000B                     ___xxtofl@arg:
   639                           	callstack 0
   640  00000B                     ___fpclassifyf@u:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0xA
   644  00000B                     	ds	1
   645  00000C                     fputs@fp:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0xB
   649  00000C                     	ds	1
   650  00000D                     ___fladd@signs:
   651                           	callstack 0
   652  00000D                     _tolower$1233:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0xC
   656  00000D                     	ds	1
   657  00000E                     ___fladd@aexp:
   658                           	callstack 0
   659  00000E                     fputs@c:
   660                           	callstack 0
   661  00000E                     atoi@neg:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0xD
   665  00000E                     	ds	1
   666  00000F                     ?___fldiv:
   667                           	callstack 0
   668  00000F                     ___fladd@bexp:
   669                           	callstack 0
   670  00000F                     fputs@i:
   671                           	callstack 0
   672  00000F                     ___fldiv@b:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0xE
   676  00000F                     	ds	1
   677  000010                     ___fladd@grs:
   678                           	callstack 0
   679  000010                     _atoi$1138:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0xF
   683  000010                     	ds	1
   684  000011                     ?_pad:
   685                           	callstack 0
   686  000011                     pad@fp:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x10
   690  000011                     	ds	1
   691  000012                     _atoi$1140:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x11
   695  000012                     	ds	1
   696  000013                     pad@buf:
   697                           	callstack 0
   698  000013                     ___fldiv@a:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x12
   702  000013                     	ds	1
   703  000014                     _atoi$1139:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x13
   707  000014                     	ds	1
   708  000015                     pad@p:
   709                           	callstack 0
   710  000015                     atoi@n:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x14
   714  000015                     	ds	2
   715  000017                     ??___fldiv:
   716  000017                     ??_pad:
   717                           
   718                           ; 1 bytes @ 0x16
   719  000017                     	ds	1
   720  000018                     pad@i:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x17
   724  000018                     	ds	2
   725  00001A                     pad@w:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x19
   729  00001A                     	ds	1
   730  00001B                     ___fldiv@rem:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0x1A
   734  00001B                     	ds	4
   735  00001F                     ___fldiv@sign:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0x1E
   739  00001F                     	ds	1
   740  000020                     ___fldiv@new_exp:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x1F
   744  000020                     	ds	2
   745  000022                     ___fldiv@grs:
   746                           	callstack 0
   747                           
   748                           ; 4 bytes @ 0x21
   749  000022                     	ds	4
   750  000026                     ___fldiv@bexp:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0x25
   754  000026                     	ds	1
   755  000027                     ___fldiv@aexp:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0x26
   759  000027                     	ds	1
   760  000028                     ?___flmul:
   761                           	callstack 0
   762  000028                     ?_floorf:
   763                           	callstack 0
   764  000028                     ___flmul@b:
   765                           	callstack 0
   766  000028                     floorf@x:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x27
   770  000028                     	ds	4
   771  00002C                     ??_floorf:
   772  00002C                     ___flmul@a:
   773                           	callstack 0
   774                           
   775                           ; 4 bytes @ 0x2B
   776  00002C                     	ds	4
   777  000030                     ??___flmul:
   778                           
   779                           ; 1 bytes @ 0x2F
   780  000030                     	ds	2
   781  000032                     floorf@m:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x31
   785  000032                     	ds	2
   786  000034                     ___flmul@sign:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0x33
   790  000034                     	ds	1
   791  000035                     ___flmul@grs:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x34
   795  000035                     	ds	1
   796  000036                     floorf@e:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x35
   800  000036                     	ds	2
   801  000038                     floorf@u:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x37
   805  000038                     	ds	1
   806  000039                     ___flmul@aexp:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x38
   810  000039                     	ds	1
   811  00003A                     ___flmul@bexp:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0x39
   815  00003A                     	ds	1
   816  00003B                     ___flmul@prod:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x3A
   820  00003B                     	ds	4
   821  00003F                     ___flmul@temp:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x3E
   825  00003F                     	ds	2
   826  000041                     ?___flsub:
   827                           	callstack 0
   828  000041                     ?___fltol:
   829                           	callstack 0
   830  000041                     ___flge@ff1:
   831                           	callstack 0
   832  000041                     ___fltol@f1:
   833                           	callstack 0
   834  000041                     ___flsub@b:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x40
   838  000041                     	ds	4
   839  000045                     ??___fltol:
   840  000045                     ___flge@ff2:
   841                           	callstack 0
   842  000045                     ___flsub@a:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x44
   846  000045                     	ds	4
   847  000049                     ??___flge:
   848  000049                     ___fltol@sign1:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x48
   852  000049                     	ds	1
   853  00004A                     ___fltol@exp1:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x49
   857  00004A                     	ds	3
   858  00004D                     ?_efgtoa:
   859                           	callstack 0
   860  00004D                     efgtoa@fp:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x4C
   864  00004D                     	ds	2
   865  00004F                     efgtoa@f:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x4E
   869  00004F                     	ds	4
   870  000053                     efgtoa@c:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0x52
   874  000053                     	ds	1
   875  000054                     ??_efgtoa:
   876                           
   877                           ; 1 bytes @ 0x53
   878  000054                     	ds	5
   879  000059                     ?_vfpfcnvrt:
   880                           	callstack 0
   881  000059                     vfpfcnvrt@fp:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x58
   885  000059                     	ds	2
   886  00005B                     vfpfcnvrt@fmt:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x5A
   890  00005B                     	ds	2
   891  00005D                     vfpfcnvrt@ap:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x5C
   895  00005D                     	ds	2
   896  00005F                     
   897                           ; 1 bytes @ 0x5E
   898 ;;
   899 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   900 ;;
   901 ;; *************** function _main *****************
   902 ;; Defined at:
   903 ;;		line 48 in file "main.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  percent         4  100[BANK0 ] float 
   908 ;;  adc_val         2   98[BANK0 ] unsigned short 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  2   69[None  ] int 
   911 ;; Registers used:
   912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   918 ;;      Params:         0       0       0       0       0       0       0       0       0
   919 ;;      Locals:         0       6       0       0       0       0       0       0       0
   920 ;;      Temps:          0       2       0       0       0       0       0       0       0
   921 ;;      Totals:         0       8       0       0       0       0       0       0       0
   922 ;;Total ram usage:        8 bytes
   923 ;; Hardware stack levels required when called: 9
   924 ;; This function calls:
   925 ;;		_FM_Lcd_Easy_Init
   926 ;;		_FM_Lcd_Send_String
   927 ;;		_FM_Lcd_Set_Cursor
   928 ;;		_Init_ADC1_Chanel_0
   929 ;;		_Init_CCP1_As_PWM
   930 ;;		_Init_Internal_Oscillator
   931 ;;		_Init_Timer2_Module
   932 ;;		_Run_Timer_And_CCP1PWM
   933 ;;		___fldiv
   934 ;;		___flmul
   935 ;;		___fltol
   936 ;;		___xxtofl
   937 ;;		_sprintf
   938 ;; This function is called by:
   939 ;;		Startup code after reset
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text0
   944  002ACC                     __ptext0:
   945                           	callstack 0
   946  002ACC                     _main:
   947                           	callstack 22
   948  002ACC                     
   949                           ;main.c: 51:     Init_Internal_Oscillator();
   950  002ACC  EC95  F01C         	call	_Init_Internal_Oscillator	;wreg free
   951                           
   952                           ;main.c: 53:     Init_Timer2_Module();
   953  002AD0  EC7B  F01C         	call	_Init_Timer2_Module	;wreg free
   954                           
   955                           ;main.c: 55:     Init_CCP1_As_PWM();
   956  002AD4  EC89  F01C         	call	_Init_CCP1_As_PWM	;wreg free
   957  002AD8                     
   958                           ;main.c: 57:     FM_Lcd_Easy_Init();
   959  002AD8  EC32  F01C         	call	_FM_Lcd_Easy_Init	;wreg free
   960  002ADC                     
   961                           ;main.c: 59:     Run_Timer_And_CCP1PWM(MOD_ON);
   962  002ADC  0E01               	movlw	1
   963  002ADE  EC6D  F01C         	call	_Run_Timer_And_CCP1PWM
   964                           
   965                           ;main.c: 61:     Init_ADC1_Chanel_0();
   966  002AE2  EC19  F01C         	call	_Init_ADC1_Chanel_0	;wreg free
   967  002AE6                     
   968                           ;main.c: 63:     FM_Lcd_Set_Cursor(ROW_1, COL_4);
   969  002AE6  0E03               	movlw	3
   970  002AE8  6E06               	movwf	FM_Lcd_Set_Cursor@columna^0,c
   971  002AEA  0E00               	movlw	0
   972  002AEC  EC88  F01B         	call	_FM_Lcd_Set_Cursor
   973  002AF0                     
   974                           ;main.c: 64:     FM_Lcd_Send_String("PWM - MOTOR");
   975  002AF0  0E10               	movlw	low STR_1
   976  002AF2  6E06               	movwf	FM_Lcd_Send_String@cadena^0,c
   977  002AF4  0E08               	movlw	high STR_1
   978  002AF6  6E07               	movwf	(FM_Lcd_Send_String@cadena+1)^0,c
   979  002AF8  ECF0  F019         	call	_FM_Lcd_Send_String	;wreg free
   980  002AFC                     l3962:
   981                           
   982                           ;main.c: 67:     {;main.c: 68:         ADCON0bits.GO_NOT_DONE = 1;
   983  002AFC  82C2               	bsf	194,1,c	;volatile
   984  002AFE                     l71:
   985  002AFE  B2C2               	btfsc	194,1,c	;volatile
   986  002B00  EF84  F015         	goto	u4901
   987  002B04  EF86  F015         	goto	u4900
   988  002B08                     u4901:
   989  002B08  EF7F  F015         	goto	l71
   990  002B0C                     u4900:
   991  002B0C                     
   992                           ;main.c: 70:         uint16_t adc_val = (ADRESH << 8) | ADRESL;
   993  002B0C  50C3               	movf	195,w,c	;volatile
   994  002B0E  CFC4 F0C0          	movff	4036,??_main	;volatile
   995  002B12  0100               	movlb	0	; () banked
   996  002B14  6BC1               	clrf	(??_main+1)& (0+255),b
   997  002B16  C0C0  F0C1         	movff	??_main,??_main+1
   998  002B1A  6BC0               	clrf	??_main& (0+255),b
   999  002B1C  11C0               	iorwf	??_main& (0+255),w,b
  1000  002B1E  6FC2               	movwf	main@adc_val& (0+255),b
  1001  002B20  51C1               	movf	(??_main+1)& (0+255),w,b
  1002  002B22  6FC3               	movwf	(main@adc_val+1)& (0+255),b
  1003  002B24                     
  1004                           ; BSR set to: 0
  1005                           ;main.c: 71:         float percent = (adc_val / 1024.0) * 100.0;
  1006  002B24  0E00               	movlw	0
  1007  002B26  6E13               	movwf	___fldiv@a^0,c
  1008  002B28  0E00               	movlw	0
  1009  002B2A  6E14               	movwf	(___fldiv@a+1)^0,c
  1010  002B2C  0E80               	movlw	128
  1011  002B2E  6E15               	movwf	(___fldiv@a+2)^0,c
  1012  002B30  0E44               	movlw	68
  1013  002B32  6E16               	movwf	(___fldiv@a+3)^0,c
  1014  002B34  C0C2  F001         	movff	main@adc_val,___xxtofl@val
  1015  002B38  C0C3  F002         	movff	main@adc_val+1,___xxtofl@val+1
  1016  002B3C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1017  002B3E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1018  002B40  0E00               	movlw	0
  1019  002B42  ECC4  F013         	call	___xxtofl
  1020  002B46  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1021  002B4A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1022  002B4E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1023  002B52  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1024  002B56  ECEE  F010         	call	___fldiv	;wreg free
  1025  002B5A  C00F  F028         	movff	?___fldiv,___flmul@b
  1026  002B5E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1027  002B62  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1028  002B66  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1029  002B6A  0E00               	movlw	0
  1030  002B6C  6E2C               	movwf	___flmul@a^0,c
  1031  002B6E  0E00               	movlw	0
  1032  002B70  6E2D               	movwf	(___flmul@a+1)^0,c
  1033  002B72  0EC8               	movlw	200
  1034  002B74  6E2E               	movwf	(___flmul@a+2)^0,c
  1035  002B76  0E42               	movlw	66
  1036  002B78  6E2F               	movwf	(___flmul@a+3)^0,c
  1037  002B7A  ECD9  F00E         	call	___flmul	;wreg free
  1038  002B7E  C028  F0C4         	movff	?___flmul,main@percent
  1039  002B82  C029  F0C5         	movff	?___flmul+1,main@percent+1
  1040  002B86  C02A  F0C6         	movff	?___flmul+2,main@percent+2
  1041  002B8A  C02B  F0C7         	movff	?___flmul+3,main@percent+3
  1042  002B8E                     
  1043                           ;main.c: 73:         FM_Lcd_Set_Cursor(ROW_2, COL_2);
  1044  002B8E  0E01               	movlw	1
  1045  002B90  6E06               	movwf	FM_Lcd_Set_Cursor@columna^0,c
  1046  002B92  0E01               	movlw	1
  1047  002B94  EC88  F01B         	call	_FM_Lcd_Set_Cursor
  1048  002B98                     
  1049                           ;main.c: 74:         sprintf(mens, "Perc. = %.2f%%", percent);
  1050  002B98  0ED8               	movlw	low _mens
  1051  002B9A  0100               	movlb	0	; () banked
  1052  002B9C  6FB0               	movwf	sprintf@s& (0+255),b
  1053  002B9E  0E00               	movlw	high _mens
  1054  002BA0  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1055  002BA2  0E01               	movlw	low STR_2
  1056  002BA4  6FB2               	movwf	sprintf@fmt& (0+255),b
  1057  002BA6  0E08               	movlw	high STR_2
  1058  002BA8  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1059  002BAA  C0C4  F0B4         	movff	main@percent,?_sprintf+4
  1060  002BAE  C0C5  F0B5         	movff	main@percent+1,?_sprintf+5
  1061  002BB2  C0C6  F0B6         	movff	main@percent+2,?_sprintf+6
  1062  002BB6  C0C7  F0B7         	movff	main@percent+3,?_sprintf+7
  1063  002BBA  ECF1  F01A         	call	_sprintf	;wreg free
  1064  002BBE                     
  1065                           ;main.c: 75:         FM_Lcd_Send_String(mens);
  1066  002BBE  0ED8               	movlw	low _mens
  1067  002BC0  6E06               	movwf	FM_Lcd_Send_String@cadena^0,c
  1068  002BC2  0E00               	movlw	high _mens
  1069  002BC4  6E07               	movwf	(FM_Lcd_Send_String@cadena+1)^0,c
  1070  002BC6  ECF0  F019         	call	_FM_Lcd_Send_String	;wreg free
  1071  002BCA                     
  1072                           ;main.c: 77:         CCPR1L = (uint8_t)((float)(PR2)* (percent)/(100.0));
  1073  002BCA  0E00               	movlw	0
  1074  002BCC  6E13               	movwf	___fldiv@a^0,c
  1075  002BCE  0E00               	movlw	0
  1076  002BD0  6E14               	movwf	(___fldiv@a+1)^0,c
  1077  002BD2  0EC8               	movlw	200
  1078  002BD4  6E15               	movwf	(___fldiv@a+2)^0,c
  1079  002BD6  0E42               	movlw	66
  1080  002BD8  6E16               	movwf	(___fldiv@a+3)^0,c
  1081  002BDA  C0C4  F02C         	movff	main@percent,___flmul@a
  1082  002BDE  C0C5  F02D         	movff	main@percent+1,___flmul@a+1
  1083  002BE2  C0C6  F02E         	movff	main@percent+2,___flmul@a+2
  1084  002BE6  C0C7  F02F         	movff	main@percent+3,___flmul@a+3
  1085  002BEA  50CB               	movf	203,w,c	;volatile
  1086  002BEC  6E01               	movwf	___xxtofl@val^0,c
  1087  002BEE  6A02               	clrf	(___xxtofl@val+1)^0,c
  1088  002BF0  6A03               	clrf	(___xxtofl@val+2)^0,c
  1089  002BF2  6A04               	clrf	(___xxtofl@val+3)^0,c
  1090  002BF4  0E00               	movlw	0
  1091  002BF6  ECC4  F013         	call	___xxtofl
  1092  002BFA  C001  F028         	movff	?___xxtofl,___flmul@b
  1093  002BFE  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  1094  002C02  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  1095  002C06  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  1096  002C0A  ECD9  F00E         	call	___flmul	;wreg free
  1097  002C0E  C028  F00F         	movff	?___flmul,___fldiv@b
  1098  002C12  C029  F010         	movff	?___flmul+1,___fldiv@b+1
  1099  002C16  C02A  F011         	movff	?___flmul+2,___fldiv@b+2
  1100  002C1A  C02B  F012         	movff	?___flmul+3,___fldiv@b+3
  1101  002C1E  ECEE  F010         	call	___fldiv	;wreg free
  1102  002C22  C00F  F041         	movff	?___fldiv,___fltol@f1
  1103  002C26  C010  F042         	movff	?___fldiv+1,___fltol@f1+1
  1104  002C2A  C011  F043         	movff	?___fldiv+2,___fltol@f1+2
  1105  002C2E  C012  F044         	movff	?___fldiv+3,___fltol@f1+3
  1106  002C32  EC2A  F016         	call	___fltol	;wreg free
  1107  002C36  5041               	movf	?___fltol^0,w,c
  1108  002C38  6EBE               	movwf	190,c	;volatile
  1109  002C3A                     
  1110                           ;main.c: 78:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1111  002C3A  0E03               	movlw	3
  1112  002C3C  0100               	movlb	0	; () banked
  1113  002C3E  6FC0               	movwf	??_main& (0+255),b
  1114  002C40  0E97               	movlw	151
  1115  002C42                     u4917:
  1116  002C42  2EE8               	decfsz	wreg,f,c
  1117  002C44  D7FE               	bra	u4917
  1118  002C46  2FC0               	decfsz	??_main& (0+255),f,b
  1119  002C48  D7FC               	bra	u4917
  1120  002C4A  D000               	nop2	
  1121  002C4C  EF7E  F015         	goto	l3962
  1122  002C50  EF07  F000         	goto	start
  1123  002C54                     __end_of_main:
  1124                           	callstack 0
  1125                           
  1126 ;; *************** function _sprintf *****************
  1127 ;; Defined at:
  1128 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  s               2   80[BANK0 ] PTR unsigned char 
  1131 ;;		 -> mens(16), 
  1132 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  1133 ;;		 -> STR_2(15), 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  f               6   90[BANK0 ] struct _IO_FILE
  1136 ;;  ap              2   88[BANK0 ] PTR void [1]
  1137 ;;		 -> ?_sprintf(2), 
  1138 ;;  ret             2    0        int 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  2   80[BANK0 ] int 
  1141 ;; Registers used:
  1142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1148 ;;      Params:         0       8       0       0       0       0       0       0       0
  1149 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1151 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1152 ;;Total ram usage:       16 bytes
  1153 ;; Hardware stack levels used: 1
  1154 ;; Hardware stack levels required when called: 8
  1155 ;; This function calls:
  1156 ;;		_vfprintf
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text1
  1163  0035E2                     __ptext1:
  1164                           	callstack 0
  1165  0035E2                     _sprintf:
  1166                           	callstack 22
  1167  0035E2  0EB4               	movlw	low (?_sprintf+4)
  1168  0035E4  0100               	movlb	0	; () banked
  1169  0035E6  6FB8               	movwf	sprintf@ap& (0+255),b
  1170  0035E8  0E00               	movlw	high (?_sprintf+4)
  1171  0035EA  6FB9               	movwf	(sprintf@ap+1)& (0+255),b
  1172  0035EC  C0B0  F0BA         	movff	sprintf@s,sprintf@f
  1173  0035F0  C0B1  F0BB         	movff	sprintf@s+1,sprintf@f+1
  1174  0035F4                     
  1175                           ; BSR set to: 0
  1176  0035F4  0E00               	movlw	0
  1177  0035F6  6FBD               	movwf	(sprintf@f+3)& (0+255),b
  1178  0035F8  0E00               	movlw	0
  1179  0035FA  6FBC               	movwf	(sprintf@f+2)& (0+255),b
  1180  0035FC                     
  1181                           ; BSR set to: 0
  1182  0035FC  0E00               	movlw	0
  1183  0035FE  6FBF               	movwf	(sprintf@f+5)& (0+255),b
  1184  003600  0E00               	movlw	0
  1185  003602  6FBE               	movwf	(sprintf@f+4)& (0+255),b
  1186  003604                     
  1187                           ; BSR set to: 0
  1188  003604  0EBA               	movlw	low sprintf@f
  1189  003606  6FA8               	movwf	vfprintf@fp& (0+255),b
  1190  003608  0E00               	movlw	high sprintf@f
  1191  00360A  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  1192  00360C  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  1193  003610  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1194  003614  0EB8               	movlw	low sprintf@ap
  1195  003616  6FAC               	movwf	vfprintf@ap& (0+255),b
  1196  003618  0E00               	movlw	high sprintf@ap
  1197  00361A  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  1198  00361C  EC62  F01A         	call	_vfprintf	;wreg free
  1199  003620  0100               	movlb	0	; () banked
  1200  003622  51BC               	movf	(sprintf@f+2)& (0+255),w,b
  1201  003624  25B0               	addwf	sprintf@s& (0+255),w,b
  1202  003626  6ED9               	movwf	fsr2l,c
  1203  003628  51BD               	movf	(sprintf@f+3)& (0+255),w,b
  1204  00362A  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1205  00362C  6EDA               	movwf	fsr2h,c
  1206  00362E  0E00               	movlw	0
  1207  003630  6EDF               	movwf	indf2,c
  1208  003632                     
  1209                           ; BSR set to: 0
  1210  003632  0012               	return		;funcret
  1211  003634                     __end_of_sprintf:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _vfprintf *****************
  1215 ;; Defined at:
  1216 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  1219 ;;		 -> sprintf@f(6), 
  1220 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  1221 ;;		 -> STR_2(15), 
  1222 ;;  ap              2   76[BANK0 ] PTR PTR void 
  1223 ;;		 -> sprintf@ap(2), 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  1226 ;;		 -> STR_2(15), 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  2   72[BANK0 ] int 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1236 ;;      Params:         0       6       0       0       0       0       0       0       0
  1237 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1239 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1240 ;;Total ram usage:        8 bytes
  1241 ;; Hardware stack levels used: 1
  1242 ;; Hardware stack levels required when called: 7
  1243 ;; This function calls:
  1244 ;;		_vfpfcnvrt
  1245 ;; This function is called by:
  1246 ;;		_sprintf
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text2
  1251  0034C4                     __ptext2:
  1252                           	callstack 0
  1253  0034C4                     _vfprintf:
  1254                           	callstack 22
  1255  0034C4                     
  1256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1257  0034C4  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  1258  0034C8  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1259  0034CC                     
  1260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1261  0034CC  0E00               	movlw	0
  1262  0034CE  0100               	movlb	0	; () banked
  1263  0034D0  6FD1               	movwf	(_nout+1)& (0+255),b
  1264  0034D2  0E00               	movlw	0
  1265  0034D4  6FD0               	movwf	_nout& (0+255),b
  1266                           
  1267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1268  0034D6  EF80  F01A         	goto	l3842
  1269  0034DA                     l3840:
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1273  0034DA  C0A8  F059         	movff	vfprintf@fp,vfpfcnvrt@fp
  1274  0034DE  C0A9  F05A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1275  0034E2  0EAE               	movlw	low vfprintf@cfmt
  1276  0034E4  6E5B               	movwf	vfpfcnvrt@fmt^0,c
  1277  0034E6  0E00               	movlw	high vfprintf@cfmt
  1278  0034E8  6E5C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1279  0034EA  C0AC  F05D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1280  0034EE  C0AD  F05E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1281  0034F2  ECA4  F00C         	call	_vfpfcnvrt	;wreg free
  1282  0034F6  5059               	movf	?_vfpfcnvrt^0,w,c
  1283  0034F8  0100               	movlb	0	; () banked
  1284  0034FA  27D0               	addwf	_nout& (0+255),f,b
  1285  0034FC  505A               	movf	(?_vfpfcnvrt+1)^0,w,c
  1286  0034FE  23D1               	addwfc	(_nout+1)& (0+255),f,b
  1287  003500                     l3842:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1291  003500  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  1292  003504  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1293  003508                     	if	0	;tblptru may be non-zero
  1294  003508                     	endif
  1295  003508                     	if	0	;tblptru may be non-zero
  1296  003508                     	endif
  1297  003508  0008               	tblrd		*
  1298  00350A  50F5               	movf	tablat,w,c
  1299  00350C  0900               	iorlw	0
  1300  00350E  A4D8               	btfss	status,2,c
  1301  003510  EF8C  F01A         	goto	u4731
  1302  003514  EF8E  F01A         	goto	u4730
  1303  003518                     u4731:
  1304  003518  EF6D  F01A         	goto	l3840
  1305  00351C                     u4730:
  1306  00351C                     
  1307                           ; BSR set to: 0
  1308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1309  00351C  C0D0  F0A8         	movff	_nout,?_vfprintf
  1310  003520  C0D1  F0A9         	movff	_nout+1,?_vfprintf+1
  1311  003524                     
  1312                           ; BSR set to: 0
  1313  003524  0012               	return		;funcret
  1314  003526                     __end_of_vfprintf:
  1315                           	callstack 0
  1316                           
  1317 ;; *************** function _vfpfcnvrt *****************
  1318 ;; Defined at:
  1319 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  fp              2   88[COMRAM] PTR struct _IO_FILE
  1322 ;;		 -> sprintf@f(6), 
  1323 ;;  fmt             2   90[COMRAM] PTR PTR unsigned char 
  1324 ;;		 -> vfprintf@cfmt(2), 
  1325 ;;  ap              2   92[COMRAM] PTR PTR void 
  1326 ;;		 -> sprintf@ap(2), 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  llu             8    0        unsigned long long 
  1329 ;;  ll              8    0        long long 
  1330 ;;  f               4   64[BANK0 ] long long 
  1331 ;;  ct              3   68[BANK0 ] unsigned char [3]
  1332 ;;  vp              3    0        PTR void 
  1333 ;;  cp              3    0        PTR unsigned char 
  1334 ;;  i               2    0        int 
  1335 ;;  done            2    0        int 
  1336 ;;  c               1   71[BANK0 ] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  2   88[COMRAM] int 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1346 ;;      Params:         6       0       0       0       0       0       0       0       0
  1347 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1348 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1349 ;;      Totals:         6      16       0       0       0       0       0       0       0
  1350 ;;Total ram usage:       22 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; Hardware stack levels required when called: 6
  1353 ;; This function calls:
  1354 ;;		_atoi
  1355 ;;		_efgtoa
  1356 ;;		_fputc
  1357 ;;		_isdigit
  1358 ;;		_isupper
  1359 ;;		_strncmp
  1360 ;;		_tolower
  1361 ;; This function is called by:
  1362 ;;		_vfprintf
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text3
  1367  001948                     __ptext3:
  1368                           	callstack 0
  1369  001948                     _vfpfcnvrt:
  1370                           	callstack 22
  1371  001948                     
  1372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1373  001948  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1374  00194C  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1375  001950  CFDE FFF6          	movff	postinc2,tblptrl
  1376  001954  CFDD FFF7          	movff	postdec2,tblptrh
  1377  001958                     	if	0	;tblptru may be non-zero
  1378  001958                     	endif
  1379  001958                     	if	0	;tblptru may be non-zero
  1380  001958                     	endif
  1381  001958  0008               	tblrd		*
  1382  00195A  50F5               	movf	tablat,w,c
  1383  00195C  0A25               	xorlw	37
  1384  00195E  A4D8               	btfss	status,2,c
  1385  001960  EFB4  F00C         	goto	u4591
  1386  001964  EFB6  F00C         	goto	u4590
  1387  001968                     u4591:
  1388  001968  EFBD  F00E         	goto	l3816
  1389  00196C                     u4590:
  1390  00196C                     
  1391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1392  00196C  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1393  001970  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1394  001974  2ADE               	incf	postinc2,f,c
  1395  001976  0E00               	movlw	0
  1396  001978  22DD               	addwfc	postdec2,f,c
  1397  00197A                     
  1398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1399  00197A  0E00               	movlw	0
  1400  00197C  0100               	movlb	0	; () banked
  1401  00197E  6FD3               	movwf	(_width+1)& (0+255),b
  1402  001980  0E00               	movlw	0
  1403  001982  6FD2               	movwf	_width& (0+255),b
  1404  001984  C0D2  F0D6         	movff	_width,_flags
  1405  001988  C0D3  F0D7         	movff	_width+1,_flags+1
  1406  00198C                     
  1407                           ; BSR set to: 0
  1408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1409  00198C  69D4               	setf	_prec& (0+255),b
  1410  00198E  69D5               	setf	(_prec+1)& (0+255),b
  1411  001990                     
  1412                           ; BSR set to: 0
  1413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1414  001990  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1415  001994  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1416  001998  CFDE FFF6          	movff	postinc2,tblptrl
  1417  00199C  CFDD FFF7          	movff	postdec2,tblptrh
  1418  0019A0                     	if	0	;tblptru may be non-zero
  1419  0019A0                     	endif
  1420  0019A0                     	if	0	;tblptru may be non-zero
  1421  0019A0                     	endif
  1422  0019A0  0008               	tblrd		*
  1423  0019A2  50F5               	movf	tablat,w,c
  1424  0019A4  0A2E               	xorlw	46
  1425  0019A6  A4D8               	btfss	status,2,c
  1426  0019A8  EFD8  F00C         	goto	u4601
  1427  0019AC  EFDA  F00C         	goto	u4600
  1428  0019B0                     u4601:
  1429  0019B0  EF58  F00D         	goto	l3762
  1430  0019B4                     u4600:
  1431  0019B4                     
  1432                           ; BSR set to: 0
  1433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1434  0019B4  0E00               	movlw	0
  1435  0019B6  6FD5               	movwf	(_prec+1)& (0+255),b
  1436  0019B8  0E00               	movlw	0
  1437  0019BA  6FD4               	movwf	_prec& (0+255),b
  1438  0019BC                     
  1439                           ; BSR set to: 0
  1440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1441  0019BC  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1442  0019C0  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1443  0019C4  2ADE               	incf	postinc2,f,c
  1444  0019C6  0E00               	movlw	0
  1445  0019C8  22DD               	addwfc	postdec2,f,c
  1446  0019CA                     
  1447                           ; BSR set to: 0
  1448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1449  0019CA  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1450  0019CE  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1451  0019D2  CFDE FFF6          	movff	postinc2,tblptrl
  1452  0019D6  CFDD FFF7          	movff	postdec2,tblptrh
  1453  0019DA                     	if	0	;tblptru may be non-zero
  1454  0019DA                     	endif
  1455  0019DA                     	if	0	;tblptru may be non-zero
  1456  0019DA                     	endif
  1457  0019DA  0008               	tblrd		*
  1458  0019DC  50F5               	movf	tablat,w,c
  1459  0019DE  0A2A               	xorlw	42
  1460  0019E0  A4D8               	btfss	status,2,c
  1461  0019E2  EFF5  F00C         	goto	u4611
  1462  0019E6  EFF7  F00C         	goto	u4610
  1463  0019EA                     u4611:
  1464  0019EA  EF14  F00D         	goto	l3752
  1465  0019EE                     u4610:
  1466  0019EE                     
  1467                           ; BSR set to: 0
  1468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1469  0019EE  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1470  0019F2  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1471  0019F6  2ADE               	incf	postinc2,f,c
  1472  0019F8  0E00               	movlw	0
  1473  0019FA  22DD               	addwfc	postdec2,f,c
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1476  0019FC  C05D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1477  001A00  C05E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1478  001A04  CFDF F098          	movff	indf2,??_vfpfcnvrt
  1479  001A08  0E02               	movlw	2
  1480  001A0A  26DE               	addwf	postinc2,f,c
  1481  001A0C  CFDF F099          	movff	indf2,??_vfpfcnvrt+1
  1482  001A10  0E00               	movlw	0
  1483  001A12  22DD               	addwfc	postdec2,f,c
  1484  001A14  C098  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1485  001A18  C099  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1486  001A1C  CFDE F0D4          	movff	postinc2,_prec
  1487  001A20  CFDD F0D5          	movff	postdec2,_prec+1
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1490  001A24  EF58  F00D         	goto	l3762
  1491  001A28                     l3752:
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1495  001A28  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1496  001A2C  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1497  001A30  CFDE F008          	movff	postinc2,atoi@s
  1498  001A34  CFDD F009          	movff	postdec2,atoi@s+1
  1499  001A38  EC9E  F014         	call	_atoi	;wreg free
  1500  001A3C  C008  F0D4         	movff	?_atoi,_prec
  1501  001A40  C009  F0D5         	movff	?_atoi+1,_prec+1
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1504  001A44  EF2B  F00D         	goto	l3756
  1505  001A48                     l3754:
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1509  001A48  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1510  001A4C  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1511  001A50  2ADE               	incf	postinc2,f,c
  1512  001A52  0E00               	movlw	0
  1513  001A54  22DD               	addwfc	postdec2,f,c
  1514  001A56                     l3756:
  1515  001A56  0ED0               	movlw	208
  1516  001A58  0100               	movlb	0	; () banked
  1517  001A5A  6F98               	movwf	??_vfpfcnvrt& (0+255),b
  1518  001A5C  0EFF               	movlw	255
  1519  001A5E  6F99               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1520  001A60  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1521  001A64  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1522  001A68  CFDE FFF6          	movff	postinc2,tblptrl
  1523  001A6C  CFDD FFF7          	movff	postdec2,tblptrh
  1524  001A70                     	if	0	;tblptru may be non-zero
  1525  001A70                     	endif
  1526  001A70                     	if	0	;tblptru may be non-zero
  1527  001A70                     	endif
  1528  001A70  0008               	tblrd		*
  1529  001A72  50F5               	movf	tablat,w,c
  1530  001A74  6F9A               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1531  001A76  6B9B               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1532  001A78  5198               	movf	??_vfpfcnvrt& (0+255),w,b
  1533  001A7A  279A               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1534  001A7C  5199               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1535  001A7E  239B               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1536  001A80  519B               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1537  001A82  E10A               	bnz	u4620
  1538  001A84  0E0A               	movlw	10
  1539  001A86  5D9A               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1540  001A88  A0D8               	btfss	status,0,c
  1541  001A8A  EF49  F00D         	goto	u4621
  1542  001A8E  EF4C  F00D         	goto	u4620
  1543  001A92                     u4621:
  1544  001A92  0E01               	movlw	1
  1545  001A94  EF4D  F00D         	goto	u4630
  1546  001A98                     u4620:
  1547  001A98  0E00               	movlw	0
  1548  001A9A                     u4630:
  1549  001A9A  6F9C               	movwf	_vfpfcnvrt$1100& (0+255),b
  1550  001A9C  6B9D               	clrf	(_vfpfcnvrt$1100+1)& (0+255),b
  1551  001A9E                     
  1552                           ; BSR set to: 0
  1553  001A9E  519C               	movf	_vfpfcnvrt$1100& (0+255),w,b
  1554  001AA0  119D               	iorwf	(_vfpfcnvrt$1100+1)& (0+255),w,b
  1555  001AA2  A4D8               	btfss	status,2,c
  1556  001AA4  EF56  F00D         	goto	u4641
  1557  001AA8  EF58  F00D         	goto	u4640
  1558  001AAC                     u4641:
  1559  001AAC  EF24  F00D         	goto	l3754
  1560  001AB0                     u4640:
  1561  001AB0                     l3762:
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1565  001AB0  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1566  001AB4  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1567  001AB8  CFDE FFF6          	movff	postinc2,tblptrl
  1568  001ABC  CFDD FFF7          	movff	postdec2,tblptrh
  1569  001AC0                     	if	0	;tblptru may be non-zero
  1570  001AC0                     	endif
  1571  001AC0                     	if	0	;tblptru may be non-zero
  1572  001AC0                     	endif
  1573  001AC0  0008               	tblrd		*
  1574  001AC2  50F5               	movf	tablat,w,c
  1575  001AC4  6E07               	movwf	tolower@c^0,c
  1576  001AC6  6A08               	clrf	(tolower@c+1)^0,c
  1577  001AC8  EC93  F01A         	call	_tolower	;wreg free
  1578  001ACC  5007               	movf	?_tolower^0,w,c
  1579  001ACE  0100               	movlb	0	; () banked
  1580  001AD0  6FA4               	movwf	vfpfcnvrt@ct& (0+255),b
  1581  001AD2                     
  1582                           ; BSR set to: 0
  1583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1584  001AD2  51A4               	movf	vfpfcnvrt@ct& (0+255),w,b
  1585  001AD4  B4D8               	btfsc	status,2,c
  1586  001AD6  EF6F  F00D         	goto	u4651
  1587  001ADA  EF71  F00D         	goto	u4650
  1588  001ADE                     u4651:
  1589  001ADE  EFAB  F00D         	goto	l3772
  1590  001AE2                     u4650:
  1591  001AE2                     
  1592                           ; BSR set to: 0
  1593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1594  001AE2  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1595  001AE6  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1596  001AEA  CFDE F098          	movff	postinc2,??_vfpfcnvrt
  1597  001AEE  CFDD F099          	movff	postdec2,??_vfpfcnvrt+1
  1598  001AF2  0E01               	movlw	1
  1599  001AF4  2798               	addwf	??_vfpfcnvrt& (0+255),f,b
  1600  001AF6  0E00               	movlw	0
  1601  001AF8  2399               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1602  001AFA  C098  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1603  001AFE  C099  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1604  001B02                     	if	0	;tblptru may be non-zero
  1605  001B02                     	endif
  1606  001B02                     	if	0	;tblptru may be non-zero
  1607  001B02                     	endif
  1608  001B02  0008               	tblrd		*
  1609  001B04  50F5               	movf	tablat,w,c
  1610  001B06  6E07               	movwf	tolower@c^0,c
  1611  001B08  6A08               	clrf	(tolower@c+1)^0,c
  1612  001B0A  EC93  F01A         	call	_tolower	;wreg free
  1613  001B0E  5007               	movf	?_tolower^0,w,c
  1614  001B10  0100               	movlb	0	; () banked
  1615  001B12  6FA5               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1616  001B14                     
  1617                           ; BSR set to: 0
  1618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1619  001B14  51A5               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1620  001B16  B4D8               	btfsc	status,2,c
  1621  001B18  EF90  F00D         	goto	u4661
  1622  001B1C  EF92  F00D         	goto	u4660
  1623  001B20                     u4661:
  1624  001B20  EFAB  F00D         	goto	l3772
  1625  001B24                     u4660:
  1626  001B24                     
  1627                           ; BSR set to: 0
  1628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1629  001B24  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1630  001B28  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1631  001B2C  CFDE F098          	movff	postinc2,??_vfpfcnvrt
  1632  001B30  CFDD F099          	movff	postdec2,??_vfpfcnvrt+1
  1633  001B34  0E02               	movlw	2
  1634  001B36  2798               	addwf	??_vfpfcnvrt& (0+255),f,b
  1635  001B38  0E00               	movlw	0
  1636  001B3A  2399               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1637  001B3C  C098  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1638  001B40  C099  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1639  001B44                     	if	0	;tblptru may be non-zero
  1640  001B44                     	endif
  1641  001B44                     	if	0	;tblptru may be non-zero
  1642  001B44                     	endif
  1643  001B44  0008               	tblrd		*
  1644  001B46  50F5               	movf	tablat,w,c
  1645  001B48  6E07               	movwf	tolower@c^0,c
  1646  001B4A  6A08               	clrf	(tolower@c+1)^0,c
  1647  001B4C  EC93  F01A         	call	_tolower	;wreg free
  1648  001B50  5007               	movf	?_tolower^0,w,c
  1649  001B52  0100               	movlb	0	; () banked
  1650  001B54  6FA6               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1651  001B56                     l3772:
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1655  001B56  0E66               	movlw	102
  1656  001B58  19A4               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1657  001B5A  A4D8               	btfss	status,2,c
  1658  001B5C  EFB2  F00D         	goto	u4671
  1659  001B60  EFB4  F00D         	goto	u4670
  1660  001B64                     u4671:
  1661  001B64  EFF4  F00D         	goto	l3784
  1662  001B68                     u4670:
  1663  001B68                     
  1664                           ; BSR set to: 0
  1665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1666  001B68  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1667  001B6C  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1668  001B70  CFDE FFF6          	movff	postinc2,tblptrl
  1669  001B74  CFDD FFF7          	movff	postdec2,tblptrh
  1670  001B78                     	if	0	;tblptru may be non-zero
  1671  001B78                     	endif
  1672  001B78                     	if	0	;tblptru may be non-zero
  1673  001B78                     	endif
  1674  001B78  0008               	tblrd		*
  1675  001B7A  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
  1676  001B7E                     
  1677                           ; BSR set to: 0
  1678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1679  001B7E  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1680  001B82  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1681  001B86  2ADE               	incf	postinc2,f,c
  1682  001B88  0E00               	movlw	0
  1683  001B8A  22DD               	addwfc	postdec2,f,c
  1684  001B8C                     
  1685                           ; BSR set to: 0
  1686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1687  001B8C  C05D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1688  001B90  C05E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1689  001B94  CFDF F098          	movff	indf2,??_vfpfcnvrt
  1690  001B98  0E04               	movlw	4
  1691  001B9A  26DE               	addwf	postinc2,f,c
  1692  001B9C  CFDF F099          	movff	indf2,??_vfpfcnvrt+1
  1693  001BA0  0E00               	movlw	0
  1694  001BA2  22DD               	addwfc	postdec2,f,c
  1695  001BA4  C098  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1696  001BA8  C099  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1697  001BAC  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f
  1698  001BB0  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+1
  1699  001BB4  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f+2
  1700  001BB8  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+3
  1701  001BBC                     l3780:
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1705  001BBC  C059  F04D         	movff	vfpfcnvrt@fp,efgtoa@fp
  1706  001BC0  C05A  F04E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1707  001BC4  C0A0  F04F         	movff	vfpfcnvrt@f,efgtoa@f
  1708  001BC8  C0A1  F050         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1709  001BCC  C0A2  F051         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1710  001BD0  C0A3  F052         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1711  001BD4  C0A7  F053         	movff	vfpfcnvrt@c,efgtoa@c
  1712  001BD8  EC18  F004         	call	_efgtoa	;wreg free
  1713  001BDC  C04D  F059         	movff	?_efgtoa,?_vfpfcnvrt
  1714  001BE0  C04E  F05A         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1715  001BE4  EFD8  F00E         	goto	l966
  1716  001BE8                     l3784:
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1720  001BE8  0EA4               	movlw	low vfpfcnvrt@ct
  1721  001BEA  6E01               	movwf	strncmp@_l^0,c
  1722  001BEC  0E00               	movlw	high vfpfcnvrt@ct
  1723  001BEE  6E02               	movwf	(strncmp@_l+1)^0,c
  1724  001BF0  0E2C               	movlw	low STR_11
  1725  001BF2  6E03               	movwf	strncmp@_r^0,c
  1726  001BF4  0E08               	movlw	high STR_11
  1727  001BF6  6E04               	movwf	(strncmp@_r+1)^0,c
  1728  001BF8  0E00               	movlw	0
  1729  001BFA  6E06               	movwf	(strncmp@n+1)^0,c
  1730  001BFC  0E02               	movlw	2
  1731  001BFE  6E05               	movwf	strncmp@n^0,c
  1732  001C00  ECAE  F017         	call	_strncmp	;wreg free
  1733  001C04  5001               	movf	?_strncmp^0,w,c
  1734  001C06  1002               	iorwf	(?_strncmp+1)^0,w,c
  1735  001C08  A4D8               	btfss	status,2,c
  1736  001C0A  EF09  F00E         	goto	u4681
  1737  001C0E  EF0B  F00E         	goto	u4680
  1738  001C12                     u4681:
  1739  001C12  EF87  F00E         	goto	l3800
  1740  001C16                     u4680:
  1741  001C16                     
  1742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1743  001C16  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1744  001C1A  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1745  001C1E  CFDE F098          	movff	postinc2,??_vfpfcnvrt
  1746  001C22  CFDD F099          	movff	postdec2,??_vfpfcnvrt+1
  1747  001C26  0E01               	movlw	1
  1748  001C28  0100               	movlb	0	; () banked
  1749  001C2A  2798               	addwf	??_vfpfcnvrt& (0+255),f,b
  1750  001C2C  0E00               	movlw	0
  1751  001C2E  2399               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1752  001C30  C098  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1753  001C34  C099  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1754  001C38                     	if	0	;tblptru may be non-zero
  1755  001C38                     	endif
  1756  001C38                     	if	0	;tblptru may be non-zero
  1757  001C38                     	endif
  1758  001C38  0008               	tblrd		*
  1759  001C3A  CFF5 F0A7          	movff	tablat,vfpfcnvrt@c
  1760  001C3E  0EBF               	movlw	191
  1761  001C40  6F98               	movwf	??_vfpfcnvrt& (0+255),b
  1762  001C42  0EFF               	movlw	255
  1763  001C44  6F99               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1764  001C46  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1765  001C4A  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1766  001C4E  CFDE FFF6          	movff	postinc2,tblptrl
  1767  001C52  CFDD FFF7          	movff	postdec2,tblptrh
  1768  001C56                     	if	0	;tblptru may be non-zero
  1769  001C56                     	endif
  1770  001C56                     	if	0	;tblptru may be non-zero
  1771  001C56                     	endif
  1772  001C56  0008               	tblrd		*
  1773  001C58  50F5               	movf	tablat,w,c
  1774  001C5A  6F9A               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1775  001C5C  6B9B               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1776  001C5E  5198               	movf	??_vfpfcnvrt& (0+255),w,b
  1777  001C60  279A               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1778  001C62  5199               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1779  001C64  239B               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1780  001C66  519B               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1781  001C68  E10A               	bnz	u4690
  1782  001C6A  0E1A               	movlw	26
  1783  001C6C  5D9A               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1784  001C6E  A0D8               	btfss	status,0,c
  1785  001C70  EF3C  F00E         	goto	u4691
  1786  001C74  EF3F  F00E         	goto	u4690
  1787  001C78                     u4691:
  1788  001C78  0E01               	movlw	1
  1789  001C7A  EF40  F00E         	goto	u4700
  1790  001C7E                     u4690:
  1791  001C7E  0E00               	movlw	0
  1792  001C80                     u4700:
  1793  001C80  6F9E               	movwf	_vfpfcnvrt$1104& (0+255),b
  1794  001C82  6B9F               	clrf	(_vfpfcnvrt$1104+1)& (0+255),b
  1795  001C84                     
  1796                           ; BSR set to: 0
  1797  001C84  519E               	movf	_vfpfcnvrt$1104& (0+255),w,b
  1798  001C86  119F               	iorwf	(_vfpfcnvrt$1104+1)& (0+255),w,b
  1799  001C88  B4D8               	btfsc	status,2,c
  1800  001C8A  EF49  F00E         	goto	u4711
  1801  001C8E  EF4B  F00E         	goto	u4710
  1802  001C92                     u4711:
  1803  001C92  EF65  F00E         	goto	l3794
  1804  001C96                     u4710:
  1805  001C96                     
  1806                           ; BSR set to: 0
  1807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1808  001C96  C05D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1809  001C9A  C05E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1810  001C9E  CFDF F098          	movff	indf2,??_vfpfcnvrt
  1811  001CA2  0E04               	movlw	4
  1812  001CA4  26DE               	addwf	postinc2,f,c
  1813  001CA6  CFDF F099          	movff	indf2,??_vfpfcnvrt+1
  1814  001CAA  0E00               	movlw	0
  1815  001CAC  22DD               	addwfc	postdec2,f,c
  1816  001CAE  C098  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1817  001CB2  C099  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1818  001CB6  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f
  1819  001CBA  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+1
  1820  001CBE  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f+2
  1821  001CC2  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+3
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1824  001CC6  EF7D  F00E         	goto	l973
  1825  001CCA                     l3794:
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1829  001CCA  C05D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1830  001CCE  C05E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1831  001CD2  CFDF F098          	movff	indf2,??_vfpfcnvrt
  1832  001CD6  0E04               	movlw	4
  1833  001CD8  26DE               	addwf	postinc2,f,c
  1834  001CDA  CFDF F099          	movff	indf2,??_vfpfcnvrt+1
  1835  001CDE  0E00               	movlw	0
  1836  001CE0  22DD               	addwfc	postdec2,f,c
  1837  001CE2  C098  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1838  001CE6  C099  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1839  001CEA  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f
  1840  001CEE  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+1
  1841  001CF2  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f+2
  1842  001CF6  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+3
  1843  001CFA                     l973:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1847  001CFA  0E02               	movlw	2
  1848  001CFC  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1849  001D00  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1850  001D04  26DE               	addwf	postinc2,f,c
  1851  001D06  0E00               	movlw	0
  1852  001D08  22DD               	addwfc	postdec2,f,c
  1853  001D0A  EFDE  F00D         	goto	l3780
  1854  001D0E                     l3800:
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1857  001D0E  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1858  001D12  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1859  001D16  CFDE FFF6          	movff	postinc2,tblptrl
  1860  001D1A  CFDD FFF7          	movff	postdec2,tblptrh
  1861  001D1E                     	if	0	;tblptru may be non-zero
  1862  001D1E                     	endif
  1863  001D1E                     	if	0	;tblptru may be non-zero
  1864  001D1E                     	endif
  1865  001D1E  0008               	tblrd		*
  1866  001D20  50F5               	movf	tablat,w,c
  1867  001D22  0A25               	xorlw	37
  1868  001D24  A4D8               	btfss	status,2,c
  1869  001D26  EF97  F00E         	goto	u4721
  1870  001D2A  EF99  F00E         	goto	u4720
  1871  001D2E                     u4721:
  1872  001D2E  EFB0  F00E         	goto	l3810
  1873  001D32                     u4720:
  1874  001D32                     
  1875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1876  001D32  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1877  001D36  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1878  001D3A  2ADE               	incf	postinc2,f,c
  1879  001D3C  0E00               	movlw	0
  1880  001D3E  22DD               	addwfc	postdec2,f,c
  1881  001D40                     
  1882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1883  001D40  0E00               	movlw	0
  1884  001D42  6E02               	movwf	(fputc@c+1)^0,c
  1885  001D44  0E25               	movlw	37
  1886  001D46  6E01               	movwf	fputc@c^0,c
  1887  001D48  C059  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1888  001D4C  C05A  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1889  001D50  EC19  F018         	call	_fputc	;wreg free
  1890  001D54                     l3806:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1893  001D54  0E00               	movlw	0
  1894  001D56  6E5A               	movwf	(?_vfpfcnvrt+1)^0,c
  1895  001D58  0E01               	movlw	1
  1896  001D5A  6E59               	movwf	?_vfpfcnvrt^0,c
  1897  001D5C  EFD8  F00E         	goto	l966
  1898  001D60                     l3810:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1901  001D60  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1902  001D64  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1903  001D68  2ADE               	incf	postinc2,f,c
  1904  001D6A  0E00               	movlw	0
  1905  001D6C  22DD               	addwfc	postdec2,f,c
  1906  001D6E                     
  1907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1908  001D6E  0E00               	movlw	0
  1909  001D70  6E5A               	movwf	(?_vfpfcnvrt+1)^0,c
  1910  001D72  0E00               	movlw	0
  1911  001D74  6E59               	movwf	?_vfpfcnvrt^0,c
  1912  001D76  EFD8  F00E         	goto	l966
  1913  001D7A                     l3816:
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1916  001D7A  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1917  001D7E  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1918  001D82  CFDE FFF6          	movff	postinc2,tblptrl
  1919  001D86  CFDD FFF7          	movff	postdec2,tblptrh
  1920  001D8A                     	if	0	;tblptru may be non-zero
  1921  001D8A                     	endif
  1922  001D8A                     	if	0	;tblptru may be non-zero
  1923  001D8A                     	endif
  1924  001D8A  0008               	tblrd		*
  1925  001D8C  50F5               	movf	tablat,w,c
  1926  001D8E  6E01               	movwf	fputc@c^0,c
  1927  001D90  6A02               	clrf	(fputc@c+1)^0,c
  1928  001D92  C059  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1929  001D96  C05A  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1930  001D9A  EC19  F018         	call	_fputc	;wreg free
  1931  001D9E                     
  1932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1933  001D9E  C05B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1934  001DA2  C05C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1935  001DA6  2ADE               	incf	postinc2,f,c
  1936  001DA8  0E00               	movlw	0
  1937  001DAA  22DD               	addwfc	postdec2,f,c
  1938  001DAC  EFAA  F00E         	goto	l3806
  1939  001DB0                     l966:
  1940  001DB0  0012               	return		;funcret
  1941  001DB2                     __end_of_vfpfcnvrt:
  1942                           	callstack 0
  1943                           
  1944 ;; *************** function _strncmp *****************
  1945 ;; Defined at:
  1946 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1949 ;;		 -> vfpfcnvrt@ct(3), 
  1950 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1951 ;;		 -> STR_13(3), 
  1952 ;;  n               2    4[COMRAM] unsigned int 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1955 ;;		 -> STR_13(3), 
  1956 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1957 ;;		 -> vfpfcnvrt@ct(3), 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  2    0[COMRAM] int 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1967 ;;      Params:         6       0       0       0       0       0       0       0       0
  1968 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1969 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1970 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1971 ;;Total ram usage:       11 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; Hardware stack levels required when called: 1
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_vfpfcnvrt
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text4
  1982  002F5C                     __ptext4:
  1983                           	callstack 0
  1984  002F5C                     _strncmp:
  1985                           	callstack 26
  1986  002F5C  C001  F008         	movff	strncmp@_l,strncmp@l
  1987  002F60  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1988  002F64  C003  F00A         	movff	strncmp@_r,strncmp@r
  1989  002F68  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1990  002F6C  0605               	decf	strncmp@n^0,f,c
  1991  002F6E  A0D8               	btfss	status,0,c
  1992  002F70  0606               	decf	(strncmp@n+1)^0,f,c
  1993  002F72  2805               	incf	strncmp@n^0,w,c
  1994  002F74  E106               	bnz	u4541
  1995  002F76  2806               	incf	(strncmp@n+1)^0,w,c
  1996  002F78  A4D8               	btfss	status,2,c
  1997  002F7A  EFC1  F017         	goto	u4541
  1998  002F7E  EFC3  F017         	goto	u4540
  1999  002F82                     u4541:
  2000  002F82  EFD0  F017         	goto	l3704
  2001  002F86                     u4540:
  2002  002F86  0E00               	movlw	0
  2003  002F88  6E02               	movwf	(?_strncmp+1)^0,c
  2004  002F8A  0E00               	movlw	0
  2005  002F8C  6E01               	movwf	?_strncmp^0,c
  2006  002F8E  EF18  F018         	goto	l1094
  2007  002F92                     l3702:
  2008  002F92  4A08               	infsnz	strncmp@l^0,f,c
  2009  002F94  2A09               	incf	(strncmp@l+1)^0,f,c
  2010  002F96  4A0A               	infsnz	strncmp@r^0,f,c
  2011  002F98  2A0B               	incf	(strncmp@r+1)^0,f,c
  2012  002F9A  0605               	decf	strncmp@n^0,f,c
  2013  002F9C  A0D8               	btfss	status,0,c
  2014  002F9E  0606               	decf	(strncmp@n+1)^0,f,c
  2015  002FA0                     l3704:
  2016  002FA0  C008  FFD9         	movff	strncmp@l,fsr2l
  2017  002FA4  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2018  002FA8  50DF               	movf	indf2,w,c
  2019  002FAA  B4D8               	btfsc	status,2,c
  2020  002FAC  EFDA  F017         	goto	u4551
  2021  002FB0  EFDC  F017         	goto	u4550
  2022  002FB4                     u4551:
  2023  002FB4  EF07  F018         	goto	l3712
  2024  002FB8                     u4550:
  2025  002FB8  C00A  FFF6         	movff	strncmp@r,tblptrl
  2026  002FBC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2027  002FC0                     	if	0	;tblptru may be non-zero
  2028  002FC0                     	endif
  2029  002FC0                     	if	0	;tblptru may be non-zero
  2030  002FC0                     	endif
  2031  002FC0  0008               	tblrd		*
  2032  002FC2  50F5               	movf	tablat,w,c
  2033  002FC4  0900               	iorlw	0
  2034  002FC6  B4D8               	btfsc	status,2,c
  2035  002FC8  EFE8  F017         	goto	u4561
  2036  002FCC  EFEA  F017         	goto	u4560
  2037  002FD0                     u4561:
  2038  002FD0  EF07  F018         	goto	l3712
  2039  002FD4                     u4560:
  2040  002FD4  5005               	movf	strncmp@n^0,w,c
  2041  002FD6  1006               	iorwf	(strncmp@n+1)^0,w,c
  2042  002FD8  B4D8               	btfsc	status,2,c
  2043  002FDA  EFF1  F017         	goto	u4571
  2044  002FDE  EFF3  F017         	goto	u4570
  2045  002FE2                     u4571:
  2046  002FE2  EF07  F018         	goto	l3712
  2047  002FE6                     u4570:
  2048  002FE6  C008  FFD9         	movff	strncmp@l,fsr2l
  2049  002FEA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2050  002FEE  50DF               	movf	indf2,w,c
  2051  002FF0  6E07               	movwf	??_strncmp^0,c
  2052  002FF2  C00A  FFF6         	movff	strncmp@r,tblptrl
  2053  002FF6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2054  002FFA                     	if	0	;tblptru may be non-zero
  2055  002FFA                     	endif
  2056  002FFA                     	if	0	;tblptru may be non-zero
  2057  002FFA                     	endif
  2058  002FFA  0008               	tblrd		*
  2059  002FFC  50F5               	movf	tablat,w,c
  2060  002FFE  1807               	xorwf	??_strncmp^0,w,c
  2061  003000  B4D8               	btfsc	status,2,c
  2062  003002  EF05  F018         	goto	u4581
  2063  003006  EF07  F018         	goto	u4580
  2064  00300A                     u4581:
  2065  00300A  EFC9  F017         	goto	l3702
  2066  00300E                     u4580:
  2067  00300E                     l3712:
  2068  00300E  C008  FFD9         	movff	strncmp@l,fsr2l
  2069  003012  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2070  003016  50DF               	movf	indf2,w,c
  2071  003018  6E07               	movwf	??_strncmp^0,c
  2072  00301A  C00A  FFF6         	movff	strncmp@r,tblptrl
  2073  00301E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2074  003022                     	if	0	;tblptru may be non-zero
  2075  003022                     	endif
  2076  003022                     	if	0	;tblptru may be non-zero
  2077  003022                     	endif
  2078  003022  0008               	tblrd		*
  2079  003024  50F5               	movf	tablat,w,c
  2080  003026  5C07               	subwf	??_strncmp^0,w,c
  2081  003028  6E01               	movwf	?_strncmp^0,c
  2082  00302A  6A02               	clrf	(?_strncmp+1)^0,c
  2083  00302C  A0D8               	btfss	status,0,c
  2084  00302E  0602               	decf	(?_strncmp+1)^0,f,c
  2085  003030                     l1094:
  2086  003030  0012               	return		;funcret
  2087  003032                     __end_of_strncmp:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function _efgtoa *****************
  2091 ;; Defined at:
  2092 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  fp              2   76[COMRAM] PTR struct _IO_FILE
  2095 ;;		 -> sprintf@f(6), 
  2096 ;;  f               4   78[COMRAM] PTR struct _IO_FILE
  2097 ;;  c               1   82[COMRAM] unsigned char 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  u               4   52[BANK0 ] unsigned char 
  2100 ;;  g               4   44[BANK0 ] unsigned char 
  2101 ;;  l               4   38[BANK0 ] unsigned char 
  2102 ;;  h               4   34[BANK0 ] unsigned char 
  2103 ;;  ou              4   20[BANK0 ] unsigned char 
  2104 ;;  n               2   50[BANK0 ] int 
  2105 ;;  e               2   48[BANK0 ] int 
  2106 ;;  i               2   42[BANK0 ] int 
  2107 ;;  w               2   30[BANK0 ] int 
  2108 ;;  p               2   28[BANK0 ] int 
  2109 ;;  sign            2   26[BANK0 ] int 
  2110 ;;  d               2   24[BANK0 ] int 
  2111 ;;  m               2   18[BANK0 ] int 
  2112 ;;  ne              2   16[BANK0 ] int 
  2113 ;;  pp              2   14[BANK0 ] int 
  2114 ;;  t               2   12[BANK0 ] int 
  2115 ;;  mode            1   33[BANK0 ] unsigned char 
  2116 ;;  nmode           1   32[BANK0 ] unsigned char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  2   76[COMRAM] int 
  2119 ;; Registers used:
  2120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2126 ;;      Params:         7       0       0       0       0       0       0       0       0
  2127 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2128 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2129 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2130 ;;Total ram usage:       68 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; Hardware stack levels required when called: 5
  2133 ;; This function calls:
  2134 ;;		___awdiv
  2135 ;;		___awmod
  2136 ;;		___fladd
  2137 ;;		___fldiv
  2138 ;;		___fleq
  2139 ;;		___flge
  2140 ;;		___flmul
  2141 ;;		___flneg
  2142 ;;		___flsub
  2143 ;;		___fltol
  2144 ;;		___fpclassifyf
  2145 ;;		_floorf
  2146 ;;		_isupper
  2147 ;;		_pad
  2148 ;;		_strcpy
  2149 ;;		_tolower
  2150 ;; This function is called by:
  2151 ;;		_vfpfcnvrt
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text5
  2156  000830                     __ptext5:
  2157                           	callstack 0
  2158  000830                     _efgtoa:
  2159                           	callstack 22
  2160  000830                     
  2161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2162  000830  0E00               	movlw	0
  2163  000832  0100               	movlb	0	; () banked
  2164  000834  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2165  000836  0E00               	movlw	0
  2166  000838  6F7A               	movwf	efgtoa@sign& (0+255),b
  2167  00083A                     
  2168                           ; BSR set to: 0
  2169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2170  00083A  C04F  F08C         	movff	efgtoa@f,efgtoa@g
  2171  00083E  C050  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2172  000842  C051  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2173  000846  C052  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2174  00084A                     
  2175                           ; BSR set to: 0
  2176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2177  00084A  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2178  00084C  EF2C  F004         	goto	u3930
  2179  000850  EF2A  F004         	goto	u3931
  2180  000854                     u3931:
  2181  000854  EF42  F004         	goto	l3356
  2182  000858                     u3930:
  2183  000858                     
  2184                           ; BSR set to: 0
  2185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2186  000858  0E00               	movlw	0
  2187  00085A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2188  00085C  0E01               	movlw	1
  2189  00085E  6F7A               	movwf	efgtoa@sign& (0+255),b
  2190  000860                     
  2191                           ; BSR set to: 0
  2192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2193  000860  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2194  000864  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2195  000868  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2196  00086C  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2197  000870  ECC6  F01B         	call	___flneg	;wreg free
  2198  000874  C001  F08C         	movff	?___flneg,efgtoa@g
  2199  000878  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2200  00087C  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2201  000880  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2202  000884                     l3356:
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2205  000884  0E00               	movlw	0
  2206  000886  0100               	movlb	0	; () banked
  2207  000888  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2208  00088A  0E00               	movlw	0
  2209  00088C  6F92               	movwf	efgtoa@n& (0+255),b
  2210  00088E                     
  2211                           ; BSR set to: 0
  2212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2213  00088E  C0D2  F07E         	movff	_width,efgtoa@w
  2214  000892  C0D3  F07F         	movff	_width+1,efgtoa@w+1
  2215  000896                     
  2216                           ; BSR set to: 0
  2217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2218  000896  517A               	movf	efgtoa@sign& (0+255),w,b
  2219  000898  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2220  00089A  A4D8               	btfss	status,2,c
  2221  00089C  EF52  F004         	goto	u3941
  2222  0008A0  EF54  F004         	goto	u3940
  2223  0008A4                     u3941:
  2224  0008A4  EF5B  F004         	goto	l3364
  2225  0008A8                     u3940:
  2226  0008A8                     
  2227                           ; BSR set to: 0
  2228  0008A8  A5D6               	btfss	_flags& (0+255),2,b
  2229  0008AA  EF59  F004         	goto	u3951
  2230  0008AE  EF5B  F004         	goto	u3950
  2231  0008B2                     u3951:
  2232  0008B2  EF75  F004         	goto	l3376
  2233  0008B6                     u3950:
  2234  0008B6                     l3364:
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2238  0008B6  517A               	movf	efgtoa@sign& (0+255),w,b
  2239  0008B8  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2240  0008BA  A4D8               	btfss	status,2,c
  2241  0008BC  EF62  F004         	goto	u3961
  2242  0008C0  EF64  F004         	goto	u3960
  2243  0008C4                     u3961:
  2244  0008C4  EF6A  F004         	goto	l3368
  2245  0008C8                     u3960:
  2246  0008C8                     
  2247                           ; BSR set to: 0
  2248  0008C8  0E00               	movlw	0
  2249  0008CA  6F61               	movwf	(_efgtoa$1074+1)& (0+255),b
  2250  0008CC  0E2B               	movlw	43
  2251  0008CE  6F60               	movwf	_efgtoa$1074& (0+255),b
  2252  0008D0  EF6E  F004         	goto	l3370
  2253  0008D4                     l3368:
  2254                           
  2255                           ; BSR set to: 0
  2256  0008D4  0E00               	movlw	0
  2257  0008D6  6F61               	movwf	(_efgtoa$1074+1)& (0+255),b
  2258  0008D8  0E2D               	movlw	45
  2259  0008DA  6F60               	movwf	_efgtoa$1074& (0+255),b
  2260  0008DC                     l3370:
  2261                           
  2262                           ; BSR set to: 0
  2263  0008DC  C060  F100         	movff	_efgtoa$1074,_dbuf
  2264  0008E0                     
  2265                           ; BSR set to: 0
  2266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2267  0008E0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2268  0008E2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2269  0008E4                     
  2270                           ; BSR set to: 0
  2271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2272  0008E4  077E               	decf	efgtoa@w& (0+255),f,b
  2273  0008E6  A0D8               	btfss	status,0,c
  2274  0008E8  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  2275  0008EA                     l3376:
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2279  0008EA  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2280  0008EE  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2281  0008F2  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2282  0008F6  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2283  0008FA  EC2F  F017         	call	___fpclassifyf	;wreg free
  2284  0008FE  0401               	decf	?___fpclassifyf^0,w,c
  2285  000900  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2286  000902  A4D8               	btfss	status,2,c
  2287  000904  EF86  F004         	goto	u3971
  2288  000908  EF88  F004         	goto	u3970
  2289  00090C                     u3971:
  2290  00090C  EFDF  F004         	goto	l3394
  2291  000910                     u3970:
  2292  000910  0EBF               	movlw	191
  2293  000912  6E54               	movwf	??_efgtoa^0,c
  2294  000914  0EFF               	movlw	255
  2295  000916  6E55               	movwf	(??_efgtoa+1)^0,c
  2296  000918  5053               	movf	efgtoa@c^0,w,c
  2297  00091A  6E56               	movwf	(??_efgtoa+2)^0,c
  2298  00091C  6A57               	clrf	(??_efgtoa+3)^0,c
  2299  00091E  5054               	movf	??_efgtoa^0,w,c
  2300  000920  2656               	addwf	(??_efgtoa+2)^0,f,c
  2301  000922  5055               	movf	(??_efgtoa+1)^0,w,c
  2302  000924  2257               	addwfc	(??_efgtoa+3)^0,f,c
  2303  000926  5057               	movf	(??_efgtoa+3)^0,w,c
  2304  000928  E10A               	bnz	u3980
  2305  00092A  0E1A               	movlw	26
  2306  00092C  5C56               	subwf	(??_efgtoa+2)^0,w,c
  2307  00092E  A0D8               	btfss	status,0,c
  2308  000930  EF9C  F004         	goto	u3981
  2309  000934  EF9F  F004         	goto	u3980
  2310  000938                     u3981:
  2311  000938  0E01               	movlw	1
  2312  00093A  EFA0  F004         	goto	u3990
  2313  00093E                     u3980:
  2314  00093E  0E00               	movlw	0
  2315  000940                     u3990:
  2316  000940  0100               	movlb	0	; () banked
  2317  000942  6F62               	movwf	_efgtoa$1075& (0+255),b
  2318  000944  6B63               	clrf	(_efgtoa$1075+1)& (0+255),b
  2319  000946                     
  2320                           ; BSR set to: 0
  2321  000946  5162               	movf	_efgtoa$1075& (0+255),w,b
  2322  000948  1163               	iorwf	(_efgtoa$1075+1)& (0+255),w,b
  2323  00094A  B4D8               	btfsc	status,2,c
  2324  00094C  EFAA  F004         	goto	u4001
  2325  000950  EFAC  F004         	goto	u4000
  2326  000954                     u4001:
  2327  000954  EFBA  F004         	goto	l3386
  2328  000958                     u4000:
  2329  000958                     
  2330                           ; BSR set to: 0
  2331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2332  000958  0E00               	movlw	low _dbuf
  2333  00095A  2592               	addwf	efgtoa@n& (0+255),w,b
  2334  00095C  6E01               	movwf	strcpy@dest^0,c
  2335  00095E  0E01               	movlw	high _dbuf
  2336  000960  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2337  000962  6E02               	movwf	(strcpy@dest+1)^0,c
  2338  000964  0E1C               	movlw	low STR_3
  2339  000966  6E03               	movwf	strcpy@src^0,c
  2340  000968  0E08               	movlw	high STR_3
  2341  00096A  6E04               	movwf	(strcpy@src+1)^0,c
  2342  00096C  ECC3  F01A         	call	_strcpy	;wreg free
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2345  000970  EFC6  F004         	goto	l3388
  2346  000974                     l3386:
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2350  000974  0E00               	movlw	low _dbuf
  2351  000976  2592               	addwf	efgtoa@n& (0+255),w,b
  2352  000978  6E01               	movwf	strcpy@dest^0,c
  2353  00097A  0E01               	movlw	high _dbuf
  2354  00097C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2355  00097E  6E02               	movwf	(strcpy@dest+1)^0,c
  2356  000980  0E24               	movlw	low STR_4
  2357  000982  6E03               	movwf	strcpy@src^0,c
  2358  000984  0E08               	movlw	high STR_4
  2359  000986  6E04               	movwf	(strcpy@src+1)^0,c
  2360  000988  ECC3  F01A         	call	_strcpy	;wreg free
  2361  00098C                     l3388:
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2364  00098C  0100               	movlb	0	; () banked
  2365  00098E  0EFD               	movlw	253
  2366  000990  277E               	addwf	efgtoa@w& (0+255),f,b
  2367  000992  0EFF               	movlw	255
  2368  000994  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2369  000996                     l3390:
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2372  000996  C04D  F011         	movff	efgtoa@fp,pad@fp
  2373  00099A  C04E  F012         	movff	efgtoa@fp+1,pad@fp+1
  2374  00099E  0E00               	movlw	low _dbuf
  2375  0009A0  6E13               	movwf	pad@buf^0,c
  2376  0009A2  0E01               	movlw	high _dbuf
  2377  0009A4  6E14               	movwf	(pad@buf+1)^0,c
  2378  0009A6  C07E  F015         	movff	efgtoa@w,pad@p
  2379  0009AA  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  2380  0009AE  EC7E  F018         	call	_pad	;wreg free
  2381  0009B2  C011  F04D         	movff	?_pad,?_efgtoa
  2382  0009B6  C012  F04E         	movff	?_pad+1,?_efgtoa+1
  2383  0009BA  EF43  F00A         	goto	l874
  2384  0009BE                     l3394:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2387  0009BE  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2388  0009C2  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2389  0009C6  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2390  0009CA  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2391  0009CE  EC2F  F017         	call	___fpclassifyf	;wreg free
  2392  0009D2  5001               	movf	?___fpclassifyf^0,w,c
  2393  0009D4  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2394  0009D6  A4D8               	btfss	status,2,c
  2395  0009D8  EFF0  F004         	goto	u4011
  2396  0009DC  EFF2  F004         	goto	u4010
  2397  0009E0                     u4011:
  2398  0009E0  EF32  F005         	goto	l3412
  2399  0009E4                     u4010:
  2400  0009E4  0EBF               	movlw	191
  2401  0009E6  6E54               	movwf	??_efgtoa^0,c
  2402  0009E8  0EFF               	movlw	255
  2403  0009EA  6E55               	movwf	(??_efgtoa+1)^0,c
  2404  0009EC  5053               	movf	efgtoa@c^0,w,c
  2405  0009EE  6E56               	movwf	(??_efgtoa+2)^0,c
  2406  0009F0  6A57               	clrf	(??_efgtoa+3)^0,c
  2407  0009F2  5054               	movf	??_efgtoa^0,w,c
  2408  0009F4  2656               	addwf	(??_efgtoa+2)^0,f,c
  2409  0009F6  5055               	movf	(??_efgtoa+1)^0,w,c
  2410  0009F8  2257               	addwfc	(??_efgtoa+3)^0,f,c
  2411  0009FA  5057               	movf	(??_efgtoa+3)^0,w,c
  2412  0009FC  E10A               	bnz	u4020
  2413  0009FE  0E1A               	movlw	26
  2414  000A00  5C56               	subwf	(??_efgtoa+2)^0,w,c
  2415  000A02  A0D8               	btfss	status,0,c
  2416  000A04  EF06  F005         	goto	u4021
  2417  000A08  EF09  F005         	goto	u4020
  2418  000A0C                     u4021:
  2419  000A0C  0E01               	movlw	1
  2420  000A0E  EF0A  F005         	goto	u4030
  2421  000A12                     u4020:
  2422  000A12  0E00               	movlw	0
  2423  000A14                     u4030:
  2424  000A14  0100               	movlb	0	; () banked
  2425  000A16  6F64               	movwf	_efgtoa$1080& (0+255),b
  2426  000A18  6B65               	clrf	(_efgtoa$1080+1)& (0+255),b
  2427  000A1A                     
  2428                           ; BSR set to: 0
  2429  000A1A  5164               	movf	_efgtoa$1080& (0+255),w,b
  2430  000A1C  1165               	iorwf	(_efgtoa$1080+1)& (0+255),w,b
  2431  000A1E  B4D8               	btfsc	status,2,c
  2432  000A20  EF14  F005         	goto	u4041
  2433  000A24  EF16  F005         	goto	u4040
  2434  000A28                     u4041:
  2435  000A28  EF24  F005         	goto	l3404
  2436  000A2C                     u4040:
  2437  000A2C                     
  2438                           ; BSR set to: 0
  2439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2440  000A2C  0E00               	movlw	low _dbuf
  2441  000A2E  2592               	addwf	efgtoa@n& (0+255),w,b
  2442  000A30  6E01               	movwf	strcpy@dest^0,c
  2443  000A32  0E01               	movlw	high _dbuf
  2444  000A34  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2445  000A36  6E02               	movwf	(strcpy@dest+1)^0,c
  2446  000A38  0E20               	movlw	low STR_7
  2447  000A3A  6E03               	movwf	strcpy@src^0,c
  2448  000A3C  0E08               	movlw	high STR_7
  2449  000A3E  6E04               	movwf	(strcpy@src+1)^0,c
  2450  000A40  ECC3  F01A         	call	_strcpy	;wreg free
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2453  000A44  EFC6  F004         	goto	l3388
  2454  000A48                     l3404:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2458  000A48  0E00               	movlw	low _dbuf
  2459  000A4A  2592               	addwf	efgtoa@n& (0+255),w,b
  2460  000A4C  6E01               	movwf	strcpy@dest^0,c
  2461  000A4E  0E01               	movlw	high _dbuf
  2462  000A50  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2463  000A52  6E02               	movwf	(strcpy@dest+1)^0,c
  2464  000A54  0E28               	movlw	low STR_8
  2465  000A56  6E03               	movwf	strcpy@src^0,c
  2466  000A58  0E08               	movlw	high STR_8
  2467  000A5A  6E04               	movwf	(strcpy@src+1)^0,c
  2468  000A5C  ECC3  F01A         	call	_strcpy	;wreg free
  2469  000A60  EFC6  F004         	goto	l3388
  2470  000A64                     l3412:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2473  000A64  0E00               	movlw	0
  2474  000A66  0100               	movlb	0	; () banked
  2475  000A68  6F94               	movwf	efgtoa@u& (0+255),b
  2476  000A6A  0E00               	movlw	0
  2477  000A6C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2478  000A6E  0E80               	movlw	128
  2479  000A70  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2480  000A72  0E3F               	movlw	63
  2481  000A74  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2484  000A76  0E00               	movlw	0
  2485  000A78  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2486  000A7A  0E00               	movlw	0
  2487  000A7C  6F90               	movwf	efgtoa@e& (0+255),b
  2488  000A7E                     
  2489                           ; BSR set to: 0
  2490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2491  000A7E  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2492  000A82  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2493  000A86  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2494  000A8A  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2495  000A8E  0E00               	movlw	0
  2496  000A90  6E05               	movwf	___fleq@ff2^0,c
  2497  000A92  0E00               	movlw	0
  2498  000A94  6E06               	movwf	(___fleq@ff2+1)^0,c
  2499  000A96  0E00               	movlw	0
  2500  000A98  6E07               	movwf	(___fleq@ff2+2)^0,c
  2501  000A9A  0E00               	movlw	0
  2502  000A9C  6E08               	movwf	(___fleq@ff2+3)^0,c
  2503  000A9E  EC9B  F019         	call	___fleq	;wreg free
  2504  000AA2  B0D8               	btfsc	status,0,c
  2505  000AA4  EF56  F005         	goto	u4051
  2506  000AA8  EF58  F005         	goto	u4050
  2507  000AAC                     u4051:
  2508  000AAC  EFDB  F005         	goto	l3430
  2509  000AB0                     u4050:
  2510  000AB0  EF77  F005         	goto	l3422
  2511  000AB4                     l3418:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2514  000AB4  C094  F028         	movff	efgtoa@u,___flmul@b
  2515  000AB8  C095  F029         	movff	efgtoa@u+1,___flmul@b+1
  2516  000ABC  C096  F02A         	movff	efgtoa@u+2,___flmul@b+2
  2517  000AC0  C097  F02B         	movff	efgtoa@u+3,___flmul@b+3
  2518  000AC4  0E00               	movlw	0
  2519  000AC6  6E2C               	movwf	___flmul@a^0,c
  2520  000AC8  0E00               	movlw	0
  2521  000ACA  6E2D               	movwf	(___flmul@a+1)^0,c
  2522  000ACC  0E20               	movlw	32
  2523  000ACE  6E2E               	movwf	(___flmul@a+2)^0,c
  2524  000AD0  0E41               	movlw	65
  2525  000AD2  6E2F               	movwf	(___flmul@a+3)^0,c
  2526  000AD4  ECD9  F00E         	call	___flmul	;wreg free
  2527  000AD8  C028  F094         	movff	?___flmul,efgtoa@u
  2528  000ADC  C029  F095         	movff	?___flmul+1,efgtoa@u+1
  2529  000AE0  C02A  F096         	movff	?___flmul+2,efgtoa@u+2
  2530  000AE4  C02B  F097         	movff	?___flmul+3,efgtoa@u+3
  2531  000AE8                     
  2532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2533  000AE8  0100               	movlb	0	; () banked
  2534  000AEA  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2535  000AEC  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2536  000AEE                     l3422:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2539  000AEE  C08C  F041         	movff	efgtoa@g,___flge@ff1
  2540  000AF2  C08D  F042         	movff	efgtoa@g+1,___flge@ff1+1
  2541  000AF6  C08E  F043         	movff	efgtoa@g+2,___flge@ff1+2
  2542  000AFA  C08F  F044         	movff	efgtoa@g+3,___flge@ff1+3
  2543  000AFE  0E00               	movlw	0
  2544  000B00  6E2C               	movwf	___flmul@a^0,c
  2545  000B02  0E00               	movlw	0
  2546  000B04  6E2D               	movwf	(___flmul@a+1)^0,c
  2547  000B06  0E20               	movlw	32
  2548  000B08  6E2E               	movwf	(___flmul@a+2)^0,c
  2549  000B0A  0E41               	movlw	65
  2550  000B0C  6E2F               	movwf	(___flmul@a+3)^0,c
  2551  000B0E  C094  F028         	movff	efgtoa@u,___flmul@b
  2552  000B12  C095  F029         	movff	efgtoa@u+1,___flmul@b+1
  2553  000B16  C096  F02A         	movff	efgtoa@u+2,___flmul@b+2
  2554  000B1A  C097  F02B         	movff	efgtoa@u+3,___flmul@b+3
  2555  000B1E  ECD9  F00E         	call	___flmul	;wreg free
  2556  000B22  C028  F045         	movff	?___flmul,___flge@ff2
  2557  000B26  C029  F046         	movff	?___flmul+1,___flge@ff2+1
  2558  000B2A  C02A  F047         	movff	?___flmul+2,___flge@ff2+2
  2559  000B2E  C02B  F048         	movff	?___flmul+3,___flge@ff2+3
  2560  000B32  ECAD  F016         	call	___flge	;wreg free
  2561  000B36  B0D8               	btfsc	status,0,c
  2562  000B38  EFA0  F005         	goto	u4061
  2563  000B3C  EFA2  F005         	goto	u4060
  2564  000B40                     u4061:
  2565  000B40  EF5A  F005         	goto	l3418
  2566  000B44                     u4060:
  2567  000B44  EFC2  F005         	goto	l3428
  2568  000B48                     l3424:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2571  000B48  C094  F00F         	movff	efgtoa@u,___fldiv@b
  2572  000B4C  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  2573  000B50  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  2574  000B54  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  2575  000B58  0E00               	movlw	0
  2576  000B5A  6E13               	movwf	___fldiv@a^0,c
  2577  000B5C  0E00               	movlw	0
  2578  000B5E  6E14               	movwf	(___fldiv@a+1)^0,c
  2579  000B60  0E20               	movlw	32
  2580  000B62  6E15               	movwf	(___fldiv@a+2)^0,c
  2581  000B64  0E41               	movlw	65
  2582  000B66  6E16               	movwf	(___fldiv@a+3)^0,c
  2583  000B68  ECEE  F010         	call	___fldiv	;wreg free
  2584  000B6C  C00F  F094         	movff	?___fldiv,efgtoa@u
  2585  000B70  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  2586  000B74  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  2587  000B78  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  2588  000B7C                     
  2589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2590  000B7C  0100               	movlb	0	; () banked
  2591  000B7E  0790               	decf	efgtoa@e& (0+255),f,b
  2592  000B80  A0D8               	btfss	status,0,c
  2593  000B82  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2594  000B84                     l3428:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2597  000B84  C08C  F041         	movff	efgtoa@g,___flge@ff1
  2598  000B88  C08D  F042         	movff	efgtoa@g+1,___flge@ff1+1
  2599  000B8C  C08E  F043         	movff	efgtoa@g+2,___flge@ff1+2
  2600  000B90  C08F  F044         	movff	efgtoa@g+3,___flge@ff1+3
  2601  000B94  C094  F045         	movff	efgtoa@u,___flge@ff2
  2602  000B98  C095  F046         	movff	efgtoa@u+1,___flge@ff2+1
  2603  000B9C  C096  F047         	movff	efgtoa@u+2,___flge@ff2+2
  2604  000BA0  C097  F048         	movff	efgtoa@u+3,___flge@ff2+3
  2605  000BA4  ECAD  F016         	call	___flge	;wreg free
  2606  000BA8  A0D8               	btfss	status,0,c
  2607  000BAA  EFD9  F005         	goto	u4071
  2608  000BAE  EFDB  F005         	goto	u4070
  2609  000BB2                     u4071:
  2610  000BB2  EFA4  F005         	goto	l3424
  2611  000BB6                     u4070:
  2612  000BB6                     l3430:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2615  000BB6  C053  F007         	movff	efgtoa@c,tolower@c
  2616  000BBA  6A08               	clrf	(tolower@c+1)^0,c
  2617  000BBC  EC93  F01A         	call	_tolower	;wreg free
  2618  000BC0  5007               	movf	?_tolower^0,w,c
  2619  000BC2  0100               	movlb	0	; () banked
  2620  000BC4  6F81               	movwf	efgtoa@mode& (0+255),b
  2621  000BC6                     
  2622                           ; BSR set to: 0
  2623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2624  000BC6  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  2625  000BCA                     
  2626                           ; BSR set to: 0
  2627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2628  000BCA  0E67               	movlw	103
  2629  000BCC  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2630  000BCE  A4D8               	btfss	status,2,c
  2631  000BD0  EFEC  F005         	goto	u4081
  2632  000BD4  EFEE  F005         	goto	u4080
  2633  000BD8                     u4081:
  2634  000BD8  EF14  F006         	goto	l3444
  2635  000BDC                     u4080:
  2636  000BDC                     
  2637                           ; BSR set to: 0
  2638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2639  000BDC  51D4               	movf	_prec& (0+255),w,b
  2640  000BDE  11D5               	iorwf	(_prec+1)& (0+255),w,b
  2641  000BE0  A4D8               	btfss	status,2,c
  2642  000BE2  EFF5  F005         	goto	u4091
  2643  000BE6  EFF7  F005         	goto	u4090
  2644  000BEA                     u4091:
  2645  000BEA  EFFB  F005         	goto	l3440
  2646  000BEE                     u4090:
  2647  000BEE                     
  2648                           ; BSR set to: 0
  2649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2650  000BEE  0E00               	movlw	0
  2651  000BF0  6FD5               	movwf	(_prec+1)& (0+255),b
  2652  000BF2  0E01               	movlw	1
  2653  000BF4  6FD4               	movwf	_prec& (0+255),b
  2654  000BF6                     l3440:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2658  000BF6  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  2659  000BF8  EF08  F006         	goto	u4100
  2660  000BFC  51D5               	movf	(_prec+1)& (0+255),w,b
  2661  000BFE  E106               	bnz	u4101
  2662  000C00  05D4               	decf	_prec& (0+255),w,b
  2663  000C02  B0D8               	btfsc	status,0,c
  2664  000C04  EF06  F006         	goto	u4101
  2665  000C08  EF08  F006         	goto	u4100
  2666  000C0C                     u4101:
  2667  000C0C  EF0E  F006         	goto	l892
  2668  000C10                     u4100:
  2669  000C10                     l3442:
  2670                           
  2671                           ; BSR set to: 0
  2672  000C10  0E00               	movlw	0
  2673  000C12  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2674  000C14  0E06               	movlw	6
  2675  000C16  6F7C               	movwf	efgtoa@p& (0+255),b
  2676  000C18  EF1D  F006         	goto	l3450
  2677  000C1C                     l892:
  2678                           
  2679                           ; BSR set to: 0
  2680  000C1C  C0D4  F07C         	movff	_prec,efgtoa@p
  2681  000C20  C0D5  F07D         	movff	_prec+1,efgtoa@p+1
  2682  000C24  EF1D  F006         	goto	l3450
  2683  000C28                     l3444:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2687  000C28  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  2688  000C2A  EF19  F006         	goto	u4111
  2689  000C2E  EF1B  F006         	goto	u4110
  2690  000C32                     u4111:
  2691  000C32  EF08  F006         	goto	l3442
  2692  000C36                     u4110:
  2693  000C36  EF0E  F006         	goto	l892
  2694  000C3A                     l3450:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2698  000C3A  0E67               	movlw	103
  2699  000C3C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2700  000C3E  A4D8               	btfss	status,2,c
  2701  000C40  EF24  F006         	goto	u4121
  2702  000C44  EF26  F006         	goto	u4120
  2703  000C48                     u4121:
  2704  000C48  EF55  F006         	goto	l3460
  2705  000C4C                     u4120:
  2706  000C4C                     
  2707                           ; BSR set to: 0
  2708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2709  000C4C  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2710  000C4E  EF34  F006         	goto	u4130
  2711  000C52  0EFC               	movlw	252
  2712  000C54  5D90               	subwf	efgtoa@e& (0+255),w,b
  2713  000C56  0EFF               	movlw	255
  2714  000C58  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2715  000C5A  A0D8               	btfss	status,0,c
  2716  000C5C  EF32  F006         	goto	u4131
  2717  000C60  EF34  F006         	goto	u4130
  2718  000C64                     u4131:
  2719  000C64  EF53  F006         	goto	l3458
  2720  000C68                     u4130:
  2721  000C68                     
  2722                           ; BSR set to: 0
  2723  000C68  0EFF               	movlw	255
  2724  000C6A  6E54               	movwf	??_efgtoa^0,c
  2725  000C6C  0EFF               	movlw	255
  2726  000C6E  6E55               	movwf	(??_efgtoa+1)^0,c
  2727  000C70  C07C  F056         	movff	efgtoa@p,??_efgtoa+2
  2728  000C74  C07D  F057         	movff	efgtoa@p+1,??_efgtoa+3
  2729  000C78  5054               	movf	??_efgtoa^0,w,c
  2730  000C7A  2656               	addwf	(??_efgtoa+2)^0,f,c
  2731  000C7C  5055               	movf	(??_efgtoa+1)^0,w,c
  2732  000C7E  2257               	addwfc	(??_efgtoa+3)^0,f,c
  2733  000C80  5190               	movf	efgtoa@e& (0+255),w,b
  2734  000C82  5C56               	subwf	(??_efgtoa+2)^0,w,c
  2735  000C84  5057               	movf	(??_efgtoa+3)^0,w,c
  2736  000C86  0A80               	xorlw	128
  2737  000C88  6E58               	movwf	(??_efgtoa+4)^0,c
  2738  000C8A  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2739  000C8C  0A80               	xorlw	128
  2740  000C8E  5858               	subwfb	(??_efgtoa+4)^0,w,c
  2741  000C90  A0D8               	btfss	status,0,c
  2742  000C92  EF4D  F006         	goto	u4141
  2743  000C96  EF4F  F006         	goto	u4140
  2744  000C9A                     u4141:
  2745  000C9A  EF53  F006         	goto	l3458
  2746  000C9E                     u4140:
  2747  000C9E                     
  2748                           ; BSR set to: 0
  2749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2750  000C9E  0E66               	movlw	102
  2751  000CA0  6F80               	movwf	efgtoa@nmode& (0+255),b
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2754  000CA2  EF55  F006         	goto	l3460
  2755  000CA6                     l3458:
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2759  000CA6  0E65               	movlw	101
  2760  000CA8  6F80               	movwf	efgtoa@nmode& (0+255),b
  2761  000CAA                     l3460:
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2765  000CAA  C07C  F072         	movff	efgtoa@p,efgtoa@m
  2766  000CAE  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  2767  000CB2                     
  2768                           ; BSR set to: 0
  2769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2770  000CB2  0E67               	movlw	103
  2771  000CB4  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2772  000CB6  A4D8               	btfss	status,2,c
  2773  000CB8  EF60  F006         	goto	u4151
  2774  000CBC  EF62  F006         	goto	u4150
  2775  000CC0                     u4151:
  2776  000CC0  EF72  F006         	goto	l3468
  2777  000CC4                     u4150:
  2778  000CC4                     
  2779                           ; BSR set to: 0
  2780  000CC4  0E66               	movlw	102
  2781  000CC6  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  2782  000CC8  A4D8               	btfss	status,2,c
  2783  000CCA  EF69  F006         	goto	u4161
  2784  000CCE  EF6B  F006         	goto	u4160
  2785  000CD2                     u4161:
  2786  000CD2  EF74  F006         	goto	l3470
  2787  000CD6                     u4160:
  2788  000CD6                     
  2789                           ; BSR set to: 0
  2790  000CD6  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2791  000CD8  EF72  F006         	goto	u4170
  2792  000CDC  EF70  F006         	goto	u4171
  2793  000CE0                     u4171:
  2794  000CE0  EF74  F006         	goto	l3470
  2795  000CE4                     u4170:
  2796  000CE4                     l3468:
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2800  000CE4  4B72               	infsnz	efgtoa@m& (0+255),f,b
  2801  000CE6  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  2802  000CE8                     l3470:
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2806  000CE8  0E66               	movlw	102
  2807  000CEA  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  2808  000CEC  A4D8               	btfss	status,2,c
  2809  000CEE  EF7B  F006         	goto	u4181
  2810  000CF2  EF7D  F006         	goto	u4180
  2811  000CF6                     u4181:
  2812  000CF6  EF9D  F006         	goto	l3480
  2813  000CFA                     u4180:
  2814  000CFA                     
  2815                           ; BSR set to: 0
  2816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2817  000CFA  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2818  000CFC  EF84  F006         	goto	u4190
  2819  000D00  EF82  F006         	goto	u4191
  2820  000D04                     u4191:
  2821  000D04  EF90  F006         	goto	l3476
  2822  000D08                     u4190:
  2823  000D08                     
  2824                           ; BSR set to: 0
  2825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2826  000D08  0E00               	movlw	0
  2827  000D0A  6F94               	movwf	efgtoa@u& (0+255),b
  2828  000D0C  0E00               	movlw	0
  2829  000D0E  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2830  000D10  0E80               	movlw	128
  2831  000D12  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2832  000D14  0E3F               	movlw	63
  2833  000D16  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  2836  000D18  0E00               	movlw	0
  2837  000D1A  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2838  000D1C  0E00               	movlw	0
  2839  000D1E  6F90               	movwf	efgtoa@e& (0+255),b
  2840  000D20                     l3476:
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  2844  000D20  0E67               	movlw	103
  2845  000D22  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2846  000D24  B4D8               	btfsc	status,2,c
  2847  000D26  EF97  F006         	goto	u4201
  2848  000D2A  EF99  F006         	goto	u4200
  2849  000D2E                     u4201:
  2850  000D2E  EF9D  F006         	goto	l3480
  2851  000D32                     u4200:
  2852  000D32                     
  2853                           ; BSR set to: 0
  2854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  2855  000D32  5190               	movf	efgtoa@e& (0+255),w,b
  2856  000D34  2772               	addwf	efgtoa@m& (0+255),f,b
  2857  000D36  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2858  000D38  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2859  000D3A                     l3480:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  2863  000D3A  0E00               	movlw	0
  2864  000D3C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2865  000D3E  0E00               	movlw	0
  2866  000D40  6F8A               	movwf	efgtoa@i& (0+255),b
  2867  000D42                     
  2868                           ; BSR set to: 0
  2869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  2870  000D42  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2871  000D46  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2872  000D4A  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2873  000D4E  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2874  000D52                     
  2875                           ; BSR set to: 0
  2876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  2877  000D52  C094  F074         	movff	efgtoa@u,efgtoa@ou
  2878  000D56  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  2879  000D5A  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  2880  000D5E  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  2881                           
  2882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2883  000D62  EF2E  F007         	goto	l3494
  2884  000D66                     l3486:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  2888  000D66  C082  F00F         	movff	efgtoa@h,___fldiv@b
  2889  000D6A  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  2890  000D6E  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  2891  000D72  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  2892  000D76  C094  F013         	movff	efgtoa@u,___fldiv@a
  2893  000D7A  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  2894  000D7E  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  2895  000D82  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  2896  000D86  ECEE  F010         	call	___fldiv	;wreg free
  2897  000D8A  C00F  F028         	movff	?___fldiv,floorf@x
  2898  000D8E  C010  F029         	movff	?___fldiv+1,floorf@x+1
  2899  000D92  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  2900  000D96  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  2901  000D9A  ECBB  F012         	call	_floorf	;wreg free
  2902  000D9E  C028  F086         	movff	?_floorf,efgtoa@l
  2903  000DA2  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  2904  000DA6  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  2905  000DAA  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  2908  000DAE  C086  F041         	movff	efgtoa@l,___fltol@f1
  2909  000DB2  C087  F042         	movff	efgtoa@l+1,___fltol@f1+1
  2910  000DB6  C088  F043         	movff	efgtoa@l+2,___fltol@f1+2
  2911  000DBA  C089  F044         	movff	efgtoa@l+3,___fltol@f1+3
  2912  000DBE  EC2A  F016         	call	___fltol	;wreg free
  2913  000DC2  C041  F078         	movff	?___fltol,efgtoa@d
  2914  000DC6  C042  F079         	movff	?___fltol+1,efgtoa@d+1
  2915  000DCA                     
  2916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  2917  000DCA  C082  F041         	movff	efgtoa@h,___flsub@b
  2918  000DCE  C083  F042         	movff	efgtoa@h+1,___flsub@b+1
  2919  000DD2  C084  F043         	movff	efgtoa@h+2,___flsub@b+2
  2920  000DD6  C085  F044         	movff	efgtoa@h+3,___flsub@b+3
  2921  000DDA  C094  F02C         	movff	efgtoa@u,___flmul@a
  2922  000DDE  C095  F02D         	movff	efgtoa@u+1,___flmul@a+1
  2923  000DE2  C096  F02E         	movff	efgtoa@u+2,___flmul@a+2
  2924  000DE6  C097  F02F         	movff	efgtoa@u+3,___flmul@a+3
  2925  000DEA  C086  F028         	movff	efgtoa@l,___flmul@b
  2926  000DEE  C087  F029         	movff	efgtoa@l+1,___flmul@b+1
  2927  000DF2  C088  F02A         	movff	efgtoa@l+2,___flmul@b+2
  2928  000DF6  C089  F02B         	movff	efgtoa@l+3,___flmul@b+3
  2929  000DFA  ECD9  F00E         	call	___flmul	;wreg free
  2930  000DFE  C028  F045         	movff	?___flmul,___flsub@a
  2931  000E02  C029  F046         	movff	?___flmul+1,___flsub@a+1
  2932  000E06  C02A  F047         	movff	?___flmul+2,___flsub@a+2
  2933  000E0A  C02B  F048         	movff	?___flmul+3,___flsub@a+3
  2934  000E0E  EC43  F01B         	call	___flsub	;wreg free
  2935  000E12  C041  F082         	movff	?___flsub,efgtoa@h
  2936  000E16  C042  F083         	movff	?___flsub+1,efgtoa@h+1
  2937  000E1A  C043  F084         	movff	?___flsub+2,efgtoa@h+2
  2938  000E1E  C044  F085         	movff	?___flsub+3,efgtoa@h+3
  2939  000E22                     
  2940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  2941  000E22  C094  F00F         	movff	efgtoa@u,___fldiv@b
  2942  000E26  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  2943  000E2A  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  2944  000E2E  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  2945  000E32  0E00               	movlw	0
  2946  000E34  6E13               	movwf	___fldiv@a^0,c
  2947  000E36  0E00               	movlw	0
  2948  000E38  6E14               	movwf	(___fldiv@a+1)^0,c
  2949  000E3A  0E20               	movlw	32
  2950  000E3C  6E15               	movwf	(___fldiv@a+2)^0,c
  2951  000E3E  0E41               	movlw	65
  2952  000E40  6E16               	movwf	(___fldiv@a+3)^0,c
  2953  000E42  ECEE  F010         	call	___fldiv	;wreg free
  2954  000E46  C00F  F094         	movff	?___fldiv,efgtoa@u
  2955  000E4A  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  2956  000E4E  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  2957  000E52  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  2958  000E56                     
  2959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  2960  000E56  0100               	movlb	0	; () banked
  2961  000E58  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  2962  000E5A  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  2963  000E5C                     l3494:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2967  000E5C  5172               	movf	efgtoa@m& (0+255),w,b
  2968  000E5E  5D8A               	subwf	efgtoa@i& (0+255),w,b
  2969  000E60  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  2970  000E62  0A80               	xorlw	128
  2971  000E64  6E54               	movwf	??_efgtoa^0,c
  2972  000E66  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  2973  000E68  0A80               	xorlw	128
  2974  000E6A  5854               	subwfb	??_efgtoa^0,w,c
  2975  000E6C  A0D8               	btfss	status,0,c
  2976  000E6E  EF3B  F007         	goto	u4211
  2977  000E72  EF3D  F007         	goto	u4210
  2978  000E76                     u4211:
  2979  000E76  EFB3  F006         	goto	l3486
  2980  000E7A                     u4210:
  2981  000E7A                     
  2982                           ; BSR set to: 0
  2983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  2984  000E7A  C094  F028         	movff	efgtoa@u,___flmul@b
  2985  000E7E  C095  F029         	movff	efgtoa@u+1,___flmul@b+1
  2986  000E82  C096  F02A         	movff	efgtoa@u+2,___flmul@b+2
  2987  000E86  C097  F02B         	movff	efgtoa@u+3,___flmul@b+3
  2988  000E8A  0E00               	movlw	0
  2989  000E8C  6E2C               	movwf	___flmul@a^0,c
  2990  000E8E  0E00               	movlw	0
  2991  000E90  6E2D               	movwf	(___flmul@a+1)^0,c
  2992  000E92  0EA0               	movlw	160
  2993  000E94  6E2E               	movwf	(___flmul@a+2)^0,c
  2994  000E96  0E40               	movlw	64
  2995  000E98  6E2F               	movwf	(___flmul@a+3)^0,c
  2996  000E9A  ECD9  F00E         	call	___flmul	;wreg free
  2997  000E9E  C028  F086         	movff	?___flmul,efgtoa@l
  2998  000EA2  C029  F087         	movff	?___flmul+1,efgtoa@l+1
  2999  000EA6  C02A  F088         	movff	?___flmul+2,efgtoa@l+2
  3000  000EAA  C02B  F089         	movff	?___flmul+3,efgtoa@l+3
  3001  000EAE                     
  3002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3003  000EAE  C082  F041         	movff	efgtoa@h,___flge@ff1
  3004  000EB2  C083  F042         	movff	efgtoa@h+1,___flge@ff1+1
  3005  000EB6  C084  F043         	movff	efgtoa@h+2,___flge@ff1+2
  3006  000EBA  C085  F044         	movff	efgtoa@h+3,___flge@ff1+3
  3007  000EBE  C086  F045         	movff	efgtoa@l,___flge@ff2
  3008  000EC2  C087  F046         	movff	efgtoa@l+1,___flge@ff2+1
  3009  000EC6  C088  F047         	movff	efgtoa@l+2,___flge@ff2+2
  3010  000ECA  C089  F048         	movff	efgtoa@l+3,___flge@ff2+3
  3011  000ECE  ECAD  F016         	call	___flge	;wreg free
  3012  000ED2  B0D8               	btfsc	status,0,c
  3013  000ED4  EF6E  F007         	goto	u4221
  3014  000ED8  EF70  F007         	goto	u4220
  3015  000EDC                     u4221:
  3016  000EDC  EF7B  F007         	goto	l3502
  3017  000EE0                     u4220:
  3018  000EE0                     
  3019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3020  000EE0  0E00               	movlw	0
  3021  000EE2  0100               	movlb	0	; () banked
  3022  000EE4  6F86               	movwf	efgtoa@l& (0+255),b
  3023  000EE6  0E00               	movlw	0
  3024  000EE8  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3025  000EEA  0E00               	movlw	0
  3026  000EEC  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3027  000EEE  0E00               	movlw	0
  3028  000EF0  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3031  000EF2  EFA4  F007         	goto	l3508
  3032  000EF6                     l3502:
  3033                           
  3034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3035  000EF6  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3036  000EFA  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3037  000EFE  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3038  000F02  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3039  000F06  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3040  000F0A  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3041  000F0E  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3042  000F12  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3043  000F16  EC9B  F019         	call	___fleq	;wreg free
  3044  000F1A  A0D8               	btfss	status,0,c
  3045  000F1C  EF92  F007         	goto	u4231
  3046  000F20  EF94  F007         	goto	u4230
  3047  000F24                     u4231:
  3048  000F24  EFA4  F007         	goto	l3508
  3049  000F28                     u4230:
  3050  000F28  0100               	movlb	0	; () banked
  3051  000F2A  B178               	btfsc	efgtoa@d& (0+255),0,b
  3052  000F2C  EF9A  F007         	goto	u4241
  3053  000F30  EF9C  F007         	goto	u4240
  3054  000F34                     u4241:
  3055  000F34  EFA4  F007         	goto	l3508
  3056  000F38                     u4240:
  3057  000F38                     
  3058                           ; BSR set to: 0
  3059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3060  000F38  0E00               	movlw	0
  3061  000F3A  6F86               	movwf	efgtoa@l& (0+255),b
  3062  000F3C  0E00               	movlw	0
  3063  000F3E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3064  000F40  0E00               	movlw	0
  3065  000F42  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3066  000F44  0E00               	movlw	0
  3067  000F46  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3068  000F48                     l3508:
  3069                           
  3070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3071  000F48  C08C  F001         	movff	efgtoa@g,___fladd@b
  3072  000F4C  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  3073  000F50  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  3074  000F54  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  3075  000F58  C086  F005         	movff	efgtoa@l,___fladd@a
  3076  000F5C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3077  000F60  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3078  000F64  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3079  000F68  EC44  F00A         	call	___fladd	;wreg free
  3080  000F6C  C001  F082         	movff	?___fladd,efgtoa@h
  3081  000F70  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3082  000F74  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3083  000F78  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3084  000F7C                     
  3085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3086  000F7C  C082  F041         	movff	efgtoa@h,___flge@ff1
  3087  000F80  C083  F042         	movff	efgtoa@h+1,___flge@ff1+1
  3088  000F84  C084  F043         	movff	efgtoa@h+2,___flge@ff1+2
  3089  000F88  C085  F044         	movff	efgtoa@h+3,___flge@ff1+3
  3090  000F8C  0E00               	movlw	0
  3091  000F8E  6E2C               	movwf	___flmul@a^0,c
  3092  000F90  0E00               	movlw	0
  3093  000F92  6E2D               	movwf	(___flmul@a+1)^0,c
  3094  000F94  0E20               	movlw	32
  3095  000F96  6E2E               	movwf	(___flmul@a+2)^0,c
  3096  000F98  0E41               	movlw	65
  3097  000F9A  6E2F               	movwf	(___flmul@a+3)^0,c
  3098  000F9C  C074  F028         	movff	efgtoa@ou,___flmul@b
  3099  000FA0  C075  F029         	movff	efgtoa@ou+1,___flmul@b+1
  3100  000FA4  C076  F02A         	movff	efgtoa@ou+2,___flmul@b+2
  3101  000FA8  C077  F02B         	movff	efgtoa@ou+3,___flmul@b+3
  3102  000FAC  ECD9  F00E         	call	___flmul	;wreg free
  3103  000FB0  C028  F045         	movff	?___flmul,___flge@ff2
  3104  000FB4  C029  F046         	movff	?___flmul+1,___flge@ff2+1
  3105  000FB8  C02A  F047         	movff	?___flmul+2,___flge@ff2+2
  3106  000FBC  C02B  F048         	movff	?___flmul+3,___flge@ff2+3
  3107  000FC0  ECAD  F016         	call	___flge	;wreg free
  3108  000FC4  A0D8               	btfss	status,0,c
  3109  000FC6  EFE7  F007         	goto	u4251
  3110  000FCA  EFE9  F007         	goto	u4250
  3111  000FCE                     u4251:
  3112  000FCE  EF12  F008         	goto	l3520
  3113  000FD2                     u4250:
  3114  000FD2                     
  3115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3116  000FD2  0100               	movlb	0	; () banked
  3117  000FD4  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3118  000FD6  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3119  000FD8                     
  3120                           ; BSR set to: 0
  3121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3122  000FD8  C074  F028         	movff	efgtoa@ou,___flmul@b
  3123  000FDC  C075  F029         	movff	efgtoa@ou+1,___flmul@b+1
  3124  000FE0  C076  F02A         	movff	efgtoa@ou+2,___flmul@b+2
  3125  000FE4  C077  F02B         	movff	efgtoa@ou+3,___flmul@b+3
  3126  000FE8  0E00               	movlw	0
  3127  000FEA  6E2C               	movwf	___flmul@a^0,c
  3128  000FEC  0E00               	movlw	0
  3129  000FEE  6E2D               	movwf	(___flmul@a+1)^0,c
  3130  000FF0  0E20               	movlw	32
  3131  000FF2  6E2E               	movwf	(___flmul@a+2)^0,c
  3132  000FF4  0E41               	movlw	65
  3133  000FF6  6E2F               	movwf	(___flmul@a+3)^0,c
  3134  000FF8  ECD9  F00E         	call	___flmul	;wreg free
  3135  000FFC  C028  F074         	movff	?___flmul,efgtoa@ou
  3136  001000  C029  F075         	movff	?___flmul+1,efgtoa@ou+1
  3137  001004  C02A  F076         	movff	?___flmul+2,efgtoa@ou+2
  3138  001008  C02B  F077         	movff	?___flmul+3,efgtoa@ou+3
  3139  00100C                     
  3140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3141  00100C  0E66               	movlw	102
  3142  00100E  0100               	movlb	0	; () banked
  3143  001010  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3144  001012  A4D8               	btfss	status,2,c
  3145  001014  EF0E  F008         	goto	u4261
  3146  001018  EF10  F008         	goto	u4260
  3147  00101C                     u4261:
  3148  00101C  EF12  F008         	goto	l3520
  3149  001020                     u4260:
  3150  001020                     
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3153  001020  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3154  001022  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3155  001024                     l3520:
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3158  001024  C074  F094         	movff	efgtoa@ou,efgtoa@u
  3159  001028  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3160  00102C  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3161  001030  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3162  001034                     
  3163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3164  001034  0E65               	movlw	101
  3165  001036  0100               	movlb	0	; () banked
  3166  001038  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3167  00103A  B4D8               	btfsc	status,2,c
  3168  00103C  EF22  F008         	goto	u4271
  3169  001040  EF24  F008         	goto	u4270
  3170  001044                     u4271:
  3171  001044  EF2A  F008         	goto	l3526
  3172  001048                     u4270:
  3173  001048                     
  3174                           ; BSR set to: 0
  3175  001048  C090  F070         	movff	efgtoa@e,efgtoa@ne
  3176  00104C  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3177  001050  EF2E  F008         	goto	l920
  3178  001054                     l3526:
  3179                           
  3180                           ; BSR set to: 0
  3181  001054  0E00               	movlw	0
  3182  001056  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  3183  001058  0E00               	movlw	0
  3184  00105A  6F70               	movwf	efgtoa@ne& (0+255),b
  3185  00105C                     l920:
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3189  00105C  0E00               	movlw	0
  3190  00105E  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3191  001060  0E00               	movlw	0
  3192  001062  6F6E               	movwf	efgtoa@pp& (0+255),b
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3195  001064  0E00               	movlw	0
  3196  001066  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  3197  001068  0E00               	movlw	0
  3198  00106A  6F6C               	movwf	efgtoa@t& (0+255),b
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3201  00106C  0E00               	movlw	0
  3202  00106E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3203  001070  0E00               	movlw	0
  3204  001072  6F8A               	movwf	efgtoa@i& (0+255),b
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3207  001074  EF29  F009         	goto	l3576
  3208  001078                     l3528:
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3212  001078  C082  F00F         	movff	efgtoa@h,___fldiv@b
  3213  00107C  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  3214  001080  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  3215  001084  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  3216  001088  C094  F013         	movff	efgtoa@u,___fldiv@a
  3217  00108C  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  3218  001090  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  3219  001094  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  3220  001098  ECEE  F010         	call	___fldiv	;wreg free
  3221  00109C  C00F  F028         	movff	?___fldiv,floorf@x
  3222  0010A0  C010  F029         	movff	?___fldiv+1,floorf@x+1
  3223  0010A4  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  3224  0010A8  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  3225  0010AC  ECBB  F012         	call	_floorf	;wreg free
  3226  0010B0  C028  F086         	movff	?_floorf,efgtoa@l
  3227  0010B4  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  3228  0010B8  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  3229  0010BC  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3232  0010C0  C086  F041         	movff	efgtoa@l,___fltol@f1
  3233  0010C4  C087  F042         	movff	efgtoa@l+1,___fltol@f1+1
  3234  0010C8  C088  F043         	movff	efgtoa@l+2,___fltol@f1+2
  3235  0010CC  C089  F044         	movff	efgtoa@l+3,___fltol@f1+3
  3236  0010D0  EC2A  F016         	call	___fltol	;wreg free
  3237  0010D4  C041  F078         	movff	?___fltol,efgtoa@d
  3238  0010D8  C042  F079         	movff	?___fltol+1,efgtoa@d+1
  3239  0010DC                     
  3240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3241  0010DC  0100               	movlb	0	; () banked
  3242  0010DE  B9D6               	btfsc	_flags& (0+255),4,b
  3243  0010E0  EF74  F008         	goto	u4281
  3244  0010E4  EF76  F008         	goto	u4280
  3245  0010E8                     u4281:
  3246  0010E8  EF93  F008         	goto	l3540
  3247  0010EC                     u4280:
  3248  0010EC                     
  3249                           ; BSR set to: 0
  3250  0010EC  5178               	movf	efgtoa@d& (0+255),w,b
  3251  0010EE  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3252  0010F0  A4D8               	btfss	status,2,c
  3253  0010F2  EF7D  F008         	goto	u4291
  3254  0010F6  EF7F  F008         	goto	u4290
  3255  0010FA                     u4291:
  3256  0010FA  EF93  F008         	goto	l3540
  3257  0010FE                     u4290:
  3258  0010FE                     
  3259                           ; BSR set to: 0
  3260  0010FE  0E67               	movlw	103
  3261  001100  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3262  001102  A4D8               	btfss	status,2,c
  3263  001104  EF86  F008         	goto	u4301
  3264  001108  EF88  F008         	goto	u4300
  3265  00110C                     u4301:
  3266  00110C  EF93  F008         	goto	l3540
  3267  001110                     u4300:
  3268  001110                     
  3269                           ; BSR set to: 0
  3270  001110  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3271  001112  EF8F  F008         	goto	u4310
  3272  001116  EF8D  F008         	goto	u4311
  3273  00111A                     u4311:
  3274  00111A  EF93  F008         	goto	l3540
  3275  00111E                     u4310:
  3276  00111E                     
  3277                           ; BSR set to: 0
  3278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3279  00111E  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  3280  001120  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  3281                           
  3282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3283  001122  EFDD  F008         	goto	l3568
  3284  001126                     l3540:
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3288  001126  516E               	movf	efgtoa@pp& (0+255),w,b
  3289  001128  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3290  00112A  A4D8               	btfss	status,2,c
  3291  00112C  EF9A  F008         	goto	u4321
  3292  001130  EF9C  F008         	goto	u4320
  3293  001134                     u4321:
  3294  001134  EFC6  F008         	goto	l3560
  3295  001138                     u4320:
  3296  001138                     
  3297                           ; BSR set to: 0
  3298  001138  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3299  00113A  EFA3  F008         	goto	u4330
  3300  00113E  EFA1  F008         	goto	u4331
  3301  001142                     u4331:
  3302  001142  EFC6  F008         	goto	l3560
  3303  001146                     u4330:
  3304  001146                     
  3305                           ; BSR set to: 0
  3306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3307  001146  0E00               	movlw	low _dbuf
  3308  001148  2592               	addwf	efgtoa@n& (0+255),w,b
  3309  00114A  6ED9               	movwf	fsr2l,c
  3310  00114C  0E01               	movlw	high _dbuf
  3311  00114E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3312  001150  6EDA               	movwf	fsr2h,c
  3313  001152  0E2E               	movlw	46
  3314  001154  6EDF               	movwf	indf2,c
  3315  001156                     
  3316                           ; BSR set to: 0
  3317  001156  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3318  001158  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3319  00115A                     
  3320                           ; BSR set to: 0
  3321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3322  00115A  077E               	decf	efgtoa@w& (0+255),f,b
  3323  00115C  A0D8               	btfss	status,0,c
  3324  00115E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3325  001160                     
  3326                           ; BSR set to: 0
  3327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3328  001160  0E00               	movlw	0
  3329  001162  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3330  001164  0E01               	movlw	1
  3331  001166  6F6E               	movwf	efgtoa@pp& (0+255),b
  3332  001168  EFC6  F008         	goto	l3560
  3333  00116C                     l3552:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3337  00116C  0E00               	movlw	low _dbuf
  3338  00116E  2592               	addwf	efgtoa@n& (0+255),w,b
  3339  001170  6ED9               	movwf	fsr2l,c
  3340  001172  0E01               	movlw	high _dbuf
  3341  001174  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3342  001176  6EDA               	movwf	fsr2h,c
  3343  001178  0E30               	movlw	48
  3344  00117A  6EDF               	movwf	indf2,c
  3345  00117C                     
  3346                           ; BSR set to: 0
  3347  00117C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3348  00117E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3349  001180                     
  3350                           ; BSR set to: 0
  3351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3352  001180  077E               	decf	efgtoa@w& (0+255),f,b
  3353  001182  A0D8               	btfss	status,0,c
  3354  001184  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3355  001186                     
  3356                           ; BSR set to: 0
  3357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3358  001186  076C               	decf	efgtoa@t& (0+255),f,b
  3359  001188  A0D8               	btfss	status,0,c
  3360  00118A  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  3361  00118C                     l3560:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3365  00118C  516C               	movf	efgtoa@t& (0+255),w,b
  3366  00118E  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3367  001190  A4D8               	btfss	status,2,c
  3368  001192  EFCD  F008         	goto	u4341
  3369  001196  EFCF  F008         	goto	u4340
  3370  00119A                     u4341:
  3371  00119A  EFB6  F008         	goto	l3552
  3372  00119E                     u4340:
  3373  00119E                     
  3374                           ; BSR set to: 0
  3375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3376  00119E  0E00               	movlw	low _dbuf
  3377  0011A0  2592               	addwf	efgtoa@n& (0+255),w,b
  3378  0011A2  6ED9               	movwf	fsr2l,c
  3379  0011A4  0E01               	movlw	high _dbuf
  3380  0011A6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3381  0011A8  6EDA               	movwf	fsr2h,c
  3382  0011AA  5178               	movf	efgtoa@d& (0+255),w,b
  3383  0011AC  0F30               	addlw	48
  3384  0011AE  6EDF               	movwf	indf2,c
  3385  0011B0                     
  3386                           ; BSR set to: 0
  3387  0011B0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3388  0011B2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3389  0011B4                     
  3390                           ; BSR set to: 0
  3391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3392  0011B4  077E               	decf	efgtoa@w& (0+255),f,b
  3393  0011B6  A0D8               	btfss	status,0,c
  3394  0011B8  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3395  0011BA                     l3568:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3399  0011BA  C082  F041         	movff	efgtoa@h,___flsub@b
  3400  0011BE  C083  F042         	movff	efgtoa@h+1,___flsub@b+1
  3401  0011C2  C084  F043         	movff	efgtoa@h+2,___flsub@b+2
  3402  0011C6  C085  F044         	movff	efgtoa@h+3,___flsub@b+3
  3403  0011CA  C094  F02C         	movff	efgtoa@u,___flmul@a
  3404  0011CE  C095  F02D         	movff	efgtoa@u+1,___flmul@a+1
  3405  0011D2  C096  F02E         	movff	efgtoa@u+2,___flmul@a+2
  3406  0011D6  C097  F02F         	movff	efgtoa@u+3,___flmul@a+3
  3407  0011DA  C086  F028         	movff	efgtoa@l,___flmul@b
  3408  0011DE  C087  F029         	movff	efgtoa@l+1,___flmul@b+1
  3409  0011E2  C088  F02A         	movff	efgtoa@l+2,___flmul@b+2
  3410  0011E6  C089  F02B         	movff	efgtoa@l+3,___flmul@b+3
  3411  0011EA  ECD9  F00E         	call	___flmul	;wreg free
  3412  0011EE  C028  F045         	movff	?___flmul,___flsub@a
  3413  0011F2  C029  F046         	movff	?___flmul+1,___flsub@a+1
  3414  0011F6  C02A  F047         	movff	?___flmul+2,___flsub@a+2
  3415  0011FA  C02B  F048         	movff	?___flmul+3,___flsub@a+3
  3416  0011FE  EC43  F01B         	call	___flsub	;wreg free
  3417  001202  C041  F082         	movff	?___flsub,efgtoa@h
  3418  001206  C042  F083         	movff	?___flsub+1,efgtoa@h+1
  3419  00120A  C043  F084         	movff	?___flsub+2,efgtoa@h+2
  3420  00120E  C044  F085         	movff	?___flsub+3,efgtoa@h+3
  3421  001212                     
  3422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3423  001212  C094  F00F         	movff	efgtoa@u,___fldiv@b
  3424  001216  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3425  00121A  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3426  00121E  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3427  001222  0E00               	movlw	0
  3428  001224  6E13               	movwf	___fldiv@a^0,c
  3429  001226  0E00               	movlw	0
  3430  001228  6E14               	movwf	(___fldiv@a+1)^0,c
  3431  00122A  0E20               	movlw	32
  3432  00122C  6E15               	movwf	(___fldiv@a+2)^0,c
  3433  00122E  0E41               	movlw	65
  3434  001230  6E16               	movwf	(___fldiv@a+3)^0,c
  3435  001232  ECEE  F010         	call	___fldiv	;wreg free
  3436  001236  C00F  F094         	movff	?___fldiv,efgtoa@u
  3437  00123A  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  3438  00123E  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  3439  001242  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  3440  001246                     
  3441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3442  001246  0100               	movlb	0	; () banked
  3443  001248  0770               	decf	efgtoa@ne& (0+255),f,b
  3444  00124A  A0D8               	btfss	status,0,c
  3445  00124C  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  3446  00124E                     
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3449  00124E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3450  001250  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3451  001252                     l3576:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3455  001252  5172               	movf	efgtoa@m& (0+255),w,b
  3456  001254  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3457  001256  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3458  001258  0A80               	xorlw	128
  3459  00125A  6E54               	movwf	??_efgtoa^0,c
  3460  00125C  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3461  00125E  0A80               	xorlw	128
  3462  001260  5854               	subwfb	??_efgtoa^0,w,c
  3463  001262  B0D8               	btfsc	status,0,c
  3464  001264  EF36  F009         	goto	u4351
  3465  001268  EF38  F009         	goto	u4350
  3466  00126C                     u4351:
  3467  00126C  EF46  F009         	goto	l3580
  3468  001270                     u4350:
  3469  001270                     
  3470                           ; BSR set to: 0
  3471  001270  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3472  001272  EF44  F009         	goto	u4361
  3473  001276  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3474  001278  E109               	bnz	u4360
  3475  00127A  0E4B               	movlw	75
  3476  00127C  5D92               	subwf	efgtoa@n& (0+255),w,b
  3477  00127E  A0D8               	btfss	status,0,c
  3478  001280  EF44  F009         	goto	u4361
  3479  001284  EF46  F009         	goto	u4360
  3480  001288                     u4361:
  3481  001288  EF3C  F008         	goto	l3528
  3482  00128C                     u4360:
  3483  00128C                     l3580:
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3487  00128C  516E               	movf	efgtoa@pp& (0+255),w,b
  3488  00128E  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3489  001290  A4D8               	btfss	status,2,c
  3490  001292  EF4D  F009         	goto	u4371
  3491  001296  EF4F  F009         	goto	u4370
  3492  00129A                     u4371:
  3493  00129A  EF60  F009         	goto	l3588
  3494  00129E                     u4370:
  3495  00129E                     
  3496                           ; BSR set to: 0
  3497  00129E  A9D6               	btfss	_flags& (0+255),4,b
  3498  0012A0  EF54  F009         	goto	u4381
  3499  0012A4  EF56  F009         	goto	u4380
  3500  0012A8                     u4381:
  3501  0012A8  EF60  F009         	goto	l3588
  3502  0012AC                     u4380:
  3503  0012AC                     
  3504                           ; BSR set to: 0
  3505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3506  0012AC  0E00               	movlw	low _dbuf
  3507  0012AE  2592               	addwf	efgtoa@n& (0+255),w,b
  3508  0012B0  6ED9               	movwf	fsr2l,c
  3509  0012B2  0E01               	movlw	high _dbuf
  3510  0012B4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3511  0012B6  6EDA               	movwf	fsr2h,c
  3512  0012B8  0E2E               	movlw	46
  3513  0012BA  6EDF               	movwf	indf2,c
  3514  0012BC                     
  3515                           ; BSR set to: 0
  3516  0012BC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3517  0012BE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3518  0012C0                     l3588:
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3522  0012C0  0E00               	movlw	low _dbuf
  3523  0012C2  2592               	addwf	efgtoa@n& (0+255),w,b
  3524  0012C4  6ED9               	movwf	fsr2l,c
  3525  0012C6  0E01               	movlw	high _dbuf
  3526  0012C8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3527  0012CA  6EDA               	movwf	fsr2h,c
  3528  0012CC  0E00               	movlw	0
  3529  0012CE  6EDF               	movwf	indf2,c
  3530  0012D0                     
  3531                           ; BSR set to: 0
  3532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3533  0012D0  0E65               	movlw	101
  3534  0012D2  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3535  0012D4  A4D8               	btfss	status,2,c
  3536  0012D6  EF6F  F009         	goto	u4391
  3537  0012DA  EF71  F009         	goto	u4390
  3538  0012DE                     u4391:
  3539  0012DE  EFCB  F004         	goto	l3390
  3540  0012E2                     u4390:
  3541  0012E2                     
  3542                           ; BSR set to: 0
  3543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3544  0012E2  0E00               	movlw	0
  3545  0012E4  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3546  0012E6  0E4F               	movlw	79
  3547  0012E8  6F8A               	movwf	efgtoa@i& (0+255),b
  3548  0012EA                     
  3549                           ; BSR set to: 0
  3550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3551  0012EA  0E00               	movlw	low _dbuf
  3552  0012EC  258A               	addwf	efgtoa@i& (0+255),w,b
  3553  0012EE  6ED9               	movwf	fsr2l,c
  3554  0012F0  0E01               	movlw	high _dbuf
  3555  0012F2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3556  0012F4  6EDA               	movwf	fsr2h,c
  3557  0012F6  0E00               	movlw	0
  3558  0012F8  6EDF               	movwf	indf2,c
  3559  0012FA                     
  3560                           ; BSR set to: 0
  3561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3562  0012FA  0E00               	movlw	0
  3563  0012FC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3564  0012FE  0E00               	movlw	0
  3565  001300  6F7A               	movwf	efgtoa@sign& (0+255),b
  3566  001302                     
  3567                           ; BSR set to: 0
  3568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3569  001302  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3570  001304  EF88  F009         	goto	u4400
  3571  001308  EF86  F009         	goto	u4401
  3572  00130C                     u4401:
  3573  00130C  EF90  F009         	goto	l3604
  3574  001310                     u4400:
  3575  001310                     
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3578  001310  0E00               	movlw	0
  3579  001312  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3580  001314  0E01               	movlw	1
  3581  001316  6F7A               	movwf	efgtoa@sign& (0+255),b
  3582  001318                     
  3583                           ; BSR set to: 0
  3584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3585  001318  6D90               	negf	efgtoa@e& (0+255),b
  3586  00131A  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3587  00131C  B0D8               	btfsc	status,0,c
  3588  00131E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3589  001320                     l3604:
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3593  001320  0E00               	movlw	0
  3594  001322  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3595  001324  0E02               	movlw	2
  3596  001326  6F7C               	movwf	efgtoa@p& (0+255),b
  3597                           
  3598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3599  001328  EFC1  F009         	goto	l3616
  3600  00132C                     l3606:
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3604  00132C  078A               	decf	efgtoa@i& (0+255),f,b
  3605  00132E  A0D8               	btfss	status,0,c
  3606  001330  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3607  001332                     
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3610  001332  0E00               	movlw	low _dbuf
  3611  001334  258A               	addwf	efgtoa@i& (0+255),w,b
  3612  001336  6ED9               	movwf	fsr2l,c
  3613  001338  0E01               	movlw	high _dbuf
  3614  00133A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3615  00133C  6EDA               	movwf	fsr2h,c
  3616  00133E  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3617  001342  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3618  001346  0E00               	movlw	0
  3619  001348  6E04               	movwf	(___awmod@divisor+1)^0,c
  3620  00134A  0E0A               	movlw	10
  3621  00134C  6E03               	movwf	___awmod@divisor^0,c
  3622  00134E  EC43  F019         	call	___awmod	;wreg free
  3623  001352  5001               	movf	?___awmod^0,w,c
  3624  001354  0F30               	addlw	48
  3625  001356  6EDF               	movwf	indf2,c
  3626  001358                     
  3627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3628  001358  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3629  00135C  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3630  001360  0E00               	movlw	0
  3631  001362  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3632  001364  0E0A               	movlw	10
  3633  001366  6E03               	movwf	___awdiv@divisor^0,c
  3634  001368  ECE1  F018         	call	___awdiv	;wreg free
  3635  00136C  C001  F090         	movff	?___awdiv,efgtoa@e
  3636  001370  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3637  001374                     
  3638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3639  001374  0100               	movlb	0	; () banked
  3640  001376  077C               	decf	efgtoa@p& (0+255),f,b
  3641  001378  A0D8               	btfss	status,0,c
  3642  00137A  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3643  00137C                     
  3644                           ; BSR set to: 0
  3645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3646  00137C  077E               	decf	efgtoa@w& (0+255),f,b
  3647  00137E  A0D8               	btfss	status,0,c
  3648  001380  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3649  001382                     l3616:
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3653  001382  5190               	movf	efgtoa@e& (0+255),w,b
  3654  001384  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3655  001386  A4D8               	btfss	status,2,c
  3656  001388  EFC8  F009         	goto	u4411
  3657  00138C  EFCA  F009         	goto	u4410
  3658  001390                     u4411:
  3659  001390  EF96  F009         	goto	l3606
  3660  001394                     u4410:
  3661  001394                     
  3662                           ; BSR set to: 0
  3663  001394  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3664  001396  EFD7  F009         	goto	u4420
  3665  00139A  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3666  00139C  E106               	bnz	u4421
  3667  00139E  057C               	decf	efgtoa@p& (0+255),w,b
  3668  0013A0  B0D8               	btfsc	status,0,c
  3669  0013A2  EFD5  F009         	goto	u4421
  3670  0013A6  EFD7  F009         	goto	u4420
  3671  0013AA                     u4421:
  3672  0013AA  EF96  F009         	goto	l3606
  3673  0013AE                     u4420:
  3674  0013AE                     
  3675                           ; BSR set to: 0
  3676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  3677  0013AE  078A               	decf	efgtoa@i& (0+255),f,b
  3678  0013B0  A0D8               	btfss	status,0,c
  3679  0013B2  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3680  0013B4                     
  3681                           ; BSR set to: 0
  3682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3683  0013B4  517A               	movf	efgtoa@sign& (0+255),w,b
  3684  0013B6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3685  0013B8  A4D8               	btfss	status,2,c
  3686  0013BA  EFE1  F009         	goto	u4431
  3687  0013BE  EFE3  F009         	goto	u4430
  3688  0013C2                     u4431:
  3689  0013C2  EFE9  F009         	goto	l3626
  3690  0013C6                     u4430:
  3691  0013C6                     
  3692                           ; BSR set to: 0
  3693  0013C6  0E00               	movlw	0
  3694  0013C8  6F67               	movwf	(_efgtoa$1084+1)& (0+255),b
  3695  0013CA  0E2B               	movlw	43
  3696  0013CC  6F66               	movwf	_efgtoa$1084& (0+255),b
  3697  0013CE  EFED  F009         	goto	l3628
  3698  0013D2                     l3626:
  3699                           
  3700                           ; BSR set to: 0
  3701  0013D2  0E00               	movlw	0
  3702  0013D4  6F67               	movwf	(_efgtoa$1084+1)& (0+255),b
  3703  0013D6  0E2D               	movlw	45
  3704  0013D8  6F66               	movwf	_efgtoa$1084& (0+255),b
  3705  0013DA                     l3628:
  3706                           
  3707                           ; BSR set to: 0
  3708  0013DA  0E00               	movlw	low _dbuf
  3709  0013DC  258A               	addwf	efgtoa@i& (0+255),w,b
  3710  0013DE  6ED9               	movwf	fsr2l,c
  3711  0013E0  0E01               	movlw	high _dbuf
  3712  0013E2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3713  0013E4  6EDA               	movwf	fsr2h,c
  3714  0013E6  C066  FFDF         	movff	_efgtoa$1084,indf2
  3715  0013EA                     
  3716                           ; BSR set to: 0
  3717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  3718  0013EA  077E               	decf	efgtoa@w& (0+255),f,b
  3719  0013EC  A0D8               	btfss	status,0,c
  3720  0013EE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3721  0013F0                     
  3722                           ; BSR set to: 0
  3723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3724  0013F0  078A               	decf	efgtoa@i& (0+255),f,b
  3725  0013F2  A0D8               	btfss	status,0,c
  3726  0013F4  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3727  0013F6                     
  3728                           ; BSR set to: 0
  3729  0013F6  0EBF               	movlw	191
  3730  0013F8  6E54               	movwf	??_efgtoa^0,c
  3731  0013FA  0EFF               	movlw	255
  3732  0013FC  6E55               	movwf	(??_efgtoa+1)^0,c
  3733  0013FE  5053               	movf	efgtoa@c^0,w,c
  3734  001400  6E56               	movwf	(??_efgtoa+2)^0,c
  3735  001402  6A57               	clrf	(??_efgtoa+3)^0,c
  3736  001404  5054               	movf	??_efgtoa^0,w,c
  3737  001406  2656               	addwf	(??_efgtoa+2)^0,f,c
  3738  001408  5055               	movf	(??_efgtoa+1)^0,w,c
  3739  00140A  2257               	addwfc	(??_efgtoa+3)^0,f,c
  3740  00140C  5057               	movf	(??_efgtoa+3)^0,w,c
  3741  00140E  E10A               	bnz	u4440
  3742  001410  0E1A               	movlw	26
  3743  001412  5C56               	subwf	(??_efgtoa+2)^0,w,c
  3744  001414  A0D8               	btfss	status,0,c
  3745  001416  EF0F  F00A         	goto	u4441
  3746  00141A  EF12  F00A         	goto	u4440
  3747  00141E                     u4441:
  3748  00141E  0E01               	movlw	1
  3749  001420  EF13  F00A         	goto	u4450
  3750  001424                     u4440:
  3751  001424  0E00               	movlw	0
  3752  001426                     u4450:
  3753  001426  6F6A               	movwf	_efgtoa$1086& (0+255),b
  3754  001428  6B6B               	clrf	(_efgtoa$1086+1)& (0+255),b
  3755  00142A                     
  3756                           ; BSR set to: 0
  3757  00142A  516A               	movf	_efgtoa$1086& (0+255),w,b
  3758  00142C  116B               	iorwf	(_efgtoa$1086+1)& (0+255),w,b
  3759  00142E  A4D8               	btfss	status,2,c
  3760  001430  EF1C  F00A         	goto	u4461
  3761  001434  EF1E  F00A         	goto	u4460
  3762  001438                     u4461:
  3763  001438  EF24  F00A         	goto	l3642
  3764  00143C                     u4460:
  3765  00143C                     
  3766                           ; BSR set to: 0
  3767  00143C  0E00               	movlw	0
  3768  00143E  6F69               	movwf	(_efgtoa$1085+1)& (0+255),b
  3769  001440  0E65               	movlw	101
  3770  001442  6F68               	movwf	_efgtoa$1085& (0+255),b
  3771  001444  EF28  F00A         	goto	l3644
  3772  001448                     l3642:
  3773                           
  3774                           ; BSR set to: 0
  3775  001448  0E00               	movlw	0
  3776  00144A  6F69               	movwf	(_efgtoa$1085+1)& (0+255),b
  3777  00144C  0E45               	movlw	69
  3778  00144E  6F68               	movwf	_efgtoa$1085& (0+255),b
  3779  001450                     l3644:
  3780                           
  3781                           ; BSR set to: 0
  3782  001450  0E00               	movlw	low _dbuf
  3783  001452  258A               	addwf	efgtoa@i& (0+255),w,b
  3784  001454  6ED9               	movwf	fsr2l,c
  3785  001456  0E01               	movlw	high _dbuf
  3786  001458  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3787  00145A  6EDA               	movwf	fsr2h,c
  3788  00145C  C068  FFDF         	movff	_efgtoa$1085,indf2
  3789  001460                     
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  3792  001460  077E               	decf	efgtoa@w& (0+255),f,b
  3793  001462  A0D8               	btfss	status,0,c
  3794  001464  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3795  001466                     
  3796                           ; BSR set to: 0
  3797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3798  001466  0E00               	movlw	low _dbuf
  3799  001468  2592               	addwf	efgtoa@n& (0+255),w,b
  3800  00146A  6E01               	movwf	strcpy@dest^0,c
  3801  00146C  0E01               	movlw	high _dbuf
  3802  00146E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3803  001470  6E02               	movwf	(strcpy@dest+1)^0,c
  3804  001472  0E00               	movlw	low _dbuf
  3805  001474  258A               	addwf	efgtoa@i& (0+255),w,b
  3806  001476  6E03               	movwf	strcpy@src^0,c
  3807  001478  0E01               	movlw	high _dbuf
  3808  00147A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3809  00147C  6E04               	movwf	(strcpy@src+1)^0,c
  3810  00147E  ECC3  F01A         	call	_strcpy	;wreg free
  3811  001482  EFCB  F004         	goto	l3390
  3812  001486                     l874:
  3813  001486  0012               	return		;funcret
  3814  001488                     __end_of_efgtoa:
  3815                           	callstack 0
  3816                           
  3817 ;; *************** function _tolower *****************
  3818 ;; Defined at:
  3819 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  c               2    6[COMRAM] int 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  2    6[COMRAM] int 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3833 ;;      Params:         2       0       0       0       0       0       0       0       0
  3834 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3835 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3836 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3837 ;;Total ram usage:        8 bytes
  3838 ;; Hardware stack levels used: 1
  3839 ;; Hardware stack levels required when called: 2
  3840 ;; This function calls:
  3841 ;;		_isupper
  3842 ;; This function is called by:
  3843 ;;		_efgtoa
  3844 ;;		_vfpfcnvrt
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text6
  3849  003526                     __ptext6:
  3850                           	callstack 0
  3851  003526                     _tolower:
  3852                           	callstack 25
  3853  003526  0EBF               	movlw	191
  3854  003528  6E09               	movwf	??_tolower^0,c
  3855  00352A  0EFF               	movlw	255
  3856  00352C  6E0A               	movwf	(??_tolower+1)^0,c
  3857  00352E  C007  F00B         	movff	tolower@c,??_tolower+2
  3858  003532  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3859  003536  5009               	movf	??_tolower^0,w,c
  3860  003538  260B               	addwf	(??_tolower+2)^0,f,c
  3861  00353A  500A               	movf	(??_tolower+1)^0,w,c
  3862  00353C  220C               	addwfc	(??_tolower+3)^0,f,c
  3863  00353E  500C               	movf	(??_tolower+3)^0,w,c
  3864  003540  E10A               	bnz	u3760
  3865  003542  0E1A               	movlw	26
  3866  003544  5C0B               	subwf	(??_tolower+2)^0,w,c
  3867  003546  A0D8               	btfss	status,0,c
  3868  003548  EFA8  F01A         	goto	u3761
  3869  00354C  EFAB  F01A         	goto	u3760
  3870  003550                     u3761:
  3871  003550  0E01               	movlw	1
  3872  003552  EFAC  F01A         	goto	u3770
  3873  003556                     u3760:
  3874  003556  0E00               	movlw	0
  3875  003558                     u3770:
  3876  003558  6E0D               	movwf	_tolower$1233^0,c
  3877  00355A  6A0E               	clrf	(_tolower$1233+1)^0,c
  3878  00355C  500D               	movf	_tolower$1233^0,w,c
  3879  00355E  100E               	iorwf	(_tolower$1233+1)^0,w,c
  3880  003560  B4D8               	btfsc	status,2,c
  3881  003562  EFB5  F01A         	goto	u3781
  3882  003566  EFB7  F01A         	goto	u3780
  3883  00356A                     u3781:
  3884  00356A  EFBE  F01A         	goto	l1104
  3885  00356E                     u3780:
  3886  00356E  0E20               	movlw	32
  3887  003570  1007               	iorwf	tolower@c^0,w,c
  3888  003572  6E07               	movwf	?_tolower^0,c
  3889  003574  5008               	movf	(tolower@c+1)^0,w,c
  3890  003576  6E08               	movwf	(?_tolower+1)^0,c
  3891  003578  EFC2  F01A         	goto	l1109
  3892  00357C                     l1104:
  3893  00357C  C007  F007         	movff	tolower@c,?_tolower
  3894  003580  C008  F008         	movff	tolower@c+1,?_tolower+1
  3895  003584                     l1109:
  3896  003584  0012               	return		;funcret
  3897  003586                     __end_of_tolower:
  3898                           	callstack 0
  3899                           
  3900 ;; *************** function _isupper *****************
  3901 ;; Defined at:
  3902 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  c               2    0[COMRAM] int 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  2    0[COMRAM] int 
  3909 ;; Registers used:
  3910 ;;		wreg, status,2, status,0
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3916 ;;      Params:         2       0       0       0       0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3918 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3919 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3920 ;;Total ram usage:        6 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 1
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_efgtoa
  3927 ;;		_vfpfcnvrt
  3928 ;;		_tolower
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text7
  3933  003754                     __ptext7:
  3934                           	callstack 0
  3935  003754                     _isupper:
  3936                           	callstack 25
  3937  003754  0EBF               	movlw	191
  3938  003756  6E03               	movwf	??_isupper^0,c
  3939  003758  0EFF               	movlw	255
  3940  00375A  6E04               	movwf	(??_isupper+1)^0,c
  3941  00375C  C001  F005         	movff	isupper@c,??_isupper+2
  3942  003760  C002  F006         	movff	isupper@c+1,??_isupper+3
  3943  003764  5003               	movf	??_isupper^0,w,c
  3944  003766  2605               	addwf	(??_isupper+2)^0,f,c
  3945  003768  5004               	movf	(??_isupper+1)^0,w,c
  3946  00376A  2206               	addwfc	(??_isupper+3)^0,f,c
  3947  00376C  5006               	movf	(??_isupper+3)^0,w,c
  3948  00376E  E10A               	bnz	u2910
  3949  003770  0E1A               	movlw	26
  3950  003772  5C05               	subwf	(??_isupper+2)^0,w,c
  3951  003774  A0D8               	btfss	status,0,c
  3952  003776  EFBF  F01B         	goto	u2911
  3953  00377A  EFC2  F01B         	goto	u2910
  3954  00377E                     u2911:
  3955  00377E  0E01               	movlw	1
  3956  003780  EFC3  F01B         	goto	u2920
  3957  003784                     u2910:
  3958  003784  0E00               	movlw	0
  3959  003786                     u2920:
  3960  003786  6E01               	movwf	?_isupper^0,c
  3961  003788  6A02               	clrf	(?_isupper+1)^0,c
  3962  00378A  0012               	return		;funcret
  3963  00378C                     __end_of_isupper:
  3964                           	callstack 0
  3965                           
  3966 ;; *************** function _strcpy *****************
  3967 ;; Defined at:
  3968 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3971 ;;		 -> dbuf(80), 
  3972 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3973 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3974 ;;		 -> dbuf(80), 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  d               2    8[COMRAM] PTR unsigned char 
  3977 ;;		 -> dbuf(80), 
  3978 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3979 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3980 ;;		 -> dbuf(80), 
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  2    0[COMRAM] PTR unsigned char 
  3983 ;; Registers used:
  3984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3990 ;;      Params:         4       0       0       0       0       0       0       0       0
  3991 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3992 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3993 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3994 ;;Total ram usage:       10 bytes
  3995 ;; Hardware stack levels used: 1
  3996 ;; Hardware stack levels required when called: 1
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_efgtoa
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text8
  4005  003586                     __ptext8:
  4006                           	callstack 0
  4007  003586                     _strcpy:
  4008                           	callstack 25
  4009  003586  C003  F007         	movff	strcpy@src,strcpy@s
  4010  00358A  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4011  00358E  C001  F009         	movff	strcpy@dest,strcpy@d
  4012  003592  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4013  003596                     l3290:
  4014  003596  5007               	movf	strcpy@s^0,w,c
  4015  003598  6E05               	movwf	??_strcpy^0,c
  4016  00359A  5008               	movf	(strcpy@s+1)^0,w,c
  4017  00359C  6E06               	movwf	(??_strcpy+1)^0,c
  4018  00359E  4A07               	infsnz	strcpy@s^0,f,c
  4019  0035A0  2A08               	incf	(strcpy@s+1)^0,f,c
  4020  0035A2  C005  FFF6         	movff	??_strcpy,tblptrl
  4021  0035A6  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4022  0035AA  6AF8               	clrf	tblptru,c
  4023  0035AC  C009  FFD9         	movff	strcpy@d,fsr2l
  4024  0035B0  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4025  0035B4  4A09               	infsnz	strcpy@d^0,f,c
  4026  0035B6  2A0A               	incf	(strcpy@d+1)^0,f,c
  4027  0035B8  0E07               	movlw	(high __ramtop+-1)
  4028  0035BA  64F7               	cpfsgt	tblptrh,c
  4029  0035BC  D003               	bra	u3747
  4030  0035BE  0008               	tblrd		*
  4031  0035C0  50F5               	movf	tablat,w,c
  4032  0035C2  D005               	bra	u3740
  4033  0035C4                     u3747:
  4034  0035C4  CFF6 FFE1          	movff	tblptrl,fsr1l
  4035  0035C8  CFF7 FFE2          	movff	tblptrh,fsr1h
  4036  0035CC  50E7               	movf	indf1,w,c
  4037  0035CE                     u3740:
  4038  0035CE  6EDF               	movwf	indf2,c
  4039  0035D0  50DF               	movf	indf2,w,c
  4040  0035D2  A4D8               	btfss	status,2,c
  4041  0035D4  EFEE  F01A         	goto	u3751
  4042  0035D8  EFF0  F01A         	goto	u3750
  4043  0035DC                     u3751:
  4044  0035DC  EFCB  F01A         	goto	l3290
  4045  0035E0                     u3750:
  4046  0035E0  0012               	return		;funcret
  4047  0035E2                     __end_of_strcpy:
  4048                           	callstack 0
  4049                           
  4050 ;; *************** function _pad *****************
  4051 ;; Defined at:
  4052 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4055 ;;		 -> sprintf@f(6), 
  4056 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4057 ;;		 -> dbuf(80), 
  4058 ;;  p               2   20[COMRAM] int 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  w               2   25[COMRAM] int 
  4061 ;;  i               2   23[COMRAM] int 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  2   16[COMRAM] int 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4071 ;;      Params:         6       0       0       0       0       0       0       0       0
  4072 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4073 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4074 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4075 ;;Total ram usage:       11 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 4
  4078 ;; This function calls:
  4079 ;;		_fputc
  4080 ;;		_fputs
  4081 ;;		_strlen
  4082 ;; This function is called by:
  4083 ;;		_efgtoa
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text9
  4088  0030FC                     __ptext9:
  4089                           	callstack 0
  4090  0030FC                     _pad:
  4091                           	callstack 22
  4092  0030FC                     
  4093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4094  0030FC  0100               	movlb	0	; () banked
  4095  0030FE  A1D6               	btfss	_flags& (0+255),0,b
  4096  003100  EF84  F018         	goto	u3631
  4097  003104  EF86  F018         	goto	u3630
  4098  003108                     u3631:
  4099  003108  EF90  F018         	goto	l3248
  4100  00310C                     u3630:
  4101  00310C                     
  4102                           ; BSR set to: 0
  4103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4104  00310C  C013  F00A         	movff	pad@buf,fputs@s
  4105  003110  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4106  003114  C011  F00C         	movff	pad@fp,fputs@fp
  4107  003118  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4108  00311C  EC66  F01B         	call	_fputs	;wreg free
  4109  003120                     l3248:
  4110                           
  4111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4112  003120  BE16               	btfsc	(pad@p+1)^0,7,c
  4113  003122  EF95  F018         	goto	u3641
  4114  003126  EF97  F018         	goto	u3640
  4115  00312A                     u3641:
  4116  00312A  EF9D  F018         	goto	l3252
  4117  00312E                     u3640:
  4118  00312E  C015  F01A         	movff	pad@p,pad@w
  4119  003132  C016  F01B         	movff	pad@p+1,pad@w+1
  4120  003136  EFA1  F018         	goto	l851
  4121  00313A                     l3252:
  4122  00313A  0E00               	movlw	0
  4123  00313C  6E1B               	movwf	(pad@w+1)^0,c
  4124  00313E  0E00               	movlw	0
  4125  003140  6E1A               	movwf	pad@w^0,c
  4126  003142                     l851:
  4127                           
  4128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4129  003142  0E00               	movlw	0
  4130  003144  6E19               	movwf	(pad@i+1)^0,c
  4131  003146  0E00               	movlw	0
  4132  003148  6E18               	movwf	pad@i^0,c
  4133                           
  4134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4135  00314A  EFB3  F018         	goto	l3258
  4136  00314E                     l3254:
  4137                           
  4138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4139  00314E  0E00               	movlw	0
  4140  003150  6E02               	movwf	(fputc@c+1)^0,c
  4141  003152  0E20               	movlw	32
  4142  003154  6E01               	movwf	fputc@c^0,c
  4143  003156  C011  F003         	movff	pad@fp,fputc@fp
  4144  00315A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4145  00315E  EC19  F018         	call	_fputc	;wreg free
  4146  003162                     
  4147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4148  003162  4A18               	infsnz	pad@i^0,f,c
  4149  003164  2A19               	incf	(pad@i+1)^0,f,c
  4150  003166                     l3258:
  4151                           
  4152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4153  003166  501A               	movf	pad@w^0,w,c
  4154  003168  5C18               	subwf	pad@i^0,w,c
  4155  00316A  5019               	movf	(pad@i+1)^0,w,c
  4156  00316C  0A80               	xorlw	128
  4157  00316E  6E17               	movwf	??_pad^0,c
  4158  003170  501B               	movf	(pad@w+1)^0,w,c
  4159  003172  0A80               	xorlw	128
  4160  003174  5817               	subwfb	??_pad^0,w,c
  4161  003176  A0D8               	btfss	status,0,c
  4162  003178  EFC0  F018         	goto	u3651
  4163  00317C  EFC2  F018         	goto	u3650
  4164  003180                     u3651:
  4165  003180  EFA7  F018         	goto	l3254
  4166  003184                     u3650:
  4167  003184                     
  4168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4169  003184  0100               	movlb	0	; () banked
  4170  003186  B1D6               	btfsc	_flags& (0+255),0,b
  4171  003188  EFC8  F018         	goto	u3661
  4172  00318C  EFCA  F018         	goto	u3660
  4173  003190                     u3661:
  4174  003190  EFD4  F018         	goto	l3262
  4175  003194                     u3660:
  4176  003194                     
  4177                           ; BSR set to: 0
  4178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4179  003194  C013  F00A         	movff	pad@buf,fputs@s
  4180  003198  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4181  00319C  C011  F00C         	movff	pad@fp,fputs@fp
  4182  0031A0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4183  0031A4  EC66  F01B         	call	_fputs	;wreg free
  4184  0031A8                     l3262:
  4185                           
  4186                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4187  0031A8  C013  F001         	movff	pad@buf,strlen@s
  4188  0031AC  C014  F002         	movff	pad@buf+1,strlen@s+1
  4189  0031B0  ECFE  F01B         	call	_strlen	;wreg free
  4190  0031B4  501A               	movf	pad@w^0,w,c
  4191  0031B6  2401               	addwf	?_strlen^0,w,c
  4192  0031B8  6E11               	movwf	?_pad^0,c
  4193  0031BA  501B               	movf	(pad@w+1)^0,w,c
  4194  0031BC  2002               	addwfc	(?_strlen+1)^0,w,c
  4195  0031BE  6E12               	movwf	(?_pad+1)^0,c
  4196  0031C0  0012               	return		;funcret
  4197  0031C2                     __end_of_pad:
  4198                           	callstack 0
  4199                           
  4200 ;; *************** function _strlen *****************
  4201 ;; Defined at:
  4202 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4205 ;;		 -> dbuf(80), 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4208 ;;		 -> dbuf(80), 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  2    0[COMRAM] unsigned int 
  4211 ;; Registers used:
  4212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4218 ;;      Params:         2       0       0       0       0       0       0       0       0
  4219 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4221 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4222 ;;Total ram usage:        4 bytes
  4223 ;; Hardware stack levels used: 1
  4224 ;; Hardware stack levels required when called: 1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_pad
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text10
  4233  0037FC                     __ptext10:
  4234                           	callstack 0
  4235  0037FC                     _strlen:
  4236                           	callstack 24
  4237  0037FC  C001  F003         	movff	strlen@s,strlen@a
  4238  003800  C002  F004         	movff	strlen@s+1,strlen@a+1
  4239  003804  EF06  F01C         	goto	l2784
  4240  003808                     l2782:
  4241  003808  4A01               	infsnz	strlen@s^0,f,c
  4242  00380A  2A02               	incf	(strlen@s+1)^0,f,c
  4243  00380C                     l2784:
  4244  00380C  C001  FFD9         	movff	strlen@s,fsr2l
  4245  003810  C002  FFDA         	movff	strlen@s+1,fsr2h
  4246  003814  50DF               	movf	indf2,w,c
  4247  003816  A4D8               	btfss	status,2,c
  4248  003818  EF10  F01C         	goto	u2901
  4249  00381C  EF12  F01C         	goto	u2900
  4250  003820                     u2901:
  4251  003820  EF04  F01C         	goto	l2782
  4252  003824                     u2900:
  4253  003824  5003               	movf	strlen@a^0,w,c
  4254  003826  5C01               	subwf	strlen@s^0,w,c
  4255  003828  6E01               	movwf	?_strlen^0,c
  4256  00382A  5004               	movf	(strlen@a+1)^0,w,c
  4257  00382C  5802               	subwfb	(strlen@s+1)^0,w,c
  4258  00382E  6E02               	movwf	(?_strlen+1)^0,c
  4259  003830  0012               	return		;funcret
  4260  003832                     __end_of_strlen:
  4261                           	callstack 0
  4262                           
  4263 ;; *************** function _fputs *****************
  4264 ;; Defined at:
  4265 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4268 ;;		 -> dbuf(80), 
  4269 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4270 ;;		 -> sprintf@f(6), 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  i               2   14[COMRAM] int 
  4273 ;;  c               1   13[COMRAM] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  2    9[COMRAM] int 
  4276 ;; Registers used:
  4277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4283 ;;      Params:         4       0       0       0       0       0       0       0       0
  4284 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4286 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4287 ;;Total ram usage:        7 bytes
  4288 ;; Hardware stack levels used: 1
  4289 ;; Hardware stack levels required when called: 3
  4290 ;; This function calls:
  4291 ;;		_fputc
  4292 ;; This function is called by:
  4293 ;;		_pad
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text11
  4298  0036CC                     __ptext11:
  4299                           	callstack 0
  4300  0036CC                     _fputs:
  4301                           	callstack 22
  4302  0036CC  0E00               	movlw	0
  4303  0036CE  6E10               	movwf	(fputs@i+1)^0,c
  4304  0036D0  0E00               	movlw	0
  4305  0036D2  6E0F               	movwf	fputs@i^0,c
  4306  0036D4  EF77  F01B         	goto	l2778
  4307  0036D8                     l2774:
  4308  0036D8  C00E  F001         	movff	fputs@c,fputc@c
  4309  0036DC  6A02               	clrf	(fputc@c+1)^0,c
  4310  0036DE  C00C  F003         	movff	fputs@fp,fputc@fp
  4311  0036E2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4312  0036E6  EC19  F018         	call	_fputc	;wreg free
  4313  0036EA  4A0F               	infsnz	fputs@i^0,f,c
  4314  0036EC  2A10               	incf	(fputs@i+1)^0,f,c
  4315  0036EE                     l2778:
  4316  0036EE  500F               	movf	fputs@i^0,w,c
  4317  0036F0  240A               	addwf	fputs@s^0,w,c
  4318  0036F2  6ED9               	movwf	fsr2l,c
  4319  0036F4  5010               	movf	(fputs@i+1)^0,w,c
  4320  0036F6  200B               	addwfc	(fputs@s+1)^0,w,c
  4321  0036F8  6EDA               	movwf	fsr2h,c
  4322  0036FA  50DF               	movf	indf2,w,c
  4323  0036FC  6E0E               	movwf	fputs@c^0,c
  4324  0036FE  500E               	movf	fputs@c^0,w,c
  4325  003700  A4D8               	btfss	status,2,c
  4326  003702  EF85  F01B         	goto	u2891
  4327  003706  EF87  F01B         	goto	u2890
  4328  00370A                     u2891:
  4329  00370A  EF6C  F01B         	goto	l2774
  4330  00370E                     u2890:
  4331  00370E  0012               	return		;funcret
  4332  003710                     __end_of_fputs:
  4333                           	callstack 0
  4334                           
  4335 ;; *************** function _fputc *****************
  4336 ;; Defined at:
  4337 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  c               2    0[COMRAM] int 
  4340 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4341 ;;		 -> sprintf@f(6), 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  2    0[COMRAM] int 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4353 ;;      Params:         4       0       0       0       0       0       0       0       0
  4354 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4355 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4356 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4357 ;;Total ram usage:        9 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; Hardware stack levels required when called: 2
  4360 ;; This function calls:
  4361 ;;		_putch
  4362 ;; This function is called by:
  4363 ;;		_pad
  4364 ;;		_vfpfcnvrt
  4365 ;;		_fputs
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text12
  4370  003032                     __ptext12:
  4371                           	callstack 0
  4372  003032                     _fputc:
  4373                           	callstack 25
  4374  003032  5003               	movf	fputc@fp^0,w,c
  4375  003034  1004               	iorwf	(fputc@fp+1)^0,w,c
  4376  003036  B4D8               	btfsc	status,2,c
  4377  003038  EF20  F018         	goto	u2461
  4378  00303C  EF22  F018         	goto	u2460
  4379  003040                     u2461:
  4380  003040  EF2B  F018         	goto	l2560
  4381  003044                     u2460:
  4382  003044  5003               	movf	fputc@fp^0,w,c
  4383  003046  1004               	iorwf	(fputc@fp+1)^0,w,c
  4384  003048  A4D8               	btfss	status,2,c
  4385  00304A  EF29  F018         	goto	u2471
  4386  00304E  EF2B  F018         	goto	u2470
  4387  003052                     u2471:
  4388  003052  EF30  F018         	goto	l2562
  4389  003056                     u2470:
  4390  003056                     l2560:
  4391  003056  5001               	movf	fputc@c^0,w,c
  4392  003058  ECAF  F01C         	call	_putch
  4393  00305C  EF7D  F018         	goto	l1067
  4394  003060                     l2562:
  4395  003060  EE20 F004          	lfsr	2,4
  4396  003064  5003               	movf	fputc@fp^0,w,c
  4397  003066  26D9               	addwf	fsr2l,f,c
  4398  003068  5004               	movf	(fputc@fp+1)^0,w,c
  4399  00306A  22DA               	addwfc	fsr2h,f,c
  4400  00306C  50DE               	movf	postinc2,w,c
  4401  00306E  10DE               	iorwf	postinc2,w,c
  4402  003070  B4D8               	btfsc	status,2,c
  4403  003072  EF3D  F018         	goto	u2481
  4404  003076  EF3F  F018         	goto	u2480
  4405  00307A                     u2481:
  4406  00307A  EF5A  F018         	goto	l2566
  4407  00307E                     u2480:
  4408  00307E  EE20 F004          	lfsr	2,4
  4409  003082  5003               	movf	fputc@fp^0,w,c
  4410  003084  26D9               	addwf	fsr2l,f,c
  4411  003086  5004               	movf	(fputc@fp+1)^0,w,c
  4412  003088  22DA               	addwfc	fsr2h,f,c
  4413  00308A  EE10 F002          	lfsr	1,2
  4414  00308E  5003               	movf	fputc@fp^0,w,c
  4415  003090  26E1               	addwf	fsr1l,f,c
  4416  003092  5004               	movf	(fputc@fp+1)^0,w,c
  4417  003094  22E2               	addwfc	fsr1h,f,c
  4418  003096  50DE               	movf	postinc2,w,c
  4419  003098  5CE6               	subwf	postinc1,w,c
  4420  00309A  50E6               	movf	postinc1,w,c
  4421  00309C  0A80               	xorlw	128
  4422  00309E  6E09               	movwf	(??_fputc+4)^0,c
  4423  0030A0  50DE               	movf	postinc2,w,c
  4424  0030A2  0A80               	xorlw	128
  4425  0030A4  5809               	subwfb	(??_fputc+4)^0,w,c
  4426  0030A6  B0D8               	btfsc	status,0,c
  4427  0030A8  EF58  F018         	goto	u2491
  4428  0030AC  EF5A  F018         	goto	u2490
  4429  0030B0                     u2491:
  4430  0030B0  EF7D  F018         	goto	l1067
  4431  0030B4                     u2490:
  4432  0030B4                     l2566:
  4433  0030B4  EE20 F002          	lfsr	2,2
  4434  0030B8  5003               	movf	fputc@fp^0,w,c
  4435  0030BA  26D9               	addwf	fsr2l,f,c
  4436  0030BC  5004               	movf	(fputc@fp+1)^0,w,c
  4437  0030BE  22DA               	addwfc	fsr2h,f,c
  4438  0030C0  CFDE F005          	movff	postinc2,??_fputc
  4439  0030C4  CFDD F006          	movff	postdec2,??_fputc+1
  4440  0030C8  C003  FFD9         	movff	fputc@fp,fsr2l
  4441  0030CC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4442  0030D0  CFDE F007          	movff	postinc2,??_fputc+2
  4443  0030D4  CFDD F008          	movff	postdec2,??_fputc+3
  4444  0030D8  5005               	movf	??_fputc^0,w,c
  4445  0030DA  2407               	addwf	(??_fputc+2)^0,w,c
  4446  0030DC  6ED9               	movwf	fsr2l,c
  4447  0030DE  5006               	movf	(??_fputc+1)^0,w,c
  4448  0030E0  2008               	addwfc	(??_fputc+3)^0,w,c
  4449  0030E2  6EDA               	movwf	fsr2h,c
  4450  0030E4  C001  FFDF         	movff	fputc@c,indf2
  4451  0030E8  EE20 F002          	lfsr	2,2
  4452  0030EC  5003               	movf	fputc@fp^0,w,c
  4453  0030EE  26D9               	addwf	fsr2l,f,c
  4454  0030F0  5004               	movf	(fputc@fp+1)^0,w,c
  4455  0030F2  22DA               	addwfc	fsr2h,f,c
  4456  0030F4  2ADE               	incf	postinc2,f,c
  4457  0030F6  0E00               	movlw	0
  4458  0030F8  22DD               	addwfc	postdec2,f,c
  4459  0030FA                     l1067:
  4460  0030FA  0012               	return		;funcret
  4461  0030FC                     __end_of_fputc:
  4462                           	callstack 0
  4463                           
  4464 ;; *************** function _putch *****************
  4465 ;; Defined at:
  4466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  c               1    wreg     unsigned char 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  c               1    0[COMRAM] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0
  4481 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4483 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4484 ;;Total ram usage:        0 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 1
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_fputc
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text13
  4495  00395E                     __ptext13:
  4496                           	callstack 0
  4497  00395E                     _putch:
  4498                           	callstack 25
  4499  00395E  0012               	return		;funcret
  4500  003960                     __end_of_putch:
  4501                           	callstack 0
  4502                           
  4503 ;; *************** function _floorf *****************
  4504 ;; Defined at:
  4505 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  x               4   39[COMRAM] float 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  u               4   55[COMRAM] struct .
  4510 ;;  m               4   49[COMRAM] unsigned long 
  4511 ;;  e               2   53[COMRAM] int 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  4   39[COMRAM] float 
  4514 ;; Registers used:
  4515 ;;		wreg, status,2, status,0
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4521 ;;      Params:         4       0       0       0       0       0       0       0       0
  4522 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4523 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4524 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4525 ;;Total ram usage:       20 bytes
  4526 ;; Hardware stack levels used: 1
  4527 ;; Hardware stack levels required when called: 1
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_efgtoa
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text14
  4536  002576                     __ptext14:
  4537                           	callstack 0
  4538  002576                     _floorf:
  4539                           	callstack 25
  4540  002576  C0C8  F038         	movff	floorf@F527,floorf@u
  4541  00257A  C0C9  F039         	movff	floorf@F527+1,floorf@u+1
  4542  00257E  C0CA  F03A         	movff	floorf@F527+2,floorf@u+2
  4543  002582  C0CB  F03B         	movff	floorf@F527+3,floorf@u+3
  4544  002586  C028  F038         	movff	floorf@x,floorf@u
  4545  00258A  C029  F039         	movff	floorf@x+1,floorf@u+1
  4546  00258E  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  4547  002592  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  4548  002596  0E81               	movlw	129
  4549  002598  6E2C               	movwf	??_floorf^0,c
  4550  00259A  0EFF               	movlw	255
  4551  00259C  6E2D               	movwf	(??_floorf+1)^0,c
  4552  00259E  C038  F02E         	movff	floorf@u,??_floorf+2
  4553  0025A2  C039  F02F         	movff	floorf@u+1,??_floorf+3
  4554  0025A6  C03A  F030         	movff	floorf@u+2,??_floorf+4
  4555  0025AA  C03B  F031         	movff	floorf@u+3,??_floorf+5
  4556  0025AE  0E18               	movlw	24
  4557  0025B0  EFDF  F012         	goto	u3790
  4558  0025B4                     u3795:
  4559  0025B4  90D8               	bcf	status,0,c
  4560  0025B6  3231               	rrcf	(??_floorf+5)^0,f,c
  4561  0025B8  3230               	rrcf	(??_floorf+4)^0,f,c
  4562  0025BA  322F               	rrcf	(??_floorf+3)^0,f,c
  4563  0025BC  322E               	rrcf	(??_floorf+2)^0,f,c
  4564  0025BE                     u3790:
  4565  0025BE  2EE8               	decfsz	wreg,f,c
  4566  0025C0  EFDA  F012         	goto	u3795
  4567  0025C4  502E               	movf	(??_floorf+2)^0,w,c
  4568  0025C6  242C               	addwf	??_floorf^0,w,c
  4569  0025C8  6E36               	movwf	floorf@e^0,c
  4570  0025CA  0E00               	movlw	0
  4571  0025CC  202D               	addwfc	(??_floorf+1)^0,w,c
  4572  0025CE  6E37               	movwf	(floorf@e+1)^0,c
  4573  0025D0  BE37               	btfsc	(floorf@e+1)^0,7,c
  4574  0025D2  EFF4  F012         	goto	u3801
  4575  0025D6  5037               	movf	(floorf@e+1)^0,w,c
  4576  0025D8  E109               	bnz	u3800
  4577  0025DA  0E17               	movlw	23
  4578  0025DC  5C36               	subwf	floorf@e^0,w,c
  4579  0025DE  A0D8               	btfss	status,0,c
  4580  0025E0  EFF4  F012         	goto	u3801
  4581  0025E4  EFF6  F012         	goto	u3800
  4582  0025E8                     u3801:
  4583  0025E8  EF00  F013         	goto	l3308
  4584  0025EC                     u3800:
  4585  0025EC                     l3306:
  4586  0025EC  C028  F028         	movff	floorf@x,?_floorf
  4587  0025F0  C029  F029         	movff	floorf@x+1,?_floorf+1
  4588  0025F4  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  4589  0025F8  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  4590  0025FC  EFC3  F013         	goto	l1028
  4591  002600                     l3308:
  4592  002600  BE37               	btfsc	(floorf@e+1)^0,7,c
  4593  002602  EF05  F013         	goto	u3811
  4594  002606  EF07  F013         	goto	u3810
  4595  00260A                     u3811:
  4596  00260A  EF77  F013         	goto	l3318
  4597  00260E                     u3810:
  4598  00260E  C036  F02C         	movff	floorf@e,??_floorf
  4599  002612  0EFF               	movlw	255
  4600  002614  6E2D               	movwf	(??_floorf+1)^0,c
  4601  002616  0EFF               	movlw	255
  4602  002618  6E2E               	movwf	(??_floorf+2)^0,c
  4603  00261A  0E7F               	movlw	127
  4604  00261C  6E2F               	movwf	(??_floorf+3)^0,c
  4605  00261E  0E00               	movlw	0
  4606  002620  6E30               	movwf	(??_floorf+4)^0,c
  4607  002622                     u3825:
  4608  002622  662C               	tstfsz	??_floorf^0,c
  4609  002624  EF16  F013         	goto	u3826
  4610  002628  EF1E  F013         	goto	u3827
  4611  00262C                     u3826:
  4612  00262C  3430               	rlcf	(??_floorf+4)^0,w,c
  4613  00262E  3230               	rrcf	(??_floorf+4)^0,f,c
  4614  002630  322F               	rrcf	(??_floorf+3)^0,f,c
  4615  002632  322E               	rrcf	(??_floorf+2)^0,f,c
  4616  002634  322D               	rrcf	(??_floorf+1)^0,f,c
  4617  002636  2E2C               	decfsz	??_floorf^0,f,c
  4618  002638  EF11  F013         	goto	u3825
  4619  00263C                     u3827:
  4620  00263C  C02D  F032         	movff	??_floorf+1,floorf@m
  4621  002640  C02E  F033         	movff	??_floorf+2,floorf@m+1
  4622  002644  C02F  F034         	movff	??_floorf+3,floorf@m+2
  4623  002648  C030  F035         	movff	??_floorf+4,floorf@m+3
  4624  00264C  5032               	movf	floorf@m^0,w,c
  4625  00264E  1438               	andwf	floorf@u^0,w,c
  4626  002650  6E2C               	movwf	??_floorf^0,c
  4627  002652  5033               	movf	(floorf@m+1)^0,w,c
  4628  002654  1439               	andwf	(floorf@u+1)^0,w,c
  4629  002656  6E2D               	movwf	(??_floorf+1)^0,c
  4630  002658  5034               	movf	(floorf@m+2)^0,w,c
  4631  00265A  143A               	andwf	(floorf@u+2)^0,w,c
  4632  00265C  6E2E               	movwf	(??_floorf+2)^0,c
  4633  00265E  5035               	movf	(floorf@m+3)^0,w,c
  4634  002660  143B               	andwf	(floorf@u+3)^0,w,c
  4635  002662  6E2F               	movwf	(??_floorf+3)^0,c
  4636  002664  502C               	movf	??_floorf^0,w,c
  4637  002666  102D               	iorwf	(??_floorf+1)^0,w,c
  4638  002668  102E               	iorwf	(??_floorf+2)^0,w,c
  4639  00266A  102F               	iorwf	(??_floorf+3)^0,w,c
  4640  00266C  A4D8               	btfss	status,2,c
  4641  00266E  EF3B  F013         	goto	u3831
  4642  002672  EF3D  F013         	goto	u3830
  4643  002676                     u3831:
  4644  002676  EF3F  F013         	goto	l3314
  4645  00267A                     u3830:
  4646  00267A  EFF6  F012         	goto	l3306
  4647  00267E                     l3314:
  4648  00267E  C038  F02C         	movff	floorf@u,??_floorf
  4649  002682  C039  F02D         	movff	floorf@u+1,??_floorf+1
  4650  002686  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  4651  00268A  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  4652  00268E  0E20               	movlw	32
  4653  002690  EF4F  F013         	goto	u3840
  4654  002694                     u3845:
  4655  002694  90D8               	bcf	status,0,c
  4656  002696  322F               	rrcf	(??_floorf+3)^0,f,c
  4657  002698  322E               	rrcf	(??_floorf+2)^0,f,c
  4658  00269A  322D               	rrcf	(??_floorf+1)^0,f,c
  4659  00269C  322C               	rrcf	??_floorf^0,f,c
  4660  00269E                     u3840:
  4661  00269E  2EE8               	decfsz	wreg,f,c
  4662  0026A0  EF4A  F013         	goto	u3845
  4663  0026A4  502C               	movf	??_floorf^0,w,c
  4664  0026A6  102D               	iorwf	(??_floorf+1)^0,w,c
  4665  0026A8  102E               	iorwf	(??_floorf+2)^0,w,c
  4666  0026AA  102F               	iorwf	(??_floorf+3)^0,w,c
  4667  0026AC  B4D8               	btfsc	status,2,c
  4668  0026AE  EF5B  F013         	goto	u3851
  4669  0026B2  EF5D  F013         	goto	u3850
  4670  0026B6                     u3851:
  4671  0026B6  EF65  F013         	goto	l1031
  4672  0026BA                     u3850:
  4673  0026BA  5032               	movf	floorf@m^0,w,c
  4674  0026BC  2638               	addwf	floorf@u^0,f,c
  4675  0026BE  5033               	movf	(floorf@m+1)^0,w,c
  4676  0026C0  2239               	addwfc	(floorf@u+1)^0,f,c
  4677  0026C2  5034               	movf	(floorf@m+2)^0,w,c
  4678  0026C4  223A               	addwfc	(floorf@u+2)^0,f,c
  4679  0026C6  5035               	movf	(floorf@m+3)^0,w,c
  4680  0026C8  223B               	addwfc	(floorf@u+3)^0,f,c
  4681  0026CA                     l1031:
  4682  0026CA  1C32               	comf	floorf@m^0,w,c
  4683  0026CC  6E2C               	movwf	??_floorf^0,c
  4684  0026CE  1C33               	comf	(floorf@m+1)^0,w,c
  4685  0026D0  6E2D               	movwf	(??_floorf+1)^0,c
  4686  0026D2  1C34               	comf	(floorf@m+2)^0,w,c
  4687  0026D4  6E2E               	movwf	(??_floorf+2)^0,c
  4688  0026D6  1C35               	comf	(floorf@m+3)^0,w,c
  4689  0026D8  6E2F               	movwf	(??_floorf+3)^0,c
  4690  0026DA  502C               	movf	??_floorf^0,w,c
  4691  0026DC  1638               	andwf	floorf@u^0,f,c
  4692  0026DE  502D               	movf	(??_floorf+1)^0,w,c
  4693  0026E0  1639               	andwf	(floorf@u+1)^0,f,c
  4694  0026E2  502E               	movf	(??_floorf+2)^0,w,c
  4695  0026E4  163A               	andwf	(floorf@u+2)^0,f,c
  4696  0026E6  502F               	movf	(??_floorf+3)^0,w,c
  4697  0026E8  163B               	andwf	(floorf@u+3)^0,f,c
  4698  0026EA  EFBB  F013         	goto	l3326
  4699  0026EE                     l3318:
  4700  0026EE  C038  F02C         	movff	floorf@u,??_floorf
  4701  0026F2  C039  F02D         	movff	floorf@u+1,??_floorf+1
  4702  0026F6  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  4703  0026FA  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  4704  0026FE  0E20               	movlw	32
  4705  002700  EF87  F013         	goto	u3860
  4706  002704                     u3865:
  4707  002704  90D8               	bcf	status,0,c
  4708  002706  322F               	rrcf	(??_floorf+3)^0,f,c
  4709  002708  322E               	rrcf	(??_floorf+2)^0,f,c
  4710  00270A  322D               	rrcf	(??_floorf+1)^0,f,c
  4711  00270C  322C               	rrcf	??_floorf^0,f,c
  4712  00270E                     u3860:
  4713  00270E  2EE8               	decfsz	wreg,f,c
  4714  002710  EF82  F013         	goto	u3865
  4715  002714  502C               	movf	??_floorf^0,w,c
  4716  002716  102D               	iorwf	(??_floorf+1)^0,w,c
  4717  002718  102E               	iorwf	(??_floorf+2)^0,w,c
  4718  00271A  102F               	iorwf	(??_floorf+3)^0,w,c
  4719  00271C  A4D8               	btfss	status,2,c
  4720  00271E  EF93  F013         	goto	u3871
  4721  002722  EF95  F013         	goto	u3870
  4722  002726                     u3871:
  4723  002726  EF9F  F013         	goto	l3322
  4724  00272A                     u3870:
  4725  00272A  0E00               	movlw	0
  4726  00272C  6E38               	movwf	floorf@u^0,c
  4727  00272E  0E00               	movlw	0
  4728  002730  6E39               	movwf	(floorf@u+1)^0,c
  4729  002732  0E00               	movlw	0
  4730  002734  6E3A               	movwf	(floorf@u+2)^0,c
  4731  002736  0E00               	movlw	0
  4732  002738  6E3B               	movwf	(floorf@u+3)^0,c
  4733  00273A  EFBB  F013         	goto	l3326
  4734  00273E                     l3322:
  4735  00273E  90D8               	bcf	status,0,c
  4736  002740  3438               	rlcf	floorf@u^0,w,c
  4737  002742  6E2C               	movwf	??_floorf^0,c
  4738  002744  3439               	rlcf	(floorf@u+1)^0,w,c
  4739  002746  6E2D               	movwf	(??_floorf+1)^0,c
  4740  002748  343A               	rlcf	(floorf@u+2)^0,w,c
  4741  00274A  6E2E               	movwf	(??_floorf+2)^0,c
  4742  00274C  343B               	rlcf	(floorf@u+3)^0,w,c
  4743  00274E  6E2F               	movwf	(??_floorf+3)^0,c
  4744  002750  502C               	movf	??_floorf^0,w,c
  4745  002752  102D               	iorwf	(??_floorf+1)^0,w,c
  4746  002754  102E               	iorwf	(??_floorf+2)^0,w,c
  4747  002756  102F               	iorwf	(??_floorf+3)^0,w,c
  4748  002758  B4D8               	btfsc	status,2,c
  4749  00275A  EFB1  F013         	goto	u3881
  4750  00275E  EFB3  F013         	goto	u3880
  4751  002762                     u3881:
  4752  002762  EFBB  F013         	goto	l3326
  4753  002766                     u3880:
  4754  002766  0E00               	movlw	0
  4755  002768  6E38               	movwf	floorf@u^0,c
  4756  00276A  0E00               	movlw	0
  4757  00276C  6E39               	movwf	(floorf@u+1)^0,c
  4758  00276E  0E80               	movlw	128
  4759  002770  6E3A               	movwf	(floorf@u+2)^0,c
  4760  002772  0EBF               	movlw	191
  4761  002774  6E3B               	movwf	(floorf@u+3)^0,c
  4762  002776                     l3326:
  4763  002776  C038  F028         	movff	floorf@u,?_floorf
  4764  00277A  C039  F029         	movff	floorf@u+1,?_floorf+1
  4765  00277E  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  4766  002782  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  4767  002786                     l1028:
  4768  002786  0012               	return		;funcret
  4769  002788                     __end_of_floorf:
  4770                           	callstack 0
  4771                           
  4772 ;; *************** function ___fpclassifyf *****************
  4773 ;; Defined at:
  4774 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  x               4    0[COMRAM] float 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  u               4   10[COMRAM] struct .
  4779 ;;  e               2    8[COMRAM] int 
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  2    0[COMRAM] int 
  4782 ;; Registers used:
  4783 ;;		wreg, status,2, status,0
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4789 ;;      Params:         4       0       0       0       0       0       0       0       0
  4790 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4791 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4792 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4793 ;;Total ram usage:       14 bytes
  4794 ;; Hardware stack levels used: 1
  4795 ;; Hardware stack levels required when called: 1
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_efgtoa
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           	psect	text15
  4804  002E5E                     __ptext15:
  4805                           	callstack 0
  4806  002E5E                     ___fpclassifyf:
  4807                           	callstack 25
  4808  002E5E  C0CC  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4809  002E62  C0CD  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4810  002E66  C0CE  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4811  002E6A  C0CF  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4812  002E6E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4813  002E72  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4814  002E76  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4815  002E7A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4816  002E7E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4817  002E82  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4818  002E86  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4819  002E8A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4820  002E8E  0E18               	movlw	24
  4821  002E90  EF4F  F017         	goto	u3670
  4822  002E94                     u3675:
  4823  002E94  90D8               	bcf	status,0,c
  4824  002E96  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4825  002E98  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4826  002E9A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4827  002E9C  3205               	rrcf	??___fpclassifyf^0,f,c
  4828  002E9E                     u3670:
  4829  002E9E  2EE8               	decfsz	wreg,f,c
  4830  002EA0  EF4A  F017         	goto	u3675
  4831  002EA4  5005               	movf	??___fpclassifyf^0,w,c
  4832  002EA6  6E09               	movwf	___fpclassifyf@e^0,c
  4833  002EA8  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4834  002EAA  5009               	movf	___fpclassifyf@e^0,w,c
  4835  002EAC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4836  002EAE  A4D8               	btfss	status,2,c
  4837  002EB0  EF5C  F017         	goto	u3681
  4838  002EB4  EF5E  F017         	goto	u3680
  4839  002EB8                     u3681:
  4840  002EB8  EF7E  F017         	goto	l3278
  4841  002EBC                     u3680:
  4842  002EBC  90D8               	bcf	status,0,c
  4843  002EBE  340B               	rlcf	___fpclassifyf@u^0,w,c
  4844  002EC0  6E05               	movwf	??___fpclassifyf^0,c
  4845  002EC2  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4846  002EC4  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4847  002EC6  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4848  002EC8  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4849  002ECA  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4850  002ECC  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4851  002ECE  5005               	movf	??___fpclassifyf^0,w,c
  4852  002ED0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4853  002ED2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4854  002ED4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4855  002ED6  A4D8               	btfss	status,2,c
  4856  002ED8  EF70  F017         	goto	u3691
  4857  002EDC  EF72  F017         	goto	u3690
  4858  002EE0                     u3691:
  4859  002EE0  EF78  F017         	goto	l3274
  4860  002EE4                     u3690:
  4861  002EE4  0E00               	movlw	0
  4862  002EE6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4863  002EE8  0E02               	movlw	2
  4864  002EEA  6E01               	movwf	?___fpclassifyf^0,c
  4865  002EEC  EFAD  F017         	goto	l990
  4866  002EF0                     l3274:
  4867  002EF0  0E00               	movlw	0
  4868  002EF2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4869  002EF4  0E03               	movlw	3
  4870  002EF6  6E01               	movwf	?___fpclassifyf^0,c
  4871  002EF8  EFAD  F017         	goto	l990
  4872  002EFC                     l3278:
  4873  002EFC  2809               	incf	___fpclassifyf@e^0,w,c
  4874  002EFE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4875  002F00  A4D8               	btfss	status,2,c
  4876  002F02  EF85  F017         	goto	u3701
  4877  002F06  EF87  F017         	goto	u3700
  4878  002F0A                     u3701:
  4879  002F0A  EFA9  F017         	goto	l3284
  4880  002F0E                     u3700:
  4881  002F0E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4882  002F12  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4883  002F16  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4884  002F1A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4885  002F1E  0E09               	movlw	9
  4886  002F20                     u3715:
  4887  002F20  90D8               	bcf	status,0,c
  4888  002F22  3605               	rlcf	??___fpclassifyf^0,f,c
  4889  002F24  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4890  002F26  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4891  002F28  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4892  002F2A  2EE8               	decfsz	wreg,f,c
  4893  002F2C  EF90  F017         	goto	u3715
  4894  002F30  5005               	movf	??___fpclassifyf^0,w,c
  4895  002F32  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4896  002F34  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4897  002F36  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4898  002F38  B4D8               	btfsc	status,2,c
  4899  002F3A  EFA1  F017         	goto	u3721
  4900  002F3E  EFA4  F017         	goto	u3720
  4901  002F42                     u3721:
  4902  002F42  0E01               	movlw	1
  4903  002F44  EFA5  F017         	goto	u3730
  4904  002F48                     u3720:
  4905  002F48  0E00               	movlw	0
  4906  002F4A                     u3730:
  4907  002F4A  6E01               	movwf	?___fpclassifyf^0,c
  4908  002F4C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4909  002F4E  EFAD  F017         	goto	l990
  4910  002F52                     l3284:
  4911  002F52  0E00               	movlw	0
  4912  002F54  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4913  002F56  0E04               	movlw	4
  4914  002F58  6E01               	movwf	?___fpclassifyf^0,c
  4915  002F5A                     l990:
  4916  002F5A  0012               	return		;funcret
  4917  002F5C                     __end_of___fpclassifyf:
  4918                           	callstack 0
  4919                           
  4920 ;; *************** function ___fltol *****************
  4921 ;; Defined at:
  4922 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  f1              4   64[COMRAM] int 
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  exp1            1   73[COMRAM] unsigned char 
  4927 ;;  sign1           1   72[COMRAM] unsigned char 
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  4   64[COMRAM] long 
  4930 ;; Registers used:
  4931 ;;		wreg, status,2, status,0
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4937 ;;      Params:         4       0       0       0       0       0       0       0       0
  4938 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4939 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4940 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4941 ;;Total ram usage:       10 bytes
  4942 ;; Hardware stack levels used: 1
  4943 ;; Hardware stack levels required when called: 1
  4944 ;; This function calls:
  4945 ;;		Nothing
  4946 ;; This function is called by:
  4947 ;;		_main
  4948 ;;		_efgtoa
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           	psect	text16
  4953  002C54                     __ptext16:
  4954                           	callstack 0
  4955  002C54                     ___fltol:
  4956                           	callstack 25
  4957  002C54  3443               	rlcf	(___fltol@f1+2)^0,w,c
  4958  002C56  3444               	rlcf	(___fltol@f1+3)^0,w,c
  4959  002C58  6E4A               	movwf	___fltol@exp1^0,c
  4960  002C5A  504A               	movf	___fltol@exp1^0,w,c
  4961  002C5C  A4D8               	btfss	status,2,c
  4962  002C5E  EF33  F016         	goto	u3561
  4963  002C62  EF35  F016         	goto	u3560
  4964  002C66                     u3561:
  4965  002C66  EF3F  F016         	goto	l3206
  4966  002C6A                     u3560:
  4967  002C6A                     l3202:
  4968  002C6A  0E00               	movlw	0
  4969  002C6C  6E41               	movwf	?___fltol^0,c
  4970  002C6E  0E00               	movlw	0
  4971  002C70  6E42               	movwf	(?___fltol+1)^0,c
  4972  002C72  0E00               	movlw	0
  4973  002C74  6E43               	movwf	(?___fltol+2)^0,c
  4974  002C76  0E00               	movlw	0
  4975  002C78  6E44               	movwf	(?___fltol+3)^0,c
  4976  002C7A  EFAC  F016         	goto	l429
  4977  002C7E                     l3206:
  4978  002C7E  C041  F045         	movff	___fltol@f1,??___fltol
  4979  002C82  C042  F046         	movff	___fltol@f1+1,??___fltol+1
  4980  002C86  C043  F047         	movff	___fltol@f1+2,??___fltol+2
  4981  002C8A  C044  F048         	movff	___fltol@f1+3,??___fltol+3
  4982  002C8E  0E20               	movlw	32
  4983  002C90  EF4F  F016         	goto	u3570
  4984  002C94                     u3575:
  4985  002C94  90D8               	bcf	status,0,c
  4986  002C96  3248               	rrcf	(??___fltol+3)^0,f,c
  4987  002C98  3247               	rrcf	(??___fltol+2)^0,f,c
  4988  002C9A  3246               	rrcf	(??___fltol+1)^0,f,c
  4989  002C9C  3245               	rrcf	??___fltol^0,f,c
  4990  002C9E                     u3570:
  4991  002C9E  2EE8               	decfsz	wreg,f,c
  4992  002CA0  EF4A  F016         	goto	u3575
  4993  002CA4  5045               	movf	??___fltol^0,w,c
  4994  002CA6  6E49               	movwf	___fltol@sign1^0,c
  4995  002CA8  8E43               	bsf	(___fltol@f1+2)^0,7,c
  4996  002CAA  0EFF               	movlw	255
  4997  002CAC  1641               	andwf	___fltol@f1^0,f,c
  4998  002CAE  0EFF               	movlw	255
  4999  002CB0  1642               	andwf	(___fltol@f1+1)^0,f,c
  5000  002CB2  0EFF               	movlw	255
  5001  002CB4  1643               	andwf	(___fltol@f1+2)^0,f,c
  5002  002CB6  0E00               	movlw	0
  5003  002CB8  1644               	andwf	(___fltol@f1+3)^0,f,c
  5004  002CBA  0E96               	movlw	150
  5005  002CBC  5E4A               	subwf	___fltol@exp1^0,f,c
  5006  002CBE  BE4A               	btfsc	___fltol@exp1^0,7,c
  5007  002CC0  EF66  F016         	goto	u3580
  5008  002CC4  EF64  F016         	goto	u3581
  5009  002CC8                     u3581:
  5010  002CC8  EF7C  F016         	goto	l3226
  5011  002CCC                     u3580:
  5012  002CCC  504A               	movf	___fltol@exp1^0,w,c
  5013  002CCE  0A80               	xorlw	128
  5014  002CD0  0F97               	addlw	151
  5015  002CD2  B0D8               	btfsc	status,0,c
  5016  002CD4  EF6E  F016         	goto	u3591
  5017  002CD8  EF70  F016         	goto	u3590
  5018  002CDC                     u3591:
  5019  002CDC  EF72  F016         	goto	l3222
  5020  002CE0                     u3590:
  5021  002CE0  EF35  F016         	goto	l3202
  5022  002CE4                     l3222:
  5023  002CE4  90D8               	bcf	status,0,c
  5024  002CE6  3244               	rrcf	(___fltol@f1+3)^0,f,c
  5025  002CE8  3243               	rrcf	(___fltol@f1+2)^0,f,c
  5026  002CEA  3242               	rrcf	(___fltol@f1+1)^0,f,c
  5027  002CEC  3241               	rrcf	___fltol@f1^0,f,c
  5028  002CEE  3E4A               	incfsz	___fltol@exp1^0,f,c
  5029  002CF0  EF72  F016         	goto	l3222
  5030  002CF4  EF94  F016         	goto	l3236
  5031  002CF8                     l3226:
  5032  002CF8  0E1F               	movlw	31
  5033  002CFA  644A               	cpfsgt	___fltol@exp1^0,c
  5034  002CFC  EF82  F016         	goto	u3601
  5035  002D00  EF84  F016         	goto	u3600
  5036  002D04                     u3601:
  5037  002D04  EF8C  F016         	goto	l3234
  5038  002D08                     u3600:
  5039  002D08  EF35  F016         	goto	l3202
  5040  002D0C                     l3232:
  5041  002D0C  90D8               	bcf	status,0,c
  5042  002D0E  3641               	rlcf	___fltol@f1^0,f,c
  5043  002D10  3642               	rlcf	(___fltol@f1+1)^0,f,c
  5044  002D12  3643               	rlcf	(___fltol@f1+2)^0,f,c
  5045  002D14  3644               	rlcf	(___fltol@f1+3)^0,f,c
  5046  002D16  064A               	decf	___fltol@exp1^0,f,c
  5047  002D18                     l3234:
  5048  002D18  504A               	movf	___fltol@exp1^0,w,c
  5049  002D1A  A4D8               	btfss	status,2,c
  5050  002D1C  EF92  F016         	goto	u3611
  5051  002D20  EF94  F016         	goto	u3610
  5052  002D24                     u3611:
  5053  002D24  EF86  F016         	goto	l3232
  5054  002D28                     u3610:
  5055  002D28                     l3236:
  5056  002D28  5049               	movf	___fltol@sign1^0,w,c
  5057  002D2A  B4D8               	btfsc	status,2,c
  5058  002D2C  EF9A  F016         	goto	u3621
  5059  002D30  EF9C  F016         	goto	u3620
  5060  002D34                     u3621:
  5061  002D34  EFA4  F016         	goto	l3240
  5062  002D38                     u3620:
  5063  002D38  1E44               	comf	(___fltol@f1+3)^0,f,c
  5064  002D3A  1E43               	comf	(___fltol@f1+2)^0,f,c
  5065  002D3C  1E42               	comf	(___fltol@f1+1)^0,f,c
  5066  002D3E  6C41               	negf	___fltol@f1^0,c
  5067  002D40  0E00               	movlw	0
  5068  002D42  2242               	addwfc	(___fltol@f1+1)^0,f,c
  5069  002D44  2243               	addwfc	(___fltol@f1+2)^0,f,c
  5070  002D46  2244               	addwfc	(___fltol@f1+3)^0,f,c
  5071  002D48                     l3240:
  5072  002D48  C041  F041         	movff	___fltol@f1,?___fltol
  5073  002D4C  C042  F042         	movff	___fltol@f1+1,?___fltol+1
  5074  002D50  C043  F043         	movff	___fltol@f1+2,?___fltol+2
  5075  002D54  C044  F044         	movff	___fltol@f1+3,?___fltol+3
  5076  002D58                     l429:
  5077  002D58  0012               	return		;funcret
  5078  002D5A                     __end_of___fltol:
  5079                           	callstack 0
  5080                           
  5081 ;; *************** function ___flsub *****************
  5082 ;; Defined at:
  5083 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  b               4   64[COMRAM] long 
  5086 ;;  a               4   68[COMRAM] long 
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  4   64[COMRAM] long 
  5091 ;; Registers used:
  5092 ;;		wreg, status,2, status,0, cstack
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5098 ;;      Params:         8       0       0       0       0       0       0       0       0
  5099 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5101 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5102 ;;Total ram usage:        8 bytes
  5103 ;; Hardware stack levels used: 1
  5104 ;; Hardware stack levels required when called: 2
  5105 ;; This function calls:
  5106 ;;		___fladd
  5107 ;; This function is called by:
  5108 ;;		_efgtoa
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text17
  5113  003686                     __ptext17:
  5114                           	callstack 0
  5115  003686                     ___flsub:
  5116                           	callstack 24
  5117  003686  0E00               	movlw	0
  5118  003688  1A45               	xorwf	___flsub@a^0,f,c
  5119  00368A  0E00               	movlw	0
  5120  00368C  1A46               	xorwf	(___flsub@a+1)^0,f,c
  5121  00368E  0E00               	movlw	0
  5122  003690  1A47               	xorwf	(___flsub@a+2)^0,f,c
  5123  003692  0E80               	movlw	128
  5124  003694  1A48               	xorwf	(___flsub@a+3)^0,f,c
  5125  003696  C041  F001         	movff	___flsub@b,___fladd@b
  5126  00369A  C042  F002         	movff	___flsub@b+1,___fladd@b+1
  5127  00369E  C043  F003         	movff	___flsub@b+2,___fladd@b+2
  5128  0036A2  C044  F004         	movff	___flsub@b+3,___fladd@b+3
  5129  0036A6  C045  F005         	movff	___flsub@a,___fladd@a
  5130  0036AA  C046  F006         	movff	___flsub@a+1,___fladd@a+1
  5131  0036AE  C047  F007         	movff	___flsub@a+2,___fladd@a+2
  5132  0036B2  C048  F008         	movff	___flsub@a+3,___fladd@a+3
  5133  0036B6  EC44  F00A         	call	___fladd	;wreg free
  5134  0036BA  C001  F041         	movff	?___fladd,?___flsub
  5135  0036BE  C002  F042         	movff	?___fladd+1,?___flsub+1
  5136  0036C2  C003  F043         	movff	?___fladd+2,?___flsub+2
  5137  0036C6  C004  F044         	movff	?___fladd+3,?___flsub+3
  5138  0036CA  0012               	return		;funcret
  5139  0036CC                     __end_of___flsub:
  5140                           	callstack 0
  5141                           
  5142 ;; *************** function ___fladd *****************
  5143 ;; Defined at:
  5144 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  b               4    0[COMRAM] long 
  5147 ;;  a               4    4[COMRAM] long 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  grs             1   15[COMRAM] unsigned char 
  5150 ;;  bexp            1   14[COMRAM] unsigned char 
  5151 ;;  aexp            1   13[COMRAM] unsigned char 
  5152 ;;  signs           1   12[COMRAM] unsigned char 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  4    0[COMRAM] unsigned char 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2, status,0
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5162 ;;      Params:         8       0       0       0       0       0       0       0       0
  5163 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5164 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5165 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5166 ;;Total ram usage:       16 bytes
  5167 ;; Hardware stack levels used: 1
  5168 ;; Hardware stack levels required when called: 1
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		___flsub
  5173 ;;		_efgtoa
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text18
  5178  001488                     __ptext18:
  5179                           	callstack 0
  5180  001488                     ___fladd:
  5181                           	callstack 24
  5182  001488  5004               	movf	(___fladd@b+3)^0,w,c
  5183  00148A  0B80               	andlw	128
  5184  00148C  6E0D               	movwf	___fladd@signs^0,c
  5185  00148E  5004               	movf	(___fladd@b+3)^0,w,c
  5186  001490  2404               	addwf	(___fladd@b+3)^0,w,c
  5187  001492  6E0F               	movwf	___fladd@bexp^0,c
  5188  001494  AE03               	btfss	(___fladd@b+2)^0,7,c
  5189  001496  EF4F  F00A         	goto	u2501
  5190  00149A  EF51  F00A         	goto	u2500
  5191  00149E                     u2501:
  5192  00149E  EF52  F00A         	goto	l2576
  5193  0014A2                     u2500:
  5194  0014A2  800F               	bsf	___fladd@bexp^0,0,c
  5195  0014A4                     l2576:
  5196  0014A4  500F               	movf	___fladd@bexp^0,w,c
  5197  0014A6  B4D8               	btfsc	status,2,c
  5198  0014A8  EF58  F00A         	goto	u2511
  5199  0014AC  EF5A  F00A         	goto	u2510
  5200  0014B0                     u2511:
  5201  0014B0  EF6F  F00A         	goto	l2586
  5202  0014B4                     u2510:
  5203  0014B4  280F               	incf	___fladd@bexp^0,w,c
  5204  0014B6  A4D8               	btfss	status,2,c
  5205  0014B8  EF60  F00A         	goto	u2521
  5206  0014BC  EF62  F00A         	goto	u2520
  5207  0014C0                     u2521:
  5208  0014C0  EF6A  F00A         	goto	l2582
  5209  0014C4                     u2520:
  5210  0014C4  0E00               	movlw	0
  5211  0014C6  6E01               	movwf	___fladd@b^0,c
  5212  0014C8  0E00               	movlw	0
  5213  0014CA  6E02               	movwf	(___fladd@b+1)^0,c
  5214  0014CC  0E00               	movlw	0
  5215  0014CE  6E03               	movwf	(___fladd@b+2)^0,c
  5216  0014D0  0E00               	movlw	0
  5217  0014D2  6E04               	movwf	(___fladd@b+3)^0,c
  5218  0014D4                     l2582:
  5219  0014D4  8E03               	bsf	(___fladd@b+2)^0,7,c
  5220  0014D6  0E00               	movlw	0
  5221  0014D8  6E04               	movwf	(___fladd@b+3)^0,c
  5222  0014DA  EF77  F00A         	goto	l2588
  5223  0014DE                     l2586:
  5224  0014DE  0E00               	movlw	0
  5225  0014E0  6E01               	movwf	___fladd@b^0,c
  5226  0014E2  0E00               	movlw	0
  5227  0014E4  6E02               	movwf	(___fladd@b+1)^0,c
  5228  0014E6  0E00               	movlw	0
  5229  0014E8  6E03               	movwf	(___fladd@b+2)^0,c
  5230  0014EA  0E00               	movlw	0
  5231  0014EC  6E04               	movwf	(___fladd@b+3)^0,c
  5232  0014EE                     l2588:
  5233  0014EE  5008               	movf	(___fladd@a+3)^0,w,c
  5234  0014F0  0B80               	andlw	128
  5235  0014F2  6E0E               	movwf	___fladd@aexp^0,c
  5236  0014F4  500D               	movf	___fladd@signs^0,w,c
  5237  0014F6  180E               	xorwf	___fladd@aexp^0,w,c
  5238  0014F8  B4D8               	btfsc	status,2,c
  5239  0014FA  EF81  F00A         	goto	u2531
  5240  0014FE  EF83  F00A         	goto	u2530
  5241  001502                     u2531:
  5242  001502  EF84  F00A         	goto	l2594
  5243  001506                     u2530:
  5244  001506  8C0D               	bsf	___fladd@signs^0,6,c
  5245  001508                     l2594:
  5246  001508  5008               	movf	(___fladd@a+3)^0,w,c
  5247  00150A  2408               	addwf	(___fladd@a+3)^0,w,c
  5248  00150C  6E0E               	movwf	___fladd@aexp^0,c
  5249  00150E  AE07               	btfss	(___fladd@a+2)^0,7,c
  5250  001510  EF8C  F00A         	goto	u2541
  5251  001514  EF8E  F00A         	goto	u2540
  5252  001518                     u2541:
  5253  001518  EF8F  F00A         	goto	l2600
  5254  00151C                     u2540:
  5255  00151C  800E               	bsf	___fladd@aexp^0,0,c
  5256  00151E                     l2600:
  5257  00151E  500E               	movf	___fladd@aexp^0,w,c
  5258  001520  B4D8               	btfsc	status,2,c
  5259  001522  EF95  F00A         	goto	u2551
  5260  001526  EF97  F00A         	goto	u2550
  5261  00152A                     u2551:
  5262  00152A  EFAC  F00A         	goto	l2610
  5263  00152E                     u2550:
  5264  00152E  280E               	incf	___fladd@aexp^0,w,c
  5265  001530  A4D8               	btfss	status,2,c
  5266  001532  EF9D  F00A         	goto	u2561
  5267  001536  EF9F  F00A         	goto	u2560
  5268  00153A                     u2561:
  5269  00153A  EFA7  F00A         	goto	l2606
  5270  00153E                     u2560:
  5271  00153E  0E00               	movlw	0
  5272  001540  6E05               	movwf	___fladd@a^0,c
  5273  001542  0E00               	movlw	0
  5274  001544  6E06               	movwf	(___fladd@a+1)^0,c
  5275  001546  0E00               	movlw	0
  5276  001548  6E07               	movwf	(___fladd@a+2)^0,c
  5277  00154A  0E00               	movlw	0
  5278  00154C  6E08               	movwf	(___fladd@a+3)^0,c
  5279  00154E                     l2606:
  5280  00154E  8E07               	bsf	(___fladd@a+2)^0,7,c
  5281  001550  0E00               	movlw	0
  5282  001552  6E08               	movwf	(___fladd@a+3)^0,c
  5283  001554  EFB4  F00A         	goto	l2612
  5284  001558                     l2610:
  5285  001558  0E00               	movlw	0
  5286  00155A  6E05               	movwf	___fladd@a^0,c
  5287  00155C  0E00               	movlw	0
  5288  00155E  6E06               	movwf	(___fladd@a+1)^0,c
  5289  001560  0E00               	movlw	0
  5290  001562  6E07               	movwf	(___fladd@a+2)^0,c
  5291  001564  0E00               	movlw	0
  5292  001566  6E08               	movwf	(___fladd@a+3)^0,c
  5293  001568                     l2612:
  5294  001568  500F               	movf	___fladd@bexp^0,w,c
  5295  00156A  5C0E               	subwf	___fladd@aexp^0,w,c
  5296  00156C  B0D8               	btfsc	status,0,c
  5297  00156E  EFBB  F00A         	goto	u2571
  5298  001572  EFBD  F00A         	goto	u2570
  5299  001576                     u2571:
  5300  001576  EFE4  F00A         	goto	l2648
  5301  00157A                     u2570:
  5302  00157A  AC0D               	btfss	___fladd@signs^0,6,c
  5303  00157C  EFC2  F00A         	goto	u2581
  5304  001580  EFC4  F00A         	goto	u2580
  5305  001584                     u2581:
  5306  001584  EFC6  F00A         	goto	l2618
  5307  001588                     u2580:
  5308  001588  0E80               	movlw	128
  5309  00158A  1A0D               	xorwf	___fladd@signs^0,f,c
  5310  00158C                     l2618:
  5311  00158C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5312  001590  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5313  001594  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5314  001598  C001  F010         	movff	___fladd@b,___fladd@grs
  5315  00159C  C005  F001         	movff	___fladd@a,___fladd@b
  5316  0015A0  C010  F005         	movff	___fladd@grs,___fladd@a
  5317  0015A4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5318  0015A8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5319  0015AC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5320  0015B0  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5321  0015B4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5322  0015B8  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5323  0015BC  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5324  0015C0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5325  0015C4  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5326  0015C8                     l2648:
  5327  0015C8  0E00               	movlw	0
  5328  0015CA  6E10               	movwf	___fladd@grs^0,c
  5329  0015CC  500F               	movf	___fladd@bexp^0,w,c
  5330  0015CE  C00E  F009         	movff	___fladd@aexp,??___fladd
  5331  0015D2  6A0A               	clrf	(??___fladd+1)^0,c
  5332  0015D4  5E09               	subwf	??___fladd^0,f,c
  5333  0015D6  0E00               	movlw	0
  5334  0015D8  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5335  0015DA  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5336  0015DC  EFF9  F00A         	goto	u2591
  5337  0015E0  500A               	movf	(??___fladd+1)^0,w,c
  5338  0015E2  E109               	bnz	u2590
  5339  0015E4  0E1A               	movlw	26
  5340  0015E6  5C09               	subwf	??___fladd^0,w,c
  5341  0015E8  A0D8               	btfss	status,0,c
  5342  0015EA  EFF9  F00A         	goto	u2591
  5343  0015EE  EFFB  F00A         	goto	u2590
  5344  0015F2                     u2591:
  5345  0015F2  EF32  F00B         	goto	l661
  5346  0015F6                     u2590:
  5347  0015F6  5001               	movf	___fladd@b^0,w,c
  5348  0015F8  1002               	iorwf	(___fladd@b+1)^0,w,c
  5349  0015FA  1003               	iorwf	(___fladd@b+2)^0,w,c
  5350  0015FC  1004               	iorwf	(___fladd@b+3)^0,w,c
  5351  0015FE  A4D8               	btfss	status,2,c
  5352  001600  EF04  F00B         	goto	u2601
  5353  001604  EF07  F00B         	goto	u2600
  5354  001608                     u2601:
  5355  001608  0E01               	movlw	1
  5356  00160A  EF08  F00B         	goto	u2610
  5357  00160E                     u2600:
  5358  00160E  0E00               	movlw	0
  5359  001610                     u2610:
  5360  001610  6E10               	movwf	___fladd@grs^0,c
  5361  001612  0E00               	movlw	0
  5362  001614  6E01               	movwf	___fladd@b^0,c
  5363  001616  0E00               	movlw	0
  5364  001618  6E02               	movwf	(___fladd@b+1)^0,c
  5365  00161A  0E00               	movlw	0
  5366  00161C  6E03               	movwf	(___fladd@b+2)^0,c
  5367  00161E  0E00               	movlw	0
  5368  001620  6E04               	movwf	(___fladd@b+3)^0,c
  5369  001622  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5370  001626  EF3B  F00B         	goto	l660
  5371  00162A                     l662:
  5372  00162A  A010               	btfss	___fladd@grs^0,0,c
  5373  00162C  EF1A  F00B         	goto	u2621
  5374  001630  EF1C  F00B         	goto	u2620
  5375  001634                     u2621:
  5376  001634  EF22  F00B         	goto	l2660
  5377  001638                     u2620:
  5378  001638  90D8               	bcf	status,0,c
  5379  00163A  3010               	rrcf	___fladd@grs^0,w,c
  5380  00163C  0901               	iorlw	1
  5381  00163E  6E10               	movwf	___fladd@grs^0,c
  5382  001640  EF24  F00B         	goto	l2662
  5383  001644                     l2660:
  5384  001644  90D8               	bcf	status,0,c
  5385  001646  3210               	rrcf	___fladd@grs^0,f,c
  5386  001648                     l2662:
  5387  001648  A001               	btfss	___fladd@b^0,0,c
  5388  00164A  EF29  F00B         	goto	u2631
  5389  00164E  EF2B  F00B         	goto	u2630
  5390  001652                     u2631:
  5391  001652  EF2C  F00B         	goto	l2666
  5392  001656                     u2630:
  5393  001656  8E10               	bsf	___fladd@grs^0,7,c
  5394  001658                     l2666:
  5395  001658  3404               	rlcf	(___fladd@b+3)^0,w,c
  5396  00165A  3204               	rrcf	(___fladd@b+3)^0,f,c
  5397  00165C  3203               	rrcf	(___fladd@b+2)^0,f,c
  5398  00165E  3202               	rrcf	(___fladd@b+1)^0,f,c
  5399  001660  3201               	rrcf	___fladd@b^0,f,c
  5400  001662  2A0F               	incf	___fladd@bexp^0,f,c
  5401  001664                     l661:
  5402  001664  500E               	movf	___fladd@aexp^0,w,c
  5403  001666  5C0F               	subwf	___fladd@bexp^0,w,c
  5404  001668  A0D8               	btfss	status,0,c
  5405  00166A  EF39  F00B         	goto	u2641
  5406  00166E  EF3B  F00B         	goto	u2640
  5407  001672                     u2641:
  5408  001672  EF15  F00B         	goto	l662
  5409  001676                     u2640:
  5410  001676                     l660:
  5411  001676  BC0D               	btfsc	___fladd@signs^0,6,c
  5412  001678  EF40  F00B         	goto	u2651
  5413  00167C  EF42  F00B         	goto	u2650
  5414  001680                     u2651:
  5415  001680  EF82  F00B         	goto	l2694
  5416  001684                     u2650:
  5417  001684  500F               	movf	___fladd@bexp^0,w,c
  5418  001686  A4D8               	btfss	status,2,c
  5419  001688  EF48  F00B         	goto	u2661
  5420  00168C  EF4A  F00B         	goto	u2660
  5421  001690                     u2661:
  5422  001690  EF54  F00B         	goto	l2676
  5423  001694                     u2660:
  5424  001694  0E00               	movlw	0
  5425  001696  6E01               	movwf	?___fladd^0,c
  5426  001698  0E00               	movlw	0
  5427  00169A  6E02               	movwf	(?___fladd+1)^0,c
  5428  00169C  0E00               	movlw	0
  5429  00169E  6E03               	movwf	(?___fladd+2)^0,c
  5430  0016A0  0E00               	movlw	0
  5431  0016A2  6E04               	movwf	(?___fladd+3)^0,c
  5432  0016A4  EFA3  F00C         	goto	l669
  5433  0016A8                     l2676:
  5434  0016A8  5005               	movf	___fladd@a^0,w,c
  5435  0016AA  2601               	addwf	___fladd@b^0,f,c
  5436  0016AC  5006               	movf	(___fladd@a+1)^0,w,c
  5437  0016AE  2202               	addwfc	(___fladd@b+1)^0,f,c
  5438  0016B0  5007               	movf	(___fladd@a+2)^0,w,c
  5439  0016B2  2203               	addwfc	(___fladd@b+2)^0,f,c
  5440  0016B4  5008               	movf	(___fladd@a+3)^0,w,c
  5441  0016B6  2204               	addwfc	(___fladd@b+3)^0,f,c
  5442  0016B8  A004               	btfss	(___fladd@b+3)^0,0,c
  5443  0016BA  EF61  F00B         	goto	u2671
  5444  0016BE  EF63  F00B         	goto	u2670
  5445  0016C2                     u2671:
  5446  0016C2  EF0F  F00C         	goto	l2730
  5447  0016C6                     u2670:
  5448  0016C6  A010               	btfss	___fladd@grs^0,0,c
  5449  0016C8  EF68  F00B         	goto	u2681
  5450  0016CC  EF6A  F00B         	goto	u2680
  5451  0016D0                     u2681:
  5452  0016D0  EF70  F00B         	goto	l2684
  5453  0016D4                     u2680:
  5454  0016D4  90D8               	bcf	status,0,c
  5455  0016D6  3010               	rrcf	___fladd@grs^0,w,c
  5456  0016D8  0901               	iorlw	1
  5457  0016DA  6E10               	movwf	___fladd@grs^0,c
  5458  0016DC  EF72  F00B         	goto	l2686
  5459  0016E0                     l2684:
  5460  0016E0  90D8               	bcf	status,0,c
  5461  0016E2  3210               	rrcf	___fladd@grs^0,f,c
  5462  0016E4                     l2686:
  5463  0016E4  A001               	btfss	___fladd@b^0,0,c
  5464  0016E6  EF77  F00B         	goto	u2691
  5465  0016EA  EF79  F00B         	goto	u2690
  5466  0016EE                     u2691:
  5467  0016EE  EF7A  F00B         	goto	l2690
  5468  0016F2                     u2690:
  5469  0016F2  8E10               	bsf	___fladd@grs^0,7,c
  5470  0016F4                     l2690:
  5471  0016F4  3404               	rlcf	(___fladd@b+3)^0,w,c
  5472  0016F6  3204               	rrcf	(___fladd@b+3)^0,f,c
  5473  0016F8  3203               	rrcf	(___fladd@b+2)^0,f,c
  5474  0016FA  3202               	rrcf	(___fladd@b+1)^0,f,c
  5475  0016FC  3201               	rrcf	___fladd@b^0,f,c
  5476  0016FE  2A0F               	incf	___fladd@bexp^0,f,c
  5477  001700  EF0F  F00C         	goto	l2730
  5478  001704                     l2694:
  5479  001704  5005               	movf	___fladd@a^0,w,c
  5480  001706  5C01               	subwf	___fladd@b^0,w,c
  5481  001708  5006               	movf	(___fladd@a+1)^0,w,c
  5482  00170A  5802               	subwfb	(___fladd@b+1)^0,w,c
  5483  00170C  5007               	movf	(___fladd@a+2)^0,w,c
  5484  00170E  5803               	subwfb	(___fladd@b+2)^0,w,c
  5485  001710  5004               	movf	(___fladd@b+3)^0,w,c
  5486  001712  0A80               	xorlw	128
  5487  001714  6E09               	movwf	??___fladd^0,c
  5488  001716  5008               	movf	(___fladd@a+3)^0,w,c
  5489  001718  0A80               	xorlw	128
  5490  00171A  5809               	subwfb	??___fladd^0,w,c
  5491  00171C  B0D8               	btfsc	status,0,c
  5492  00171E  EF93  F00B         	goto	u2701
  5493  001722  EF95  F00B         	goto	u2700
  5494  001726                     u2701:
  5495  001726  EFC0  F00B         	goto	l2704
  5496  00172A                     u2700:
  5497  00172A  5001               	movf	___fladd@b^0,w,c
  5498  00172C  5C05               	subwf	___fladd@a^0,w,c
  5499  00172E  6E09               	movwf	??___fladd^0,c
  5500  001730  5002               	movf	(___fladd@b+1)^0,w,c
  5501  001732  5806               	subwfb	(___fladd@a+1)^0,w,c
  5502  001734  6E0A               	movwf	(??___fladd+1)^0,c
  5503  001736  5003               	movf	(___fladd@b+2)^0,w,c
  5504  001738  5807               	subwfb	(___fladd@a+2)^0,w,c
  5505  00173A  6E0B               	movwf	(??___fladd+2)^0,c
  5506  00173C  5004               	movf	(___fladd@b+3)^0,w,c
  5507  00173E  5808               	subwfb	(___fladd@a+3)^0,w,c
  5508  001740  6E0C               	movwf	(??___fladd+3)^0,c
  5509  001742  0EFF               	movlw	255
  5510  001744  2409               	addwf	??___fladd^0,w,c
  5511  001746  6E01               	movwf	___fladd@b^0,c
  5512  001748  0EFF               	movlw	255
  5513  00174A  200A               	addwfc	(??___fladd+1)^0,w,c
  5514  00174C  6E02               	movwf	(___fladd@b+1)^0,c
  5515  00174E  0EFF               	movlw	255
  5516  001750  200B               	addwfc	(??___fladd+2)^0,w,c
  5517  001752  6E03               	movwf	(___fladd@b+2)^0,c
  5518  001754  0EFF               	movlw	255
  5519  001756  200C               	addwfc	(??___fladd+3)^0,w,c
  5520  001758  6E04               	movwf	(___fladd@b+3)^0,c
  5521  00175A  0E80               	movlw	128
  5522  00175C  1A0D               	xorwf	___fladd@signs^0,f,c
  5523  00175E  6C10               	negf	___fladd@grs^0,c
  5524  001760  5010               	movf	___fladd@grs^0,w,c
  5525  001762  A4D8               	btfss	status,2,c
  5526  001764  EFB6  F00B         	goto	u2711
  5527  001768  EFB8  F00B         	goto	u2710
  5528  00176C                     u2711:
  5529  00176C  EFC8  F00B         	goto	l677
  5530  001770                     u2710:
  5531  001770  0E01               	movlw	1
  5532  001772  2601               	addwf	___fladd@b^0,f,c
  5533  001774  0E00               	movlw	0
  5534  001776  2202               	addwfc	(___fladd@b+1)^0,f,c
  5535  001778  2203               	addwfc	(___fladd@b+2)^0,f,c
  5536  00177A  2204               	addwfc	(___fladd@b+3)^0,f,c
  5537  00177C  EFC8  F00B         	goto	l677
  5538  001780                     l2704:
  5539  001780  5005               	movf	___fladd@a^0,w,c
  5540  001782  5E01               	subwf	___fladd@b^0,f,c
  5541  001784  5006               	movf	(___fladd@a+1)^0,w,c
  5542  001786  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5543  001788  5007               	movf	(___fladd@a+2)^0,w,c
  5544  00178A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5545  00178C  5008               	movf	(___fladd@a+3)^0,w,c
  5546  00178E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5547  001790                     l677:
  5548  001790  5001               	movf	___fladd@b^0,w,c
  5549  001792  1002               	iorwf	(___fladd@b+1)^0,w,c
  5550  001794  1003               	iorwf	(___fladd@b+2)^0,w,c
  5551  001796  1004               	iorwf	(___fladd@b+3)^0,w,c
  5552  001798  A4D8               	btfss	status,2,c
  5553  00179A  EFD1  F00B         	goto	u2721
  5554  00179E  EFD3  F00B         	goto	u2720
  5555  0017A2                     u2721:
  5556  0017A2  EF08  F00C         	goto	l2728
  5557  0017A6                     u2720:
  5558  0017A6  5010               	movf	___fladd@grs^0,w,c
  5559  0017A8  A4D8               	btfss	status,2,c
  5560  0017AA  EFD9  F00B         	goto	u2731
  5561  0017AE  EFDB  F00B         	goto	u2730
  5562  0017B2                     u2731:
  5563  0017B2  EF08  F00C         	goto	l2728
  5564  0017B6                     u2730:
  5565  0017B6  0E00               	movlw	0
  5566  0017B8  6E01               	movwf	?___fladd^0,c
  5567  0017BA  0E00               	movlw	0
  5568  0017BC  6E02               	movwf	(?___fladd+1)^0,c
  5569  0017BE  0E00               	movlw	0
  5570  0017C0  6E03               	movwf	(?___fladd+2)^0,c
  5571  0017C2  0E00               	movlw	0
  5572  0017C4  6E04               	movwf	(?___fladd+3)^0,c
  5573  0017C6  EFA3  F00C         	goto	l669
  5574  0017CA                     l2712:
  5575  0017CA  90D8               	bcf	status,0,c
  5576  0017CC  3601               	rlcf	___fladd@b^0,f,c
  5577  0017CE  3602               	rlcf	(___fladd@b+1)^0,f,c
  5578  0017D0  3603               	rlcf	(___fladd@b+2)^0,f,c
  5579  0017D2  3604               	rlcf	(___fladd@b+3)^0,f,c
  5580  0017D4  AE10               	btfss	___fladd@grs^0,7,c
  5581  0017D6  EFEF  F00B         	goto	u2741
  5582  0017DA  EFF1  F00B         	goto	u2740
  5583  0017DE                     u2741:
  5584  0017DE  EFF2  F00B         	goto	l2718
  5585  0017E2                     u2740:
  5586  0017E2  8001               	bsf	___fladd@b^0,0,c
  5587  0017E4                     l2718:
  5588  0017E4  A010               	btfss	___fladd@grs^0,0,c
  5589  0017E6  EFF7  F00B         	goto	u2751
  5590  0017EA  EFF9  F00B         	goto	u2750
  5591  0017EE                     u2751:
  5592  0017EE  EFFD  F00B         	goto	l2722
  5593  0017F2                     u2750:
  5594  0017F2  80D8               	bsf	status,0,c
  5595  0017F4  3610               	rlcf	___fladd@grs^0,f,c
  5596  0017F6  EFFF  F00B         	goto	l2724
  5597  0017FA                     l2722:
  5598  0017FA  90D8               	bcf	status,0,c
  5599  0017FC  3610               	rlcf	___fladd@grs^0,f,c
  5600  0017FE                     l2724:
  5601  0017FE  500F               	movf	___fladd@bexp^0,w,c
  5602  001800  B4D8               	btfsc	status,2,c
  5603  001802  EF05  F00C         	goto	u2761
  5604  001806  EF07  F00C         	goto	u2760
  5605  00180A                     u2761:
  5606  00180A  EF08  F00C         	goto	l2728
  5607  00180E                     u2760:
  5608  00180E  060F               	decf	___fladd@bexp^0,f,c
  5609  001810                     l2728:
  5610  001810  AE03               	btfss	(___fladd@b+2)^0,7,c
  5611  001812  EF0D  F00C         	goto	u2771
  5612  001816  EF0F  F00C         	goto	u2770
  5613  00181A                     u2771:
  5614  00181A  EFE5  F00B         	goto	l2712
  5615  00181E                     u2770:
  5616  00181E                     l2730:
  5617  00181E  0E00               	movlw	0
  5618  001820  6E0E               	movwf	___fladd@aexp^0,c
  5619  001822  AE10               	btfss	___fladd@grs^0,7,c
  5620  001824  EF16  F00C         	goto	u2781
  5621  001828  EF18  F00C         	goto	u2780
  5622  00182C                     u2781:
  5623  00182C  EF30  F00C         	goto	l686
  5624  001830                     u2780:
  5625  001830  C010  F009         	movff	___fladd@grs,??___fladd
  5626  001834  0E7F               	movlw	127
  5627  001836  1609               	andwf	??___fladd^0,f,c
  5628  001838  B4D8               	btfsc	status,2,c
  5629  00183A  EF21  F00C         	goto	u2791
  5630  00183E  EF23  F00C         	goto	u2790
  5631  001842                     u2791:
  5632  001842  EF27  F00C         	goto	l687
  5633  001846                     u2790:
  5634  001846                     l2736:
  5635  001846  0E01               	movlw	1
  5636  001848  6E0E               	movwf	___fladd@aexp^0,c
  5637  00184A  EF30  F00C         	goto	l686
  5638  00184E                     l687:
  5639  00184E  A001               	btfss	___fladd@b^0,0,c
  5640  001850  EF2C  F00C         	goto	u2801
  5641  001854  EF2E  F00C         	goto	u2800
  5642  001858                     u2801:
  5643  001858  EF30  F00C         	goto	l686
  5644  00185C                     u2800:
  5645  00185C  EF23  F00C         	goto	l2736
  5646  001860                     l686:
  5647  001860  500E               	movf	___fladd@aexp^0,w,c
  5648  001862  B4D8               	btfsc	status,2,c
  5649  001864  EF36  F00C         	goto	u2811
  5650  001868  EF38  F00C         	goto	u2810
  5651  00186C                     u2811:
  5652  00186C  EF63  F00C         	goto	l2748
  5653  001870                     u2810:
  5654  001870  0E01               	movlw	1
  5655  001872  2601               	addwf	___fladd@b^0,f,c
  5656  001874  0E00               	movlw	0
  5657  001876  2202               	addwfc	(___fladd@b+1)^0,f,c
  5658  001878  2203               	addwfc	(___fladd@b+2)^0,f,c
  5659  00187A  2204               	addwfc	(___fladd@b+3)^0,f,c
  5660  00187C  A004               	btfss	(___fladd@b+3)^0,0,c
  5661  00187E  EF43  F00C         	goto	u2821
  5662  001882  EF45  F00C         	goto	u2820
  5663  001886                     u2821:
  5664  001886  EF63  F00C         	goto	l2748
  5665  00188A                     u2820:
  5666  00188A  C001  F009         	movff	___fladd@b,??___fladd
  5667  00188E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5668  001892  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5669  001896  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5670  00189A  340C               	rlcf	(??___fladd+3)^0,w,c
  5671  00189C  320C               	rrcf	(??___fladd+3)^0,f,c
  5672  00189E  320B               	rrcf	(??___fladd+2)^0,f,c
  5673  0018A0  320A               	rrcf	(??___fladd+1)^0,f,c
  5674  0018A2  3209               	rrcf	??___fladd^0,f,c
  5675  0018A4  C009  F001         	movff	??___fladd,___fladd@b
  5676  0018A8  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5677  0018AC  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5678  0018B0  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5679  0018B4  280F               	incf	___fladd@bexp^0,w,c
  5680  0018B6  B4D8               	btfsc	status,2,c
  5681  0018B8  EF60  F00C         	goto	u2831
  5682  0018BC  EF62  F00C         	goto	u2830
  5683  0018C0                     u2831:
  5684  0018C0  EF63  F00C         	goto	l2748
  5685  0018C4                     u2830:
  5686  0018C4  2A0F               	incf	___fladd@bexp^0,f,c
  5687  0018C6                     l2748:
  5688  0018C6  280F               	incf	___fladd@bexp^0,w,c
  5689  0018C8  B4D8               	btfsc	status,2,c
  5690  0018CA  EF69  F00C         	goto	u2841
  5691  0018CE  EF6B  F00C         	goto	u2840
  5692  0018D2                     u2841:
  5693  0018D2  EF73  F00C         	goto	l2752
  5694  0018D6                     u2840:
  5695  0018D6  500F               	movf	___fladd@bexp^0,w,c
  5696  0018D8  A4D8               	btfss	status,2,c
  5697  0018DA  EF71  F00C         	goto	u2851
  5698  0018DE  EF73  F00C         	goto	u2850
  5699  0018E2                     u2851:
  5700  0018E2  EF85  F00C         	goto	l2756
  5701  0018E6                     u2850:
  5702  0018E6                     l2752:
  5703  0018E6  0E00               	movlw	0
  5704  0018E8  6E01               	movwf	___fladd@b^0,c
  5705  0018EA  0E00               	movlw	0
  5706  0018EC  6E02               	movwf	(___fladd@b+1)^0,c
  5707  0018EE  0E00               	movlw	0
  5708  0018F0  6E03               	movwf	(___fladd@b+2)^0,c
  5709  0018F2  0E00               	movlw	0
  5710  0018F4  6E04               	movwf	(___fladd@b+3)^0,c
  5711  0018F6  500F               	movf	___fladd@bexp^0,w,c
  5712  0018F8  A4D8               	btfss	status,2,c
  5713  0018FA  EF81  F00C         	goto	u2861
  5714  0018FE  EF83  F00C         	goto	u2860
  5715  001902                     u2861:
  5716  001902  EF85  F00C         	goto	l2756
  5717  001906                     u2860:
  5718  001906  0E00               	movlw	0
  5719  001908  6E0D               	movwf	___fladd@signs^0,c
  5720  00190A                     l2756:
  5721  00190A  A00F               	btfss	___fladd@bexp^0,0,c
  5722  00190C  EF8A  F00C         	goto	u2871
  5723  001910  EF8C  F00C         	goto	u2870
  5724  001914                     u2871:
  5725  001914  EF8F  F00C         	goto	l2760
  5726  001918                     u2870:
  5727  001918  8E03               	bsf	(___fladd@b+2)^0,7,c
  5728  00191A  EF90  F00C         	goto	l2762
  5729  00191E                     l2760:
  5730  00191E  9E03               	bcf	(___fladd@b+2)^0,7,c
  5731  001920                     l2762:
  5732  001920  90D8               	bcf	status,0,c
  5733  001922  300F               	rrcf	___fladd@bexp^0,w,c
  5734  001924  6E04               	movwf	(___fladd@b+3)^0,c
  5735  001926  AE0D               	btfss	___fladd@signs^0,7,c
  5736  001928  EF98  F00C         	goto	u2881
  5737  00192C  EF9A  F00C         	goto	u2880
  5738  001930                     u2881:
  5739  001930  EF9B  F00C         	goto	l2768
  5740  001934                     u2880:
  5741  001934  8E04               	bsf	(___fladd@b+3)^0,7,c
  5742  001936                     l2768:
  5743  001936  C001  F001         	movff	___fladd@b,?___fladd
  5744  00193A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5745  00193E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5746  001942  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5747  001946                     l669:
  5748  001946  0012               	return		;funcret
  5749  001948                     __end_of___fladd:
  5750                           	callstack 0
  5751                           
  5752 ;; *************** function ___flneg *****************
  5753 ;; Defined at:
  5754 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  f1              4    0[COMRAM] unsigned char 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;		None
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  4    0[COMRAM] unsigned char 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5768 ;;      Params:         4       0       0       0       0       0       0       0       0
  5769 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5771 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5772 ;;Total ram usage:        4 bytes
  5773 ;; Hardware stack levels used: 1
  5774 ;; Hardware stack levels required when called: 1
  5775 ;; This function calls:
  5776 ;;		Nothing
  5777 ;; This function is called by:
  5778 ;;		_efgtoa
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text19
  5783  00378C                     __ptext19:
  5784                           	callstack 0
  5785  00378C                     ___flneg:
  5786                           	callstack 25
  5787  00378C  5001               	movf	___flneg@f1^0,w,c
  5788  00378E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5789  003790  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5790  003792  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5791  003794  B4D8               	btfsc	status,2,c
  5792  003796  EFCF  F01B         	goto	u3551
  5793  00379A  EFD1  F01B         	goto	u3550
  5794  00379E                     u3551:
  5795  00379E  EFD9  F01B         	goto	l3196
  5796  0037A2                     u3550:
  5797  0037A2  0E00               	movlw	0
  5798  0037A4  1A01               	xorwf	___flneg@f1^0,f,c
  5799  0037A6  0E00               	movlw	0
  5800  0037A8  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5801  0037AA  0E00               	movlw	0
  5802  0037AC  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5803  0037AE  0E80               	movlw	128
  5804  0037B0  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5805  0037B2                     l3196:
  5806  0037B2  C001  F001         	movff	___flneg@f1,?___flneg
  5807  0037B6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5808  0037BA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5809  0037BE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5810  0037C2  0012               	return		;funcret
  5811  0037C4                     __end_of___flneg:
  5812                           	callstack 0
  5813                           
  5814 ;; *************** function ___flmul *****************
  5815 ;; Defined at:
  5816 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  b               4   39[COMRAM] unsigned char 
  5819 ;;  a               4   43[COMRAM] unsigned char 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  prod            4   58[COMRAM] struct .
  5822 ;;  grs             4   52[COMRAM] unsigned long 
  5823 ;;  temp            2   62[COMRAM] struct .
  5824 ;;  bexp            1   57[COMRAM] unsigned char 
  5825 ;;  aexp            1   56[COMRAM] unsigned char 
  5826 ;;  sign            1   51[COMRAM] unsigned char 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  4   39[COMRAM] unsigned char 
  5829 ;; Registers used:
  5830 ;;		wreg, status,2, status,0, prodl, prodh
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5836 ;;      Params:         8       0       0       0       0       0       0       0       0
  5837 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5838 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5839 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5840 ;;Total ram usage:       25 bytes
  5841 ;; Hardware stack levels used: 1
  5842 ;; Hardware stack levels required when called: 1
  5843 ;; This function calls:
  5844 ;;		Nothing
  5845 ;; This function is called by:
  5846 ;;		_main
  5847 ;;		_efgtoa
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text20
  5852  001DB2                     __ptext20:
  5853                           	callstack 0
  5854  001DB2                     ___flmul:
  5855                           	callstack 25
  5856  001DB2  502B               	movf	(___flmul@b+3)^0,w,c
  5857  001DB4  0B80               	andlw	128
  5858  001DB6  6E34               	movwf	___flmul@sign^0,c
  5859  001DB8  502B               	movf	(___flmul@b+3)^0,w,c
  5860  001DBA  242B               	addwf	(___flmul@b+3)^0,w,c
  5861  001DBC  6E3A               	movwf	___flmul@bexp^0,c
  5862  001DBE  AE2A               	btfss	(___flmul@b+2)^0,7,c
  5863  001DC0  EFE4  F00E         	goto	u3161
  5864  001DC4  EFE6  F00E         	goto	u3160
  5865  001DC8                     u3161:
  5866  001DC8  EFE7  F00E         	goto	l2944
  5867  001DCC                     u3160:
  5868  001DCC  803A               	bsf	___flmul@bexp^0,0,c
  5869  001DCE                     l2944:
  5870  001DCE  503A               	movf	___flmul@bexp^0,w,c
  5871  001DD0  B4D8               	btfsc	status,2,c
  5872  001DD2  EFED  F00E         	goto	u3171
  5873  001DD6  EFEF  F00E         	goto	u3170
  5874  001DDA                     u3171:
  5875  001DDA  EF02  F00F         	goto	l2952
  5876  001DDE                     u3170:
  5877  001DDE  283A               	incf	___flmul@bexp^0,w,c
  5878  001DE0  A4D8               	btfss	status,2,c
  5879  001DE2  EFF5  F00E         	goto	u3181
  5880  001DE6  EFF7  F00E         	goto	u3180
  5881  001DEA                     u3181:
  5882  001DEA  EFFF  F00E         	goto	l2950
  5883  001DEE                     u3180:
  5884  001DEE  0E00               	movlw	0
  5885  001DF0  6E28               	movwf	___flmul@b^0,c
  5886  001DF2  0E00               	movlw	0
  5887  001DF4  6E29               	movwf	(___flmul@b+1)^0,c
  5888  001DF6  0E00               	movlw	0
  5889  001DF8  6E2A               	movwf	(___flmul@b+2)^0,c
  5890  001DFA  0E00               	movlw	0
  5891  001DFC  6E2B               	movwf	(___flmul@b+3)^0,c
  5892  001DFE                     l2950:
  5893  001DFE  8E2A               	bsf	(___flmul@b+2)^0,7,c
  5894  001E00  EF0A  F00F         	goto	l2954
  5895  001E04                     l2952:
  5896  001E04  0E00               	movlw	0
  5897  001E06  6E28               	movwf	___flmul@b^0,c
  5898  001E08  0E00               	movlw	0
  5899  001E0A  6E29               	movwf	(___flmul@b+1)^0,c
  5900  001E0C  0E00               	movlw	0
  5901  001E0E  6E2A               	movwf	(___flmul@b+2)^0,c
  5902  001E10  0E00               	movlw	0
  5903  001E12  6E2B               	movwf	(___flmul@b+3)^0,c
  5904  001E14                     l2954:
  5905  001E14  502F               	movf	(___flmul@a+3)^0,w,c
  5906  001E16  0B80               	andlw	128
  5907  001E18  1A34               	xorwf	___flmul@sign^0,f,c
  5908  001E1A  502F               	movf	(___flmul@a+3)^0,w,c
  5909  001E1C  242F               	addwf	(___flmul@a+3)^0,w,c
  5910  001E1E  6E39               	movwf	___flmul@aexp^0,c
  5911  001E20  AE2E               	btfss	(___flmul@a+2)^0,7,c
  5912  001E22  EF15  F00F         	goto	u3191
  5913  001E26  EF17  F00F         	goto	u3190
  5914  001E2A                     u3191:
  5915  001E2A  EF18  F00F         	goto	l2962
  5916  001E2E                     u3190:
  5917  001E2E  8039               	bsf	___flmul@aexp^0,0,c
  5918  001E30                     l2962:
  5919  001E30  5039               	movf	___flmul@aexp^0,w,c
  5920  001E32  B4D8               	btfsc	status,2,c
  5921  001E34  EF1E  F00F         	goto	u3201
  5922  001E38  EF20  F00F         	goto	u3200
  5923  001E3C                     u3201:
  5924  001E3C  EF33  F00F         	goto	l2970
  5925  001E40                     u3200:
  5926  001E40  2839               	incf	___flmul@aexp^0,w,c
  5927  001E42  A4D8               	btfss	status,2,c
  5928  001E44  EF26  F00F         	goto	u3211
  5929  001E48  EF28  F00F         	goto	u3210
  5930  001E4C                     u3211:
  5931  001E4C  EF30  F00F         	goto	l2968
  5932  001E50                     u3210:
  5933  001E50  0E00               	movlw	0
  5934  001E52  6E2C               	movwf	___flmul@a^0,c
  5935  001E54  0E00               	movlw	0
  5936  001E56  6E2D               	movwf	(___flmul@a+1)^0,c
  5937  001E58  0E00               	movlw	0
  5938  001E5A  6E2E               	movwf	(___flmul@a+2)^0,c
  5939  001E5C  0E00               	movlw	0
  5940  001E5E  6E2F               	movwf	(___flmul@a+3)^0,c
  5941  001E60                     l2968:
  5942  001E60  8E2E               	bsf	(___flmul@a+2)^0,7,c
  5943  001E62  EF3B  F00F         	goto	l746
  5944  001E66                     l2970:
  5945  001E66  0E00               	movlw	0
  5946  001E68  6E2C               	movwf	___flmul@a^0,c
  5947  001E6A  0E00               	movlw	0
  5948  001E6C  6E2D               	movwf	(___flmul@a+1)^0,c
  5949  001E6E  0E00               	movlw	0
  5950  001E70  6E2E               	movwf	(___flmul@a+2)^0,c
  5951  001E72  0E00               	movlw	0
  5952  001E74  6E2F               	movwf	(___flmul@a+3)^0,c
  5953  001E76                     l746:
  5954  001E76  5039               	movf	___flmul@aexp^0,w,c
  5955  001E78  B4D8               	btfsc	status,2,c
  5956  001E7A  EF41  F00F         	goto	u3221
  5957  001E7E  EF43  F00F         	goto	u3220
  5958  001E82                     u3221:
  5959  001E82  EF4B  F00F         	goto	l2974
  5960  001E86                     u3220:
  5961  001E86  503A               	movf	___flmul@bexp^0,w,c
  5962  001E88  A4D8               	btfss	status,2,c
  5963  001E8A  EF49  F00F         	goto	u3231
  5964  001E8E  EF4B  F00F         	goto	u3230
  5965  001E92                     u3231:
  5966  001E92  EF55  F00F         	goto	l2978
  5967  001E96                     u3230:
  5968  001E96                     l2974:
  5969  001E96  0E00               	movlw	0
  5970  001E98  6E28               	movwf	?___flmul^0,c
  5971  001E9A  0E00               	movlw	0
  5972  001E9C  6E29               	movwf	(?___flmul+1)^0,c
  5973  001E9E  0E00               	movlw	0
  5974  001EA0  6E2A               	movwf	(?___flmul+2)^0,c
  5975  001EA2  0E00               	movlw	0
  5976  001EA4  6E2B               	movwf	(?___flmul+3)^0,c
  5977  001EA6  EFED  F010         	goto	l750
  5978  001EAA                     l2978:
  5979  001EAA  502E               	movf	(___flmul@a+2)^0,w,c
  5980  001EAC  0228               	mulwf	___flmul@b^0,c
  5981  001EAE  CFF3 F03F          	movff	prodl,___flmul@temp
  5982  001EB2  CFF4 F040          	movff	prodh,___flmul@temp+1
  5983  001EB6  503F               	movf	___flmul@temp^0,w,c
  5984  001EB8  6E35               	movwf	___flmul@grs^0,c
  5985  001EBA  6A36               	clrf	(___flmul@grs+1)^0,c
  5986  001EBC  6A37               	clrf	(___flmul@grs+2)^0,c
  5987  001EBE  6A38               	clrf	(___flmul@grs+3)^0,c
  5988  001EC0  5040               	movf	(___flmul@temp+1)^0,w,c
  5989  001EC2  6E3B               	movwf	___flmul@prod^0,c
  5990  001EC4  6A3C               	clrf	(___flmul@prod+1)^0,c
  5991  001EC6  6A3D               	clrf	(___flmul@prod+2)^0,c
  5992  001EC8  6A3E               	clrf	(___flmul@prod+3)^0,c
  5993  001ECA  502D               	movf	(___flmul@a+1)^0,w,c
  5994  001ECC  0229               	mulwf	(___flmul@b+1)^0,c
  5995  001ECE  CFF3 F03F          	movff	prodl,___flmul@temp
  5996  001ED2  CFF4 F040          	movff	prodh,___flmul@temp+1
  5997  001ED6  503F               	movf	___flmul@temp^0,w,c
  5998  001ED8  2635               	addwf	___flmul@grs^0,f,c
  5999  001EDA  0E00               	movlw	0
  6000  001EDC  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6001  001EDE  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6002  001EE0  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6003  001EE2  5040               	movf	(___flmul@temp+1)^0,w,c
  6004  001EE4  263B               	addwf	___flmul@prod^0,f,c
  6005  001EE6  0E00               	movlw	0
  6006  001EE8  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6007  001EEA  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6008  001EEC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6009  001EEE  502C               	movf	___flmul@a^0,w,c
  6010  001EF0  022A               	mulwf	(___flmul@b+2)^0,c
  6011  001EF2  CFF3 F03F          	movff	prodl,___flmul@temp
  6012  001EF6  CFF4 F040          	movff	prodh,___flmul@temp+1
  6013  001EFA  503F               	movf	___flmul@temp^0,w,c
  6014  001EFC  2635               	addwf	___flmul@grs^0,f,c
  6015  001EFE  0E00               	movlw	0
  6016  001F00  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6017  001F02  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6018  001F04  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6019  001F06  5040               	movf	(___flmul@temp+1)^0,w,c
  6020  001F08  263B               	addwf	___flmul@prod^0,f,c
  6021  001F0A  0E00               	movlw	0
  6022  001F0C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6023  001F0E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6024  001F10  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6025  001F12  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6026  001F16  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6027  001F1A  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6028  001F1E  6A35               	clrf	___flmul@grs^0,c
  6029  001F20  502C               	movf	___flmul@a^0,w,c
  6030  001F22  0229               	mulwf	(___flmul@b+1)^0,c
  6031  001F24  CFF3 F03F          	movff	prodl,___flmul@temp
  6032  001F28  CFF4 F040          	movff	prodh,___flmul@temp+1
  6033  001F2C  503F               	movf	___flmul@temp^0,w,c
  6034  001F2E  2635               	addwf	___flmul@grs^0,f,c
  6035  001F30  5040               	movf	(___flmul@temp+1)^0,w,c
  6036  001F32  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6037  001F34  0E00               	movlw	0
  6038  001F36  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6039  001F38  0E00               	movlw	0
  6040  001F3A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6041  001F3C  502D               	movf	(___flmul@a+1)^0,w,c
  6042  001F3E  0228               	mulwf	___flmul@b^0,c
  6043  001F40  CFF3 F03F          	movff	prodl,___flmul@temp
  6044  001F44  CFF4 F040          	movff	prodh,___flmul@temp+1
  6045  001F48  503F               	movf	___flmul@temp^0,w,c
  6046  001F4A  2635               	addwf	___flmul@grs^0,f,c
  6047  001F4C  5040               	movf	(___flmul@temp+1)^0,w,c
  6048  001F4E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6049  001F50  0E00               	movlw	0
  6050  001F52  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6051  001F54  0E00               	movlw	0
  6052  001F56  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6053  001F58  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6054  001F5C  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6055  001F60  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6056  001F64  6A35               	clrf	___flmul@grs^0,c
  6057  001F66  502C               	movf	___flmul@a^0,w,c
  6058  001F68  0228               	mulwf	___flmul@b^0,c
  6059  001F6A  CFF3 F03F          	movff	prodl,___flmul@temp
  6060  001F6E  CFF4 F040          	movff	prodh,___flmul@temp+1
  6061  001F72  503F               	movf	___flmul@temp^0,w,c
  6062  001F74  2635               	addwf	___flmul@grs^0,f,c
  6063  001F76  5040               	movf	(___flmul@temp+1)^0,w,c
  6064  001F78  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6065  001F7A  0E00               	movlw	0
  6066  001F7C  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6067  001F7E  0E00               	movlw	0
  6068  001F80  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6069  001F82  502E               	movf	(___flmul@a+2)^0,w,c
  6070  001F84  0229               	mulwf	(___flmul@b+1)^0,c
  6071  001F86  CFF3 F03F          	movff	prodl,___flmul@temp
  6072  001F8A  CFF4 F040          	movff	prodh,___flmul@temp+1
  6073  001F8E  503F               	movf	___flmul@temp^0,w,c
  6074  001F90  263B               	addwf	___flmul@prod^0,f,c
  6075  001F92  5040               	movf	(___flmul@temp+1)^0,w,c
  6076  001F94  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6077  001F96  0E00               	movlw	0
  6078  001F98  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6079  001F9A  0E00               	movlw	0
  6080  001F9C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6081  001F9E  502D               	movf	(___flmul@a+1)^0,w,c
  6082  001FA0  022A               	mulwf	(___flmul@b+2)^0,c
  6083  001FA2  CFF3 F03F          	movff	prodl,___flmul@temp
  6084  001FA6  CFF4 F040          	movff	prodh,___flmul@temp+1
  6085  001FAA  503F               	movf	___flmul@temp^0,w,c
  6086  001FAC  263B               	addwf	___flmul@prod^0,f,c
  6087  001FAE  5040               	movf	(___flmul@temp+1)^0,w,c
  6088  001FB0  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6089  001FB2  0E00               	movlw	0
  6090  001FB4  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6091  001FB6  0E00               	movlw	0
  6092  001FB8  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6093  001FBA  502E               	movf	(___flmul@a+2)^0,w,c
  6094  001FBC  022A               	mulwf	(___flmul@b+2)^0,c
  6095  001FBE  CFF3 F03F          	movff	prodl,___flmul@temp
  6096  001FC2  CFF4 F040          	movff	prodh,___flmul@temp+1
  6097  001FC6  503F               	movf	___flmul@temp^0,w,c
  6098  001FC8  6E30               	movwf	??___flmul^0,c
  6099  001FCA  5040               	movf	(___flmul@temp+1)^0,w,c
  6100  001FCC  6E31               	movwf	(??___flmul+1)^0,c
  6101  001FCE  6A32               	clrf	(??___flmul+2)^0,c
  6102  001FD0  6A33               	clrf	(??___flmul+3)^0,c
  6103  001FD2  C032  F033         	movff	??___flmul+2,??___flmul+3
  6104  001FD6  C031  F032         	movff	??___flmul+1,??___flmul+2
  6105  001FDA  C030  F031         	movff	??___flmul,??___flmul+1
  6106  001FDE  6A30               	clrf	??___flmul^0,c
  6107  001FE0  5030               	movf	??___flmul^0,w,c
  6108  001FE2  263B               	addwf	___flmul@prod^0,f,c
  6109  001FE4  5031               	movf	(??___flmul+1)^0,w,c
  6110  001FE6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6111  001FE8  5032               	movf	(??___flmul+2)^0,w,c
  6112  001FEA  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6113  001FEC  5033               	movf	(??___flmul+3)^0,w,c
  6114  001FEE  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6115  001FF0  C035  F030         	movff	___flmul@grs,??___flmul
  6116  001FF4  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  6117  001FF8  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  6118  001FFC  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  6119  002000  0E19               	movlw	25
  6120  002002  EF08  F010         	goto	u3240
  6121  002006                     u3245:
  6122  002006  90D8               	bcf	status,0,c
  6123  002008  3233               	rrcf	(??___flmul+3)^0,f,c
  6124  00200A  3232               	rrcf	(??___flmul+2)^0,f,c
  6125  00200C  3231               	rrcf	(??___flmul+1)^0,f,c
  6126  00200E  3230               	rrcf	??___flmul^0,f,c
  6127  002010                     u3240:
  6128  002010  2EE8               	decfsz	wreg,f,c
  6129  002012  EF03  F010         	goto	u3245
  6130  002016  5030               	movf	??___flmul^0,w,c
  6131  002018  263B               	addwf	___flmul@prod^0,f,c
  6132  00201A  5031               	movf	(??___flmul+1)^0,w,c
  6133  00201C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6134  00201E  5032               	movf	(??___flmul+2)^0,w,c
  6135  002020  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6136  002022  5033               	movf	(??___flmul+3)^0,w,c
  6137  002024  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6138  002026  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6139  00202A  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6140  00202E  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6141  002032  6A35               	clrf	___flmul@grs^0,c
  6142  002034  5039               	movf	___flmul@aexp^0,w,c
  6143  002036  C03A  F030         	movff	___flmul@bexp,??___flmul
  6144  00203A  6A31               	clrf	(??___flmul+1)^0,c
  6145  00203C  2630               	addwf	??___flmul^0,f,c
  6146  00203E  0E00               	movlw	0
  6147  002040  2231               	addwfc	(??___flmul+1)^0,f,c
  6148  002042  0E82               	movlw	130
  6149  002044  2430               	addwf	??___flmul^0,w,c
  6150  002046  6E3F               	movwf	___flmul@temp^0,c
  6151  002048  0EFF               	movlw	255
  6152  00204A  2031               	addwfc	(??___flmul+1)^0,w,c
  6153  00204C  6E40               	movwf	(___flmul@temp+1)^0,c
  6154  00204E  EF3E  F010         	goto	l3026
  6155  002052                     l3020:
  6156  002052  90D8               	bcf	status,0,c
  6157  002054  363B               	rlcf	___flmul@prod^0,f,c
  6158  002056  363C               	rlcf	(___flmul@prod+1)^0,f,c
  6159  002058  363D               	rlcf	(___flmul@prod+2)^0,f,c
  6160  00205A  363E               	rlcf	(___flmul@prod+3)^0,f,c
  6161  00205C  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6162  00205E  EF33  F010         	goto	u3251
  6163  002062  EF35  F010         	goto	u3250
  6164  002066                     u3251:
  6165  002066  EF36  F010         	goto	l753
  6166  00206A                     u3250:
  6167  00206A  803B               	bsf	___flmul@prod^0,0,c
  6168  00206C                     l753:
  6169  00206C  90D8               	bcf	status,0,c
  6170  00206E  3635               	rlcf	___flmul@grs^0,f,c
  6171  002070  3636               	rlcf	(___flmul@grs+1)^0,f,c
  6172  002072  3637               	rlcf	(___flmul@grs+2)^0,f,c
  6173  002074  3638               	rlcf	(___flmul@grs+3)^0,f,c
  6174  002076  063F               	decf	___flmul@temp^0,f,c
  6175  002078  A0D8               	btfss	status,0,c
  6176  00207A  0640               	decf	(___flmul@temp+1)^0,f,c
  6177  00207C                     l3026:
  6178  00207C  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  6179  00207E  EF43  F010         	goto	u3261
  6180  002082  EF45  F010         	goto	u3260
  6181  002086                     u3261:
  6182  002086  EF29  F010         	goto	l3020
  6183  00208A                     u3260:
  6184  00208A  0E00               	movlw	0
  6185  00208C  6E39               	movwf	___flmul@aexp^0,c
  6186  00208E  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6187  002090  EF4C  F010         	goto	u3271
  6188  002094  EF4E  F010         	goto	u3270
  6189  002098                     u3271:
  6190  002098  EF72  F010         	goto	l755
  6191  00209C                     u3270:
  6192  00209C  0EFF               	movlw	255
  6193  00209E  1435               	andwf	___flmul@grs^0,w,c
  6194  0020A0  6E30               	movwf	??___flmul^0,c
  6195  0020A2  0EFF               	movlw	255
  6196  0020A4  1436               	andwf	(___flmul@grs+1)^0,w,c
  6197  0020A6  6E31               	movwf	(??___flmul+1)^0,c
  6198  0020A8  0EFF               	movlw	255
  6199  0020AA  1437               	andwf	(___flmul@grs+2)^0,w,c
  6200  0020AC  6E32               	movwf	(??___flmul+2)^0,c
  6201  0020AE  0E7F               	movlw	127
  6202  0020B0  1438               	andwf	(___flmul@grs+3)^0,w,c
  6203  0020B2  6E33               	movwf	(??___flmul+3)^0,c
  6204  0020B4  5030               	movf	??___flmul^0,w,c
  6205  0020B6  1031               	iorwf	(??___flmul+1)^0,w,c
  6206  0020B8  1032               	iorwf	(??___flmul+2)^0,w,c
  6207  0020BA  1033               	iorwf	(??___flmul+3)^0,w,c
  6208  0020BC  B4D8               	btfsc	status,2,c
  6209  0020BE  EF63  F010         	goto	u3281
  6210  0020C2  EF65  F010         	goto	u3280
  6211  0020C6                     u3281:
  6212  0020C6  EF69  F010         	goto	l756
  6213  0020CA                     u3280:
  6214  0020CA                     l3034:
  6215  0020CA  0E01               	movlw	1
  6216  0020CC  6E39               	movwf	___flmul@aexp^0,c
  6217  0020CE  EF72  F010         	goto	l755
  6218  0020D2                     l756:
  6219  0020D2  A03B               	btfss	___flmul@prod^0,0,c
  6220  0020D4  EF6E  F010         	goto	u3291
  6221  0020D8  EF70  F010         	goto	u3290
  6222  0020DC                     u3291:
  6223  0020DC  EF72  F010         	goto	l755
  6224  0020E0                     u3290:
  6225  0020E0  EF65  F010         	goto	l3034
  6226  0020E4                     l755:
  6227  0020E4  5039               	movf	___flmul@aexp^0,w,c
  6228  0020E6  B4D8               	btfsc	status,2,c
  6229  0020E8  EF78  F010         	goto	u3301
  6230  0020EC  EF7A  F010         	goto	u3300
  6231  0020F0                     u3301:
  6232  0020F0  EF9E  F010         	goto	l3046
  6233  0020F4                     u3300:
  6234  0020F4  0E01               	movlw	1
  6235  0020F6  263B               	addwf	___flmul@prod^0,f,c
  6236  0020F8  0E00               	movlw	0
  6237  0020FA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6238  0020FC  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6239  0020FE  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6240  002100  A03E               	btfss	(___flmul@prod+3)^0,0,c
  6241  002102  EF85  F010         	goto	u3311
  6242  002106  EF87  F010         	goto	u3310
  6243  00210A                     u3311:
  6244  00210A  EF9E  F010         	goto	l3046
  6245  00210E                     u3310:
  6246  00210E  C03B  F030         	movff	___flmul@prod,??___flmul
  6247  002112  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  6248  002116  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  6249  00211A  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  6250  00211E  3433               	rlcf	(??___flmul+3)^0,w,c
  6251  002120  3233               	rrcf	(??___flmul+3)^0,f,c
  6252  002122  3232               	rrcf	(??___flmul+2)^0,f,c
  6253  002124  3231               	rrcf	(??___flmul+1)^0,f,c
  6254  002126  3230               	rrcf	??___flmul^0,f,c
  6255  002128  C030  F03B         	movff	??___flmul,___flmul@prod
  6256  00212C  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  6257  002130  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  6258  002134  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  6259  002138  4A3F               	infsnz	___flmul@temp^0,f,c
  6260  00213A  2A40               	incf	(___flmul@temp+1)^0,f,c
  6261  00213C                     l3046:
  6262  00213C  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6263  00213E  EFA9  F010         	goto	u3321
  6264  002142  5040               	movf	(___flmul@temp+1)^0,w,c
  6265  002144  E108               	bnz	u3320
  6266  002146  283F               	incf	___flmul@temp^0,w,c
  6267  002148  A0D8               	btfss	status,0,c
  6268  00214A  EFA9  F010         	goto	u3321
  6269  00214E  EFAB  F010         	goto	u3320
  6270  002152                     u3321:
  6271  002152  EFB5  F010         	goto	l3050
  6272  002156                     u3320:
  6273  002156  0E00               	movlw	0
  6274  002158  6E3B               	movwf	___flmul@prod^0,c
  6275  00215A  0E00               	movlw	0
  6276  00215C  6E3C               	movwf	(___flmul@prod+1)^0,c
  6277  00215E  0E80               	movlw	128
  6278  002160  6E3D               	movwf	(___flmul@prod+2)^0,c
  6279  002162  0E7F               	movlw	127
  6280  002164  6E3E               	movwf	(___flmul@prod+3)^0,c
  6281  002166  EFE3  F010         	goto	l3062
  6282  00216A                     l3050:
  6283  00216A  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6284  00216C  EFC2  F010         	goto	u3330
  6285  002170  5040               	movf	(___flmul@temp+1)^0,w,c
  6286  002172  E106               	bnz	u3331
  6287  002174  043F               	decf	___flmul@temp^0,w,c
  6288  002176  B0D8               	btfsc	status,0,c
  6289  002178  EFC0  F010         	goto	u3331
  6290  00217C  EFC2  F010         	goto	u3330
  6291  002180                     u3331:
  6292  002180  EFCE  F010         	goto	l763
  6293  002184                     u3330:
  6294  002184  0E00               	movlw	0
  6295  002186  6E3B               	movwf	___flmul@prod^0,c
  6296  002188  0E00               	movlw	0
  6297  00218A  6E3C               	movwf	(___flmul@prod+1)^0,c
  6298  00218C  0E00               	movlw	0
  6299  00218E  6E3D               	movwf	(___flmul@prod+2)^0,c
  6300  002190  0E00               	movlw	0
  6301  002192  6E3E               	movwf	(___flmul@prod+3)^0,c
  6302  002194  0E00               	movlw	0
  6303  002196  6E34               	movwf	___flmul@sign^0,c
  6304  002198  EFE3  F010         	goto	l3062
  6305  00219C                     l763:
  6306  00219C  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  6307  0021A0  0EFF               	movlw	255
  6308  0021A2  163B               	andwf	___flmul@prod^0,f,c
  6309  0021A4  0EFF               	movlw	255
  6310  0021A6  163C               	andwf	(___flmul@prod+1)^0,f,c
  6311  0021A8  0E7F               	movlw	127
  6312  0021AA  163D               	andwf	(___flmul@prod+2)^0,f,c
  6313  0021AC  0E00               	movlw	0
  6314  0021AE  163E               	andwf	(___flmul@prod+3)^0,f,c
  6315  0021B0  A03A               	btfss	___flmul@bexp^0,0,c
  6316  0021B2  EFDD  F010         	goto	u3341
  6317  0021B6  EFDF  F010         	goto	u3340
  6318  0021BA                     u3341:
  6319  0021BA  EFE0  F010         	goto	l3060
  6320  0021BE                     u3340:
  6321  0021BE  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  6322  0021C0                     l3060:
  6323  0021C0  90D8               	bcf	status,0,c
  6324  0021C2  303A               	rrcf	___flmul@bexp^0,w,c
  6325  0021C4  6E3E               	movwf	(___flmul@prod+3)^0,c
  6326  0021C6                     l3062:
  6327  0021C6  5034               	movf	___flmul@sign^0,w,c
  6328  0021C8  123E               	iorwf	(___flmul@prod+3)^0,f,c
  6329  0021CA  C03B  F028         	movff	___flmul@prod,?___flmul
  6330  0021CE  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  6331  0021D2  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  6332  0021D6  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  6333  0021DA                     l750:
  6334  0021DA  0012               	return		;funcret
  6335  0021DC                     __end_of___flmul:
  6336                           	callstack 0
  6337                           
  6338 ;; *************** function ___flge *****************
  6339 ;; Defined at:
  6340 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;  ff1             4   64[COMRAM] unsigned char 
  6343 ;;  ff2             4   68[COMRAM] unsigned char 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;		None               void
  6348 ;; Registers used:
  6349 ;;		wreg, status,2, status,0
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6355 ;;      Params:         8       0       0       0       0       0       0       0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6357 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6358 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6359 ;;Total ram usage:       12 bytes
  6360 ;; Hardware stack levels used: 1
  6361 ;; Hardware stack levels required when called: 1
  6362 ;; This function calls:
  6363 ;;		Nothing
  6364 ;; This function is called by:
  6365 ;;		_efgtoa
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text21
  6370  002D5A                     __ptext21:
  6371                           	callstack 0
  6372  002D5A                     ___flge:
  6373                           	callstack 25
  6374  002D5A  0E00               	movlw	0
  6375  002D5C  1441               	andwf	___flge@ff1^0,w,c
  6376  002D5E  6E49               	movwf	??___flge^0,c
  6377  002D60  0E00               	movlw	0
  6378  002D62  1442               	andwf	(___flge@ff1+1)^0,w,c
  6379  002D64  6E4A               	movwf	(??___flge+1)^0,c
  6380  002D66  0E80               	movlw	128
  6381  002D68  1443               	andwf	(___flge@ff1+2)^0,w,c
  6382  002D6A  6E4B               	movwf	(??___flge+2)^0,c
  6383  002D6C  0E7F               	movlw	127
  6384  002D6E  1444               	andwf	(___flge@ff1+3)^0,w,c
  6385  002D70  6E4C               	movwf	(??___flge+3)^0,c
  6386  002D72  5049               	movf	??___flge^0,w,c
  6387  002D74  104A               	iorwf	(??___flge+1)^0,w,c
  6388  002D76  104B               	iorwf	(??___flge+2)^0,w,c
  6389  002D78  104C               	iorwf	(??___flge+3)^0,w,c
  6390  002D7A  A4D8               	btfss	status,2,c
  6391  002D7C  EFC2  F016         	goto	u3501
  6392  002D80  EFC4  F016         	goto	u3500
  6393  002D84                     u3501:
  6394  002D84  EFCC  F016         	goto	l3174
  6395  002D88                     u3500:
  6396  002D88  0E00               	movlw	0
  6397  002D8A  6E41               	movwf	___flge@ff1^0,c
  6398  002D8C  0E00               	movlw	0
  6399  002D8E  6E42               	movwf	(___flge@ff1+1)^0,c
  6400  002D90  0E00               	movlw	0
  6401  002D92  6E43               	movwf	(___flge@ff1+2)^0,c
  6402  002D94  0E00               	movlw	0
  6403  002D96  6E44               	movwf	(___flge@ff1+3)^0,c
  6404  002D98                     l3174:
  6405  002D98  0E00               	movlw	0
  6406  002D9A  1445               	andwf	___flge@ff2^0,w,c
  6407  002D9C  6E49               	movwf	??___flge^0,c
  6408  002D9E  0E00               	movlw	0
  6409  002DA0  1446               	andwf	(___flge@ff2+1)^0,w,c
  6410  002DA2  6E4A               	movwf	(??___flge+1)^0,c
  6411  002DA4  0E80               	movlw	128
  6412  002DA6  1447               	andwf	(___flge@ff2+2)^0,w,c
  6413  002DA8  6E4B               	movwf	(??___flge+2)^0,c
  6414  002DAA  0E7F               	movlw	127
  6415  002DAC  1448               	andwf	(___flge@ff2+3)^0,w,c
  6416  002DAE  6E4C               	movwf	(??___flge+3)^0,c
  6417  002DB0  5049               	movf	??___flge^0,w,c
  6418  002DB2  104A               	iorwf	(??___flge+1)^0,w,c
  6419  002DB4  104B               	iorwf	(??___flge+2)^0,w,c
  6420  002DB6  104C               	iorwf	(??___flge+3)^0,w,c
  6421  002DB8  A4D8               	btfss	status,2,c
  6422  002DBA  EFE1  F016         	goto	u3511
  6423  002DBE  EFE3  F016         	goto	u3510
  6424  002DC2                     u3511:
  6425  002DC2  EFEB  F016         	goto	l3178
  6426  002DC6                     u3510:
  6427  002DC6  0E00               	movlw	0
  6428  002DC8  6E45               	movwf	___flge@ff2^0,c
  6429  002DCA  0E00               	movlw	0
  6430  002DCC  6E46               	movwf	(___flge@ff2+1)^0,c
  6431  002DCE  0E00               	movlw	0
  6432  002DD0  6E47               	movwf	(___flge@ff2+2)^0,c
  6433  002DD2  0E00               	movlw	0
  6434  002DD4  6E48               	movwf	(___flge@ff2+3)^0,c
  6435  002DD6                     l3178:
  6436  002DD6  AE44               	btfss	(___flge@ff1+3)^0,7,c
  6437  002DD8  EFF0  F016         	goto	u3521
  6438  002DDC  EFF2  F016         	goto	u3520
  6439  002DE0                     u3521:
  6440  002DE0  EFFB  F016         	goto	l3182
  6441  002DE4                     u3520:
  6442  002DE4  6C41               	negf	___flge@ff1^0,c
  6443  002DE6  1E42               	comf	(___flge@ff1+1)^0,f,c
  6444  002DE8  B0D8               	btfsc	status,0,c
  6445  002DEA  2A42               	incf	(___flge@ff1+1)^0,f,c
  6446  002DEC  1E43               	comf	(___flge@ff1+2)^0,f,c
  6447  002DEE  B0D8               	btfsc	status,0,c
  6448  002DF0  2A43               	incf	(___flge@ff1+2)^0,f,c
  6449  002DF2  0E80               	movlw	128
  6450  002DF4  5644               	subfwb	(___flge@ff1+3)^0,f,c
  6451  002DF6                     l3182:
  6452  002DF6  AE48               	btfss	(___flge@ff2+3)^0,7,c
  6453  002DF8  EF00  F017         	goto	u3531
  6454  002DFC  EF02  F017         	goto	u3530
  6455  002E00                     u3531:
  6456  002E00  EF0B  F017         	goto	l397
  6457  002E04                     u3530:
  6458  002E04  6C45               	negf	___flge@ff2^0,c
  6459  002E06  1E46               	comf	(___flge@ff2+1)^0,f,c
  6460  002E08  B0D8               	btfsc	status,0,c
  6461  002E0A  2A46               	incf	(___flge@ff2+1)^0,f,c
  6462  002E0C  1E47               	comf	(___flge@ff2+2)^0,f,c
  6463  002E0E  B0D8               	btfsc	status,0,c
  6464  002E10  2A47               	incf	(___flge@ff2+2)^0,f,c
  6465  002E12  0E80               	movlw	128
  6466  002E14  5648               	subfwb	(___flge@ff2+3)^0,f,c
  6467  002E16                     l397:
  6468  002E16  0E00               	movlw	0
  6469  002E18  1A41               	xorwf	___flge@ff1^0,f,c
  6470  002E1A  0E00               	movlw	0
  6471  002E1C  1A42               	xorwf	(___flge@ff1+1)^0,f,c
  6472  002E1E  0E00               	movlw	0
  6473  002E20  1A43               	xorwf	(___flge@ff1+2)^0,f,c
  6474  002E22  0E80               	movlw	128
  6475  002E24  1A44               	xorwf	(___flge@ff1+3)^0,f,c
  6476  002E26  0E00               	movlw	0
  6477  002E28  1A45               	xorwf	___flge@ff2^0,f,c
  6478  002E2A  0E00               	movlw	0
  6479  002E2C  1A46               	xorwf	(___flge@ff2+1)^0,f,c
  6480  002E2E  0E00               	movlw	0
  6481  002E30  1A47               	xorwf	(___flge@ff2+2)^0,f,c
  6482  002E32  0E80               	movlw	128
  6483  002E34  1A48               	xorwf	(___flge@ff2+3)^0,f,c
  6484  002E36  5045               	movf	___flge@ff2^0,w,c
  6485  002E38  5C41               	subwf	___flge@ff1^0,w,c
  6486  002E3A  5046               	movf	(___flge@ff2+1)^0,w,c
  6487  002E3C  5842               	subwfb	(___flge@ff1+1)^0,w,c
  6488  002E3E  5047               	movf	(___flge@ff2+2)^0,w,c
  6489  002E40  5843               	subwfb	(___flge@ff1+2)^0,w,c
  6490  002E42  5048               	movf	(___flge@ff2+3)^0,w,c
  6491  002E44  5844               	subwfb	(___flge@ff1+3)^0,w,c
  6492  002E46  B0D8               	btfsc	status,0,c
  6493  002E48  EF28  F017         	goto	u3541
  6494  002E4C  EF2A  F017         	goto	u3540
  6495  002E50                     u3541:
  6496  002E50  EF2D  F017         	goto	l3188
  6497  002E54                     u3540:
  6498  002E54  90D8               	bcf	status,0,c
  6499  002E56  EF2E  F017         	goto	l402
  6500  002E5A                     l3188:
  6501  002E5A  80D8               	bsf	status,0,c
  6502  002E5C                     l402:
  6503  002E5C  0012               	return		;funcret
  6504  002E5E                     __end_of___flge:
  6505                           	callstack 0
  6506                           
  6507 ;; *************** function ___fleq *****************
  6508 ;; Defined at:
  6509 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;  ff1             4    0[COMRAM] unsigned char 
  6512 ;;  ff2             4    4[COMRAM] unsigned char 
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;		None
  6515 ;; Return value:  Size  Location     Type
  6516 ;;		None               void
  6517 ;; Registers used:
  6518 ;;		wreg, status,2, status,0
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6524 ;;      Params:         8       0       0       0       0       0       0       0       0
  6525 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6526 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6527 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6528 ;;Total ram usage:       12 bytes
  6529 ;; Hardware stack levels used: 1
  6530 ;; Hardware stack levels required when called: 1
  6531 ;; This function calls:
  6532 ;;		Nothing
  6533 ;; This function is called by:
  6534 ;;		_efgtoa
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           	psect	text22
  6539  003336                     __ptext22:
  6540                           	callstack 0
  6541  003336                     ___fleq:
  6542                           	callstack 25
  6543  003336  0E00               	movlw	0
  6544  003338  1401               	andwf	___fleq@ff1^0,w,c
  6545  00333A  6E09               	movwf	??___fleq^0,c
  6546  00333C  0E00               	movlw	0
  6547  00333E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6548  003340  6E0A               	movwf	(??___fleq+1)^0,c
  6549  003342  0E80               	movlw	128
  6550  003344  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6551  003346  6E0B               	movwf	(??___fleq+2)^0,c
  6552  003348  0E7F               	movlw	127
  6553  00334A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6554  00334C  6E0C               	movwf	(??___fleq+3)^0,c
  6555  00334E  5009               	movf	??___fleq^0,w,c
  6556  003350  100A               	iorwf	(??___fleq+1)^0,w,c
  6557  003352  100B               	iorwf	(??___fleq+2)^0,w,c
  6558  003354  100C               	iorwf	(??___fleq+3)^0,w,c
  6559  003356  A4D8               	btfss	status,2,c
  6560  003358  EFB0  F019         	goto	u3471
  6561  00335C  EFB2  F019         	goto	u3470
  6562  003360                     u3471:
  6563  003360  EFBA  F019         	goto	l3158
  6564  003364                     u3470:
  6565  003364  0E00               	movlw	0
  6566  003366  6E01               	movwf	___fleq@ff1^0,c
  6567  003368  0E00               	movlw	0
  6568  00336A  6E02               	movwf	(___fleq@ff1+1)^0,c
  6569  00336C  0E00               	movlw	0
  6570  00336E  6E03               	movwf	(___fleq@ff1+2)^0,c
  6571  003370  0E00               	movlw	0
  6572  003372  6E04               	movwf	(___fleq@ff1+3)^0,c
  6573  003374                     l3158:
  6574  003374  0E00               	movlw	0
  6575  003376  1405               	andwf	___fleq@ff2^0,w,c
  6576  003378  6E09               	movwf	??___fleq^0,c
  6577  00337A  0E00               	movlw	0
  6578  00337C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6579  00337E  6E0A               	movwf	(??___fleq+1)^0,c
  6580  003380  0E80               	movlw	128
  6581  003382  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6582  003384  6E0B               	movwf	(??___fleq+2)^0,c
  6583  003386  0E7F               	movlw	127
  6584  003388  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6585  00338A  6E0C               	movwf	(??___fleq+3)^0,c
  6586  00338C  5009               	movf	??___fleq^0,w,c
  6587  00338E  100A               	iorwf	(??___fleq+1)^0,w,c
  6588  003390  100B               	iorwf	(??___fleq+2)^0,w,c
  6589  003392  100C               	iorwf	(??___fleq+3)^0,w,c
  6590  003394  A4D8               	btfss	status,2,c
  6591  003396  EFCF  F019         	goto	u3481
  6592  00339A  EFD1  F019         	goto	u3480
  6593  00339E                     u3481:
  6594  00339E  EFD9  F019         	goto	l3162
  6595  0033A2                     u3480:
  6596  0033A2  0E00               	movlw	0
  6597  0033A4  6E05               	movwf	___fleq@ff2^0,c
  6598  0033A6  0E00               	movlw	0
  6599  0033A8  6E06               	movwf	(___fleq@ff2+1)^0,c
  6600  0033AA  0E00               	movlw	0
  6601  0033AC  6E07               	movwf	(___fleq@ff2+2)^0,c
  6602  0033AE  0E00               	movlw	0
  6603  0033B0  6E08               	movwf	(___fleq@ff2+3)^0,c
  6604  0033B2                     l3162:
  6605  0033B2  5005               	movf	___fleq@ff2^0,w,c
  6606  0033B4  1801               	xorwf	___fleq@ff1^0,w,c
  6607  0033B6  E10F               	bnz	u3490
  6608  0033B8  5006               	movf	(___fleq@ff2+1)^0,w,c
  6609  0033BA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6610  0033BC  E10C               	bnz	u3490
  6611  0033BE  5007               	movf	(___fleq@ff2+2)^0,w,c
  6612  0033C0  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6613  0033C2  E109               	bnz	u3490
  6614  0033C4  5008               	movf	(___fleq@ff2+3)^0,w,c
  6615  0033C6  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6616  0033C8  B4D8               	btfsc	status,2,c
  6617  0033CA  EFE9  F019         	goto	u3491
  6618  0033CE  EFEB  F019         	goto	u3490
  6619  0033D2                     u3491:
  6620  0033D2  EFEE  F019         	goto	l3166
  6621  0033D6                     u3490:
  6622  0033D6  90D8               	bcf	status,0,c
  6623  0033D8  EFEF  F019         	goto	l391
  6624  0033DC                     l3166:
  6625  0033DC  80D8               	bsf	status,0,c
  6626  0033DE                     l391:
  6627  0033DE  0012               	return		;funcret
  6628  0033E0                     __end_of___fleq:
  6629                           	callstack 0
  6630                           
  6631 ;; *************** function ___fldiv *****************
  6632 ;; Defined at:
  6633 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  b               4   14[COMRAM] unsigned char 
  6636 ;;  a               4   18[COMRAM] unsigned char 
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;  grs             4   33[COMRAM] unsigned long 
  6639 ;;  rem             4   26[COMRAM] unsigned long 
  6640 ;;  new_exp         2   31[COMRAM] short 
  6641 ;;  aexp            1   38[COMRAM] unsigned char 
  6642 ;;  bexp            1   37[COMRAM] unsigned char 
  6643 ;;  sign            1   30[COMRAM] unsigned char 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  4   14[COMRAM] unsigned char 
  6646 ;; Registers used:
  6647 ;;		wreg, status,2, status,0
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6653 ;;      Params:         8       0       0       0       0       0       0       0       0
  6654 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6655 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6656 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6657 ;;Total ram usage:       25 bytes
  6658 ;; Hardware stack levels used: 1
  6659 ;; Hardware stack levels required when called: 1
  6660 ;; This function calls:
  6661 ;;		Nothing
  6662 ;; This function is called by:
  6663 ;;		_main
  6664 ;;		_efgtoa
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           	psect	text23
  6669  0021DC                     __ptext23:
  6670                           	callstack 0
  6671  0021DC                     ___fldiv:
  6672                           	callstack 25
  6673  0021DC  5012               	movf	(___fldiv@b+3)^0,w,c
  6674  0021DE  0B80               	andlw	128
  6675  0021E0  6E1F               	movwf	___fldiv@sign^0,c
  6676  0021E2  5012               	movf	(___fldiv@b+3)^0,w,c
  6677  0021E4  2412               	addwf	(___fldiv@b+3)^0,w,c
  6678  0021E6  6E26               	movwf	___fldiv@bexp^0,c
  6679  0021E8  AE11               	btfss	(___fldiv@b+2)^0,7,c
  6680  0021EA  EFF9  F010         	goto	u2931
  6681  0021EE  EFFB  F010         	goto	u2930
  6682  0021F2                     u2931:
  6683  0021F2  EFFC  F010         	goto	l2806
  6684  0021F6                     u2930:
  6685  0021F6  8026               	bsf	___fldiv@bexp^0,0,c
  6686  0021F8                     l2806:
  6687  0021F8  5026               	movf	___fldiv@bexp^0,w,c
  6688  0021FA  B4D8               	btfsc	status,2,c
  6689  0021FC  EF02  F011         	goto	u2941
  6690  002200  EF04  F011         	goto	u2940
  6691  002204                     u2941:
  6692  002204  EF19  F011         	goto	l2816
  6693  002208                     u2940:
  6694  002208  2826               	incf	___fldiv@bexp^0,w,c
  6695  00220A  A4D8               	btfss	status,2,c
  6696  00220C  EF0A  F011         	goto	u2951
  6697  002210  EF0C  F011         	goto	u2950
  6698  002214                     u2951:
  6699  002214  EF14  F011         	goto	l2812
  6700  002218                     u2950:
  6701  002218  0E00               	movlw	0
  6702  00221A  6E0F               	movwf	___fldiv@b^0,c
  6703  00221C  0E00               	movlw	0
  6704  00221E  6E10               	movwf	(___fldiv@b+1)^0,c
  6705  002220  0E00               	movlw	0
  6706  002222  6E11               	movwf	(___fldiv@b+2)^0,c
  6707  002224  0E00               	movlw	0
  6708  002226  6E12               	movwf	(___fldiv@b+3)^0,c
  6709  002228                     l2812:
  6710  002228  8E11               	bsf	(___fldiv@b+2)^0,7,c
  6711  00222A  0E00               	movlw	0
  6712  00222C  6E12               	movwf	(___fldiv@b+3)^0,c
  6713  00222E  EF21  F011         	goto	l2818
  6714  002232                     l2816:
  6715  002232  0E00               	movlw	0
  6716  002234  6E0F               	movwf	___fldiv@b^0,c
  6717  002236  0E00               	movlw	0
  6718  002238  6E10               	movwf	(___fldiv@b+1)^0,c
  6719  00223A  0E00               	movlw	0
  6720  00223C  6E11               	movwf	(___fldiv@b+2)^0,c
  6721  00223E  0E00               	movlw	0
  6722  002240  6E12               	movwf	(___fldiv@b+3)^0,c
  6723  002242                     l2818:
  6724  002242  5016               	movf	(___fldiv@a+3)^0,w,c
  6725  002244  0B80               	andlw	128
  6726  002246  1A1F               	xorwf	___fldiv@sign^0,f,c
  6727  002248  5016               	movf	(___fldiv@a+3)^0,w,c
  6728  00224A  2416               	addwf	(___fldiv@a+3)^0,w,c
  6729  00224C  6E27               	movwf	___fldiv@aexp^0,c
  6730  00224E  AE15               	btfss	(___fldiv@a+2)^0,7,c
  6731  002250  EF2C  F011         	goto	u2961
  6732  002254  EF2E  F011         	goto	u2960
  6733  002258                     u2961:
  6734  002258  EF2F  F011         	goto	l2826
  6735  00225C                     u2960:
  6736  00225C  8027               	bsf	___fldiv@aexp^0,0,c
  6737  00225E                     l2826:
  6738  00225E  5027               	movf	___fldiv@aexp^0,w,c
  6739  002260  B4D8               	btfsc	status,2,c
  6740  002262  EF35  F011         	goto	u2971
  6741  002266  EF37  F011         	goto	u2970
  6742  00226A                     u2971:
  6743  00226A  EF4C  F011         	goto	l2836
  6744  00226E                     u2970:
  6745  00226E  2827               	incf	___fldiv@aexp^0,w,c
  6746  002270  A4D8               	btfss	status,2,c
  6747  002272  EF3D  F011         	goto	u2981
  6748  002276  EF3F  F011         	goto	u2980
  6749  00227A                     u2981:
  6750  00227A  EF47  F011         	goto	l2832
  6751  00227E                     u2980:
  6752  00227E  0E00               	movlw	0
  6753  002280  6E13               	movwf	___fldiv@a^0,c
  6754  002282  0E00               	movlw	0
  6755  002284  6E14               	movwf	(___fldiv@a+1)^0,c
  6756  002286  0E00               	movlw	0
  6757  002288  6E15               	movwf	(___fldiv@a+2)^0,c
  6758  00228A  0E00               	movlw	0
  6759  00228C  6E16               	movwf	(___fldiv@a+3)^0,c
  6760  00228E                     l2832:
  6761  00228E  8E15               	bsf	(___fldiv@a+2)^0,7,c
  6762  002290  0E00               	movlw	0
  6763  002292  6E16               	movwf	(___fldiv@a+3)^0,c
  6764  002294  EF54  F011         	goto	l2838
  6765  002298                     l2836:
  6766  002298  0E00               	movlw	0
  6767  00229A  6E13               	movwf	___fldiv@a^0,c
  6768  00229C  0E00               	movlw	0
  6769  00229E  6E14               	movwf	(___fldiv@a+1)^0,c
  6770  0022A0  0E00               	movlw	0
  6771  0022A2  6E15               	movwf	(___fldiv@a+2)^0,c
  6772  0022A4  0E00               	movlw	0
  6773  0022A6  6E16               	movwf	(___fldiv@a+3)^0,c
  6774  0022A8                     l2838:
  6775  0022A8  5013               	movf	___fldiv@a^0,w,c
  6776  0022AA  1014               	iorwf	(___fldiv@a+1)^0,w,c
  6777  0022AC  1015               	iorwf	(___fldiv@a+2)^0,w,c
  6778  0022AE  1016               	iorwf	(___fldiv@a+3)^0,w,c
  6779  0022B0  A4D8               	btfss	status,2,c
  6780  0022B2  EF5D  F011         	goto	u2991
  6781  0022B6  EF5F  F011         	goto	u2990
  6782  0022BA                     u2991:
  6783  0022BA  EF77  F011         	goto	l2850
  6784  0022BE                     u2990:
  6785  0022BE  0E00               	movlw	0
  6786  0022C0  6E0F               	movwf	___fldiv@b^0,c
  6787  0022C2  0E00               	movlw	0
  6788  0022C4  6E10               	movwf	(___fldiv@b+1)^0,c
  6789  0022C6  0E00               	movlw	0
  6790  0022C8  6E11               	movwf	(___fldiv@b+2)^0,c
  6791  0022CA  0E00               	movlw	0
  6792  0022CC  6E12               	movwf	(___fldiv@b+3)^0,c
  6793  0022CE  0E80               	movlw	128
  6794  0022D0  1211               	iorwf	(___fldiv@b+2)^0,f,c
  6795  0022D2  0E7F               	movlw	127
  6796  0022D4  1212               	iorwf	(___fldiv@b+3)^0,f,c
  6797  0022D6                     l2844:
  6798  0022D6  501F               	movf	___fldiv@sign^0,w,c
  6799  0022D8  1212               	iorwf	(___fldiv@b+3)^0,f,c
  6800  0022DA  C00F  F00F         	movff	___fldiv@b,?___fldiv
  6801  0022DE  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  6802  0022E2  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  6803  0022E6  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  6804  0022EA  EFBA  F012         	goto	l714
  6805  0022EE                     l2850:
  6806  0022EE  5026               	movf	___fldiv@bexp^0,w,c
  6807  0022F0  A4D8               	btfss	status,2,c
  6808  0022F2  EF7D  F011         	goto	u3001
  6809  0022F6  EF7F  F011         	goto	u3000
  6810  0022FA                     u3001:
  6811  0022FA  EF89  F011         	goto	l2858
  6812  0022FE                     u3000:
  6813  0022FE  0E00               	movlw	0
  6814  002300  6E0F               	movwf	?___fldiv^0,c
  6815  002302  0E00               	movlw	0
  6816  002304  6E10               	movwf	(?___fldiv+1)^0,c
  6817  002306  0E00               	movlw	0
  6818  002308  6E11               	movwf	(?___fldiv+2)^0,c
  6819  00230A  0E00               	movlw	0
  6820  00230C  6E12               	movwf	(?___fldiv+3)^0,c
  6821  00230E  EFBA  F012         	goto	l714
  6822  002312                     l2858:
  6823  002312  5027               	movf	___fldiv@aexp^0,w,c
  6824  002314  C026  F017         	movff	___fldiv@bexp,??___fldiv
  6825  002318  6A18               	clrf	(??___fldiv+1)^0,c
  6826  00231A  5E17               	subwf	??___fldiv^0,f,c
  6827  00231C  0E00               	movlw	0
  6828  00231E  5A18               	subwfb	(??___fldiv+1)^0,f,c
  6829  002320  0E7F               	movlw	127
  6830  002322  2417               	addwf	??___fldiv^0,w,c
  6831  002324  6E20               	movwf	___fldiv@new_exp^0,c
  6832  002326  0E00               	movlw	0
  6833  002328  2018               	addwfc	(??___fldiv+1)^0,w,c
  6834  00232A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6835  00232C  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  6836  002330  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  6837  002334  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  6838  002338  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  6839  00233C  0E00               	movlw	0
  6840  00233E  6E0F               	movwf	___fldiv@b^0,c
  6841  002340  0E00               	movlw	0
  6842  002342  6E10               	movwf	(___fldiv@b+1)^0,c
  6843  002344  0E00               	movlw	0
  6844  002346  6E11               	movwf	(___fldiv@b+2)^0,c
  6845  002348  0E00               	movlw	0
  6846  00234A  6E12               	movwf	(___fldiv@b+3)^0,c
  6847  00234C  0E00               	movlw	0
  6848  00234E  6E22               	movwf	___fldiv@grs^0,c
  6849  002350  0E00               	movlw	0
  6850  002352  6E23               	movwf	(___fldiv@grs+1)^0,c
  6851  002354  0E00               	movlw	0
  6852  002356  6E24               	movwf	(___fldiv@grs+2)^0,c
  6853  002358  0E00               	movlw	0
  6854  00235A  6E25               	movwf	(___fldiv@grs+3)^0,c
  6855  00235C  0E00               	movlw	0
  6856  00235E  6E27               	movwf	___fldiv@aexp^0,c
  6857  002360  EFEA  F011         	goto	l716
  6858  002364                     l2868:
  6859  002364  5027               	movf	___fldiv@aexp^0,w,c
  6860  002366  B4D8               	btfsc	status,2,c
  6861  002368  EFB8  F011         	goto	u3011
  6862  00236C  EFBA  F011         	goto	u3010
  6863  002370                     u3011:
  6864  002370  EFD1  F011         	goto	l2876
  6865  002374                     u3010:
  6866  002374  90D8               	bcf	status,0,c
  6867  002376  361B               	rlcf	___fldiv@rem^0,f,c
  6868  002378  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  6869  00237A  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  6870  00237C  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  6871  00237E  90D8               	bcf	status,0,c
  6872  002380  360F               	rlcf	___fldiv@b^0,f,c
  6873  002382  3610               	rlcf	(___fldiv@b+1)^0,f,c
  6874  002384  3611               	rlcf	(___fldiv@b+2)^0,f,c
  6875  002386  3612               	rlcf	(___fldiv@b+3)^0,f,c
  6876  002388  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6877  00238A  EFC9  F011         	goto	u3021
  6878  00238E  EFCB  F011         	goto	u3020
  6879  002392                     u3021:
  6880  002392  EFCC  F011         	goto	l719
  6881  002396                     u3020:
  6882  002396  800F               	bsf	___fldiv@b^0,0,c
  6883  002398                     l719:
  6884  002398  90D8               	bcf	status,0,c
  6885  00239A  3622               	rlcf	___fldiv@grs^0,f,c
  6886  00239C  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  6887  00239E  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  6888  0023A0  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  6889  0023A2                     l2876:
  6890  0023A2  5013               	movf	___fldiv@a^0,w,c
  6891  0023A4  5C1B               	subwf	___fldiv@rem^0,w,c
  6892  0023A6  5014               	movf	(___fldiv@a+1)^0,w,c
  6893  0023A8  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  6894  0023AA  5015               	movf	(___fldiv@a+2)^0,w,c
  6895  0023AC  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  6896  0023AE  5016               	movf	(___fldiv@a+3)^0,w,c
  6897  0023B0  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  6898  0023B2  A0D8               	btfss	status,0,c
  6899  0023B4  EFDE  F011         	goto	u3031
  6900  0023B8  EFE0  F011         	goto	u3030
  6901  0023BC                     u3031:
  6902  0023BC  EFE9  F011         	goto	l2882
  6903  0023C0                     u3030:
  6904  0023C0  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  6905  0023C2  5013               	movf	___fldiv@a^0,w,c
  6906  0023C4  5E1B               	subwf	___fldiv@rem^0,f,c
  6907  0023C6  5014               	movf	(___fldiv@a+1)^0,w,c
  6908  0023C8  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  6909  0023CA  5015               	movf	(___fldiv@a+2)^0,w,c
  6910  0023CC  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  6911  0023CE  5016               	movf	(___fldiv@a+3)^0,w,c
  6912  0023D0  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  6913  0023D2                     l2882:
  6914  0023D2  2A27               	incf	___fldiv@aexp^0,f,c
  6915  0023D4                     l716:
  6916  0023D4  0E19               	movlw	25
  6917  0023D6  6427               	cpfsgt	___fldiv@aexp^0,c
  6918  0023D8  EFF0  F011         	goto	u3041
  6919  0023DC  EFF2  F011         	goto	u3040
  6920  0023E0                     u3041:
  6921  0023E0  EFB2  F011         	goto	l2868
  6922  0023E4                     u3040:
  6923  0023E4  501B               	movf	___fldiv@rem^0,w,c
  6924  0023E6  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  6925  0023E8  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  6926  0023EA  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  6927  0023EC  B4D8               	btfsc	status,2,c
  6928  0023EE  EFFB  F011         	goto	u3051
  6929  0023F2  EFFD  F011         	goto	u3050
  6930  0023F6                     u3051:
  6931  0023F6  EF15  F012         	goto	l2894
  6932  0023FA                     u3050:
  6933  0023FA  8022               	bsf	___fldiv@grs^0,0,c
  6934  0023FC  EF15  F012         	goto	l2894
  6935  002400                     l2888:
  6936  002400  90D8               	bcf	status,0,c
  6937  002402  360F               	rlcf	___fldiv@b^0,f,c
  6938  002404  3610               	rlcf	(___fldiv@b+1)^0,f,c
  6939  002406  3611               	rlcf	(___fldiv@b+2)^0,f,c
  6940  002408  3612               	rlcf	(___fldiv@b+3)^0,f,c
  6941  00240A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6942  00240C  EF0A  F012         	goto	u3061
  6943  002410  EF0C  F012         	goto	u3060
  6944  002414                     u3061:
  6945  002414  EF0D  F012         	goto	l725
  6946  002418                     u3060:
  6947  002418  800F               	bsf	___fldiv@b^0,0,c
  6948  00241A                     l725:
  6949  00241A  90D8               	bcf	status,0,c
  6950  00241C  3622               	rlcf	___fldiv@grs^0,f,c
  6951  00241E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  6952  002420  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  6953  002422  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  6954  002424  0620               	decf	___fldiv@new_exp^0,f,c
  6955  002426  A0D8               	btfss	status,0,c
  6956  002428  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  6957  00242A                     l2894:
  6958  00242A  AE11               	btfss	(___fldiv@b+2)^0,7,c
  6959  00242C  EF1A  F012         	goto	u3071
  6960  002430  EF1C  F012         	goto	u3070
  6961  002434                     u3071:
  6962  002434  EF00  F012         	goto	l2888
  6963  002438                     u3070:
  6964  002438  0E00               	movlw	0
  6965  00243A  6E27               	movwf	___fldiv@aexp^0,c
  6966  00243C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6967  00243E  EF23  F012         	goto	u3081
  6968  002442  EF25  F012         	goto	u3080
  6969  002446                     u3081:
  6970  002446  EF49  F012         	goto	l727
  6971  00244A                     u3080:
  6972  00244A  0EFF               	movlw	255
  6973  00244C  1422               	andwf	___fldiv@grs^0,w,c
  6974  00244E  6E17               	movwf	??___fldiv^0,c
  6975  002450  0EFF               	movlw	255
  6976  002452  1423               	andwf	(___fldiv@grs+1)^0,w,c
  6977  002454  6E18               	movwf	(??___fldiv+1)^0,c
  6978  002456  0EFF               	movlw	255
  6979  002458  1424               	andwf	(___fldiv@grs+2)^0,w,c
  6980  00245A  6E19               	movwf	(??___fldiv+2)^0,c
  6981  00245C  0E7F               	movlw	127
  6982  00245E  1425               	andwf	(___fldiv@grs+3)^0,w,c
  6983  002460  6E1A               	movwf	(??___fldiv+3)^0,c
  6984  002462  5017               	movf	??___fldiv^0,w,c
  6985  002464  1018               	iorwf	(??___fldiv+1)^0,w,c
  6986  002466  1019               	iorwf	(??___fldiv+2)^0,w,c
  6987  002468  101A               	iorwf	(??___fldiv+3)^0,w,c
  6988  00246A  B4D8               	btfsc	status,2,c
  6989  00246C  EF3A  F012         	goto	u3091
  6990  002470  EF3C  F012         	goto	u3090
  6991  002474                     u3091:
  6992  002474  EF40  F012         	goto	l728
  6993  002478                     u3090:
  6994  002478                     l2902:
  6995  002478  0E01               	movlw	1
  6996  00247A  6E27               	movwf	___fldiv@aexp^0,c
  6997  00247C  EF49  F012         	goto	l727
  6998  002480                     l728:
  6999  002480  A00F               	btfss	___fldiv@b^0,0,c
  7000  002482  EF45  F012         	goto	u3101
  7001  002486  EF47  F012         	goto	u3100
  7002  00248A                     u3101:
  7003  00248A  EF49  F012         	goto	l727
  7004  00248E                     u3100:
  7005  00248E  EF3C  F012         	goto	l2902
  7006  002492                     l727:
  7007  002492  5027               	movf	___fldiv@aexp^0,w,c
  7008  002494  B4D8               	btfsc	status,2,c
  7009  002496  EF4F  F012         	goto	u3111
  7010  00249A  EF51  F012         	goto	u3110
  7011  00249E                     u3111:
  7012  00249E  EF75  F012         	goto	l2914
  7013  0024A2                     u3110:
  7014  0024A2  0E01               	movlw	1
  7015  0024A4  260F               	addwf	___fldiv@b^0,f,c
  7016  0024A6  0E00               	movlw	0
  7017  0024A8  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7018  0024AA  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7019  0024AC  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7020  0024AE  A012               	btfss	(___fldiv@b+3)^0,0,c
  7021  0024B0  EF5C  F012         	goto	u3121
  7022  0024B4  EF5E  F012         	goto	u3120
  7023  0024B8                     u3121:
  7024  0024B8  EF75  F012         	goto	l2914
  7025  0024BC                     u3120:
  7026  0024BC  C00F  F017         	movff	___fldiv@b,??___fldiv
  7027  0024C0  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7028  0024C4  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7029  0024C8  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7030  0024CC  341A               	rlcf	(??___fldiv+3)^0,w,c
  7031  0024CE  321A               	rrcf	(??___fldiv+3)^0,f,c
  7032  0024D0  3219               	rrcf	(??___fldiv+2)^0,f,c
  7033  0024D2  3218               	rrcf	(??___fldiv+1)^0,f,c
  7034  0024D4  3217               	rrcf	??___fldiv^0,f,c
  7035  0024D6  C017  F00F         	movff	??___fldiv,___fldiv@b
  7036  0024DA  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7037  0024DE  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7038  0024E2  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7039  0024E6  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7040  0024E8  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7041  0024EA                     l2914:
  7042  0024EA  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7043  0024EC  EF80  F012         	goto	u3131
  7044  0024F0  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7045  0024F2  E108               	bnz	u3130
  7046  0024F4  2820               	incf	___fldiv@new_exp^0,w,c
  7047  0024F6  A0D8               	btfss	status,0,c
  7048  0024F8  EF80  F012         	goto	u3131
  7049  0024FC  EF82  F012         	goto	u3130
  7050  002500                     u3131:
  7051  002500  EF8D  F012         	goto	l2918
  7052  002504                     u3130:
  7053  002504  0E00               	movlw	0
  7054  002506  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7055  002508  6820               	setf	___fldiv@new_exp^0,c
  7056  00250A  0E00               	movlw	0
  7057  00250C  6E0F               	movwf	___fldiv@b^0,c
  7058  00250E  0E00               	movlw	0
  7059  002510  6E10               	movwf	(___fldiv@b+1)^0,c
  7060  002512  0E00               	movlw	0
  7061  002514  6E11               	movwf	(___fldiv@b+2)^0,c
  7062  002516  0E00               	movlw	0
  7063  002518  6E12               	movwf	(___fldiv@b+3)^0,c
  7064  00251A                     l2918:
  7065  00251A  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7066  00251C  EF9A  F012         	goto	u3140
  7067  002520  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7068  002522  E106               	bnz	u3141
  7069  002524  0420               	decf	___fldiv@new_exp^0,w,c
  7070  002526  B0D8               	btfsc	status,0,c
  7071  002528  EF98  F012         	goto	u3141
  7072  00252C  EF9A  F012         	goto	u3140
  7073  002530                     u3141:
  7074  002530  EFA8  F012         	goto	l2922
  7075  002534                     u3140:
  7076  002534  0E00               	movlw	0
  7077  002536  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7078  002538  0E00               	movlw	0
  7079  00253A  6E20               	movwf	___fldiv@new_exp^0,c
  7080  00253C  0E00               	movlw	0
  7081  00253E  6E0F               	movwf	___fldiv@b^0,c
  7082  002540  0E00               	movlw	0
  7083  002542  6E10               	movwf	(___fldiv@b+1)^0,c
  7084  002544  0E00               	movlw	0
  7085  002546  6E11               	movwf	(___fldiv@b+2)^0,c
  7086  002548  0E00               	movlw	0
  7087  00254A  6E12               	movwf	(___fldiv@b+3)^0,c
  7088  00254C  0E00               	movlw	0
  7089  00254E  6E1F               	movwf	___fldiv@sign^0,c
  7090  002550                     l2922:
  7091  002550  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7092  002554  A026               	btfss	___fldiv@bexp^0,0,c
  7093  002556  EFAF  F012         	goto	u3151
  7094  00255A  EFB1  F012         	goto	u3150
  7095  00255E                     u3151:
  7096  00255E  EFB4  F012         	goto	l2928
  7097  002562                     u3150:
  7098  002562  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7099  002564  EFB5  F012         	goto	l2930
  7100  002568                     l2928:
  7101  002568  9E11               	bcf	(___fldiv@b+2)^0,7,c
  7102  00256A                     l2930:
  7103  00256A  90D8               	bcf	status,0,c
  7104  00256C  3026               	rrcf	___fldiv@bexp^0,w,c
  7105  00256E  6E12               	movwf	(___fldiv@b+3)^0,c
  7106  002570  EF6B  F011         	goto	l2844
  7107  002574                     l714:
  7108  002574  0012               	return		;funcret
  7109  002576                     __end_of___fldiv:
  7110                           	callstack 0
  7111                           
  7112 ;; *************** function ___awmod *****************
  7113 ;; Defined at:
  7114 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  dividend        2    0[COMRAM] int 
  7117 ;;  divisor         2    2[COMRAM] int 
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;  sign            1    5[COMRAM] unsigned char 
  7120 ;;  counter         1    4[COMRAM] unsigned char 
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  2    0[COMRAM] int 
  7123 ;; Registers used:
  7124 ;;		wreg, status,2, status,0
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7130 ;;      Params:         4       0       0       0       0       0       0       0       0
  7131 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7133 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7134 ;;Total ram usage:        6 bytes
  7135 ;; Hardware stack levels used: 1
  7136 ;; Hardware stack levels required when called: 1
  7137 ;; This function calls:
  7138 ;;		Nothing
  7139 ;; This function is called by:
  7140 ;;		_efgtoa
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text24
  7145  003286                     __ptext24:
  7146                           	callstack 0
  7147  003286                     ___awmod:
  7148                           	callstack 25
  7149  003286  0E00               	movlw	0
  7150  003288  6E06               	movwf	___awmod@sign^0,c
  7151  00328A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7152  00328C  EF4C  F019         	goto	u3410
  7153  003290  EF4A  F019         	goto	u3411
  7154  003294                     u3411:
  7155  003294  EF52  F019         	goto	l3126
  7156  003298                     u3410:
  7157  003298  6C01               	negf	___awmod@dividend^0,c
  7158  00329A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7159  00329C  B0D8               	btfsc	status,0,c
  7160  00329E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7161  0032A0  0E01               	movlw	1
  7162  0032A2  6E06               	movwf	___awmod@sign^0,c
  7163  0032A4                     l3126:
  7164  0032A4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7165  0032A6  EF59  F019         	goto	u3420
  7166  0032AA  EF57  F019         	goto	u3421
  7167  0032AE                     u3421:
  7168  0032AE  EF5D  F019         	goto	l3130
  7169  0032B2                     u3420:
  7170  0032B2  6C03               	negf	___awmod@divisor^0,c
  7171  0032B4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7172  0032B6  B0D8               	btfsc	status,0,c
  7173  0032B8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7174  0032BA                     l3130:
  7175  0032BA  5003               	movf	___awmod@divisor^0,w,c
  7176  0032BC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7177  0032BE  B4D8               	btfsc	status,2,c
  7178  0032C0  EF64  F019         	goto	u3431
  7179  0032C4  EF66  F019         	goto	u3430
  7180  0032C8                     u3431:
  7181  0032C8  EF8A  F019         	goto	l3146
  7182  0032CC                     u3430:
  7183  0032CC  0E01               	movlw	1
  7184  0032CE  6E05               	movwf	___awmod@counter^0,c
  7185  0032D0  EF6E  F019         	goto	l3136
  7186  0032D4                     l3134:
  7187  0032D4  90D8               	bcf	status,0,c
  7188  0032D6  3603               	rlcf	___awmod@divisor^0,f,c
  7189  0032D8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7190  0032DA  2A05               	incf	___awmod@counter^0,f,c
  7191  0032DC                     l3136:
  7192  0032DC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7193  0032DE  EF73  F019         	goto	u3441
  7194  0032E2  EF75  F019         	goto	u3440
  7195  0032E6                     u3441:
  7196  0032E6  EF6A  F019         	goto	l3134
  7197  0032EA                     u3440:
  7198  0032EA                     l3138:
  7199  0032EA  5003               	movf	___awmod@divisor^0,w,c
  7200  0032EC  5C01               	subwf	___awmod@dividend^0,w,c
  7201  0032EE  5004               	movf	(___awmod@divisor+1)^0,w,c
  7202  0032F0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7203  0032F2  A0D8               	btfss	status,0,c
  7204  0032F4  EF7E  F019         	goto	u3451
  7205  0032F8  EF80  F019         	goto	u3450
  7206  0032FC                     u3451:
  7207  0032FC  EF84  F019         	goto	l3142
  7208  003300                     u3450:
  7209  003300  5003               	movf	___awmod@divisor^0,w,c
  7210  003302  5E01               	subwf	___awmod@dividend^0,f,c
  7211  003304  5004               	movf	(___awmod@divisor+1)^0,w,c
  7212  003306  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7213  003308                     l3142:
  7214  003308  90D8               	bcf	status,0,c
  7215  00330A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7216  00330C  3203               	rrcf	___awmod@divisor^0,f,c
  7217  00330E  2E05               	decfsz	___awmod@counter^0,f,c
  7218  003310  EF75  F019         	goto	l3138
  7219  003314                     l3146:
  7220  003314  5006               	movf	___awmod@sign^0,w,c
  7221  003316  B4D8               	btfsc	status,2,c
  7222  003318  EF90  F019         	goto	u3461
  7223  00331C  EF92  F019         	goto	u3460
  7224  003320                     u3461:
  7225  003320  EF96  F019         	goto	l3150
  7226  003324                     u3460:
  7227  003324  6C01               	negf	___awmod@dividend^0,c
  7228  003326  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7229  003328  B0D8               	btfsc	status,0,c
  7230  00332A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7231  00332C                     l3150:
  7232  00332C  C001  F001         	movff	___awmod@dividend,?___awmod
  7233  003330  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7234  003334  0012               	return		;funcret
  7235  003336                     __end_of___awmod:
  7236                           	callstack 0
  7237                           
  7238 ;; *************** function ___awdiv *****************
  7239 ;; Defined at:
  7240 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;  dividend        2    0[COMRAM] int 
  7243 ;;  divisor         2    2[COMRAM] int 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;  quotient        2    6[COMRAM] int 
  7246 ;;  sign            1    5[COMRAM] unsigned char 
  7247 ;;  counter         1    4[COMRAM] unsigned char 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  2    0[COMRAM] int 
  7250 ;; Registers used:
  7251 ;;		wreg, status,2, status,0
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7257 ;;      Params:         4       0       0       0       0       0       0       0       0
  7258 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7259 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7260 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7261 ;;Total ram usage:        8 bytes
  7262 ;; Hardware stack levels used: 1
  7263 ;; Hardware stack levels required when called: 1
  7264 ;; This function calls:
  7265 ;;		Nothing
  7266 ;; This function is called by:
  7267 ;;		_efgtoa
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           
  7271                           	psect	text25
  7272  0031C2                     __ptext25:
  7273                           	callstack 0
  7274  0031C2                     ___awdiv:
  7275                           	callstack 25
  7276  0031C2  0E00               	movlw	0
  7277  0031C4  6E06               	movwf	___awdiv@sign^0,c
  7278  0031C6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7279  0031C8  EFEA  F018         	goto	u3350
  7280  0031CC  EFE8  F018         	goto	u3351
  7281  0031D0                     u3351:
  7282  0031D0  EFF0  F018         	goto	l3082
  7283  0031D4                     u3350:
  7284  0031D4  6C03               	negf	___awdiv@divisor^0,c
  7285  0031D6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7286  0031D8  B0D8               	btfsc	status,0,c
  7287  0031DA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7288  0031DC  0E01               	movlw	1
  7289  0031DE  6E06               	movwf	___awdiv@sign^0,c
  7290  0031E0                     l3082:
  7291  0031E0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7292  0031E2  EFF7  F018         	goto	u3360
  7293  0031E6  EFF5  F018         	goto	u3361
  7294  0031EA                     u3361:
  7295  0031EA  EFFD  F018         	goto	l3088
  7296  0031EE                     u3360:
  7297  0031EE  6C01               	negf	___awdiv@dividend^0,c
  7298  0031F0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7299  0031F2  B0D8               	btfsc	status,0,c
  7300  0031F4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7301  0031F6  0E01               	movlw	1
  7302  0031F8  1A06               	xorwf	___awdiv@sign^0,f,c
  7303  0031FA                     l3088:
  7304  0031FA  0E00               	movlw	0
  7305  0031FC  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7306  0031FE  0E00               	movlw	0
  7307  003200  6E07               	movwf	___awdiv@quotient^0,c
  7308  003202  5003               	movf	___awdiv@divisor^0,w,c
  7309  003204  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7310  003206  B4D8               	btfsc	status,2,c
  7311  003208  EF08  F019         	goto	u3371
  7312  00320C  EF0A  F019         	goto	u3370
  7313  003210                     u3371:
  7314  003210  EF32  F019         	goto	l3110
  7315  003214                     u3370:
  7316  003214  0E01               	movlw	1
  7317  003216  6E05               	movwf	___awdiv@counter^0,c
  7318  003218  EF12  F019         	goto	l3096
  7319  00321C                     l3094:
  7320  00321C  90D8               	bcf	status,0,c
  7321  00321E  3603               	rlcf	___awdiv@divisor^0,f,c
  7322  003220  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7323  003222  2A05               	incf	___awdiv@counter^0,f,c
  7324  003224                     l3096:
  7325  003224  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7326  003226  EF17  F019         	goto	u3381
  7327  00322A  EF19  F019         	goto	u3380
  7328  00322E                     u3381:
  7329  00322E  EF0E  F019         	goto	l3094
  7330  003232                     u3380:
  7331  003232                     l3098:
  7332  003232  90D8               	bcf	status,0,c
  7333  003234  3607               	rlcf	___awdiv@quotient^0,f,c
  7334  003236  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7335  003238  5003               	movf	___awdiv@divisor^0,w,c
  7336  00323A  5C01               	subwf	___awdiv@dividend^0,w,c
  7337  00323C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7338  00323E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7339  003240  A0D8               	btfss	status,0,c
  7340  003242  EF25  F019         	goto	u3391
  7341  003246  EF27  F019         	goto	u3390
  7342  00324A                     u3391:
  7343  00324A  EF2C  F019         	goto	l3106
  7344  00324E                     u3390:
  7345  00324E  5003               	movf	___awdiv@divisor^0,w,c
  7346  003250  5E01               	subwf	___awdiv@dividend^0,f,c
  7347  003252  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7348  003254  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7349  003256  8007               	bsf	___awdiv@quotient^0,0,c
  7350  003258                     l3106:
  7351  003258  90D8               	bcf	status,0,c
  7352  00325A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7353  00325C  3203               	rrcf	___awdiv@divisor^0,f,c
  7354  00325E  2E05               	decfsz	___awdiv@counter^0,f,c
  7355  003260  EF19  F019         	goto	l3098
  7356  003264                     l3110:
  7357  003264  5006               	movf	___awdiv@sign^0,w,c
  7358  003266  B4D8               	btfsc	status,2,c
  7359  003268  EF38  F019         	goto	u3401
  7360  00326C  EF3A  F019         	goto	u3400
  7361  003270                     u3401:
  7362  003270  EF3E  F019         	goto	l3114
  7363  003274                     u3400:
  7364  003274  6C07               	negf	___awdiv@quotient^0,c
  7365  003276  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7366  003278  B0D8               	btfsc	status,0,c
  7367  00327A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7368  00327C                     l3114:
  7369  00327C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7370  003280  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7371  003284  0012               	return		;funcret
  7372  003286                     __end_of___awdiv:
  7373                           	callstack 0
  7374                           
  7375 ;; *************** function _atoi *****************
  7376 ;; Defined at:
  7377 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7380 ;;		 -> STR_2(15), 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  n               2   20[COMRAM] int 
  7383 ;;  neg             2   13[COMRAM] int 
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  2    7[COMRAM] int 
  7386 ;; Registers used:
  7387 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7393 ;;      Params:         2       0       0       0       0       0       0       0       0
  7394 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7395 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7396 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7397 ;;Total ram usage:       15 bytes
  7398 ;; Hardware stack levels used: 1
  7399 ;; Hardware stack levels required when called: 2
  7400 ;; This function calls:
  7401 ;;		___wmul
  7402 ;;		_isdigit
  7403 ;;		_isspace
  7404 ;; This function is called by:
  7405 ;;		_vfpfcnvrt
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text26
  7410  00293C                     __ptext26:
  7411                           	callstack 0
  7412  00293C                     _atoi:
  7413                           	callstack 25
  7414  00293C  0E00               	movlw	0
  7415  00293E  6E16               	movwf	(atoi@n+1)^0,c
  7416  002940  0E00               	movlw	0
  7417  002942  6E15               	movwf	atoi@n^0,c
  7418  002944  0E00               	movlw	0
  7419  002946  6E0F               	movwf	(atoi@neg+1)^0,c
  7420  002948  0E00               	movlw	0
  7421  00294A  6E0E               	movwf	atoi@neg^0,c
  7422  00294C  EFAA  F014         	goto	l3658
  7423  002950                     l3656:
  7424  002950  4A08               	infsnz	atoi@s^0,f,c
  7425  002952  2A09               	incf	(atoi@s+1)^0,f,c
  7426  002954                     l3658:
  7427  002954  0E01               	movlw	1
  7428  002956  6E14               	movwf	_atoi$1139^0,c
  7429  002958  C008  FFF6         	movff	atoi@s,tblptrl
  7430  00295C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7431  002960                     	if	0	;tblptru may be non-zero
  7432  002960                     	endif
  7433  002960                     	if	0	;tblptru may be non-zero
  7434  002960                     	endif
  7435  002960  0008               	tblrd		*
  7436  002962  50F5               	movf	tablat,w,c
  7437  002964  0A20               	xorlw	32
  7438  002966  B4D8               	btfsc	status,2,c
  7439  002968  EFB8  F014         	goto	u4471
  7440  00296C  EFBA  F014         	goto	u4470
  7441  002970                     u4471:
  7442  002970  EFD7  F014         	goto	l3666
  7443  002974                     u4470:
  7444  002974  0EF7               	movlw	247
  7445  002976  6E0A               	movwf	??_atoi^0,c
  7446  002978  0EFF               	movlw	255
  7447  00297A  6E0B               	movwf	(??_atoi+1)^0,c
  7448  00297C  C008  FFF6         	movff	atoi@s,tblptrl
  7449  002980  C009  FFF7         	movff	atoi@s+1,tblptrh
  7450  002984                     	if	0	;tblptru may be non-zero
  7451  002984                     	endif
  7452  002984                     	if	0	;tblptru may be non-zero
  7453  002984                     	endif
  7454  002984  0008               	tblrd		*
  7455  002986  50F5               	movf	tablat,w,c
  7456  002988  6E0C               	movwf	(??_atoi+2)^0,c
  7457  00298A  6A0D               	clrf	(??_atoi+3)^0,c
  7458  00298C  500A               	movf	??_atoi^0,w,c
  7459  00298E  260C               	addwf	(??_atoi+2)^0,f,c
  7460  002990  500B               	movf	(??_atoi+1)^0,w,c
  7461  002992  220D               	addwfc	(??_atoi+3)^0,f,c
  7462  002994  500D               	movf	(??_atoi+3)^0,w,c
  7463  002996  E109               	bnz	u4480
  7464  002998  0E05               	movlw	5
  7465  00299A  5C0C               	subwf	(??_atoi+2)^0,w,c
  7466  00299C  A0D8               	btfss	status,0,c
  7467  00299E  EFD3  F014         	goto	u4481
  7468  0029A2  EFD5  F014         	goto	u4480
  7469  0029A6                     u4481:
  7470  0029A6  EFD7  F014         	goto	l3666
  7471  0029AA                     u4480:
  7472  0029AA  0E00               	movlw	0
  7473  0029AC  6E14               	movwf	_atoi$1139^0,c
  7474  0029AE                     l3666:
  7475  0029AE  C014  F010         	movff	_atoi$1139,_atoi$1138
  7476  0029B2  6A11               	clrf	(_atoi$1138+1)^0,c
  7477  0029B4  5010               	movf	_atoi$1138^0,w,c
  7478  0029B6  1011               	iorwf	(_atoi$1138+1)^0,w,c
  7479  0029B8  A4D8               	btfss	status,2,c
  7480  0029BA  EFE1  F014         	goto	u4491
  7481  0029BE  EFE3  F014         	goto	u4490
  7482  0029C2                     u4491:
  7483  0029C2  EFA8  F014         	goto	l3656
  7484  0029C6                     u4490:
  7485  0029C6  EFED  F014         	goto	l3676
  7486  0029CA                     l3672:
  7487  0029CA  0E00               	movlw	0
  7488  0029CC  6E0F               	movwf	(atoi@neg+1)^0,c
  7489  0029CE  0E01               	movlw	1
  7490  0029D0  6E0E               	movwf	atoi@neg^0,c
  7491  0029D2                     l3674:
  7492  0029D2  4A08               	infsnz	atoi@s^0,f,c
  7493  0029D4  2A09               	incf	(atoi@s+1)^0,f,c
  7494  0029D6  EF22  F015         	goto	l3682
  7495  0029DA                     l3676:
  7496  0029DA  C008  FFF6         	movff	atoi@s,tblptrl
  7497  0029DE  C009  FFF7         	movff	atoi@s+1,tblptrh
  7498  0029E2                     	if	0	;tblptru may be non-zero
  7499  0029E2                     	endif
  7500  0029E2                     	if	0	;tblptru may be non-zero
  7501  0029E2                     	endif
  7502  0029E2  0008               	tblrd		*
  7503  0029E4  50F5               	movf	tablat,w,c
  7504  0029E6  6E0A               	movwf	??_atoi^0,c
  7505  0029E8  6A0B               	clrf	(??_atoi+1)^0,c
  7506                           
  7507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7508                           ; Switch size 1, requested type "simple"
  7509                           ; Number of cases is 1, Range of values is 0 to 0
  7510                           ; switch strategies available:
  7511                           ; Name         Instructions Cycles
  7512                           ; simple_byte            4     3 (average)
  7513                           ;	Chosen strategy is simple_byte
  7514  0029EA  500B               	movf	(??_atoi+1)^0,w,c
  7515  0029EC  0A00               	xorlw	0	; case 0
  7516  0029EE  B4D8               	btfsc	status,2,c
  7517  0029F0  EFFC  F014         	goto	l3998
  7518  0029F4  EF22  F015         	goto	l3682
  7519  0029F8                     l3998:
  7520                           
  7521                           ; Switch size 1, requested type "simple"
  7522                           ; Number of cases is 2, Range of values is 43 to 45
  7523                           ; switch strategies available:
  7524                           ; Name         Instructions Cycles
  7525                           ; simple_byte            7     4 (average)
  7526                           ;	Chosen strategy is simple_byte
  7527  0029F8  500A               	movf	??_atoi^0,w,c
  7528  0029FA  0A2B               	xorlw	43	; case 43
  7529  0029FC  B4D8               	btfsc	status,2,c
  7530  0029FE  EFE9  F014         	goto	l3674
  7531  002A02  0A06               	xorlw	6	; case 45
  7532  002A04  B4D8               	btfsc	status,2,c
  7533  002A06  EFE5  F014         	goto	l3672
  7534  002A0A  EF22  F015         	goto	l3682
  7535  002A0E                     l3678:
  7536  002A0E  C015  F001         	movff	atoi@n,___wmul@multiplier
  7537  002A12  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7538  002A16  0E00               	movlw	0
  7539  002A18  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7540  002A1A  0E0A               	movlw	10
  7541  002A1C  6E03               	movwf	___wmul@multiplicand^0,c
  7542  002A1E  EC5A  F01C         	call	___wmul	;wreg free
  7543  002A22  C008  FFF6         	movff	atoi@s,tblptrl
  7544  002A26  C009  FFF7         	movff	atoi@s+1,tblptrh
  7545  002A2A                     	if	0	;tblptru may be non-zero
  7546  002A2A                     	endif
  7547  002A2A                     	if	0	;tblptru may be non-zero
  7548  002A2A                     	endif
  7549  002A2A  0008               	tblrd		*
  7550  002A2C  50F5               	movf	tablat,w,c
  7551  002A2E  5E01               	subwf	?___wmul^0,f,c
  7552  002A30  0E00               	movlw	0
  7553  002A32  5A02               	subwfb	(?___wmul+1)^0,f,c
  7554  002A34  0E30               	movlw	48
  7555  002A36  2401               	addwf	?___wmul^0,w,c
  7556  002A38  6E15               	movwf	atoi@n^0,c
  7557  002A3A  0E00               	movlw	0
  7558  002A3C  2002               	addwfc	(?___wmul+1)^0,w,c
  7559  002A3E  6E16               	movwf	(atoi@n+1)^0,c
  7560  002A40  EFE9  F014         	goto	l3674
  7561  002A44                     l3682:
  7562  002A44  0ED0               	movlw	208
  7563  002A46  6E0A               	movwf	??_atoi^0,c
  7564  002A48  0EFF               	movlw	255
  7565  002A4A  6E0B               	movwf	(??_atoi+1)^0,c
  7566  002A4C  C008  FFF6         	movff	atoi@s,tblptrl
  7567  002A50  C009  FFF7         	movff	atoi@s+1,tblptrh
  7568  002A54                     	if	0	;tblptru may be non-zero
  7569  002A54                     	endif
  7570  002A54                     	if	0	;tblptru may be non-zero
  7571  002A54                     	endif
  7572  002A54  0008               	tblrd		*
  7573  002A56  50F5               	movf	tablat,w,c
  7574  002A58  6E0C               	movwf	(??_atoi+2)^0,c
  7575  002A5A  6A0D               	clrf	(??_atoi+3)^0,c
  7576  002A5C  500A               	movf	??_atoi^0,w,c
  7577  002A5E  260C               	addwf	(??_atoi+2)^0,f,c
  7578  002A60  500B               	movf	(??_atoi+1)^0,w,c
  7579  002A62  220D               	addwfc	(??_atoi+3)^0,f,c
  7580  002A64  500D               	movf	(??_atoi+3)^0,w,c
  7581  002A66  E10A               	bnz	u4500
  7582  002A68  0E0A               	movlw	10
  7583  002A6A  5C0C               	subwf	(??_atoi+2)^0,w,c
  7584  002A6C  A0D8               	btfss	status,0,c
  7585  002A6E  EF3B  F015         	goto	u4501
  7586  002A72  EF3E  F015         	goto	u4500
  7587  002A76                     u4501:
  7588  002A76  0E01               	movlw	1
  7589  002A78  EF3F  F015         	goto	u4510
  7590  002A7C                     u4500:
  7591  002A7C  0E00               	movlw	0
  7592  002A7E                     u4510:
  7593  002A7E  6E12               	movwf	_atoi$1140^0,c
  7594  002A80  6A13               	clrf	(_atoi$1140+1)^0,c
  7595  002A82  5012               	movf	_atoi$1140^0,w,c
  7596  002A84  1013               	iorwf	(_atoi$1140+1)^0,w,c
  7597  002A86  A4D8               	btfss	status,2,c
  7598  002A88  EF48  F015         	goto	u4521
  7599  002A8C  EF4A  F015         	goto	u4520
  7600  002A90                     u4521:
  7601  002A90  EF07  F015         	goto	l3678
  7602  002A94                     u4520:
  7603  002A94  500E               	movf	atoi@neg^0,w,c
  7604  002A96  100F               	iorwf	(atoi@neg+1)^0,w,c
  7605  002A98  A4D8               	btfss	status,2,c
  7606  002A9A  EF51  F015         	goto	u4531
  7607  002A9E  EF53  F015         	goto	u4530
  7608  002AA2                     u4531:
  7609  002AA2  EF61  F015         	goto	l1019
  7610  002AA6                     u4530:
  7611  002AA6  C015  F00A         	movff	atoi@n,??_atoi
  7612  002AAA  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7613  002AAE  1E0A               	comf	??_atoi^0,f,c
  7614  002AB0  1E0B               	comf	(??_atoi+1)^0,f,c
  7615  002AB2  4A0A               	infsnz	??_atoi^0,f,c
  7616  002AB4  2A0B               	incf	(??_atoi+1)^0,f,c
  7617  002AB6  C00A  F008         	movff	??_atoi,?_atoi
  7618  002ABA  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7619  002ABE  EF65  F015         	goto	l1022
  7620  002AC2                     l1019:
  7621  002AC2  C015  F008         	movff	atoi@n,?_atoi
  7622  002AC6  C016  F009         	movff	atoi@n+1,?_atoi+1
  7623  002ACA                     l1022:
  7624  002ACA  0012               	return		;funcret
  7625  002ACC                     __end_of_atoi:
  7626                           	callstack 0
  7627                           
  7628 ;; *************** function _isspace *****************
  7629 ;; Defined at:
  7630 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  c               2    0[COMRAM] int 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;		None
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  2    0[COMRAM] int 
  7637 ;; Registers used:
  7638 ;;		wreg, status,2, status,0
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7644 ;;      Params:         2       0       0       0       0       0       0       0       0
  7645 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7646 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7647 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7648 ;;Total ram usage:        7 bytes
  7649 ;; Hardware stack levels used: 1
  7650 ;; Hardware stack levels required when called: 1
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;;		_atoi
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text27
  7659  003634                     __ptext27:
  7660                           	callstack 0
  7661  003634                     _isspace:
  7662                           	callstack 25
  7663  003634  0E01               	movlw	1
  7664  003636  6E07               	movwf	_isspace$1169^0,c
  7665  003638  0E20               	movlw	32
  7666  00363A  1801               	xorwf	isspace@c^0,w,c
  7667  00363C  1002               	iorwf	(isspace@c+1)^0,w,c
  7668  00363E  B4D8               	btfsc	status,2,c
  7669  003640  EF24  F01B         	goto	u3911
  7670  003644  EF26  F01B         	goto	u3910
  7671  003648                     u3911:
  7672  003648  EF3F  F01B         	goto	l3342
  7673  00364C                     u3910:
  7674  00364C  0EF7               	movlw	247
  7675  00364E  6E03               	movwf	??_isspace^0,c
  7676  003650  0EFF               	movlw	255
  7677  003652  6E04               	movwf	(??_isspace+1)^0,c
  7678  003654  C001  F005         	movff	isspace@c,??_isspace+2
  7679  003658  C002  F006         	movff	isspace@c+1,??_isspace+3
  7680  00365C  5003               	movf	??_isspace^0,w,c
  7681  00365E  2605               	addwf	(??_isspace+2)^0,f,c
  7682  003660  5004               	movf	(??_isspace+1)^0,w,c
  7683  003662  2206               	addwfc	(??_isspace+3)^0,f,c
  7684  003664  5006               	movf	(??_isspace+3)^0,w,c
  7685  003666  E109               	bnz	u3920
  7686  003668  0E05               	movlw	5
  7687  00366A  5C05               	subwf	(??_isspace+2)^0,w,c
  7688  00366C  A0D8               	btfss	status,0,c
  7689  00366E  EF3B  F01B         	goto	u3921
  7690  003672  EF3D  F01B         	goto	u3920
  7691  003676                     u3921:
  7692  003676  EF3F  F01B         	goto	l3342
  7693  00367A                     u3920:
  7694  00367A  0E00               	movlw	0
  7695  00367C  6E07               	movwf	_isspace$1169^0,c
  7696  00367E                     l3342:
  7697  00367E  C007  F001         	movff	_isspace$1169,?_isspace
  7698  003682  6A02               	clrf	(?_isspace+1)^0,c
  7699  003684  0012               	return		;funcret
  7700  003686                     __end_of_isspace:
  7701                           	callstack 0
  7702                           
  7703 ;; *************** function _isdigit *****************
  7704 ;; Defined at:
  7705 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;  c               2    0[COMRAM] int 
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;		None
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  2    0[COMRAM] int 
  7712 ;; Registers used:
  7713 ;;		wreg, status,2, status,0
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7719 ;;      Params:         2       0       0       0       0       0       0       0       0
  7720 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7721 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7722 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7723 ;;Total ram usage:        6 bytes
  7724 ;; Hardware stack levels used: 1
  7725 ;; Hardware stack levels required when called: 1
  7726 ;; This function calls:
  7727 ;;		Nothing
  7728 ;; This function is called by:
  7729 ;;		_vfpfcnvrt
  7730 ;;		_atoi
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text28
  7735  0037C4                     __ptext28:
  7736                           	callstack 0
  7737  0037C4                     _isdigit:
  7738                           	callstack 26
  7739  0037C4  0ED0               	movlw	208
  7740  0037C6  6E03               	movwf	??_isdigit^0,c
  7741  0037C8  0EFF               	movlw	255
  7742  0037CA  6E04               	movwf	(??_isdigit+1)^0,c
  7743  0037CC  C001  F005         	movff	isdigit@c,??_isdigit+2
  7744  0037D0  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7745  0037D4  5003               	movf	??_isdigit^0,w,c
  7746  0037D6  2605               	addwf	(??_isdigit+2)^0,f,c
  7747  0037D8  5004               	movf	(??_isdigit+1)^0,w,c
  7748  0037DA  2206               	addwfc	(??_isdigit+3)^0,f,c
  7749  0037DC  5006               	movf	(??_isdigit+3)^0,w,c
  7750  0037DE  E10A               	bnz	u3890
  7751  0037E0  0E0A               	movlw	10
  7752  0037E2  5C05               	subwf	(??_isdigit+2)^0,w,c
  7753  0037E4  A0D8               	btfss	status,0,c
  7754  0037E6  EFF7  F01B         	goto	u3891
  7755  0037EA  EFFA  F01B         	goto	u3890
  7756  0037EE                     u3891:
  7757  0037EE  0E01               	movlw	1
  7758  0037F0  EFFB  F01B         	goto	u3900
  7759  0037F4                     u3890:
  7760  0037F4  0E00               	movlw	0
  7761  0037F6                     u3900:
  7762  0037F6  6E01               	movwf	?_isdigit^0,c
  7763  0037F8  6A02               	clrf	(?_isdigit+1)^0,c
  7764  0037FA  0012               	return		;funcret
  7765  0037FC                     __end_of_isdigit:
  7766                           	callstack 0
  7767                           
  7768 ;; *************** function ___wmul *****************
  7769 ;; Defined at:
  7770 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  multiplier      2    0[COMRAM] unsigned int 
  7773 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;  product         2    4[COMRAM] unsigned int 
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  2    0[COMRAM] unsigned int 
  7778 ;; Registers used:
  7779 ;;		wreg, status,2, status,0, prodl, prodh
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7785 ;;      Params:         4       0       0       0       0       0       0       0       0
  7786 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7788 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7789 ;;Total ram usage:        6 bytes
  7790 ;; Hardware stack levels used: 1
  7791 ;; Hardware stack levels required when called: 1
  7792 ;; This function calls:
  7793 ;;		Nothing
  7794 ;; This function is called by:
  7795 ;;		_atoi
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text29
  7800  0038B4                     __ptext29:
  7801                           	callstack 0
  7802  0038B4                     ___wmul:
  7803                           	callstack 25
  7804  0038B4  5001               	movf	___wmul@multiplier^0,w,c
  7805  0038B6  0203               	mulwf	___wmul@multiplicand^0,c
  7806  0038B8  CFF3 F005          	movff	prodl,___wmul@product
  7807  0038BC  CFF4 F006          	movff	prodh,___wmul@product+1
  7808  0038C0  5001               	movf	___wmul@multiplier^0,w,c
  7809  0038C2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7810  0038C4  50F3               	movf	243,w,c
  7811  0038C6  2606               	addwf	(___wmul@product+1)^0,f,c
  7812  0038C8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7813  0038CA  0203               	mulwf	___wmul@multiplicand^0,c
  7814  0038CC  50F3               	movf	243,w,c
  7815  0038CE  2606               	addwf	(___wmul@product+1)^0,f,c
  7816  0038D0  C005  F001         	movff	___wmul@product,?___wmul
  7817  0038D4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7818  0038D8  0012               	return		;funcret
  7819  0038DA                     __end_of___wmul:
  7820                           	callstack 0
  7821                           
  7822 ;; *************** function ___xxtofl *****************
  7823 ;; Defined at:
  7824 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  sign            1    wreg     unsigned char 
  7827 ;;  val             4    0[COMRAM] long 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  sign            1    8[COMRAM] unsigned char 
  7830 ;;  arg             4   10[COMRAM] unsigned long 
  7831 ;;  exp             1    9[COMRAM] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  4    0[COMRAM] unsigned char 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7841 ;;      Params:         4       0       0       0       0       0       0       0       0
  7842 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7843 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7844 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7845 ;;Total ram usage:       14 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 1
  7848 ;; This function calls:
  7849 ;;		Nothing
  7850 ;; This function is called by:
  7851 ;;		_main
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           	psect	text30
  7856  002788                     __ptext30:
  7857                           	callstack 0
  7858  002788                     ___xxtofl:
  7859                           	callstack 29
  7860                           
  7861                           ;incstack = 0
  7862                           ;___xxtofl@sign stored from wreg
  7863  002788  6E09               	movwf	___xxtofl@sign^0,c
  7864  00278A  5009               	movf	___xxtofl@sign^0,w,c
  7865  00278C  B4D8               	btfsc	status,2,c
  7866  00278E  EFCB  F013         	goto	u4801
  7867  002792  EFCD  F013         	goto	u4800
  7868  002796                     u4801:
  7869  002796  EFEF  F013         	goto	l787
  7870  00279A                     u4800:
  7871  00279A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7872  00279C  EFD4  F013         	goto	u4810
  7873  0027A0  EFD2  F013         	goto	u4811
  7874  0027A4                     u4811:
  7875  0027A4  EFEF  F013         	goto	l787
  7876  0027A8                     u4810:
  7877  0027A8  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7878  0027AC  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7879  0027B0  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7880  0027B4  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7881  0027B8  1E05               	comf	??___xxtofl^0,f,c
  7882  0027BA  1E06               	comf	(??___xxtofl+1)^0,f,c
  7883  0027BC  1E07               	comf	(??___xxtofl+2)^0,f,c
  7884  0027BE  1E08               	comf	(??___xxtofl+3)^0,f,c
  7885  0027C0  2A05               	incf	??___xxtofl^0,f,c
  7886  0027C2  0E00               	movlw	0
  7887  0027C4  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7888  0027C6  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7889  0027C8  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7890  0027CA  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7891  0027CE  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7892  0027D2  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7893  0027D6  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7894  0027DA  EFF7  F013         	goto	l3912
  7895  0027DE                     l787:
  7896  0027DE  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7897  0027E2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7898  0027E6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7899  0027EA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7900  0027EE                     l3912:
  7901  0027EE  5001               	movf	___xxtofl@val^0,w,c
  7902  0027F0  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7903  0027F2  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7904  0027F4  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7905  0027F6  A4D8               	btfss	status,2,c
  7906  0027F8  EF00  F014         	goto	u4821
  7907  0027FC  EF02  F014         	goto	u4820
  7908  002800                     u4821:
  7909  002800  EF0C  F014         	goto	l3918
  7910  002804                     u4820:
  7911  002804  0E00               	movlw	0
  7912  002806  6E01               	movwf	?___xxtofl^0,c
  7913  002808  0E00               	movlw	0
  7914  00280A  6E02               	movwf	(?___xxtofl+1)^0,c
  7915  00280C  0E00               	movlw	0
  7916  00280E  6E03               	movwf	(?___xxtofl+2)^0,c
  7917  002810  0E00               	movlw	0
  7918  002812  6E04               	movwf	(?___xxtofl+3)^0,c
  7919  002814  EF9D  F014         	goto	l790
  7920  002818                     l3918:
  7921  002818  0E96               	movlw	150
  7922  00281A  6E0A               	movwf	___xxtofl@exp^0,c
  7923  00281C  EF16  F014         	goto	l3922
  7924  002820                     l3920:
  7925  002820  2A0A               	incf	___xxtofl@exp^0,f,c
  7926  002822  90D8               	bcf	status,0,c
  7927  002824  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7928  002826  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7929  002828  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7930  00282A  320B               	rrcf	___xxtofl@arg^0,f,c
  7931  00282C                     l3922:
  7932  00282C  0E00               	movlw	0
  7933  00282E  140B               	andwf	___xxtofl@arg^0,w,c
  7934  002830  6E05               	movwf	??___xxtofl^0,c
  7935  002832  0E00               	movlw	0
  7936  002834  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7937  002836  6E06               	movwf	(??___xxtofl+1)^0,c
  7938  002838  0E00               	movlw	0
  7939  00283A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7940  00283C  6E07               	movwf	(??___xxtofl+2)^0,c
  7941  00283E  0EFE               	movlw	254
  7942  002840  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7943  002842  6E08               	movwf	(??___xxtofl+3)^0,c
  7944  002844  5005               	movf	??___xxtofl^0,w,c
  7945  002846  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7946  002848  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7947  00284A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7948  00284C  A4D8               	btfss	status,2,c
  7949  00284E  EF2B  F014         	goto	u4831
  7950  002852  EF2D  F014         	goto	u4830
  7951  002856                     u4831:
  7952  002856  EF10  F014         	goto	l3920
  7953  00285A                     u4830:
  7954  00285A  EF3B  F014         	goto	l794
  7955  00285E                     l3924:
  7956  00285E  2A0A               	incf	___xxtofl@exp^0,f,c
  7957  002860  0E01               	movlw	1
  7958  002862  260B               	addwf	___xxtofl@arg^0,f,c
  7959  002864  0E00               	movlw	0
  7960  002866  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7961  002868  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7962  00286A  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7963  00286C  90D8               	bcf	status,0,c
  7964  00286E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7965  002870  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7966  002872  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7967  002874  320B               	rrcf	___xxtofl@arg^0,f,c
  7968  002876                     l794:
  7969  002876  0E00               	movlw	0
  7970  002878  140B               	andwf	___xxtofl@arg^0,w,c
  7971  00287A  6E05               	movwf	??___xxtofl^0,c
  7972  00287C  0E00               	movlw	0
  7973  00287E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7974  002880  6E06               	movwf	(??___xxtofl+1)^0,c
  7975  002882  0E00               	movlw	0
  7976  002884  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7977  002886  6E07               	movwf	(??___xxtofl+2)^0,c
  7978  002888  0EFF               	movlw	255
  7979  00288A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7980  00288C  6E08               	movwf	(??___xxtofl+3)^0,c
  7981  00288E  5005               	movf	??___xxtofl^0,w,c
  7982  002890  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7983  002892  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7984  002894  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7985  002896  A4D8               	btfss	status,2,c
  7986  002898  EF50  F014         	goto	u4841
  7987  00289C  EF52  F014         	goto	u4840
  7988  0028A0                     u4841:
  7989  0028A0  EF2F  F014         	goto	l3924
  7990  0028A4                     u4840:
  7991  0028A4  EF5A  F014         	goto	l3932
  7992  0028A8                     l3930:
  7993  0028A8  060A               	decf	___xxtofl@exp^0,f,c
  7994  0028AA  90D8               	bcf	status,0,c
  7995  0028AC  360B               	rlcf	___xxtofl@arg^0,f,c
  7996  0028AE  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7997  0028B0  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7998  0028B2  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7999  0028B4                     l3932:
  8000  0028B4  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8001  0028B6  EF5F  F014         	goto	u4851
  8002  0028BA  EF61  F014         	goto	u4850
  8003  0028BE                     u4851:
  8004  0028BE  EF69  F014         	goto	l801
  8005  0028C2                     u4850:
  8006  0028C2  0E02               	movlw	2
  8007  0028C4  600A               	cpfslt	___xxtofl@exp^0,c
  8008  0028C6  EF67  F014         	goto	u4861
  8009  0028CA  EF69  F014         	goto	u4860
  8010  0028CE                     u4861:
  8011  0028CE  EF54  F014         	goto	l3930
  8012  0028D2                     u4860:
  8013  0028D2                     l801:
  8014  0028D2  B00A               	btfsc	___xxtofl@exp^0,0,c
  8015  0028D4  EF6E  F014         	goto	u4871
  8016  0028D8  EF70  F014         	goto	u4870
  8017  0028DC                     u4871:
  8018  0028DC  EF71  F014         	goto	l3938
  8019  0028E0                     u4870:
  8020  0028E0  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8021  0028E2                     l3938:
  8022  0028E2  90D8               	bcf	status,0,c
  8023  0028E4  320A               	rrcf	___xxtofl@exp^0,f,c
  8024  0028E6  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8025  0028EA  6A06               	clrf	(??___xxtofl+1)^0,c
  8026  0028EC  6A07               	clrf	(??___xxtofl+2)^0,c
  8027  0028EE  6A08               	clrf	(??___xxtofl+3)^0,c
  8028  0028F0  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8029  0028F4  6A07               	clrf	(??___xxtofl+2)^0,c
  8030  0028F6  6A06               	clrf	(??___xxtofl+1)^0,c
  8031  0028F8  6A05               	clrf	??___xxtofl^0,c
  8032  0028FA  5005               	movf	??___xxtofl^0,w,c
  8033  0028FC  120B               	iorwf	___xxtofl@arg^0,f,c
  8034  0028FE  5006               	movf	(??___xxtofl+1)^0,w,c
  8035  002900  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8036  002902  5007               	movf	(??___xxtofl+2)^0,w,c
  8037  002904  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8038  002906  5008               	movf	(??___xxtofl+3)^0,w,c
  8039  002908  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8040  00290A  5009               	movf	___xxtofl@sign^0,w,c
  8041  00290C  B4D8               	btfsc	status,2,c
  8042  00290E  EF8B  F014         	goto	u4881
  8043  002912  EF8D  F014         	goto	u4880
  8044  002916                     u4881:
  8045  002916  EF95  F014         	goto	l3948
  8046  00291A                     u4880:
  8047  00291A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8048  00291C  EF94  F014         	goto	u4890
  8049  002920  EF92  F014         	goto	u4891
  8050  002924                     u4891:
  8051  002924  EF95  F014         	goto	l3948
  8052  002928                     u4890:
  8053  002928  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8054  00292A                     l3948:
  8055  00292A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8056  00292E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8057  002932  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8058  002936  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8059  00293A                     l790:
  8060  00293A  0012               	return		;funcret
  8061  00293C                     __end_of___xxtofl:
  8062                           	callstack 0
  8063                           
  8064 ;; *************** function _Run_Timer_And_CCP1PWM *****************
  8065 ;; Defined at:
  8066 ;;		line 123 in file "main.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;  mod             1    wreg     enum E3546
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;  mod             1    0[COMRAM] enum E3546
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  1    wreg      void 
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8080 ;;      Params:         0       0       0       0       0       0       0       0       0
  8081 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8083 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8084 ;;Total ram usage:        1 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; Hardware stack levels required when called: 1
  8087 ;; This function calls:
  8088 ;;		Nothing
  8089 ;; This function is called by:
  8090 ;;		_main
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           	psect	text31
  8095  0038DA                     __ptext31:
  8096                           	callstack 0
  8097  0038DA                     _Run_Timer_And_CCP1PWM:
  8098                           	callstack 29
  8099                           
  8100                           ;incstack = 0
  8101                           ;Run_Timer_And_CCP1PWM@mod stored from wreg
  8102  0038DA  6E01               	movwf	Run_Timer_And_CCP1PWM@mod^0,c
  8103  0038DC                     
  8104                           ;main.c: 123: void Run_Timer_And_CCP1PWM (_module_ccp1_timer_t mod);main.c: 124: {;main.
      +                          c: 125:     if(mod == MOD_ON)
  8105  0038DC  0401               	decf	Run_Timer_And_CCP1PWM@mod^0,w,c
  8106  0038DE  A4D8               	btfss	status,2,c
  8107  0038E0  EF74  F01C         	goto	u4741
  8108  0038E4  EF76  F01C         	goto	u4740
  8109  0038E8                     u4741:
  8110  0038E8  EF79  F01C         	goto	l82
  8111  0038EC                     u4740:
  8112  0038EC                     
  8113                           ;main.c: 126:     {;main.c: 127:         T2CONbits.TMR2ON = 1;
  8114  0038EC  84CA               	bsf	202,2,c	;volatile
  8115                           
  8116                           ;main.c: 128:     }
  8117  0038EE  EF7A  F01C         	goto	l84
  8118  0038F2                     l82:
  8119                           
  8120                           ;main.c: 130:     {;main.c: 131:         T2CONbits.TMR2ON = 0;
  8121  0038F2  94CA               	bcf	202,2,c	;volatile
  8122  0038F4                     l84:
  8123  0038F4  0012               	return		;funcret
  8124  0038F6                     __end_of_Run_Timer_And_CCP1PWM:
  8125                           	callstack 0
  8126                           
  8127 ;; *************** function _Init_Timer2_Module *****************
  8128 ;; Defined at:
  8129 ;;		line 151 in file "main.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;		None
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;		None
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      void 
  8136 ;; Registers used:
  8137 ;;		wreg, status,2
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8143 ;;      Params:         0       0       0       0       0       0       0       0       0
  8144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8146 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8147 ;;Total ram usage:        0 bytes
  8148 ;; Hardware stack levels used: 1
  8149 ;; Hardware stack levels required when called: 1
  8150 ;; This function calls:
  8151 ;;		Nothing
  8152 ;; This function is called by:
  8153 ;;		_main
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           	psect	text32
  8158  0038F6                     __ptext32:
  8159                           	callstack 0
  8160  0038F6                     _Init_Timer2_Module:
  8161                           	callstack 29
  8162  0038F6                     
  8163                           ;main.c: 154:     T2CON = 0x00;
  8164  0038F6  0E00               	movlw	0
  8165  0038F8  6ECA               	movwf	202,c	;volatile
  8166                           
  8167                           ;main.c: 155:     TMR2 = 0x00;
  8168  0038FA  0E00               	movlw	0
  8169  0038FC  6ECC               	movwf	204,c	;volatile
  8170                           
  8171                           ;main.c: 156:     PR2 = 0x00;
  8172  0038FE  0E00               	movlw	0
  8173  003900  6ECB               	movwf	203,c	;volatile
  8174  003902                     
  8175                           ;main.c: 159:     T2CONbits.TMR2ON = 0;
  8176  003902  94CA               	bcf	202,2,c	;volatile
  8177                           
  8178                           ;main.c: 160:     T2CONbits.T2CKPS = 0b01;
  8179  003904  50CA               	movf	202,w,c	;volatile
  8180  003906  0BFC               	andlw	-4
  8181  003908  0901               	iorlw	1
  8182  00390A  6ECA               	movwf	202,c	;volatile
  8183                           
  8184                           ;main.c: 176:     PR2 = 49;
  8185  00390C  0E31               	movlw	49
  8186  00390E  6ECB               	movwf	203,c	;volatile
  8187  003910  0012               	return		;funcret
  8188  003912                     __end_of_Init_Timer2_Module:
  8189                           	callstack 0
  8190                           
  8191 ;; *************** function _Init_Internal_Oscillator *****************
  8192 ;; Defined at:
  8193 ;;		line 179 in file "main.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;		None
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;		None
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  1    wreg      void 
  8200 ;; Registers used:
  8201 ;;		wreg, status,2
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8207 ;;      Params:         0       0       0       0       0       0       0       0       0
  8208 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8210 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8211 ;;Total ram usage:        0 bytes
  8212 ;; Hardware stack levels used: 1
  8213 ;; Hardware stack levels required when called: 1
  8214 ;; This function calls:
  8215 ;;		Nothing
  8216 ;; This function is called by:
  8217 ;;		_main
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221                           	psect	text33
  8222  00392A                     __ptext33:
  8223                           	callstack 0
  8224  00392A                     _Init_Internal_Oscillator:
  8225                           	callstack 29
  8226  00392A                     
  8227                           ;main.c: 182:     OSCCON = 0x00;
  8228  00392A  0E00               	movlw	0
  8229  00392C  6ED3               	movwf	211,c	;volatile
  8230                           
  8231                           ;main.c: 185:     OSCCONbits.IRCF = 0b111;
  8232  00392E  0E70               	movlw	112
  8233  003930  12D3               	iorwf	211,f,c	;volatile
  8234                           
  8235                           ;main.c: 186:     OSCCONbits.SCS = 0b11;
  8236  003932  0E03               	movlw	3
  8237  003934  12D3               	iorwf	211,f,c	;volatile
  8238  003936  0012               	return		;funcret
  8239  003938                     __end_of_Init_Internal_Oscillator:
  8240                           	callstack 0
  8241                           
  8242 ;; *************** function _Init_CCP1_As_PWM *****************
  8243 ;; Defined at:
  8244 ;;		line 135 in file "main.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;		None
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;		None
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  1    wreg      void 
  8251 ;; Registers used:
  8252 ;;		wreg, status,2
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8258 ;;      Params:         0       0       0       0       0       0       0       0       0
  8259 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8261 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8262 ;;Total ram usage:        0 bytes
  8263 ;; Hardware stack levels used: 1
  8264 ;; Hardware stack levels required when called: 1
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_main
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text34
  8273  003912                     __ptext34:
  8274                           	callstack 0
  8275  003912                     _Init_CCP1_As_PWM:
  8276                           	callstack 29
  8277  003912                     
  8278                           ;main.c: 138:     CCP1CON = 0x00;
  8279  003912  0E00               	movlw	0
  8280  003914  6EBD               	movwf	189,c	;volatile
  8281                           
  8282                           ;main.c: 139:     CCPR1L = 0x00;
  8283  003916  0E00               	movlw	0
  8284  003918  6EBE               	movwf	190,c	;volatile
  8285                           
  8286                           ;main.c: 142:     CCP1CONbits.CCP1M = 0b1100;
  8287  00391A  50BD               	movf	189,w,c	;volatile
  8288  00391C  0BF0               	andlw	-16
  8289  00391E  090C               	iorlw	12
  8290  003920  6EBD               	movwf	189,c	;volatile
  8291                           
  8292                           ;main.c: 145:     CCPR1L = 0;
  8293  003922  0E00               	movlw	0
  8294  003924  6EBE               	movwf	190,c	;volatile
  8295  003926                     
  8296                           ;main.c: 148:     TRISCbits.RC2 = 0;
  8297  003926  9494               	bcf	148,2,c	;volatile
  8298  003928  0012               	return		;funcret
  8299  00392A                     __end_of_Init_CCP1_As_PWM:
  8300                           	callstack 0
  8301                           
  8302 ;; *************** function _Init_ADC1_Chanel_0 *****************
  8303 ;; Defined at:
  8304 ;;		line 85 in file "main.c"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;		None
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;		None
  8309 ;; Return value:  Size  Location     Type
  8310 ;;                  1    wreg      void 
  8311 ;; Registers used:
  8312 ;;		wreg, status,2
  8313 ;; Tracked objects:
  8314 ;;		On entry : 0/0
  8315 ;;		On exit  : 0/0
  8316 ;;		Unchanged: 0/0
  8317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8318 ;;      Params:         0       0       0       0       0       0       0       0       0
  8319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8321 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8322 ;;Total ram usage:        0 bytes
  8323 ;; Hardware stack levels used: 1
  8324 ;; Hardware stack levels required when called: 1
  8325 ;; This function calls:
  8326 ;;		Nothing
  8327 ;; This function is called by:
  8328 ;;		_main
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332                           	psect	text35
  8333  003832                     __ptext35:
  8334                           	callstack 0
  8335  003832                     _Init_ADC1_Chanel_0:
  8336                           	callstack 29
  8337  003832                     
  8338                           ;main.c: 88:     ADCON0 = 0x00;
  8339  003832  0E00               	movlw	0
  8340  003834  6EC2               	movwf	194,c	;volatile
  8341                           
  8342                           ;main.c: 89:     ADCON1 = 0x00;
  8343  003836  0E00               	movlw	0
  8344  003838  6EC1               	movwf	193,c	;volatile
  8345                           
  8346                           ;main.c: 90:     ADCON2 = 0x00;
  8347  00383A  0E00               	movlw	0
  8348  00383C  6EC0               	movwf	192,c	;volatile
  8349  00383E                     
  8350                           ;main.c: 93:     ADCON0bits.ADON = 0;
  8351  00383E  90C2               	bcf	194,0,c	;volatile
  8352                           
  8353                           ;main.c: 94:     ADCON0bits.CHS = 0b0000;
  8354  003840  0EC3               	movlw	-61
  8355  003842  16C2               	andwf	194,f,c	;volatile
  8356                           
  8357                           ;main.c: 96:     ADCON1bits.VCFG = 0b00;
  8358  003844  0ECF               	movlw	-49
  8359  003846  16C1               	andwf	193,f,c	;volatile
  8360                           
  8361                           ;main.c: 97:     ADCON1bits.PCFG = 0b1110;
  8362  003848  50C1               	movf	193,w,c	;volatile
  8363  00384A  0BF0               	andlw	-16
  8364  00384C  090E               	iorlw	14
  8365  00384E  6EC1               	movwf	193,c	;volatile
  8366  003850                     
  8367                           ;main.c: 100:     TRISAbits.RA0 = 1;
  8368  003850  8092               	bsf	146,0,c	;volatile
  8369  003852                     
  8370                           ;main.c: 102:     ADCON2bits.ADFM = 1;
  8371  003852  8EC0               	bsf	192,7,c	;volatile
  8372                           
  8373                           ;main.c: 116:     ADCON2bits.ACQT = 0b111;
  8374  003854  0E38               	movlw	56
  8375  003856  12C0               	iorwf	192,f,c	;volatile
  8376                           
  8377                           ;main.c: 117:     ADCON2bits.ADCS = 0b001;
  8378  003858  50C0               	movf	192,w,c	;volatile
  8379  00385A  0BF8               	andlw	-8
  8380  00385C  0901               	iorlw	1
  8381  00385E  6EC0               	movwf	192,c	;volatile
  8382  003860                     
  8383                           ;main.c: 120:     ADCON0bits.ADON = 1;
  8384  003860  80C2               	bsf	194,0,c	;volatile
  8385  003862  0012               	return		;funcret
  8386  003864                     __end_of_Init_ADC1_Chanel_0:
  8387                           	callstack 0
  8388                           
  8389 ;; *************** function _FM_Lcd_Set_Cursor *****************
  8390 ;; Defined at:
  8391 ;;		line 62 in file "FM_LCD16X2_Easy.c"
  8392 ;; Parameters:    Size  Location     Type
  8393 ;;  filas           1    wreg     enum E3192
  8394 ;;  columna         1    5[COMRAM] enum E3196
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  filas           1    6[COMRAM] enum E3192
  8397 ;;  base_pos        1    7[COMRAM] unsigned char 
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  1    wreg      void 
  8400 ;; Registers used:
  8401 ;;		wreg, status,2, status,0, cstack
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8407 ;;      Params:         1       0       0       0       0       0       0       0       0
  8408 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8410 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8411 ;;Total ram usage:        3 bytes
  8412 ;; Hardware stack levels used: 1
  8413 ;; Hardware stack levels required when called: 3
  8414 ;; This function calls:
  8415 ;;		_FM_Lcd_Send_Command
  8416 ;; This function is called by:
  8417 ;;		_main
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           	psect	text36
  8422  003710                     __ptext36:
  8423                           	callstack 0
  8424  003710                     _FM_Lcd_Set_Cursor:
  8425                           	callstack 27
  8426                           
  8427                           ;incstack = 0
  8428                           ;FM_Lcd_Set_Cursor@filas stored from wreg
  8429  003710  6E07               	movwf	FM_Lcd_Set_Cursor@filas^0,c
  8430  003712                     
  8431                           ;FM_LCD16X2_Easy.c: 62: void FM_Lcd_Set_Cursor (_row_lcd_t filas, _column_lcd_t columna)
      +                          ;FM_LCD16X2_Easy.c: 63: {;FM_LCD16X2_Easy.c: 64:     char base_pos = 0x00;
  8432  003712  0E00               	movlw	0
  8433  003714  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^0,c
  8434  003716                     
  8435                           ;FM_LCD16X2_Easy.c: 65:     if(filas == ROW_1)
  8436  003716  5007               	movf	FM_Lcd_Set_Cursor@filas^0,w,c
  8437  003718  A4D8               	btfss	status,2,c
  8438  00371A  EF91  F01B         	goto	u4751
  8439  00371E  EF93  F01B         	goto	u4750
  8440  003722                     u4751:
  8441  003722  EF97  F01B         	goto	l3876
  8442  003726                     u4750:
  8443  003726                     
  8444                           ;FM_LCD16X2_Easy.c: 66:     {;FM_LCD16X2_Easy.c: 67:         base_pos = 0x80;
  8445  003726  0E80               	movlw	128
  8446  003728  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^0,c
  8447                           
  8448                           ;FM_LCD16X2_Easy.c: 68:     }
  8449  00372A  EFA4  F01B         	goto	l3880
  8450  00372E                     l3876:
  8451  00372E  0407               	decf	FM_Lcd_Set_Cursor@filas^0,w,c
  8452  003730  A4D8               	btfss	status,2,c
  8453  003732  EF9D  F01B         	goto	u4761
  8454  003736  EF9F  F01B         	goto	u4760
  8455  00373A                     u4761:
  8456  00373A  EFA3  F01B         	goto	l124
  8457  00373E                     u4760:
  8458  00373E                     
  8459                           ;FM_LCD16X2_Easy.c: 70:     {;FM_LCD16X2_Easy.c: 71:         base_pos = 0xC0;
  8460  00373E  0EC0               	movlw	192
  8461  003740  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^0,c
  8462                           
  8463                           ;FM_LCD16X2_Easy.c: 72:     }
  8464  003742  EFA4  F01B         	goto	l3880
  8465  003746                     l124:
  8466                           
  8467                           ;FM_LCD16X2_Easy.c: 74:     {;FM_LCD16X2_Easy.c: 75:         __nop();
  8468  003746  F000               	nop	
  8469  003748                     l3880:
  8470                           
  8471                           ;FM_LCD16X2_Easy.c: 79:     base_pos += columna;
  8472  003748  5006               	movf	FM_Lcd_Set_Cursor@columna^0,w,c
  8473  00374A  2608               	addwf	FM_Lcd_Set_Cursor@base_pos^0,f,c
  8474  00374C                     
  8475                           ;FM_LCD16X2_Easy.c: 80:     FM_Lcd_Send_Command(base_pos);
  8476  00374C  5008               	movf	FM_Lcd_Set_Cursor@base_pos^0,w,c
  8477  00374E  ECA2  F01C         	call	_FM_Lcd_Send_Command
  8478  003752  0012               	return		;funcret
  8479  003754                     __end_of_FM_Lcd_Set_Cursor:
  8480                           	callstack 0
  8481                           
  8482 ;; *************** function _FM_Lcd_Send_String *****************
  8483 ;; Defined at:
  8484 ;;		line 52 in file "FM_LCD16X2_Easy.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;  cadena          2    5[COMRAM] PTR unsigned char 
  8487 ;;		 -> mens(16), STR_1(12), 
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;  index           1    9[COMRAM] unsigned char 
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  1    wreg      void 
  8492 ;; Registers used:
  8493 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8499 ;;      Params:         2       0       0       0       0       0       0       0       0
  8500 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8501 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8502 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8503 ;;Total ram usage:        5 bytes
  8504 ;; Hardware stack levels used: 1
  8505 ;; Hardware stack levels required when called: 3
  8506 ;; This function calls:
  8507 ;;		_FM_Lcd_Send_Character
  8508 ;; This function is called by:
  8509 ;;		_main
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text37
  8514  0033E0                     __ptext37:
  8515                           	callstack 0
  8516  0033E0                     _FM_Lcd_Send_String:
  8517                           	callstack 27
  8518  0033E0                     
  8519                           ;FM_LCD16X2_Easy.c: 52: void FM_Lcd_Send_String (char *cadena);FM_LCD16X2_Easy.c: 53: {;
      +                          FM_LCD16X2_Easy.c: 54:     uint8_t index = 0;
  8520  0033E0  0E00               	movlw	0
  8521  0033E2  6E0A               	movwf	FM_Lcd_Send_String@index^0,c
  8522                           
  8523                           ;FM_LCD16X2_Easy.c: 55:     while(cadena[index] != '\0')
  8524  0033E4  EF0D  F01A         	goto	l3892
  8525  0033E8                     l3888:
  8526                           
  8527                           ;FM_LCD16X2_Easy.c: 56:     {;FM_LCD16X2_Easy.c: 57:         FM_Lcd_Send_Character(caden
      +                          a[index]);
  8528  0033E8  500A               	movf	FM_Lcd_Send_String@index^0,w,c
  8529  0033EA  2406               	addwf	FM_Lcd_Send_String@cadena^0,w,c
  8530  0033EC  6E08               	movwf	??_FM_Lcd_Send_String^0,c
  8531  0033EE  0E00               	movlw	0
  8532  0033F0  2007               	addwfc	(FM_Lcd_Send_String@cadena+1)^0,w,c
  8533  0033F2  6E09               	movwf	(??_FM_Lcd_Send_String+1)^0,c
  8534  0033F4  C008  FFF6         	movff	??_FM_Lcd_Send_String,tblptrl
  8535  0033F8  C009  FFF7         	movff	??_FM_Lcd_Send_String+1,tblptrh
  8536  0033FC  6AF8               	clrf	tblptru,c
  8537  0033FE  0E07               	movlw	(high __ramtop+-1)
  8538  003400  64F7               	cpfsgt	tblptrh,c
  8539  003402  D003               	bra	u4777
  8540  003404  0008               	tblrd		*
  8541  003406  50F5               	movf	tablat,w,c
  8542  003408  D005               	bra	u4770
  8543  00340A                     u4777:
  8544  00340A  CFF6 FFE1          	movff	tblptrl,fsr1l
  8545  00340E  CFF7 FFE2          	movff	tblptrh,fsr1h
  8546  003412  50E7               	movf	indf1,w,c
  8547  003414                     u4770:
  8548  003414  EC9C  F01C         	call	_FM_Lcd_Send_Character
  8549  003418                     
  8550                           ;FM_LCD16X2_Easy.c: 58:         index++;
  8551  003418  2A0A               	incf	FM_Lcd_Send_String@index^0,f,c
  8552  00341A                     l3892:
  8553                           
  8554                           ;FM_LCD16X2_Easy.c: 55:     while(cadena[index] != '\0')
  8555  00341A  500A               	movf	FM_Lcd_Send_String@index^0,w,c
  8556  00341C  2406               	addwf	FM_Lcd_Send_String@cadena^0,w,c
  8557  00341E  6E08               	movwf	??_FM_Lcd_Send_String^0,c
  8558  003420  0E00               	movlw	0
  8559  003422  2007               	addwfc	(FM_Lcd_Send_String@cadena+1)^0,w,c
  8560  003424  6E09               	movwf	(??_FM_Lcd_Send_String+1)^0,c
  8561  003426  C008  FFF6         	movff	??_FM_Lcd_Send_String,tblptrl
  8562  00342A  C009  FFF7         	movff	??_FM_Lcd_Send_String+1,tblptrh
  8563  00342E  6AF8               	clrf	tblptru,c
  8564  003430  0E07               	movlw	(high __ramtop+-1)
  8565  003432  64F7               	cpfsgt	tblptrh,c
  8566  003434  D003               	bra	u4787
  8567  003436  0008               	tblrd		*
  8568  003438  50F5               	movf	tablat,w,c
  8569  00343A  D005               	bra	u4780
  8570  00343C                     u4787:
  8571  00343C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8572  003440  CFF7 FFE2          	movff	tblptrh,fsr1h
  8573  003444  50E7               	movf	indf1,w,c
  8574  003446                     u4780:
  8575  003446  0900               	iorlw	0
  8576  003448  A4D8               	btfss	status,2,c
  8577  00344A  EF29  F01A         	goto	u4791
  8578  00344E  EF2B  F01A         	goto	u4790
  8579  003452                     u4791:
  8580  003452  EFF4  F019         	goto	l3888
  8581  003456                     u4790:
  8582  003456  0012               	return		;funcret
  8583  003458                     __end_of_FM_Lcd_Send_String:
  8584                           	callstack 0
  8585                           
  8586 ;; *************** function _FM_Lcd_Send_Character *****************
  8587 ;; Defined at:
  8588 ;;		line 45 in file "FM_LCD16X2_Easy.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;  character_to    1    wreg     unsigned char 
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;  character_to    1    4[COMRAM] unsigned char 
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  1    wreg      void 
  8595 ;; Registers used:
  8596 ;;		wreg, status,2, status,0, cstack
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8602 ;;      Params:         0       0       0       0       0       0       0       0       0
  8603 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8605 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8606 ;;Total ram usage:        1 bytes
  8607 ;; Hardware stack levels used: 1
  8608 ;; Hardware stack levels required when called: 2
  8609 ;; This function calls:
  8610 ;;		_FM_Lcd_Send_Nibble
  8611 ;; This function is called by:
  8612 ;;		_FM_Lcd_Send_String
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           	psect	text38
  8617  003938                     __ptext38:
  8618                           	callstack 0
  8619  003938                     _FM_Lcd_Send_Character:
  8620                           	callstack 27
  8621                           
  8622                           ;incstack = 0
  8623                           ;FM_Lcd_Send_Character@character_to_send stored from wreg
  8624  003938  6E05               	movwf	FM_Lcd_Send_Character@character_to_send^0,c
  8625  00393A                     
  8626                           ;FM_LCD16X2_Easy.c: 45: void FM_Lcd_Send_Character (char character_to_send);FM_LCD16X2_E
      +                          asy.c: 46: {;FM_LCD16X2_Easy.c: 47:     LATD |= (1 << 0);;
  8627  00393A  808C               	bsf	140,0,c	;volatile
  8628  00393C                     
  8629                           ;FM_LCD16X2_Easy.c: 48:     FM_Lcd_Send_Nibble(character_to_send);
  8630  00393C  5005               	movf	FM_Lcd_Send_Character@character_to_send^0,w,c
  8631  00393E  EC2C  F01A         	call	_FM_Lcd_Send_Nibble
  8632  003942  0012               	return		;funcret
  8633  003944                     __end_of_FM_Lcd_Send_Character:
  8634                           	callstack 0
  8635                           
  8636 ;; *************** function _FM_Lcd_Easy_Init *****************
  8637 ;; Defined at:
  8638 ;;		line 84 in file "FM_LCD16X2_Easy.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;		None
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;		None
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  1    wreg      void 
  8645 ;; Registers used:
  8646 ;;		wreg, status,2, status,0, cstack
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8652 ;;      Params:         0       0       0       0       0       0       0       0       0
  8653 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8655 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8656 ;;Total ram usage:        0 bytes
  8657 ;; Hardware stack levels used: 1
  8658 ;; Hardware stack levels required when called: 3
  8659 ;; This function calls:
  8660 ;;		_FM_Lcd_Easy_Gpio_Init
  8661 ;;		_FM_Lcd_Send_Command
  8662 ;; This function is called by:
  8663 ;;		_main
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           	psect	text39
  8668  003864                     __ptext39:
  8669                           	callstack 0
  8670  003864                     _FM_Lcd_Easy_Init:
  8671                           	callstack 27
  8672  003864                     
  8673                           ;FM_LCD16X2_Easy.c: 86:     FM_Lcd_Easy_Gpio_Init();
  8674  003864  ECA8  F01C         	call	_FM_Lcd_Easy_Gpio_Init	;wreg free
  8675                           
  8676                           ;FM_LCD16X2_Easy.c: 88:     FM_Lcd_Send_Command(0x01);
  8677  003868  0E01               	movlw	1
  8678  00386A  ECA2  F01C         	call	_FM_Lcd_Send_Command
  8679                           
  8680                           ;FM_LCD16X2_Easy.c: 89:     FM_Lcd_Send_Command(0x02);
  8681  00386E  0E02               	movlw	2
  8682  003870  ECA2  F01C         	call	_FM_Lcd_Send_Command
  8683                           
  8684                           ;FM_LCD16X2_Easy.c: 90:     FM_Lcd_Send_Command(0x06);
  8685  003874  0E06               	movlw	6
  8686  003876  ECA2  F01C         	call	_FM_Lcd_Send_Command
  8687                           
  8688                           ;FM_LCD16X2_Easy.c: 91:     FM_Lcd_Send_Command(0x0C);
  8689  00387A  0E0C               	movlw	12
  8690  00387C  ECA2  F01C         	call	_FM_Lcd_Send_Command
  8691                           
  8692                           ;FM_LCD16X2_Easy.c: 92:     FM_Lcd_Send_Command(0x10);
  8693  003880  0E10               	movlw	16
  8694  003882  ECA2  F01C         	call	_FM_Lcd_Send_Command
  8695                           
  8696                           ;FM_LCD16X2_Easy.c: 93:     FM_Lcd_Send_Command(0x2C);
  8697  003886  0E2C               	movlw	44
  8698  003888  ECA2  F01C         	call	_FM_Lcd_Send_Command
  8699  00388C  0012               	return		;funcret
  8700  00388E                     __end_of_FM_Lcd_Easy_Init:
  8701                           	callstack 0
  8702                           
  8703 ;; *************** function _FM_Lcd_Send_Command *****************
  8704 ;; Defined at:
  8705 ;;		line 39 in file "FM_LCD16X2_Easy.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;  command_to_s    1    wreg     unsigned char 
  8708 ;; Auto vars:     Size  Location     Type
  8709 ;;  command_to_s    1    4[COMRAM] unsigned char 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  1    wreg      void 
  8712 ;; Registers used:
  8713 ;;		wreg, status,2, status,0, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8719 ;;      Params:         0       0       0       0       0       0       0       0       0
  8720 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8721 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8722 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8723 ;;Total ram usage:        1 bytes
  8724 ;; Hardware stack levels used: 1
  8725 ;; Hardware stack levels required when called: 2
  8726 ;; This function calls:
  8727 ;;		_FM_Lcd_Send_Nibble
  8728 ;; This function is called by:
  8729 ;;		_FM_Lcd_Set_Cursor
  8730 ;;		_FM_Lcd_Easy_Init
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           	psect	text40
  8735  003944                     __ptext40:
  8736                           	callstack 0
  8737  003944                     _FM_Lcd_Send_Command:
  8738                           	callstack 27
  8739                           
  8740                           ;incstack = 0
  8741                           ;FM_Lcd_Send_Command@command_to_send stored from wreg
  8742  003944  6E05               	movwf	FM_Lcd_Send_Command@command_to_send^0,c
  8743  003946                     
  8744                           ;FM_LCD16X2_Easy.c: 39: void FM_Lcd_Send_Command (char command_to_send);FM_LCD16X2_Easy.
      +                          c: 40: {;FM_LCD16X2_Easy.c: 41:     LATD &= ~(1 << 0);;
  8745  003946  908C               	bcf	140,0,c	;volatile
  8746  003948                     
  8747                           ;FM_LCD16X2_Easy.c: 42:     FM_Lcd_Send_Nibble(command_to_send);
  8748  003948  5005               	movf	FM_Lcd_Send_Command@command_to_send^0,w,c
  8749  00394A  EC2C  F01A         	call	_FM_Lcd_Send_Nibble
  8750  00394E  0012               	return		;funcret
  8751  003950                     __end_of_FM_Lcd_Send_Command:
  8752                           	callstack 0
  8753                           
  8754 ;; *************** function _FM_Lcd_Send_Nibble *****************
  8755 ;; Defined at:
  8756 ;;		line 19 in file "FM_LCD16X2_Easy.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;  byte_to_send    1    wreg     unsigned char 
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;  byte_to_send    1    1[COMRAM] unsigned char 
  8761 ;;  lower_bits      1    3[COMRAM] unsigned char 
  8762 ;;  upper_bits      1    2[COMRAM] unsigned char 
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  1    wreg      void 
  8765 ;; Registers used:
  8766 ;;		wreg, status,2, status,0
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8772 ;;      Params:         0       0       0       0       0       0       0       0       0
  8773 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8774 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8775 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8776 ;;Total ram usage:        4 bytes
  8777 ;; Hardware stack levels used: 1
  8778 ;; Hardware stack levels required when called: 1
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		_FM_Lcd_Send_Command
  8783 ;;		_FM_Lcd_Send_Character
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text41
  8788  003458                     __ptext41:
  8789                           	callstack 0
  8790  003458                     _FM_Lcd_Send_Nibble:
  8791                           	callstack 27
  8792                           
  8793                           ;incstack = 0
  8794                           ;FM_Lcd_Send_Nibble@byte_to_send stored from wreg
  8795  003458  6E02               	movwf	FM_Lcd_Send_Nibble@byte_to_send^0,c
  8796  00345A                     
  8797                           ;FM_LCD16X2_Easy.c: 19: void FM_Lcd_Send_Nibble (char byte_to_send);FM_LCD16X2_Easy.c: 2
      +                          0: {;FM_LCD16X2_Easy.c: 21:     char upper_bits, lower_bits;;FM_LCD16X2_Easy.c: 23:     
      +                          upper_bits = (byte_to_send & 0xF0);
  8798  00345A  5002               	movf	FM_Lcd_Send_Nibble@byte_to_send^0,w,c
  8799  00345C  0BF0               	andlw	240
  8800  00345E  6E03               	movwf	FM_Lcd_Send_Nibble@upper_bits^0,c
  8801                           
  8802                           ;FM_LCD16X2_Easy.c: 24:     lower_bits = (byte_to_send & 0x0F) << 4;
  8803  003460  C002  F001         	movff	FM_Lcd_Send_Nibble@byte_to_send,??_FM_Lcd_Send_Nibble
  8804  003464  0E0F               	movlw	15
  8805  003466  1601               	andwf	??_FM_Lcd_Send_Nibble^0,f,c
  8806  003468  3801               	swapf	??_FM_Lcd_Send_Nibble^0,w,c
  8807  00346A  0BF0               	andlw	240
  8808  00346C  6E04               	movwf	FM_Lcd_Send_Nibble@lower_bits^0,c
  8809                           
  8810                           ;FM_LCD16X2_Easy.c: 30:     LATD |= upper_bits;
  8811  00346E  5003               	movf	FM_Lcd_Send_Nibble@upper_bits^0,w,c	;volatile
  8812  003470  128C               	iorwf	140,f,c	;volatile
  8813  003472                     
  8814                           ;FM_LCD16X2_Easy.c: 31:     LATD |= (1 << 2);; _delay((unsigned long)((1)*(8000000/4000.
      +                          0))); LATD &= ~(1 << 2);; _delay((unsigned long)((1)*(8000000/4000.0)));;
  8815  003472  848C               	bsf	140,2,c	;volatile
  8816  003474  0E03               	movlw	3
  8817  003476  6E01               	movwf	??_FM_Lcd_Send_Nibble^0,c
  8818  003478  0E98               	movlw	152
  8819  00347A                     u4927:
  8820  00347A  2EE8               	decfsz	wreg,f,c
  8821  00347C  D7FE               	bra	u4927
  8822  00347E  2E01               	decfsz	??_FM_Lcd_Send_Nibble^0,f,c
  8823  003480  D7FC               	bra	u4927
  8824  003482  948C               	bcf	140,2,c	;volatile
  8825  003484  0E03               	movlw	3
  8826  003486  6E01               	movwf	??_FM_Lcd_Send_Nibble^0,c
  8827  003488  0E98               	movlw	152
  8828  00348A                     u4937:
  8829  00348A  2EE8               	decfsz	wreg,f,c
  8830  00348C  D7FE               	bra	u4937
  8831  00348E  2E01               	decfsz	??_FM_Lcd_Send_Nibble^0,f,c
  8832  003490  D7FC               	bra	u4937
  8833  003492                     
  8834                           ;FM_LCD16X2_Easy.c: 32:     LATD &= ~upper_bits;
  8835  003492  5003               	movf	FM_Lcd_Send_Nibble@upper_bits^0,w,c	;volatile
  8836  003494  0AFF               	xorlw	255
  8837  003496  168C               	andwf	140,f,c	;volatile
  8838  003498                     
  8839                           ;FM_LCD16X2_Easy.c: 33:     LATD |= lower_bits;
  8840  003498  5004               	movf	FM_Lcd_Send_Nibble@lower_bits^0,w,c	;volatile
  8841  00349A  128C               	iorwf	140,f,c	;volatile
  8842                           
  8843                           ;FM_LCD16X2_Easy.c: 34:     LATD |= (1 << 2);; _delay((unsigned long)((1)*(8000000/4000.
      +                          0))); LATD &= ~(1 << 2);; _delay((unsigned long)((1)*(8000000/4000.0)));;
  8844  00349C  848C               	bsf	140,2,c	;volatile
  8845  00349E  0E03               	movlw	3
  8846  0034A0  6E01               	movwf	??_FM_Lcd_Send_Nibble^0,c
  8847  0034A2  0E98               	movlw	152
  8848  0034A4                     u4947:
  8849  0034A4  2EE8               	decfsz	wreg,f,c
  8850  0034A6  D7FE               	bra	u4947
  8851  0034A8  2E01               	decfsz	??_FM_Lcd_Send_Nibble^0,f,c
  8852  0034AA  D7FC               	bra	u4947
  8853  0034AC  948C               	bcf	140,2,c	;volatile
  8854  0034AE  0E03               	movlw	3
  8855  0034B0  6E01               	movwf	??_FM_Lcd_Send_Nibble^0,c
  8856  0034B2  0E98               	movlw	152
  8857  0034B4                     u4957:
  8858  0034B4  2EE8               	decfsz	wreg,f,c
  8859  0034B6  D7FE               	bra	u4957
  8860  0034B8  2E01               	decfsz	??_FM_Lcd_Send_Nibble^0,f,c
  8861  0034BA  D7FC               	bra	u4957
  8862  0034BC                     
  8863                           ;FM_LCD16X2_Easy.c: 35:     LATD &= ~lower_bits;
  8864  0034BC  5004               	movf	FM_Lcd_Send_Nibble@lower_bits^0,w,c	;volatile
  8865  0034BE  0AFF               	xorlw	255
  8866  0034C0  168C               	andwf	140,f,c	;volatile
  8867  0034C2  0012               	return		;funcret
  8868  0034C4                     __end_of_FM_Lcd_Send_Nibble:
  8869                           	callstack 0
  8870                           
  8871 ;; *************** function _FM_Lcd_Easy_Gpio_Init *****************
  8872 ;; Defined at:
  8873 ;;		line 7 in file "FM_LCD16X2_Easy.c"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;		None
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;  bits_data       1    0        unsigned char 
  8878 ;; Return value:  Size  Location     Type
  8879 ;;                  1    wreg      void 
  8880 ;; Registers used:
  8881 ;;		wreg, status,2, status,0
  8882 ;; Tracked objects:
  8883 ;;		On entry : 0/0
  8884 ;;		On exit  : 0/0
  8885 ;;		Unchanged: 0/0
  8886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8887 ;;      Params:         0       0       0       0       0       0       0       0       0
  8888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8890 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8891 ;;Total ram usage:        0 bytes
  8892 ;; Hardware stack levels used: 1
  8893 ;; Hardware stack levels required when called: 1
  8894 ;; This function calls:
  8895 ;;		Nothing
  8896 ;; This function is called by:
  8897 ;;		_FM_Lcd_Easy_Init
  8898 ;; This function uses a non-reentrant model
  8899 ;;
  8900                           
  8901                           	psect	text42
  8902  003950                     __ptext42:
  8903                           	callstack 0
  8904  003950                     _FM_Lcd_Easy_Gpio_Init:
  8905                           	callstack 28
  8906  003950                     
  8907                           ;FM_LCD16X2_Easy.c: 15:     TRISD = 0x00;
  8908  003950  0E00               	movlw	0
  8909  003952  6E95               	movwf	149,c	;volatile
  8910  003954                     
  8911                           ;FM_LCD16X2_Easy.c: 16:     LATD &= ~(1 << 1);
  8912  003954  928C               	bcf	140,1,c	;volatile
  8913  003956  0012               	return		;funcret
  8914  003958                     __end_of_FM_Lcd_Easy_Gpio_Init:
  8915                           	callstack 0
  8916                           
  8917 ;; *************** function _ISR *****************
  8918 ;; Defined at:
  8919 ;;		line 26 in file "main.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;		None
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;		None
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      void 
  8926 ;; Registers used:
  8927 ;;		None
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8933 ;;      Params:         0       0       0       0       0       0       0       0       0
  8934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8936 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8937 ;;Total ram usage:        0 bytes
  8938 ;; Hardware stack levels used: 1
  8939 ;; This function calls:
  8940 ;;		Nothing
  8941 ;; This function is called by:
  8942 ;;		Interrupt level 2
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           	psect	intcode
  8947  000008                     __pintcode:
  8948                           	callstack 0
  8949  000008                     _ISR:
  8950                           	callstack 22
  8951                           
  8952                           ;incstack = 0
  8953  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8954  00000A  EDAC  F01C         	call	int_func,f	;refresh shadow registers
  8955                           
  8956                           	psect	intcode_body
  8957  003958                     __pintcode_body:
  8958                           	callstack 22
  8959  003958                     int_func:
  8960                           	callstack 22
  8961  003958  0006               	pop		; remove dummy address from shadow register refresh
  8962  00395A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8963  00395C  0011               	retfie		f
  8964  00395E                     __end_of_ISR:
  8965                           	callstack 0
  8966                           
  8967                           	psect	rparam
  8968  0000                     
  8969                           	psect	temp
  8970  00005F                     btemp:
  8971                           	callstack 0
  8972  00005F                     	ds	1
  8973  0000                     int$flags	set	btemp
  8974  0000                     wtemp8	set	btemp+1
  8975  0000                     ttemp5	set	btemp+1
  8976  0000                     ttemp6	set	btemp+4
  8977  0000                     ttemp7	set	btemp+8
  8978                           
  8979                           	psect	idloc
  8980                           
  8981                           ;Config register IDLOC0 @ 0x200000
  8982                           ;	unspecified, using default values
  8983  200000                     	org	2097152
  8984  200000  FF                 	db	255
  8985                           
  8986                           ;Config register IDLOC1 @ 0x200001
  8987                           ;	unspecified, using default values
  8988  200001                     	org	2097153
  8989  200001  FF                 	db	255
  8990                           
  8991                           ;Config register IDLOC2 @ 0x200002
  8992                           ;	unspecified, using default values
  8993  200002                     	org	2097154
  8994  200002  FF                 	db	255
  8995                           
  8996                           ;Config register IDLOC3 @ 0x200003
  8997                           ;	unspecified, using default values
  8998  200003                     	org	2097155
  8999  200003  FF                 	db	255
  9000                           
  9001                           ;Config register IDLOC4 @ 0x200004
  9002                           ;	unspecified, using default values
  9003  200004                     	org	2097156
  9004  200004  FF                 	db	255
  9005                           
  9006                           ;Config register IDLOC5 @ 0x200005
  9007                           ;	unspecified, using default values
  9008  200005                     	org	2097157
  9009  200005  FF                 	db	255
  9010                           
  9011                           ;Config register IDLOC6 @ 0x200006
  9012                           ;	unspecified, using default values
  9013  200006                     	org	2097158
  9014  200006  FF                 	db	255
  9015                           
  9016                           ;Config register IDLOC7 @ 0x200007
  9017                           ;	unspecified, using default values
  9018  200007                     	org	2097159
  9019  200007  FF                 	db	255
  9020                           
  9021                           	psect	config
  9022                           
  9023                           ;Config register CONFIG1L @ 0x300000
  9024                           ;	PLL Prescaler Selection bits
  9025                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9026                           ;	System Clock Postscaler Selection bits
  9027                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9028                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9029                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9030  300000                     	org	3145728
  9031  300000  00                 	db	0
  9032                           
  9033                           ;Config register CONFIG1H @ 0x300001
  9034                           ;	Oscillator Selection bits
  9035                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
  9036                           ;	Fail-Safe Clock Monitor Enable bit
  9037                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9038                           ;	Internal/External Oscillator Switchover bit
  9039                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9040  300001                     	org	3145729
  9041  300001  0B                 	db	11
  9042                           
  9043                           ;Config register CONFIG2L @ 0x300002
  9044                           ;	Power-up Timer Enable bit
  9045                           ;	PWRT = OFF, PWRT disabled
  9046                           ;	Brown-out Reset Enable bits
  9047                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9048                           ;	Brown-out Reset Voltage bits
  9049                           ;	BORV = 3, Minimum setting 2.05V
  9050                           ;	USB Voltage Regulator Enable bit
  9051                           ;	VREGEN = OFF, USB voltage regulator disabled
  9052  300002                     	org	3145730
  9053  300002  19                 	db	25
  9054                           
  9055                           ;Config register CONFIG2H @ 0x300003
  9056                           ;	Watchdog Timer Enable bit
  9057                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9058                           ;	Watchdog Timer Postscale Select bits
  9059                           ;	WDTPS = 32768, 1:32768
  9060  300003                     	org	3145731
  9061  300003  1E                 	db	30
  9062                           
  9063                           ; Padding undefined space
  9064  300004                     	org	3145732
  9065  300004  FF                 	db	255
  9066                           
  9067                           ;Config register CONFIG3H @ 0x300005
  9068                           ;	CCP2 MUX bit
  9069                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9070                           ;	PORTB A/D Enable bit
  9071                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9072                           ;	Low-Power Timer 1 Oscillator Enable bit
  9073                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9074                           ;	MCLR Pin Enable bit
  9075                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9076  300005                     	org	3145733
  9077  300005  81                 	db	129
  9078                           
  9079                           ;Config register CONFIG4L @ 0x300006
  9080                           ;	Stack Full/Underflow Reset Enable bit
  9081                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  9082                           ;	Single-Supply ICSP Enable bit
  9083                           ;	LVP = OFF, Single-Supply ICSP disabled
  9084                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9085                           ;	ICPRT = OFF, ICPORT disabled
  9086                           ;	Extended Instruction Set Enable bit
  9087                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9088                           ;	Background Debugger Enable bit
  9089                           ;	DEBUG = 0x1, unprogrammed default
  9090  300006                     	org	3145734
  9091  300006  80                 	db	128
  9092                           
  9093                           ; Padding undefined space
  9094  300007                     	org	3145735
  9095  300007  FF                 	db	255
  9096                           
  9097                           ;Config register CONFIG5L @ 0x300008
  9098                           ;	Code Protection bit
  9099                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9100                           ;	Code Protection bit
  9101                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9102                           ;	Code Protection bit
  9103                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9104                           ;	Code Protection bit
  9105                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9106  300008                     	org	3145736
  9107  300008  0F                 	db	15
  9108                           
  9109                           ;Config register CONFIG5H @ 0x300009
  9110                           ;	Boot Block Code Protection bit
  9111                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9112                           ;	Data EEPROM Code Protection bit
  9113                           ;	CPD = OFF, Data EEPROM is not code-protected
  9114  300009                     	org	3145737
  9115  300009  C0                 	db	192
  9116                           
  9117                           ;Config register CONFIG6L @ 0x30000A
  9118                           ;	Write Protection bit
  9119                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9120                           ;	Write Protection bit
  9121                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9122                           ;	Write Protection bit
  9123                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9124                           ;	Write Protection bit
  9125                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9126  30000A                     	org	3145738
  9127  30000A  0F                 	db	15
  9128                           
  9129                           ;Config register CONFIG6H @ 0x30000B
  9130                           ;	Configuration Register Write Protection bit
  9131                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9132                           ;	Boot Block Write Protection bit
  9133                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9134                           ;	Data EEPROM Write Protection bit
  9135                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9136  30000B                     	org	3145739
  9137  30000B  E0                 	db	224
  9138                           
  9139                           ;Config register CONFIG7L @ 0x30000C
  9140                           ;	Table Read Protection bit
  9141                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9142                           ;	Table Read Protection bit
  9143                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9144                           ;	Table Read Protection bit
  9145                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9146                           ;	Table Read Protection bit
  9147                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9148  30000C                     	org	3145740
  9149  30000C  0F                 	db	15
  9150                           
  9151                           ;Config register CONFIG7H @ 0x30000D
  9152                           ;	Boot Block Table Read Protection bit
  9153                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9154  30000D                     	org	3145741
  9155  30000D  40                 	db	64
  9156                           tosu	equ	0xFFF
  9157                           tosh	equ	0xFFE
  9158                           tosl	equ	0xFFD
  9159                           stkptr	equ	0xFFC
  9160                           pclatu	equ	0xFFB
  9161                           pclath	equ	0xFFA
  9162                           pcl	equ	0xFF9
  9163                           tblptru	equ	0xFF8
  9164                           tblptrh	equ	0xFF7
  9165                           tblptrl	equ	0xFF6
  9166                           tablat	equ	0xFF5
  9167                           prodh	equ	0xFF4
  9168                           prodl	equ	0xFF3
  9169                           indf0	equ	0xFEF
  9170                           postinc0	equ	0xFEE
  9171                           postdec0	equ	0xFED
  9172                           preinc0	equ	0xFEC
  9173                           plusw0	equ	0xFEB
  9174                           fsr0h	equ	0xFEA
  9175                           fsr0l	equ	0xFE9
  9176                           wreg	equ	0xFE8
  9177                           indf1	equ	0xFE7
  9178                           postinc1	equ	0xFE6
  9179                           postdec1	equ	0xFE5
  9180                           preinc1	equ	0xFE4
  9181                           plusw1	equ	0xFE3
  9182                           fsr1h	equ	0xFE2
  9183                           fsr1l	equ	0xFE1
  9184                           bsr	equ	0xFE0
  9185                           indf2	equ	0xFDF
  9186                           postinc2	equ	0xFDE
  9187                           postdec2	equ	0xFDD
  9188                           preinc2	equ	0xFDC
  9189                           plusw2	equ	0xFDB
  9190                           fsr2h	equ	0xFDA
  9191                           fsr2l	equ	0xFD9
  9192                           status	equ	0xFD8

Data Sizes:
    Strings     46
    Constant    0
    Data        0
    BSS         112
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    104     136
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> mens(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> mens(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S949_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> mens(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> mens(BANK0[16]), 

    FM_Lcd_Send_String@cadena	PTR unsigned char  size(2) Largest target is 16
		 -> mens(BANK0[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___flmul
    ___flsub->___flmul
    ___flmul->___fldiv
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->_isspace
    _FM_Lcd_Set_Cursor->_FM_Lcd_Send_Command
    _FM_Lcd_Send_String->_FM_Lcd_Send_Character
    _FM_Lcd_Send_Character->_FM_Lcd_Send_Nibble
    _FM_Lcd_Easy_Init->_FM_Lcd_Send_Command
    _FM_Lcd_Send_Command->_FM_Lcd_Send_Nibble

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   36048
                                             96 BANK0      8     8      0
                   _FM_Lcd_Easy_Init
                 _FM_Lcd_Send_String
                  _FM_Lcd_Set_Cursor
                 _Init_ADC1_Chanel_0
                   _Init_CCP1_As_PWM
           _Init_Internal_Oscillator
                 _Init_Timer2_Module
              _Run_Timer_And_CCP1PWM
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   28800
                                             80 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28443
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   28071
                                             88 COMRAM     6     0      6
                                             56 BANK0     16    16      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22772
                                             76 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                             64 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             64 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             64 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2311
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Run_Timer_And_CCP1PWM                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Timer2_Module                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Internal_Oscillator                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_CCP1_As_PWM                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC1_Chanel_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Set_Cursor                                    3     2      1     401
                                              5 COMRAM     3     2      1
                _FM_Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Send_String                                   5     3      2     398
                                              5 COMRAM     5     3      2
              _FM_Lcd_Send_Character
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Send_Character                                1     1      0     156
                                              4 COMRAM     1     1      0
                 _FM_Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Easy_Init                                     0     0      0     157
              _FM_Lcd_Easy_Gpio_Init
                _FM_Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Send_Command                                  1     1      0     156
                                              4 COMRAM     1     1      0
                 _FM_Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (3) _FM_Lcd_Send_Nibble                                   4     4      0     134
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Easy_Gpio_Init                                1     1      0       1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FM_Lcd_Easy_Init
     _FM_Lcd_Easy_Gpio_Init
     _FM_Lcd_Send_Command
       _FM_Lcd_Send_Nibble
   _FM_Lcd_Send_String
     _FM_Lcd_Send_Character
       _FM_Lcd_Send_Nibble
   _FM_Lcd_Set_Cursor
     _FM_Lcd_Send_Command
   _Init_ADC1_Chanel_0
   _Init_CCP1_As_PWM
   _Init_Internal_Oscillator
   _Init_Timer2_Module
   _Run_Timer_And_CCP1PWM
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      88       5       85.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     136      20        0.0%
DATA                 0      0     136       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 27 02:07:37 2023

                          ___fldiv@aexp 0027                            ___fldiv@bexp 0026  
                          ___fldiv@sign 001F                                      l71 2AFE  
                                    l90 3910                                      l82 38F2  
                                    l84 38F4                                      l93 3936  
                                    l79 3862                                      l87 3928  
                          ___awdiv@sign 0006                     ___wmul@multiplicand 0003  
                                   l110 394E                                     l104 3956  
                                   l113 3942                                     l107 34C2  
                                   l124 3746                                     l132 38D8  
                                   l126 3752                                     l119 3456  
                                   l129 388C                                     l402 2E5C  
                                   l406 37C2                                     l363 3284  
                                   l429 2D58                                     l702 36CA  
                                   l391 33DE                                     l376 3334  
                                   l801 28D2                                     l714 2574  
                                   l810 3632                                     l716 23D4  
                                   l660 1676                                     l725 241A  
                                   l397 2E16                                     l661 1664  
                                   l750 21DA                                     l662 162A  
                                   l727 2492                                     l719 2398  
                                   l728 2480                                     l920 105C  
                                   l753 206C                                     l746 1E76  
                                   l763 219C                                     l755 20E4  
                                   l851 3142                                     l756 20D2  
                                   l677 1790                                     l669 1946  
                                   l790 293A                                     l686 1860  
                                   l854 3184                                     l687 184E  
                                   l856 31C0                                     l794 2876  
                                   l874 1486                                     l787 27DE  
                                   l892 0C1C                                     l980 3524  
                                   l973 1CFA                                     l990 2F5A  
                                   l966 1DB0                                     l979 351C  
                                   _PR2 000FCB                                     _ISR 0008  
                                   _pad 30FC                            ___awmod@sign 0006  
                                   wreg 000FE8                             main@adc_val 00C2  
                          ___flmul@aexp 0039                            ___flmul@bexp 003A  
                          ___flmul@sign 0034                            ___flmul@temp 003F  
                          ___flmul@prod 003B                                    ?_ISR 0001  
                          ___fltol@exp1 004A                                    l1022 2ACA  
                                  l1031 26CA                                    l1104 357C  
                                  l1019 2AC2                                    l1028 2786  
                                  l1052 378A                                    l1109 3584  
                                  l1038 37FA                                    l1046 3684  
                                  l3000 1F48                                    l3010 1FAA  
                                  l3002 1F58                                    l1090 3830  
                                  l1067 30FA                                    l1075 370E  
                                  l3100 3238                                    l3020 2052  
                                  l3012 1FC6                                    l3004 1F72  
                                  l1084 35E0                                    l3102 324E  
                                  l3110 3264                                    l3030 208E  
                                  l3022 205C                                    l3014 1FF0  
                                  l3006 1F82                                    l1078 395E  
                                  l1094 3030                                    l3112 3274  
                                  l3104 3256                                    l3120 328A  
                                  l3040 2100                                    l3032 209C  
                                  l3024 206A                                    l3016 2026  
                                  l3008 1F9E                                    l3200 2C54  
                                  l3114 327C                                    l3106 3258  
                                  l3130 32BA                                    l3122 3298  
                                  l3050 216A                                    l3042 210E  
                                  l3034 20CA                                    l3026 207C  
                                  l3018 2034                                    l3210 2CAA  
                                  l3202 2C6A                                    l3108 325E  
                                  l3140 3300                                    l3132 32CC  
                                  l3124 32A0                                    l3060 21C0  
                                  l3052 2184                                    l3044 2138  
                                  l3028 208A                                    l3212 2CBA  
                                  l3150 332C                                    l3142 3308  
                                  l3134 32D4                                    l3126 32A4  
                                  l3118 3286                                    l3054 21A0  
                                  l3062 21C6                                    l3038 20F4  
                                  l3046 213C                                    l3070 3696  
                                  l3222 2CE4                                    l3214 2CBE  
                                  l3206 2C7E                                    l3310 260E  
                                  l3302 2576                                    l3080 31DC  
                                  l3144 330E                                    l3136 32DC  
                                  l3128 32B2                                    l3160 33A2  
                                  l3064 21CA                                    l3056 21B0  
                                  l3048 2156                                    l2600 151E  
                                  l3240 2D48                                    l3232 2D0C  
                                  l3224 2CEE                                    l3216 2CCC  
                                  l3208 2CA8                                    l3320 272A  
                                  l3304 2596                                    l3400 0A1A  
                                  l3330 37C4                                    l3090 3202  
                                  l3082 31E0                                    l3074 31C2  
                                  l3138 32EA                                    l3146 3314  
                                  l3162 33B2                                    l3154 3336  
                                  l3170 2D5A                                    l3058 21BE  
                                  l2602 152E                                    l2610 1558  
                                  l3234 2D18                                    l3226 2CF8  
                                  l3322 273E                                    l3314 267E  
                                  l3306 25EC                                    l3250 312E  
                                  l3402 0A2C                                    l3340 367A  
                                  l3092 3214                                    l3084 31EE  
                                  l3076 31C6                                    l3148 3324  
                                  l3164 33D6                                    l3156 3364  
                                  l3180 2DE4                                    l3172 2D88  
                                  l2700 1760                                    l2620 1590  
                                  l2612 1568                                    l2604 153E  
                                  l3068 3686                                    l3236 2D28  
                                  l3324 2766                                    l3316 26BA  
                                  l3308 2600                                    l3260 3194  
                                  l3252 313A                                    l3244 30FC  
                                  l3500 0EE0                                    l3420 0AE8  
                                  l3404 0A48                                    l3412 0A64  
                                  l3342 367E                                    l3334 3634  
                                  l3094 321C                                    l3086 31F6  
                                  l3078 31D4                                    l3166 33DC  
                                  l3158 3374                                    l3182 2DF6  
                                  l3174 2D98                                    l2702 1770  
                                  l2630 15A4                                    l2622 1594  
                                  l2614 157A                                    l2606 154E  
                                  l3238 2D38                                    l3270 2EBC  
                                  l3326 2776                                    l3318 26EE  
                                  l3262 31A8                                    l3254 314E  
                                  l3246 310C                                    l3510 0F7C  
                                  l3502 0EF6                                    l3422 0AEE  
                                  l3430 0BB6                                    l3414 0A7E  
                                  l3350 084A                                    l3336 3638  
                                  l3096 3224                                    l3088 31FA  
                                  l2800 21DC                                    l3184 2E04  
                                  l3176 2DC6                                    l3192 378C  
                                  l2720 17F2                                    l2712 17CA  
                                  l2704 1780                                    l2640 15B8  
                                  l2632 15A8                                    l2624 1598  
                                  l2616 1588                                    l2608 1550  
                                  l3280 2F0E                                    l3272 2EE4  
                                  l2560 3056                                    l3256 3162  
                                  l3248 3120                                    l3600 1310  
                                  l3512 0FD2                                    l3520 1024  
                                  l3504 0F28                                    l3440 0BF6  
                                  l3432 0BC6                                    l3424 0B48  
                                  l3360 0896                                    l3352 0858  
                                  l3338 364C                                    l3098 3232  
                                  l2810 2218                                    l2802 21E8  
                                  l3186 2E54                                    l3178 2DD6  
                                  l3194 37A2                                    l2722 17FA  
                                  l2714 17D4                                    l2706 17A6  
                                  l2730 181E                                    l2650 15CC  
                                  l2642 15BC                                    l2634 15AC  
                                  l2626 159C                                    l2618 158C  
                                  l2570 1488                                    l3274 2EF0  
                                  l3266 2E5E                                    l2562 3060  
                                  l3258 3166                                    l3290 3596  
                                  l3610 1358                                    l3602 1318  
                                  l3530 10DC                                    l3522 1034  
                                  l3514 0FD8                                    l3506 0F38  
                                  l3450 0C3A                                    l3442 0C10  
                                  l3434 0BCA                                    l3426 0B7C  
                                  l3418 0AB4                                    l3370 08DC  
                                  l3362 08A8                                    l3354 0860  
                                  l3346 0830                                    l2900 244A  
                                  l2820 2248                                    l2812 2228  
                                  l2804 21F6                                    l3188 2E5A  
                                  l3196 37B2                                    l2740 1870  
                                  l2732 1822                                    l2724 17FE  
                                  l2716 17E2                                    l2708 17B6  
                                  l2660 1644                                    l2652 15F6  
                                  l2644 15C0                                    l2636 15B0  
                                  l2628 15A0                                    l2580 14C4  
                                  l2572 1494                                    l3284 2F52  
                                  l3268 2E7E                                    l2564 307E  
                                  l2556 3032                                    l3292 3526  
                                  l3620 13AE                                    l3612 1374  
                                  l3604 1320                                    l3532 10EC  
                                  l3540 1126                                    l3524 1048  
                                  l3516 100C                                    l3508 0F48  
                                  l3452 0C4C                                    l3460 0CAA  
                                  l3436 0BDC                                    l3444 0C28  
                                  l3428 0B84                                    l3372 08E0  
                                  l3364 08B6                                    l3356 0884  
                                  l3348 083A                                    l2910 24BC  
                                  l2902 2478                                    l2830 227E  
                                  l2822 224E                                    l2814 222A  
                                  l2806 21F8                                    l2750 18D6  
                                  l2742 187C                                    l2734 1830  
                                  l2726 180E                                    l2718 17E4  
                                  l2670 1684                                    l2662 1648  
                                  l2654 1612                                    l2646 15C4  
                                  l2638 15B4                                    l2590 14F4  
                                  l2582 14D4                                    l2574 14A2  
                                  l3278 2EFC                                    l2566 30B4  
                                  l2558 3044                                    l3630 13EA  
                                  l3622 13B4                                    l3614 137C  
                                  l3606 132C                                    l3550 1160  
                                  l3542 1138                                    l3534 10FE  
                                  l3526 1054                                    l3518 1020  
                                  l3470 0CE8                                    l3462 0CB2  
                                  l3454 0C68                                    l3438 0BEE  
                                  l3390 0996                                    l3382 0946  
                                  l3374 08E4                                    l3366 08C8  
                                  l3358 088E                                    l3710 2FE6  
                                  l3702 2F92                                    l3720 3482  
                                  l2920 2534                                    l2912 24E6  
                                  l2840 22BE                                    l2832 228E  
                                  l2824 225C                                    l2808 2208  
                                  l2816 2232                                    l2760 191E  
                                  l2752 18E6                                    l2744 188A  
                                  l2736 1846                                    l2728 1810  
                                  l2680 16C6                                    l2672 1694  
                                  l2664 1656                                    l2656 1622  
                                  l2648 15C8                                    l2592 1506  
                                  l2584 14D6                                    l2576 14A4  
                                  l3288 3586                                    l3296 355C  
                                  l3640 143C                                    l3632 13F0  
                                  l3624 13C6                                    l3608 1332  
                                  l3616 1382                                    l3552 116C  
                                  l3544 1146                                    l3560 118C  
                                  l3536 1110                                    l3528 1078  
                                  l3472 0CFA                                    l3480 0D3A  
                                  l3464 0CC4                                    l3456 0C9E  
                                  l3384 0958                                    l3368 08D4  
                                  l3376 08EA                                    l3712 300E  
                                  l3704 2FA0                                    l3800 1D0E  
                                  l3730 34AC                                    l3722 3484  
                                  l2930 256A                                    l2922 2550  
                                  l2906 24A2                                    l2914 24EA  
                                  l2842 22CE                                    l2850 22EE  
                                  l2834 2290                                    l2826 225E  
                                  l2818 2242                                    l2762 1920  
                                  l2754 1906                                    l2746 18C4  
                                  l2690 16F4                                    l2682 16D4  
                                  l2666 1658                                    l2658 1638  
                                  l2594 1508                                    l2578 14B4  
                                  l2586 14DE                                    l3298 356E  
                                  l3642 1448                                    l3634 13F6  
                                  l3626 13D2                                    l3618 1394  
                                  l3570 1212                                    l3562 119E  
                                  l3554 117C                                    l3546 1156  
                                  l3538 111E                                    l3490 0E22  
                                  l3482 0D42                                    l3474 0D08  
                                  l3466 0CD6                                    l3458 0CA6  
                                  l3386 0974                                    l3378 0910  
                                  l3394 09BE                                    l3706 2FB8  
                                  l3802 1D32                                    l3810 1D60  
                                  l3732 34BC                                    l3724 3492  
                                  l3716 345A                                    l3660 2958  
                                  l2924 2554                                    l2916 2504  
                                  l2908 24AE                                    l2860 232C  
                                  l2852 22FE                                    l2844 22D6  
                                  l2828 226E                                    l2836 2298  
                                  l2940 1DBE                                    l2764 1926  
                                  l2756 190A                                    l2748 18C6  
                                  l2692 16FE                                    l2684 16E0  
                                  l2676 16A8                                    l2668 1662  
                                  l2596 150E                                    l2588 14EE  
                                  l2772 36CC                                    l2780 37FC  
                                  l3644 1450                                    l3628 13DA  
                                  l3580 128C                                    l3572 1246  
                                  l3564 11B0                                    l3556 1180  
                                  l3548 115A                                    l3492 0E56  
                                  l3484 0D52                                    l3476 0D20  
                                  l3468 0CE4                                    l3396 09E4  
                                  l3388 098C                                    l3708 2FD4  
                                  l3812 1D6E                                    l3804 1D40  
                                  l3740 198C                                    l3900 3604  
                                  l3726 3498                                    l3718 3472  
                                  l3830 3948                                    l3910 27A8  
                                  l3670 29B4                                    l3662 2974  
                                  l3654 293C                                    l2926 2562  
                                  l2918 251A                                    l2870 2374  
                                  l2862 233C                                    l2854 22FE  
                                  l2846 22DA                                    l2838 22A8  
                                  l2950 1DFE                                    l2942 1DCC  
                                  l2766 1934                                    l2758 1918  
                                  l2686 16E4                                    l2678 16B8  
                                  l2694 1704                                    l2598 151C  
                                  l2774 36D8                                    l2782 3808  
                                  l2790 3754                                    l3646 1460  
                                  l3638 142A                                    l3590 12D0  
                                  l3582 129E                                    l3574 124E  
                                  l3566 11B4                                    l3558 1186  
                                  l3486 0D66                                    l3494 0E5C  
                                  l3478 0D32                                    l3806 1D54  
                                  l3750 19EE                                    l3742 1990  
                                  l3734 1948                                    l3902 3620  
                                  ?_pad 0011                                    l3824 3950  
                                  l3728 349E                                    l3832 393A  
                                  l3920 2820                                    l3912 27EE  
                                  l3672 29CA                                    l3664 29AA  
                                  l3656 2950                                    l2928 2568  
                                  l2880 23C2                                    l2872 2388  
                                  l2864 234C                                    l2960 1E2E  
                                  l2952 1E04                                    l2944 1DCE  
                                  l2768 1936                                    l2696 172A  
                                  l2688 16F2                                    l2776 36EA  
                                  l2784 380C                                    l3648 1466  
                                  l3592 12E2                                    l3584 12AC  
                                  l3568 11BA                                    l3576 1252  
                                  l3496 0E7A                                    l3488 0DCA  
                                  l3760 1A9E                                    l3752 1A28  
                                  l3744 19B4                                    l3736 196C  
                                  l3816 1D7A                                    l3840 34DA  
                                  l3826 3954                                    l3834 393C  
                                  l3850 3912                                    l3930 28A8  
                                  l3922 282C                                    l3914 2804  
                                  l3906 278A                                    l2794 38B4  
                                  l3690 2AA6                                    l3682 2A44  
                                  l3674 29D2                                    l3666 29AE  
                                  l3658 2954                                    l2890 240A  
                                  l2882 23D2                                    l2874 2396  
                                  l2866 235C                                    l2858 2312  
                                  l2970 1E66                                    l2962 1E30  
                                  l2954 1E14                                    l2946 1DDE  
                                  l2938 1DB2                                    l2698 175E  
                                  l2778 36EE                                    l2786 3824  
                                  l3594 12EA                                    l3586 12BC  
                                  l3578 1270                                    l3498 0EAE  
                                  l3818 1D9E                                    l3770 1B24  
                                  l3754 1A48                                    l3746 19BC  
                                  l3762 1AB0                                    l3738 197A  
                                  l3842 3500                                    l3828 3946  
                                  l3860 3832                                    l3852 3926  
                                  l3844 392A                                    l3940 28E6  
                                  l3932 28B4                                    l3924 285E  
                                  l3908 279A                                    l2796 38D0  
                                  l3676 29DA                                    l2892 2418  
                                  l2884 23E4                                    l2876 23A2  
                                  l2868 2364                                    l2980 1EB6  
                                  l2972 1E86                                    l2964 1E40  
                                  l2956 1E1A                                    l2948 1DEE  
                                  l3596 12FA                                    l3588 12C0  
                                  l3780 1BBC                                    l3772 1B56  
                                  l3764 1AD2                                    l3756 1A56  
                                  l3748 19CA                                    l3836 34C4  
                                  l3854 3864                                    l3870 3712  
                                  l3862 383E                                    l3846 38F6  
                                  l3942 290A                                    l3934 28C2  
                                  l3926 2860                                    l3918 2818  
                                  l3686 2A82                                    l3678 2A0E  
                                  l2886 23FA                                    l2894 242A  
                                  l2878 23C0                                    l2990 1F06  
                                  l2982 1EC0                                    l2974 1E96  
                                  l2966 1E50                                    l2958 1E20  
                                  l3598 1302                                    l3790 1C84  
                                  l3774 1B68                                    l3766 1AE2  
                                  l3838 34CC                                    l3880 3748  
                                  l3872 3716                                    l3864 3850  
                                  l3848 3902                                    l3856 38DC  
                                  l3944 291A                                    l3936 28E0  
                                  l3928 286C                                    l3688 2A94  
                                  l2896 2438                                    l2888 2400  
                                  l2992 1F12                                    l2984 1ED6  
                                  l2968 1E60                                    l3696 2F5C  
                                  l3792 1C96                                    l3776 1B7E  
                                  l3784 1BE8                                    l3768 1B14  
                                  l3960 2AF0                                    l3952 2ACC  
                                  l3890 3418                                    l3882 374C  
                                  l3874 3726                                    l3866 3852  
                                  l3858 38EC                                    l3946 2928  
                                  l3938 28E2                                    l2898 243C  
                                  l2994 1F20                                    l2986 1EE2  
                                  l2978 1EAA                                    l3698 2F86  
                                  l3794 1CCA                                    l3786 1C16  
                                  l3778 1B8C                                    l3970 2B98  
                                  l3962 2AFC                                    l3954 2AD8  
                                  l3892 341A                                    l3884 3752  
                                  l3876 372E                                    l3868 3860  
                                  l3948 292A                                    l2996 1F2C  
                                  l2988 1EFA                                    l3972 2BBE  
                                  l3964 2B0C                                    l3956 2ADC  
                                  l3886 33E0                                    l3878 373E  
                                  l2998 1F3C                                    l3894 35E2  
                                  l3974 2BCA                                    l3966 2B24  
                                  l3958 2AE6                                    l3888 33E8  
                                  l3896 35F4                                    l3976 2C3A  
                                  l3968 2B8E                                    l3898 35FC  
                                  l3998 29F8                                    STR_1 0810  
                                  STR_2 0801                                    STR_3 081C  
                                  STR_4 0824                                    STR_7 0820  
                                  STR_8 0828                                    u3000 22FE  
                                  u3001 22FA                                    u3010 2374  
                                  u3011 2370                                    u3100 248E  
                                  u3020 2396                                    u3101 248A  
                                  u3021 2392                                    u3110 24A2  
                                  u3030 23C0                                    u3111 249E  
                                  u3031 23BC                                    u3120 24BC  
                                  u3040 23E4                                    u3200 1E40  
                                  u4000 0958                                    _LATD 000F8C  
                                  u3121 24B8                                    u3041 23E0  
                                  u3201 1E3C                                    u4001 0954  
                                  u3130 2504                                    u3050 23FA  
                                  u3210 1E50                                    u4010 09E4  
                                  u3131 2500                                    u3051 23F6  
                                  u3211 1E4C                                    u4011 09E0  
                                  u3140 2534                                    u3060 2418  
                                  u3300 20F4                                    u3220 1E86  
                                  u2500 14A2                                    u4100 0C10  
                                  u4020 0A12                                    u3141 2530  
                                  u3061 2414                                    u3301 20F0  
                                  u3221 1E82                                    u2501 149E  
                                  u4101 0C0C                                    u4021 0A0C  
                                  u3150 2562                                    u3070 2438  
                                  u3310 210E                                    u3230 1E96  
                                  u2510 14B4                                    u4110 0C36  
                                  u4030 0A14                                    u3151 255E  
                                  u3071 2434                                    u3311 210A  
                                  u3231 1E92                                    u2511 14B0  
                                  u4111 0C32                                    u3400 3274  
                                  u3080 244A                                    u3320 2156  
                                  u3240 2010                                    u3160 1DCC  
                                  u2600 160E                                    u2520 14C4  
                                  u4200 0D32                                    u4120 0C4C  
                                  u4040 0A2C                                    u3401 3270  
                                  u3081 2446                                    u3321 2152  
                                  u3161 1DC8                                    u2601 1608  
                                  u2521 14C0                                    u4201 0D2E  
                                  u4121 0C48                                    u4041 0A28  
                                  u3410 3298                                    u3090 2478  
                                  u3330 2184                                    u3250 206A  
                                  u3170 1DDE                                    u2610 1610  
                                  u2530 1506                                    u4210 0E7A  
                                  u4130 0C68                                    u4050 0AB0  
                                  u3411 3294                                    u3091 2474  
                                  u3331 2180                                    u3251 2066  
                                  u3171 1DDA                                    u2531 1502  
                                  u4211 0E76                                    u4131 0C64  
                                  u4051 0AAC                                    u3420 32B2  
                                  u3500 2D88                                    u3340 21BE  
                                  u3260 208A                                    u3180 1DEE  
                                  u2700 172A                                    u2620 1638  
                                  u2540 151C                                    u2460 3044  
                                  u4300 1110                                    u4220 0EE0  
                                  u4140 0C9E                                    u4060 0B44  
                                  u3421 32AE                                    u3501 2D84  
                                  u3341 21BA                                    u3261 2086  
                                  u3245 2006                                    u3181 1DEA  
                                  u2701 1726                                    u2621 1634  
                                  u2541 1518                                    u2461 3040  
                                  u4301 110C                                    u4221 0EDC  
                                  u4141 0C9A                                    u4061 0B40  
                                  u3350 31D4                                    u3430 32CC  
                                  u3510 2DC6                                    u3270 209C  
                                  u3190 1E2E                                    u2710 1770  
                                  u2630 1656                                    u2550 152E  
                                  u2470 3056                                    u4310 111E  
                                  u4230 0F28                                    u4150 0CC4  
                                  u4070 0BB6                                    u3351 31D0  
                                  u3431 32C8                                    u3511 2DC2  
                                  u3271 2098                                    u3191 1E2A  
                                  u2711 176C                                    u2631 1652  
                                  u2551 152A                                    u2471 3052  
                                  u4311 111A                                    u4231 0F24  
                                  u4151 0CC0                                    u4071 0BB2  
                                  u3360 31EE                                    u3440 32EA  
                                  u3520 2DE4                                    u3280 20CA  
                                  u2800 185C                                    u2720 17A6  
                                  u2640 1676                                    u2560 153E  
                                  u3600 2D08                                    u2480 307E  
                                  u4400 1310                                    u4320 1138  
                                  u4240 0F38                                    u4160 0CD6  
                                  u4080 0BDC                                    u3361 31EA  
                                  u3441 32E6                                    u3521 2DE0  
                                  u3281 20C6                                    u2801 1858  
                                  u2721 17A2                                    u2641 1672  
                                  u2561 153A                                    u3601 2D04  
                                  u2481 307A                                    u4401 130C  
                                  u4321 1134                                    u4241 0F34  
                                  u4161 0CD2                                    u4081 0BD8  
                                  u3370 3214                                    u3450 3300  
                                  u3530 2E04                                    u3290 20E0  
                                  u2810 1870                                    u2730 17B6  
                                  u2650 1684                                    u2570 157A  
                                  u3610 2D28                                    u2490 30B4  
                                  u4410 1394                                    u4330 1146  
                                  u4250 0FD2                                    u4170 0CE4  
                                  u4090 0BEE                                    u3371 3210  
                                  u3451 32FC                                    u3531 2E00  
                                  u3291 20DC                                    u2811 186C  
                                  u2731 17B2                                    u2651 1680  
                                  u2571 1576                                    u3611 2D24  
                                  u2491 30B0                                    u4411 1390  
                                  u4331 1142                                    u4251 0FCE  
                                  u4171 0CE0                                    u4091 0BEA  
                                  u4500 2A7C                                    u3380 3232  
                                  u3460 3324                                    u3540 2E54  
                                  u2820 188A                                    u2740 17E2  
                                  u2660 1694                                    u2580 1588  
                                  u3620 2D38                                    u3700 2F0E  
                                  u2900 3824                                    u4420 13AE  
                                  u4340 119E                                    u4260 1020  
                                  u4180 0CFA                                    u4501 2A76  
                                  u3381 322E                                    u3461 3320  
                                  u3541 2E50                                    u2821 1886  
                                  u2741 17DE                                    u2661 1690  
                                  u2581 1584                                    u3621 2D34  
                                  u3701 2F0A                                    u2901 3820  
                                  u4421 13AA                                    u4341 119A  
                                  u4261 101C                                    u4181 0CF6  
                                  u4510 2A7E                                    u3390 324E  
                                  u3470 3364                                    u3550 37A2  
                                  u2830 18C4                                    u2750 17F2  
                                  u2670 16C6                                    u2590 15F6  
                                  u3630 310C                                    u2910 3784  
                                  u4430 13C6                                    u4350 1270  
                                  u4270 1048                                    u4190 0D08  
                                  u3391 324A                                    u3471 3360  
                                  u3551 379E                                    u2831 18C0  
                                  u2751 17EE                                    u2671 16C2  
                                  u2591 15F2                                    u3631 3108  
                                  u2911 377E                                    u4431 13C2  
                                  u4351 126C                                    u4271 1044  
                                  u4191 0D04                                    u4520 2A94  
                                  u3480 33A2                                    u2840 18D6  
                                  u2760 180E                                    u2680 16D4  
                                  u3560 2C6A                                    u3720 2F48  
                                  u3800 25EC                                    u3640 312E  
                                  u2920 3786                                    u4440 1424  
                                  u4360 128C                                    u4280 10EC  
                                  u4600 19B4                                    u4521 2A90  
                                  u3481 339E                                    u2841 18D2  
                                  u2761 180A                                    u2681 16D0  
                                  u3561 2C66                                    u3721 2F42  
                                  u3801 25E8                                    u3641 312A  
                                  u4441 141E                                    u4361 1288  
                                  u4281 10E8                                    u4601 19B0  
                                  u4530 2AA6                                    u2930 21F6  
                                  u3490 33D6                                    u2850 18E6  
                                  u2770 181E                                    u2690 16F2  
                                  u3570 2C9E                                    u3730 2F4A  
                                  u3810 260E                                    u3650 3184  
                                  u4450 1426                                    u4370 129E  
                                  u4290 10FE                                    u4610 19EE  
                                  u4531 2AA2                                    u2931 21F2  
                                  u3491 33D2                                    u2851 18E2  
                                  u2771 181A                                    u2691 16EE  
                                  u3715 2F20                                    u3811 260A  
                                  u3651 3180                                    u4371 129A  
                                  u4291 10FA                                    u4611 19EA  
                                  u3900 37F6                                    u2940 2208  
                                  u2860 1906                                    u2780 1830  
                                  u3580 2CCC                                    u3660 3194  
                                  u3740 35CE                                    u4460 143C  
                                  u4380 12AC                                    u4540 2F86  
                                  u4700 1C80                                    u4620 1A98  
                                  u2941 2204                                    u2861 1902  
                                  u2781 182C                                    u3581 2CC8  
                                  u3661 3190                                    u4461 1438  
                                  u4381 12A8                                    u4541 2F82  
                                  u4621 1A92                                    u3910 364C  
                                  u4470 2974                                    u2950 2218  
                                  u2870 1918                                    u2790 1846  
                                  u3590 2CE0                                    u3670 2E9E  
                                  u3830 267A                                    u3750 35E0  
                                  u4390 12E2                                    u4550 2FB8  
                                  u4710 1C96                                    u4630 1A9A  
                                  u3911 3648                                    u4471 2970  
                                  u2951 2214                                    u2871 1914  
                                  u2791 1842                                    u3591 2CDC  
                                  u3575 2C94                                    u3831 2676  
                                  u3751 35DC                                    u4391 12DE  
                                  u4551 2FB4                                    u4711 1C92  
                                  u4800 279A                                    u3920 367A  
                                  u4480 29AA                                    u2960 225C  
                                  u2880 1934                                    u3680 2EBC  
                                  u3840 269E                                    u3760 3556  
                                  u4560 2FD4                                    u4720 1D32  
                                  u4640 1AB0                                    u4801 2796  
                                  u3921 3676                                    u4481 29A6  
                                  u2961 2258                                    u2881 1930  
                                  u3681 2EB8                                    u3825 2622  
                                  u3761 3550                                    u4561 2FD0  
                                  u4721 1D2E                                    u4641 1AAC  
                                  u4810 27A8                                    u4490 29C6  
                                  u2970 226E                                    u3690 2EE4  
                                  u3850 26BA                                    u3826 262C  
                                  u2890 370E                                    u3770 3558  
                                  u3930 0858                                    u4570 2FE6  
                                  u4650 1AE2                                    u4730 351C  
                                  u4811 27A4                                    u4491 29C2  
                                  u2971 226A                                    u3691 2EE0  
                                  u3675 2E94                                    u3851 26B6  
                                  u3827 263C                                    u2891 370A  
                                  u3747 35C4                                    u3931 0854  
                                  u4571 2FE2                                    u4651 1ADE  
                                  u4731 3518                                    u4740 38EC  
                                  u4820 2804                                    u2980 227E  
                                  u3860 270E                                    u3780 356E  
                                  u3940 08A8                                    u4580 300E  
                                  u4660 1B24                                    u4900 2B0C  
                                  u4741 38E8                                    u4821 2800  
                                  u2981 227A                                    u3845 2694  
                                  u3781 356A                                    u3941 08A4  
                                  u4581 300A                                    u4661 1B20  
                                  u4901 2B08                                    u4750 3726  
                                  u4830 285A                                    u2990 22BE  
                                  u3870 272A                                    u3790 25BE  
                                  u3950 08B6                                    u4670 1B68  
                                  u4590 196C                                    u4751 3722  
                                  u4831 2856                                    u2991 22BA  
                                  u3871 2726                                    u3951 08B2  
                                  u4671 1B64                                    u4591 1968  
                                  u4760 373E                                    u4840 28A4  
                                  u3880 2766                                    u3960 08C8  
                                  u4680 1C16                                    u4761 373A  
                                  u4841 28A0                                    u3881 2762  
                                  u3865 2704                                    u3961 08C4  
                                  u4681 1C12                                    u4770 3414  
                                  u4850 28C2                                    u3890 37F4  
                                  u3970 0910                                    u4690 1C7E  
                                  u4851 28BE                                    u3891 37EE  
                                  u3795 25B4                                    u3971 090C  
                                  u4691 1C78                                    u4780 3446  
                                  u4860 28D2                                    u3980 093E  
                                  u4861 28CE                                    u3981 0938  
                                  u4917 2C42                                    u4790 3456  
                                  u4870 28E0                                    u3990 0940  
                                  u4927 347A                                    u4791 3452  
                                  u4871 28DC                                    u4880 291A  
                                  i2l65 395A                                    u4937 348A  
                                  u4777 340A                                    u4881 2916  
                                  u4890 2928                                    u4947 34A4  
                                  u4787 343C                                    u4891 2924  
                                  u4957 34B4                                    _TMR2 000FCC  
            __end_of_FM_Lcd_Send_Nibble 34C4                             main@percent 00C4  
                                  _dbuf 0100                                    _atoi 293C  
                                  _main 2ACC                                    _mens 00D8  
          FM_Lcd_Send_Nibble@upper_bits 0003                                    _prec 00D4  
                                  _nout 00D0                                    pad@i 0018  
                                  pad@p 0015                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
            __end_of_FM_Lcd_Send_String 3458                                    btemp 005F  
               ??_FM_Lcd_Send_Character 0005                           ___fpclassifyf 2E5E  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 000E  FM_Lcd_Send_Character@character_to_send 0005  
                       ___fldiv@new_exp 0020                            _tolower$1233 000D  
                 _FM_Lcd_Easy_Gpio_Init 3950                            ___param_bank 000000  
                                 ??_ISR 0001                                   ??_pad 0017  
             __size_of_FM_Lcd_Easy_Init 002A                           ___fltol@sign1 0049  
                                 ?_atoi 0008                         __end_of___fladd 1948  
                                 ?_main 0001                         __end_of___fldiv 2576  
                       __end_of___awdiv 3286                         __end_of___flneg 37C4  
                                 STR_11 082C                                   STR_13 082C  
                       __end_of___awmod 3336                         __end_of___flmul 21DC  
                       __end_of___flsub 36CC                         __end_of___fltol 2D5A  
           __end_of_FM_Lcd_Send_Command 3950                         ___awdiv@divisor 0003  
                                 _T2CON 000FCA                         ___awdiv@counter 0005  
                          vfpfcnvrt@fmt 005B                                   _TRISD 000F95  
                                 _flags 00D6                                   _fputc 3032  
                                 _fputs 36CC                         __end_of_isdigit 37FC  
                                 atoi@n 0015                                   pad@fp 0011  
                                 atoi@s 0008                                   _width 00D2  
                                 _putch 395E                         __end_of_isspace 3686  
              __end_of_Init_CCP1_As_PWM 392A                         __end_of_isupper 378C  
                                 tablat 000FF5                                   ttemp5 0060  
                                 ttemp6 0063                                   ttemp7 0067  
                                 status 000FD8                                   wtemp8 0060  
                       __end_of_sprintf 3634                          ?___fpclassifyf 0001  
                       __end_of_tolower 3586                         __end_of_strncmp 3032  
                       __initialization 388E                            __end_of_atoi 2ACC  
                          __end_of_main 2C54                                  ??_atoi 000A  
                                ??_main 00C0                           __activetblptr 000002  
                 _Run_Timer_And_CCP1PWM 38DA                                  _ADCON0 000FC2  
                                _ADCON1 000FC1                                  _ADCON2 000FC0  
                                ?_fputc 0001                                  ?_fputs 000A  
                                _ADRESH 000FC4                                  _ADRESL 000FC3  
                                _CCPR1L 000FBE                        ___awdiv@dividend 0001  
                                ?_putch 0001                                  _OSCCON 000FD3  
                      __end_of___xxtofl 293C                      _Init_ADC1_Chanel_0 3832  
                ?_FM_Lcd_Easy_Gpio_Init 0001                            vfprintf@cfmt 00AE  
                                ___flge 2D5A                                  ___fleq 3336  
                             ??___fladd 0009                                  ___wmul 38B4  
                             ??___fldiv 0017                               ??___awdiv 0005  
                             ??___flneg 0005                               ??___awmod 0005  
                             ??___flmul 0030                               ??___flsub 0049  
                             ??___fltol 0045                     ?_Init_ADC1_Chanel_0 0001  
                                _efgtoa 0830                                  _floorf 2576  
                                clear_0 3894                                  clear_1 38A0  
                      ___awdiv@quotient 0007                         ___awmod@divisor 0003  
                                isa$std 000001                         ___awmod@counter 0005  
                                pad@buf 0013                                  _strcpy 3586  
                                _strlen 37FC                                  fputc@c 0001  
                                fputs@c 000E                                  fputs@i 000F  
                                fputs@s 000A                               ??_isdigit 0003  
                       ___fpclassifyf@e 0009                         ___fpclassifyf@u 000B  
                       ___fpclassifyf@x 0001                            __mediumconst 0000  
                             ??_isspace 0003                                  tblptrh 000FF7  
                             ??_isupper 0003                                  tblptrl 000FF6  
                                tblptru 000FF8                                  putch@c 0001  
                      __end_of_vfprintf 3526                    ??_Init_ADC1_Chanel_0 0001  
                             ??_sprintf 005F                               ??_tolower 0009  
                             ??_strncmp 0007                              ___flge@ff1 0041  
                            ___flge@ff2 0045                         ??___fpclassifyf 0005  
                          ___xxtofl@arg 000B                            ___xxtofl@exp 000A  
                          ___xxtofl@val 0001                              ___fleq@ff1 0001  
                            ___fleq@ff2 0005                              __accesstop 0060  
               __end_of__initialization 38A6                              ___flneg@f1 0001  
                         ___rparam_used 000001                              ___fltol@f1 0041  
                        __pcstackCOMRAM 0001                           __end_of_fputc 30FC  
                         __end_of_fputs 3710                           __end_of_putch 3960  
                      _FM_Lcd_Easy_Init 3864             __size_of_Init_Timer2_Module 001C  
                ?_Run_Timer_And_CCP1PWM 0001                                 ??_fputc 0005  
                               ??_fputs 000E                                 ??_putch 0001  
                            __pbssBANK0 00C8                              __pbssBANK1 0100  
        __size_of_FM_Lcd_Send_Character 000C           __end_of_FM_Lcd_Send_Character 3944  
                               ?___flge 0041                                 ?___fleq 0001  
                    _FM_Lcd_Send_Nibble 3458                                 ?___wmul 0001  
                               ?_efgtoa 004D                                 _CCP1CON 000FBD  
                               ?_floorf 0028       __size_of_Init_Internal_Oscillator 000E  
                    _FM_Lcd_Send_String 33E0               ?_Init_Internal_Oscillator 0001  
                               ?_strcpy 0001                                 ?_strlen 0001  
                   ?_FM_Lcd_Send_Nibble 0001                               ?___xxtofl 0001  
                   ?_FM_Lcd_Send_String 0006                      __size_of_vfpfcnvrt 046A  
                     ?_Init_CCP1_As_PWM 0001                    ??_FM_Lcd_Send_Nibble 0001  
                    ??_Init_CCP1_As_PWM 0001                    ??_FM_Lcd_Send_String 0008  
                               __Hparam 0000                                 __Lparam 0000  
                       __size_of___flge 0104                         __size_of___fleq 00AA  
                               ___fladd 1488                                 ___fldiv 21DC  
                               ___awdiv 31C2                                 ___flneg 378C  
                               ___awmod 3286                                 ___flmul 1DB2  
                               ___flsub 3686                                 ___fltol 2C54  
                       __size_of___wmul 0026                               ?_vfprintf 00A8  
                          __psmallconst 0800                         __size_of_efgtoa 0C58  
                       __size_of_floorf 0212                                 __pcinit 388E  
                               __ramtop 0800                                 __ptext0 2ACC  
                               __ptext1 35E2                                 __ptext2 34C4  
                               __ptext3 1948                                 __ptext4 2F5C  
                               __ptext5 0830                                 __ptext6 3526  
                               __ptext7 3754                                 __ptext8 3586  
                               __ptext9 30FC                         __size_of_strcpy 005C  
                       __size_of_strlen 0036                            __size_of_ISR 3956  
                             _T2CONbits 000FCA                            __size_of_pad 00C6  
                               _isdigit 37C4                              ??___xxtofl 0005  
                      ___awmod@dividend 0001                                 _isspace 3634  
                               _isupper 3754                                 efgtoa@c 0053  
                               efgtoa@d 0078                                 efgtoa@e 0090  
                               efgtoa@f 004F                                 efgtoa@g 008C  
                               efgtoa@h 0082                                 efgtoa@i 008A  
                               efgtoa@l 0086                                 efgtoa@m 0072  
                               efgtoa@n 0092                                 efgtoa@p 007C  
                               efgtoa@t 006C                                 efgtoa@u 0094  
                               efgtoa@w 007E                                 atoi@neg 000E  
                               _sprintf 35E2                                 _tolower 3526  
          __size_of_FM_Lcd_Send_Command 000C                                 _strncmp 2F5C  
                        __pintcode_body 3958                    end_of_initialization 38A6  
                               floorf@e 0036                                 floorf@m 0032  
                               floorf@u 0038                                 floorf@x 0028  
               ??_FM_Lcd_Easy_Gpio_Init 0001                                 fputc@fp 0003  
                         __Lmediumconst 0000                                 int_func 3958  
                               fputs@fp 000C                       __end_of_vfpfcnvrt 1DB2  
                            efgtoa@mode 0081                              efgtoa@sign 007A  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                            ??_vfprintf 005F                                 strcpy@d 0009  
                               strlen@a 0003                                 strcpy@s 0007  
                               strlen@s 0001                  FM_Lcd_Set_Cursor@filas 0007  
                           ___fladd@grs 0010                           ___xxtofl@sign 0009  
                             _TRISAbits 000F92                               _TRISCbits 000F94  
                           ___fldiv@grs 0022                             ___fldiv@rem 001B  
                           ___flmul@grs 0035                __end_of_FM_Lcd_Easy_Init 388E  
                           _CCP1CONbits 000FBD               FM_Lcd_Set_Cursor@base_pos 0008  
                        __end_of___flge 2E5E                          __end_of___fleq 33E0  
                           vfpfcnvrt@ap 005D                             vfpfcnvrt@ct 00A4  
                           vfpfcnvrt@fp 0059                          __end_of___wmul 38DA  
                        __end_of_efgtoa 1488                 ??_Run_Timer_And_CCP1PWM 0001  
                        __end_of_floorf 2788                              floorf@F527 00C8  
                        __end_of_strcpy 35E2                          __end_of_strlen 3832  
                   start_initialization 388E                             __end_of_ISR 395E  
                           __end_of_pad 31C2             __size_of_Init_ADC1_Chanel_0 0032  
              FM_Lcd_Send_String@cadena 0006                   __end_of___fpclassifyf 2F5C  
      __end_of_Init_Internal_Oscillator 3938                             vfprintf@fmt 00AA  
                              ??___flge 0049                                ??___fleq 0009  
                              ??___wmul 0005                                ??_efgtoa 0054  
                              ??_floorf 002C              __end_of_Init_Timer2_Module 3912  
                              ??_strcpy 0005                                ??_strlen 0003  
                             ___fladd@a 0005                               ___fladd@b 0001  
                             ___fldiv@a 0013                               ___fldiv@b 000F  
                             ___flmul@a 002C                               ___flmul@b 0028  
                             ___flsub@a 0045                               ___flsub@b 0041  
                         __pcstackBANK0 0060                       __size_of___xxtofl 01B4  
                             _atoi$1140 0012                               _atoi$1138 0010  
                             _atoi$1139 0014                             _efgtoa$1080 0064  
                           _efgtoa$1074 0060                             _efgtoa$1075 0062  
                           _efgtoa$1084 0066                             _efgtoa$1085 0068  
                           _efgtoa$1086 006A                               __pintcode 0008  
                 _FM_Lcd_Send_Character 3938                                ?___fladd 0001  
                              ?___fldiv 000F                                ?___awdiv 0001  
                              ?___flneg 0001                                ?___awmod 0001  
                              ?___flmul 0028                     _FM_Lcd_Send_Command 3944  
                              ?___flsub 0041                                ?___fltol 0041  
                     _FM_Lcd_Set_Cursor 3710               __size_of_Init_CCP1_As_PWM 0018  
                    ?_FM_Lcd_Set_Cursor 0006                       __size_of_vfprintf 0062  
    FM_Lcd_Send_Command@command_to_send 0005                             __smallconst 0800  
                              ?_isdigit 0001                                ?_isspace 0001  
                   ??_FM_Lcd_Set_Cursor 0007                                ?_isupper 0001  
                  ?_FM_Lcd_Send_Command 0001                                ?_sprintf 00B0  
                              ?_tolower 0007                          __size_of_fputc 00CA  
                        __size_of_fputs 0044                                ?_strncmp 0001  
                        __size_of_putch 0002                          ___wmul@product 0005  
           __size_of_FM_Lcd_Send_Nibble 006C          __size_of_FM_Lcd_Easy_Gpio_Init 0008  
         __end_of_FM_Lcd_Easy_Gpio_Init 3958             __size_of_FM_Lcd_Send_String 0078  
             __end_of_FM_Lcd_Set_Cursor 3754                _Init_Internal_Oscillator 392A  
                             _vfpfcnvrt 1948                              _ADCON0bits 000FC2  
                            _ADCON1bits 000FC1                              _ADCON2bits 000FC0  
                     ___wmul@multiplier 0001                            _isspace$1169 0007  
                 ??_FM_Lcd_Send_Command 0005                              vfpfcnvrt@c 00A7  
                            vfpfcnvrt@f 00A0                       ?_FM_Lcd_Easy_Init 0001  
                    ??_FM_Lcd_Easy_Init 0006                 FM_Lcd_Send_String@index 000A  
                              __Hrparam 0000                  ?_FM_Lcd_Send_Character 0001  
                            vfprintf@ap 00AC                                __Lrparam 0000  
                            vfprintf@fp 00A8                        __size_of___fladd 04C0  
                      __size_of___fldiv 039A                        __size_of___awdiv 00C4  
                      __size_of___flneg 0038                        __size_of___awmod 00B0  
                      __size_of___flmul 042A                        __size_of___flsub 0046  
                      __size_of___fltol 0106                              ?_vfpfcnvrt 0059  
              Run_Timer_And_CCP1PWM@mod 0001                      ___fpclassifyf@F465 00CC  
        __size_of_Run_Timer_And_CCP1PWM 001C           __end_of_Run_Timer_And_CCP1PWM 38F6  
                            sprintf@fmt 00B2                                ___xxtofl 2788  
                      __size_of_isdigit 0038                        __size_of_isspace 0052  
                              __ptext10 37FC                                __ptext11 36CC  
                              __ptext20 1DB2                                __ptext12 3032  
                              __ptext21 2D5A                                __ptext13 395E  
                              __ptext30 2788                                __ptext22 3336  
                              __ptext14 2576                                __ptext31 38DA  
                              __ptext23 21DC                                __ptext15 2E5E  
                              __ptext40 3944                                __ptext32 38F6  
                              __ptext24 3286                                __ptext16 2C54  
                              __ptext41 3458                                __ptext33 392A  
                              __ptext25 31C2                                __ptext17 3686  
                              __ptext42 3950                                __ptext34 3912  
                              __ptext26 293C                                __ptext18 1488  
                              __ptext35 3832                                __ptext27 3634  
                              __ptext19 378C                                __ptext36 3710  
                              __ptext28 37C4                                __ptext37 33E0  
                              __ptext29 38B4                                __ptext38 3938  
                              __ptext39 3864                        __size_of_isupper 0038  
                      __size_of_sprintf 0052                        __size_of_tolower 0060  
                            strcpy@dest 0001                        __size_of_strncmp 00D6  
                         __size_of_atoi 0190                           __size_of_main 0188  
                              efgtoa@fp 004D                                efgtoa@ne 0070  
            __size_of_FM_Lcd_Set_Cursor 0044                                efgtoa@pp 006E  
                              efgtoa@ou 0074                                isa$xinst 000000  
                              int$flags 005F                        _Init_CCP1_As_PWM 3912  
                              _vfprintf 34C4                          _vfpfcnvrt$1100 009C  
                        _vfpfcnvrt$1104 009E              __end_of_Init_ADC1_Chanel_0 3864  
                              isdigit@c 0001                      _Init_Timer2_Module 38F6  
                              intlevel2 0000                               sprintf@ap 00B8  
                              isspace@c 0001          FM_Lcd_Send_Nibble@byte_to_send 0002  
                   ?_Init_Timer2_Module 0001                               strcpy@src 0003  
                              isupper@c 0001                               strncmp@_l 0001  
                             strncmp@_r 0003                              _OSCCONbits 000FD3  
                           efgtoa@nmode 0080                             ??_vfpfcnvrt 0098  
                  ??_Init_Timer2_Module 0001                                sprintf@f 00BA  
                              tolower@c 0007                                sprintf@s 00B0  
                __size_of___fpclassifyf 00FE                                strncmp@l 0008  
                              strncmp@n 0005                                strncmp@r 000A  
                         ___fladd@signs 000D                FM_Lcd_Set_Cursor@columna 0006  
            ??_Init_Internal_Oscillator 0001                            ___fladd@aexp 000E  
                          ___fladd@bexp 000F            FM_Lcd_Send_Nibble@lower_bits 0004  
