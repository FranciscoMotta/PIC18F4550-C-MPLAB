

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jun 26 15:58:18 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Version 2.40
    54                           ; Generated 17/11/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     _ADRESL	set	4035
    89   000000                     _ADRESH	set	4036
    90   000000                     _OSCCONbits	set	4051
    91   000000                     _ADCON2bits	set	4032
    92   000000                     _ADCON1bits	set	4033
    93   000000                     _ADCON0	set	4034
    94   000000                     _LATD	set	3980
    95   000000                     _TRISD	set	3989
    96   000000                     _ADCON2	set	4032
    97   000000                     _ADCON1	set	4033
    98   000000                     _ADCON0bits	set	4034
    99   000000                     _OSCCON	set	4051
   100                           
   101                           	psect	smallconst
   102   000800                     __psmallconst:
   103                           	callstack 0
   104   000800  00                 	db	0
   105   000801                     STR_1:
   106   000801  41                 	db	65	;'A'
   107   000802  44                 	db	68	;'D'
   108   000803  43                 	db	67	;'C'
   109   000804  20                 	db	32
   110   000805  4D                 	db	77	;'M'
   111   000806  65                 	db	101	;'e'
   112   000807  61                 	db	97	;'a'
   113   000808  73                 	db	115	;'s'
   114   000809  75                 	db	117	;'u'
   115   00080A  72                 	db	114	;'r'
   116   00080B  65                 	db	101	;'e'
   117   00080C  3A                 	db	58	;':'
   118   00080D  20                 	db	32
   119   00080E  00                 	db	0
   120   00080F                     STR_2:
   121   00080F  74                 	db	116	;'t'
   122   000810  65                 	db	101	;'e'
   123   000811  6D                 	db	109	;'m'
   124   000812  70                 	db	112	;'p'
   125   000813  20                 	db	32
   126   000814  3D                 	db	61	;'='
   127   000815  20                 	db	32
   128   000816  25                 	db	37
   129   000817  2E                 	db	46
   130   000818  32                 	db	50	;'2'
   131   000819  66                 	db	102	;'f'
   132   00081A  20                 	db	32
   133   00081B  43                 	db	67	;'C'
   134   00081C  00                 	db	0
   135   00081D                     STR_3:
   136   00081D  69                 	db	105	;'i'
   137   00081E  6E                 	db	110	;'n'
   138   00081F  66                 	db	102	;'f'
   139   000820  00                 	db	0
   140   000821                     STR_6:
   141   000821  6E                 	db	110	;'n'
   142   000822  61                 	db	97	;'a'
   143   000823  6E                 	db	110	;'n'
   144   000824  00                 	db	0
   145   000825  00                 	db	0	; dummy byte at the end
   146   000000                     
   147                           ; #config settings
   148                           
   149                           	psect	cinit
   150   002FC6                     __pcinit:
   151                           	callstack 0
   152   002FC6                     start_initialization:
   153                           	callstack 0
   154   002FC6                     __initialization:
   155                           	callstack 0
   156                           
   157                           ; Clear objects allocated to BANK1 (80 bytes)
   158   002FC6  EE01  F000         	lfsr	0,__pbssBANK1
   159   002FCA  0E50               	movlw	80
   160   002FCC                     clear_0:
   161   002FCC  6AEE               	clrf	postinc0,c
   162   002FCE  06E8               	decf	wreg,f,c
   163   002FD0  E1FD               	bnz	clear_0
   164                           
   165                           ; Clear objects allocated to BANK0 (29 bytes)
   166   002FD2  EE00  F0C7         	lfsr	0,__pbssBANK0
   167   002FD6  0E1D               	movlw	29
   168   002FD8                     clear_1:
   169   002FD8  6AEE               	clrf	postinc0,c
   170   002FDA  06E8               	decf	wreg,f,c
   171   002FDC  E1FD               	bnz	clear_1
   172   002FDE                     end_of_initialization:
   173                           	callstack 0
   174   002FDE                     __end_of__initialization:
   175                           	callstack 0
   176   002FDE  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   177   002FE0  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   178   002FE2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   179   002FE4  6EF8               	movwf	tblptru,c
   180   002FE6  0100               	movlb	0
   181   002FE8  EF68  F012         	goto	_main	;jump to C main() function
   182                           
   183                           	psect	bssBANK0
   184   0000C7                     __pbssBANK0:
   185                           	callstack 0
   186   0000C7                     floorf@F526:
   187                           	callstack 0
   188   0000C7                     	ds	4
   189   0000CB                     ___fpclassifyf@F465:
   190                           	callstack 0
   191   0000CB                     	ds	4
   192   0000CF                     _width:
   193                           	callstack 0
   194   0000CF                     	ds	2
   195   0000D1                     _prec:
   196                           	callstack 0
   197   0000D1                     	ds	2
   198   0000D3                     _flags:
   199                           	callstack 0
   200   0000D3                     	ds	1
   201   0000D4                     _data_vol:
   202                           	callstack 0
   203   0000D4                     	ds	16
   204                           
   205                           	psect	bssBANK1
   206   000100                     __pbssBANK1:
   207                           	callstack 0
   208   000100                     _dbuf:
   209                           	callstack 0
   210   000100                     	ds	80
   211                           
   212                           	psect	cstackBANK0
   213   000060                     __pcstackBANK0:
   214                           	callstack 0
   215   000060                     efgtoa@ne:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x0
   219   000060                     	ds	2
   220   000062                     efgtoa@p:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0x2
   224   000062                     	ds	2
   225   000064                     efgtoa@t:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x4
   229   000064                     	ds	2
   230   000066                     _efgtoa$893:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x6
   234   000066                     	ds	2
   235   000068                     efgtoa@pp:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x8
   239   000068                     	ds	1
   240   000069                     efgtoa@mode:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0x9
   244   000069                     	ds	1
   245   00006A                     efgtoa@nmode:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0xA
   249   00006A                     	ds	1
   250   00006B                     efgtoa@d:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0xB
   254   00006B                     	ds	2
   255   00006D                     efgtoa@m:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0xD
   259   00006D                     	ds	2
   260   00006F                     efgtoa@e:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0xF
   264   00006F                     	ds	2
   265   000071                     efgtoa@w:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x11
   269   000071                     	ds	2
   270   000073                     efgtoa@ou:
   271                           	callstack 0
   272                           
   273                           ; 4 bytes @ 0x13
   274   000073                     	ds	4
   275   000077                     efgtoa@i:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x17
   279   000077                     	ds	2
   280   000079                     efgtoa@h:
   281                           	callstack 0
   282                           
   283                           ; 4 bytes @ 0x19
   284   000079                     	ds	4
   285   00007D                     efgtoa@l:
   286                           	callstack 0
   287                           
   288                           ; 4 bytes @ 0x1D
   289   00007D                     	ds	4
   290   000081                     efgtoa@sign:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x21
   294   000081                     	ds	1
   295   000082                     efgtoa@n:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x22
   299   000082                     	ds	2
   300   000084                     efgtoa@g:
   301                           	callstack 0
   302                           
   303                           ; 4 bytes @ 0x24
   304   000084                     	ds	4
   305   000088                     efgtoa@u:
   306                           	callstack 0
   307                           
   308                           ; 4 bytes @ 0x28
   309   000088                     	ds	4
   310   00008C                     vfpfcnvrt@fp:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x2C
   314   00008C                     	ds	2
   315   00008E                     vfpfcnvrt@fmt:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x2E
   319   00008E                     	ds	2
   320   000090                     vfpfcnvrt@ap:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x30
   324   000090                     	ds	2
   325   000092                     ??_vfpfcnvrt:
   326                           
   327                           ; 1 bytes @ 0x32
   328   000092                     	ds	2
   329   000094                     vfpfcnvrt@convarg:
   330                           	callstack 0
   331                           
   332                           ; 4 bytes @ 0x34
   333   000094                     	ds	4
   334   000098                     vfpfcnvrt@c:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x38
   338   000098                     	ds	1
   339   000099                     vfpfcnvrt@cp:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x39
   343   000099                     	ds	2
   344   00009B                     ?_vfprintf:
   345                           	callstack 0
   346   00009B                     vfprintf@fp:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x3B
   350   00009B                     	ds	2
   351   00009D                     vfprintf@fmt:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x3D
   355   00009D                     	ds	2
   356   00009F                     vfprintf@ap:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x3F
   360   00009F                     	ds	2
   361   0000A1                     vfprintf@cfmt:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x41
   365   0000A1                     	ds	2
   366   0000A3                     ?_sprintf:
   367                           	callstack 0
   368   0000A3                     sprintf@s:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x43
   372   0000A3                     	ds	2
   373   0000A5                     sprintf@fmt:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x45
   377   0000A5                     	ds	6
   378   0000AB                     sprintf@ap:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x4B
   382   0000AB                     	ds	2
   383   0000AD                     sprintf@f:
   384                           	callstack 0
   385                           
   386                           ; 12 bytes @ 0x4D
   387   0000AD                     	ds	12
   388   0000B9                     ??_main:
   389                           
   390                           ; 1 bytes @ 0x59
   391   0000B9                     	ds	4
   392   0000BD                     main@volts:
   393                           	callstack 0
   394                           
   395                           ; 4 bytes @ 0x5D
   396   0000BD                     	ds	4
   397   0000C1                     _main$1198:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x61
   401   0000C1                     	ds	4
   402   0000C5                     main@adc_val:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x65
   406   0000C5                     	ds	2
   407                           
   408                           	psect	cstackCOMRAM
   409   000001                     __pcstackCOMRAM:
   410                           	callstack 0
   411   000001                     ??_FM_Lcd_Send_Nibble:
   412   000001                     ?___fpclassifyf:
   413                           	callstack 0
   414   000001                     ?___wmul:
   415                           	callstack 0
   416   000001                     ?___fladd:
   417                           	callstack 0
   418   000001                     ?_labs:
   419                           	callstack 0
   420   000001                     ?___flneg:
   421                           	callstack 0
   422   000001                     ?___fltol:
   423                           	callstack 0
   424   000001                     ?___xxtofl:
   425                           	callstack 0
   426   000001                     ___wmul@multiplier:
   427                           	callstack 0
   428   000001                     memcpy@d1:
   429                           	callstack 0
   430   000001                     fputc@c:
   431                           	callstack 0
   432   000001                     strcpy@dest:
   433                           	callstack 0
   434   000001                     ___fleq@ff1:
   435                           	callstack 0
   436   000001                     ___flneg@f1:
   437                           	callstack 0
   438   000001                     ___fltol@f1:
   439                           	callstack 0
   440   000001                     ___fladd@b:
   441                           	callstack 0
   442   000001                     ___xxtofl@val:
   443                           	callstack 0
   444   000001                     ___fpclassifyf@x:
   445                           	callstack 0
   446   000001                     labs@a:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x0
   450   000001                     	ds	1
   451   000002                     FM_Lcd_Send_Nibble@byte_to_send:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x1
   455   000002                     	ds	1
   456   000003                     FM_Lcd_Send_Nibble@upper_bits:
   457                           	callstack 0
   458   000003                     ___wmul@multiplicand:
   459                           	callstack 0
   460   000003                     memcpy@s1:
   461                           	callstack 0
   462   000003                     fputc@fp:
   463                           	callstack 0
   464   000003                     strcpy@src:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x2
   468   000003                     	ds	1
   469   000004                     FM_Lcd_Send_Nibble@lower_bits:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x3
   473   000004                     	ds	1
   474   000005                     ??_fputc:
   475   000005                     ??___fpclassifyf:
   476   000005                     ??_labs:
   477   000005                     ??___fltol:
   478   000005                     ??___xxtofl:
   479   000005                     FM_Lcd_Send_Command@command_to_send:
   480                           	callstack 0
   481   000005                     FM_Lcd_Send_Character@character_to_send:
   482                           	callstack 0
   483   000005                     ___wmul@product:
   484                           	callstack 0
   485   000005                     memcpy@n:
   486                           	callstack 0
   487   000005                     strcpy@s:
   488                           	callstack 0
   489   000005                     ___fleq@ff2:
   490                           	callstack 0
   491   000005                     ___fladd@a:
   492                           	callstack 0
   493                           
   494                           ; 4 bytes @ 0x4
   495   000005                     	ds	1
   496   000006                     FM_Lcd_Set_Cursor@columna:
   497                           	callstack 0
   498   000006                     FM_Lcd_Send_String@cadena:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x5
   502   000006                     	ds	1
   503   000007                     ?_read_prec_or_width:
   504                           	callstack 0
   505   000007                     FM_Lcd_Set_Cursor@filas:
   506                           	callstack 0
   507   000007                     read_prec_or_width@fmt:
   508                           	callstack 0
   509   000007                     memcpy@d:
   510                           	callstack 0
   511   000007                     strcpy@d:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x6
   515   000007                     	ds	1
   516   000008                     ??_FM_Lcd_Send_String:
   517   000008                     FM_Lcd_Set_Cursor@base_pos:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x7
   521   000008                     	ds	1
   522   000009                     ??___fladd:
   523   000009                     ??___fleq:
   524   000009                     ___fltol@sign1:
   525                           	callstack 0
   526   000009                     ___xxtofl@sign:
   527                           	callstack 0
   528   000009                     read_prec_or_width@ap:
   529                           	callstack 0
   530   000009                     ___fpclassifyf@e:
   531                           	callstack 0
   532   000009                     memcpy@s:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x8
   536   000009                     	ds	1
   537   00000A                     FM_Lcd_Send_String@index:
   538                           	callstack 0
   539   00000A                     ___fltol@exp1:
   540                           	callstack 0
   541   00000A                     ___xxtofl@exp:
   542                           	callstack 0
   543   00000A                     fputs@s:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x9
   547   00000A                     	ds	1
   548   00000B                     ??_read_prec_or_width:
   549   00000B                     memcpy@tmp:
   550                           	callstack 0
   551   00000B                     ___xxtofl@arg:
   552                           	callstack 0
   553   00000B                     ___fpclassifyf@u:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0xA
   557   00000B                     	ds	1
   558   00000C                     fputs@fp:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0xB
   562   00000C                     	ds	1
   563   00000D                     ___fladd@signs:
   564                           	callstack 0
   565   00000D                     read_prec_or_width@c:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0xC
   569   00000D                     	ds	1
   570   00000E                     ___fladd@aexp:
   571                           	callstack 0
   572   00000E                     fputs@c:
   573                           	callstack 0
   574   00000E                     read_prec_or_width@n:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0xD
   578   00000E                     	ds	1
   579   00000F                     ?___flmul:
   580                           	callstack 0
   581   00000F                     ___fladd@bexp:
   582                           	callstack 0
   583   00000F                     fputs@i:
   584                           	callstack 0
   585   00000F                     ___flmul@b:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0xE
   589   00000F                     	ds	1
   590   000010                     ___fladd@grs:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0xF
   594   000010                     	ds	1
   595   000011                     pad@fp:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x10
   599   000011                     	ds	2
   600   000013                     pad@buf:
   601                           	callstack 0
   602   000013                     ___flmul@a:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x12
   606   000013                     	ds	2
   607   000015                     pad@p:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x14
   611   000015                     	ds	2
   612   000017                     ??___flmul:
   613   000017                     ??_pad:
   614                           
   615                           ; 1 bytes @ 0x16
   616   000017                     	ds	1
   617   000018                     pad@i:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x17
   621   000018                     	ds	2
   622   00001A                     pad@w:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x19
   626   00001A                     	ds	1
   627   00001B                     ___flmul@sign:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0x1A
   631   00001B                     	ds	1
   632   00001C                     ___flmul@grs:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0x1B
   636   00001C                     	ds	4
   637   000020                     ___flmul@aexp:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x1F
   641   000020                     	ds	1
   642   000021                     ___flmul@bexp:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x20
   646   000021                     	ds	1
   647   000022                     ___flmul@prod:
   648                           	callstack 0
   649                           
   650                           ; 4 bytes @ 0x21
   651   000022                     	ds	4
   652   000026                     ___flmul@temp:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x25
   656   000026                     	ds	2
   657   000028                     ?___fldiv:
   658                           	callstack 0
   659   000028                     ?___flsub:
   660                           	callstack 0
   661   000028                     ___flge@ff1:
   662                           	callstack 0
   663   000028                     ___flsub@b:
   664                           	callstack 0
   665   000028                     ___fldiv@b:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0x27
   669   000028                     	ds	4
   670   00002C                     ___flge@ff2:
   671                           	callstack 0
   672   00002C                     ___flsub@a:
   673                           	callstack 0
   674   00002C                     ___fldiv@a:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x2B
   678   00002C                     	ds	4
   679   000030                     ??___fldiv:
   680   000030                     ??___flge:
   681                           
   682                           ; 1 bytes @ 0x2F
   683   000030                     	ds	4
   684   000034                     ___fldiv@rem:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x33
   688   000034                     	ds	4
   689   000038                     ___fldiv@sign:
   690                           	callstack 0
   691                           
   692                           ; 1 bytes @ 0x37
   693   000038                     	ds	1
   694   000039                     ___fldiv@new_exp:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x38
   698   000039                     	ds	2
   699   00003B                     ___fldiv@grs:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x3A
   703   00003B                     	ds	4
   704   00003F                     ___fldiv@bexp:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x3E
   708   00003F                     	ds	1
   709   000040                     ___fldiv@aexp:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x3F
   713   000040                     	ds	1
   714   000041                     ?_floorf:
   715                           	callstack 0
   716   000041                     floorf@x:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x40
   720   000041                     	ds	4
   721   000045                     ??_floorf:
   722                           
   723                           ; 1 bytes @ 0x44
   724   000045                     	ds	6
   725   00004B                     floorf@m:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x4A
   729   00004B                     	ds	4
   730   00004F                     floorf@e:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x4E
   734   00004F                     	ds	2
   735   000051                     floorf@u:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x50
   739   000051                     	ds	4
   740   000055                     efgtoa@fp:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x54
   744   000055                     	ds	2
   745   000057                     efgtoa@f:
   746                           	callstack 0
   747                           
   748                           ; 4 bytes @ 0x56
   749   000057                     	ds	4
   750   00005B                     efgtoa@c:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0x5A
   754   00005B                     	ds	1
   755   00005C                     ??_efgtoa:
   756                           
   757                           ; 1 bytes @ 0x5B
   758   00005C                     	ds	2
   759   00005E                     
   760                           ; 1 bytes @ 0x5D
   761 ;;
   762 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   763 ;;
   764 ;; *************** function _main *****************
   765 ;; Defined at:
   766 ;;		line 37 in file "main.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  volts           4   93[BANK0 ] float 
   771 ;;  adc_val         2  101[BANK0 ] unsigned short 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  2   45[None  ] int 
   774 ;; Registers used:
   775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   781 ;;      Params:         0       0       0       0       0       0       0       0       0
   782 ;;      Locals:         0      10       0       0       0       0       0       0       0
   783 ;;      Temps:          0       4       0       0       0       0       0       0       0
   784 ;;      Totals:         0      14       0       0       0       0       0       0       0
   785 ;;Total ram usage:       14 bytes
   786 ;; Hardware stack levels required when called: 9
   787 ;; This function calls:
   788 ;;		_FM_Lcd_Easy_Init
   789 ;;		_FM_Lcd_Send_String
   790 ;;		_FM_Lcd_Set_Cursor
   791 ;;		_Init_ADC_Module
   792 ;;		_Init_Internal_Oscillator
   793 ;;		___fldiv
   794 ;;		___flmul
   795 ;;		___xxtofl
   796 ;;		_sprintf
   797 ;; This function is called by:
   798 ;;		Startup code after reset
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text0
   803   0024D0                     __ptext0:
   804                           	callstack 0
   805   0024D0                     _main:
   806                           	callstack 22
   807   0024D0                     
   808                           ;main.c: 40:     Init_Internal_Oscillator();
   809   0024D0  EC09  F018         	call	_Init_Internal_Oscillator	;wreg free
   810                           
   811                           ;main.c: 42:     Init_ADC_Module();
   812   0024D4  ECB2  F017         	call	_Init_ADC_Module	;wreg free
   813   0024D8                     
   814                           ;main.c: 44:     FM_Lcd_Easy_Init();
   815   0024D8  ECCE  F017         	call	_FM_Lcd_Easy_Init	;wreg free
   816   0024DC                     
   817                           ;main.c: 46:     FM_Lcd_Set_Cursor(ROW_1, COL_3);
   818   0024DC  0E02               	movlw	2
   819   0024DE  6E06               	movwf	FM_Lcd_Set_Cursor@columna^0,c
   820   0024E0  0E00               	movlw	0
   821   0024E2  EC54  F017         	call	_FM_Lcd_Set_Cursor
   822   0024E6                     
   823                           ;main.c: 47:     FM_Lcd_Send_String("ADC Measure: ");
   824   0024E6  0E01               	movlw	low STR_1
   825   0024E8  6E06               	movwf	FM_Lcd_Send_String@cadena^0,c
   826   0024EA  0E08               	movlw	high STR_1
   827   0024EC  6E07               	movwf	(FM_Lcd_Send_String@cadena+1)^0,c
   828   0024EE  ECF1  F015         	call	_FM_Lcd_Send_String	;wreg free
   829   0024F2                     l3294:
   830                           
   831                           ;main.c: 50:     {;main.c: 52:         ADCON0bits.GO_NOT_DONE = 1;
   832   0024F2  82C2               	bsf	194,1,c	;volatile
   833   0024F4                     l47:
   834   0024F4  B2C2               	btfsc	194,1,c	;volatile
   835   0024F6  EF7F  F012         	goto	u3571
   836   0024FA  EF81  F012         	goto	u3570
   837   0024FE                     u3571:
   838   0024FE  EF7A  F012         	goto	l47
   839   002502                     u3570:
   840   002502                     
   841                           ;main.c: 56:         uint16_t adc_val = (ADRESH << 2) | (ADRESL >> 6);
   842   002502  CFC3 F0B9          	movff	4035,??_main	;volatile
   843   002506  0E06               	movlw	6
   844   002508  0100               	movlb	0	; () banked
   845   00250A  6FBA               	movwf	(??_main+1)& (0+255),b
   846   00250C                     u3585:
   847   00250C  90D8               	bcf	status,0,c
   848   00250E  33B9               	rrcf	??_main& (0+255),f,b
   849   002510  2FBA               	decfsz	(??_main+1)& (0+255),f,b
   850   002512  EF86  F012         	goto	u3585
   851   002516  51B9               	movf	??_main& (0+255),w,b
   852   002518  CFC4 F0BB          	movff	4036,??_main+2	;volatile
   853   00251C  6BBC               	clrf	(??_main+3)& (0+255),b
   854   00251E  90D8               	bcf	status,0,c
   855   002520  37BB               	rlcf	(??_main+2)& (0+255),f,b
   856   002522  37BC               	rlcf	(??_main+3)& (0+255),f,b
   857   002524  90D8               	bcf	status,0,c
   858   002526  37BB               	rlcf	(??_main+2)& (0+255),f,b
   859   002528  37BC               	rlcf	(??_main+3)& (0+255),f,b
   860   00252A  11BB               	iorwf	(??_main+2)& (0+255),w,b
   861   00252C  6FC5               	movwf	main@adc_val& (0+255),b
   862   00252E  51BC               	movf	(??_main+3)& (0+255),w,b
   863   002530  6FC6               	movwf	(main@adc_val+1)& (0+255),b
   864   002532                     
   865                           ; BSR set to: 0
   866                           ;main.c: 64:         float volts = ((5.0 * adc_val) / 1024.0) * 100.0;
   867   002532  0E00               	movlw	0
   868   002534  6E2C               	movwf	___fldiv@a^0,c
   869   002536  0E00               	movlw	0
   870   002538  6E2D               	movwf	(___fldiv@a+1)^0,c
   871   00253A  0E80               	movlw	128
   872   00253C  6E2E               	movwf	(___fldiv@a+2)^0,c
   873   00253E  0E44               	movlw	68
   874   002540  6E2F               	movwf	(___fldiv@a+3)^0,c
   875   002542  0E00               	movlw	0
   876   002544  6E13               	movwf	___flmul@a^0,c
   877   002546  0E00               	movlw	0
   878   002548  6E14               	movwf	(___flmul@a+1)^0,c
   879   00254A  0EA0               	movlw	160
   880   00254C  6E15               	movwf	(___flmul@a+2)^0,c
   881   00254E  0E40               	movlw	64
   882   002550  6E16               	movwf	(___flmul@a+3)^0,c
   883   002552  C0C5  F001         	movff	main@adc_val,___xxtofl@val
   884   002556  C0C6  F002         	movff	main@adc_val+1,___xxtofl@val+1
   885   00255A  6A03               	clrf	(___xxtofl@val+2)^0,c
   886   00255C  6A04               	clrf	(___xxtofl@val+3)^0,c
   887   00255E  0E00               	movlw	0
   888   002560  EC8E  F011         	call	___xxtofl
   889   002564  C001  F00F         	movff	?___xxtofl,___flmul@b
   890   002568  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   891   00256C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   892   002570  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   893   002574  EC6F  F00B         	call	___flmul	;wreg free
   894   002578  C00F  F028         	movff	?___flmul,___fldiv@b
   895   00257C  C010  F029         	movff	?___flmul+1,___fldiv@b+1
   896   002580  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
   897   002584  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
   898   002588  EC84  F00D         	call	___fldiv	;wreg free
   899   00258C  C028  F0C1         	movff	?___fldiv,_main$1198
   900   002590  C029  F0C2         	movff	?___fldiv+1,_main$1198+1
   901   002594  C02A  F0C3         	movff	?___fldiv+2,_main$1198+2
   902   002598  C02B  F0C4         	movff	?___fldiv+3,_main$1198+3
   903   00259C                     
   904                           ;main.c: 64:         float volts = ((5.0 * adc_val) / 1024.0) * 100.0;
   905   00259C  C0C1  F00F         	movff	_main$1198,___flmul@b
   906   0025A0  C0C2  F010         	movff	_main$1198+1,___flmul@b+1
   907   0025A4  C0C3  F011         	movff	_main$1198+2,___flmul@b+2
   908   0025A8  C0C4  F012         	movff	_main$1198+3,___flmul@b+3
   909   0025AC  0E00               	movlw	0
   910   0025AE  6E13               	movwf	___flmul@a^0,c
   911   0025B0  0E00               	movlw	0
   912   0025B2  6E14               	movwf	(___flmul@a+1)^0,c
   913   0025B4  0EC8               	movlw	200
   914   0025B6  6E15               	movwf	(___flmul@a+2)^0,c
   915   0025B8  0E42               	movlw	66
   916   0025BA  6E16               	movwf	(___flmul@a+3)^0,c
   917   0025BC  EC6F  F00B         	call	___flmul	;wreg free
   918   0025C0  C00F  F0BD         	movff	?___flmul,main@volts
   919   0025C4  C010  F0BE         	movff	?___flmul+1,main@volts+1
   920   0025C8  C011  F0BF         	movff	?___flmul+2,main@volts+2
   921   0025CC  C012  F0C0         	movff	?___flmul+3,main@volts+3
   922   0025D0                     
   923                           ;main.c: 65:         sprintf(data_vol, "temp = %.2f C", volts);
   924   0025D0  0ED4               	movlw	low _data_vol
   925   0025D2  0100               	movlb	0	; () banked
   926   0025D4  6FA3               	movwf	sprintf@s& (0+255),b
   927   0025D6  0E00               	movlw	high _data_vol
   928   0025D8  6FA4               	movwf	(sprintf@s+1)& (0+255),b
   929   0025DA  0E0F               	movlw	low STR_2
   930   0025DC  6FA5               	movwf	sprintf@fmt& (0+255),b
   931   0025DE  0E08               	movlw	high STR_2
   932   0025E0  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
   933   0025E2  C0BD  F0A7         	movff	main@volts,?_sprintf+4
   934   0025E6  C0BE  F0A8         	movff	main@volts+1,?_sprintf+5
   935   0025EA  C0BF  F0A9         	movff	main@volts+2,?_sprintf+6
   936   0025EE  C0C0  F0AA         	movff	main@volts+3,?_sprintf+7
   937   0025F2  ECBF  F016         	call	_sprintf	;wreg free
   938   0025F6                     
   939                           ;main.c: 66:         FM_Lcd_Set_Cursor(ROW_2, COL_3);
   940   0025F6  0E02               	movlw	2
   941   0025F8  6E06               	movwf	FM_Lcd_Set_Cursor@columna^0,c
   942   0025FA  0E01               	movlw	1
   943   0025FC  EC54  F017         	call	_FM_Lcd_Set_Cursor
   944   002600                     
   945                           ;main.c: 67:         FM_Lcd_Send_String(data_vol);
   946   002600  0ED4               	movlw	low _data_vol
   947   002602  6E06               	movwf	FM_Lcd_Send_String@cadena^0,c
   948   002604  0E00               	movlw	high _data_vol
   949   002606  6E07               	movwf	(FM_Lcd_Send_String@cadena+1)^0,c
   950   002608  ECF1  F015         	call	_FM_Lcd_Send_String	;wreg free
   951   00260C                     
   952                           ;main.c: 69:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
   953   00260C  0E03               	movlw	3
   954   00260E  0100               	movlb	0	; () banked
   955   002610  6FB9               	movwf	??_main& (0+255),b
   956   002612  0E97               	movlw	151
   957   002614                     u3597:
   958   002614  2EE8               	decfsz	wreg,f,c
   959   002616  D7FE               	bra	u3597
   960   002618  2FB9               	decfsz	??_main& (0+255),f,b
   961   00261A  D7FC               	bra	u3597
   962   00261C  D000               	nop2	
   963   00261E  EF79  F012         	goto	l3294
   964   002622  EF07  F000         	goto	start
   965   002626                     __end_of_main:
   966                           	callstack 0
   967                           
   968 ;; *************** function _sprintf *****************
   969 ;; Defined at:
   970 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  s               2   67[BANK0 ] PTR unsigned char 
   973 ;;		 -> data_vol(16), 
   974 ;;  fmt             2   69[BANK0 ] PTR const unsigned char 
   975 ;;		 -> STR_2(14), 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  f              12   77[BANK0 ] struct _IO_FILE
   978 ;;  ap              2   75[BANK0 ] PTR void [1]
   979 ;;		 -> ?_sprintf(2), 
   980 ;;  ret             2    0        int 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  2   67[BANK0 ] int 
   983 ;; Registers used:
   984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   990 ;;      Params:         0       8       0       0       0       0       0       0       0
   991 ;;      Locals:         0      14       0       0       0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0
   993 ;;      Totals:         0      22       0       0       0       0       0       0       0
   994 ;;Total ram usage:       22 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; Hardware stack levels required when called: 8
   997 ;; This function calls:
   998 ;;		_vfprintf
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text1
  1005   002D7E                     __ptext1:
  1006                           	callstack 0
  1007   002D7E                     _sprintf:
  1008                           	callstack 22
  1009   002D7E  0EA7               	movlw	low (?_sprintf+4)
  1010   002D80  0100               	movlb	0	; () banked
  1011   002D82  6FAB               	movwf	sprintf@ap& (0+255),b
  1012   002D84  0E00               	movlw	high (?_sprintf+4)
  1013   002D86  6FAC               	movwf	(sprintf@ap+1)& (0+255),b
  1014   002D88  C0A3  F0AD         	movff	sprintf@s,sprintf@f
  1015   002D8C  C0A4  F0AE         	movff	sprintf@s+1,sprintf@f+1
  1016   002D90                     
  1017                           ; BSR set to: 0
  1018   002D90  0E00               	movlw	0
  1019   002D92  6FB1               	movwf	(sprintf@f+4)& (0+255),b
  1020   002D94  0E00               	movlw	0
  1021   002D96  6FB0               	movwf	(sprintf@f+3)& (0+255),b
  1022   002D98                     
  1023                           ; BSR set to: 0
  1024   002D98  0E00               	movlw	0
  1025   002D9A  6FB8               	movwf	(sprintf@f+11)& (0+255),b
  1026   002D9C  0E00               	movlw	0
  1027   002D9E  6FB7               	movwf	(sprintf@f+10)& (0+255),b
  1028   002DA0                     
  1029                           ; BSR set to: 0
  1030   002DA0  0EAD               	movlw	low sprintf@f
  1031   002DA2  6F9B               	movwf	vfprintf@fp& (0+255),b
  1032   002DA4  0E00               	movlw	high sprintf@f
  1033   002DA6  6F9C               	movwf	(vfprintf@fp+1)& (0+255),b
  1034   002DA8  C0A5  F09D         	movff	sprintf@fmt,vfprintf@fmt
  1035   002DAC  C0A6  F09E         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1036   002DB0  0EAB               	movlw	low sprintf@ap
  1037   002DB2  6F9F               	movwf	vfprintf@ap& (0+255),b
  1038   002DB4  0E00               	movlw	high sprintf@ap
  1039   002DB6  6FA0               	movwf	(vfprintf@ap+1)& (0+255),b
  1040   002DB8  EC96  F016         	call	_vfprintf	;wreg free
  1041   002DBC  0100               	movlb	0	; () banked
  1042   002DBE  51B0               	movf	(sprintf@f+3)& (0+255),w,b
  1043   002DC0  25A3               	addwf	sprintf@s& (0+255),w,b
  1044   002DC2  6ED9               	movwf	fsr2l,c
  1045   002DC4  51B1               	movf	(sprintf@f+4)& (0+255),w,b
  1046   002DC6  21A4               	addwfc	(sprintf@s+1)& (0+255),w,b
  1047   002DC8  6EDA               	movwf	fsr2h,c
  1048   002DCA  6ADF               	clrf	indf2,c
  1049   002DCC                     
  1050                           ; BSR set to: 0
  1051   002DCC  0012               	return		;funcret
  1052   002DCE                     __end_of_sprintf:
  1053                           	callstack 0
  1054                           
  1055 ;; *************** function _vfprintf *****************
  1056 ;; Defined at:
  1057 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  1060 ;;		 -> sprintf@f(12), 
  1061 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
  1062 ;;		 -> STR_2(14), 
  1063 ;;  ap              2   63[BANK0 ] PTR PTR void 
  1064 ;;		 -> sprintf@ap(2), 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  cfmt            2   65[BANK0 ] PTR unsigned char 
  1067 ;;		 -> STR_2(14), 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  2   59[BANK0 ] int 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1077 ;;      Params:         0       6       0       0       0       0       0       0       0
  1078 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1080 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1081 ;;Total ram usage:        8 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 7
  1084 ;; This function calls:
  1085 ;;		_vfpfcnvrt
  1086 ;; This function is called by:
  1087 ;;		_sprintf
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text2
  1092   002D2C                     __ptext2:
  1093                           	callstack 0
  1094   002D2C                     _vfprintf:
  1095                           	callstack 22
  1096   002D2C                     
  1097                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1098   002D2C  C09D  F0A1         	movff	vfprintf@fmt,vfprintf@cfmt
  1099   002D30  C09E  F0A2         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1100                           
  1101                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1102   002D34  EFAB  F016         	goto	l3186
  1103   002D38                     l3184:
  1104                           
  1105                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1106   002D38  C09B  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1107   002D3C  C09C  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1108   002D40  0EA1               	movlw	low vfprintf@cfmt
  1109   002D42  0100               	movlb	0	; () banked
  1110   002D44  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1111   002D46  0E00               	movlw	high vfprintf@cfmt
  1112   002D48  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1113   002D4A  C09F  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  1114   002D4E  C0A0  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1115   002D52  EC51  F00F         	call	_vfpfcnvrt	;wreg free
  1116   002D56                     l3186:
  1117                           
  1118                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1119   002D56  C0A1  FFF6         	movff	vfprintf@cfmt,tblptrl
  1120   002D5A  C0A2  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1121   002D5E                     	if	0	;tblptru may be non-zero
  1122   002D5E                     	endif
  1123   002D5E                     	if	0	;tblptru may be non-zero
  1124   002D5E                     	endif
  1125   002D5E  0008               	tblrd		*
  1126   002D60  50F5               	movf	tablat,w,c
  1127   002D62  0900               	iorlw	0
  1128   002D64  A4D8               	btfss	status,2,c
  1129   002D66  EFB7  F016         	goto	u3411
  1130   002D6A  EFB9  F016         	goto	u3410
  1131   002D6E                     u3411:
  1132   002D6E  EF9C  F016         	goto	l3184
  1133   002D72                     u3410:
  1134   002D72                     
  1135                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1136   002D72  0E00               	movlw	0
  1137   002D74  0100               	movlb	0	; () banked
  1138   002D76  6F9C               	movwf	(?_vfprintf+1)& (0+255),b
  1139   002D78  0E00               	movlw	0
  1140   002D7A  6F9B               	movwf	?_vfprintf& (0+255),b
  1141   002D7C                     
  1142                           ; BSR set to: 0
  1143   002D7C  0012               	return		;funcret
  1144   002D7E                     __end_of_vfprintf:
  1145                           	callstack 0
  1146                           
  1147 ;; *************** function _vfpfcnvrt *****************
  1148 ;; Defined at:
  1149 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1152 ;;		 -> sprintf@f(12), 
  1153 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  1154 ;;		 -> vfprintf@cfmt(2), 
  1155 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1156 ;;		 -> sprintf@ap(2), 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  convarg         4   52[BANK0 ] struct .
  1159 ;;  cp              2   57[BANK0 ] PTR unsigned char 
  1160 ;;		 -> STR_2(14), 
  1161 ;;  i               2    0        int 
  1162 ;;  done            2    0        int 
  1163 ;;  c               1   56[BANK0 ] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1173 ;;      Params:         0       6       0       0       0       0       0       0       0
  1174 ;;      Locals:         0       7       0       0       0       0       0       0       0
  1175 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1176 ;;      Totals:         0      15       0       0       0       0       0       0       0
  1177 ;;Total ram usage:       15 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 6
  1180 ;; This function calls:
  1181 ;;		_efgtoa
  1182 ;;		_fputc
  1183 ;;		_read_prec_or_width
  1184 ;; This function is called by:
  1185 ;;		_vfprintf
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text3
  1190   001EA2                     __ptext3:
  1191                           	callstack 0
  1192   001EA2                     _vfpfcnvrt:
  1193                           	callstack 22
  1194   001EA2                     
  1195                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1196   001EA2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1197   001EA6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1198   001EAA  CFDE FFF6          	movff	postinc2,tblptrl
  1199   001EAE  CFDD FFF7          	movff	postdec2,tblptrh
  1200   001EB2                     	if	0	;tblptru may be non-zero
  1201   001EB2                     	endif
  1202   001EB2                     	if	0	;tblptru may be non-zero
  1203   001EB2                     	endif
  1204   001EB2  0008               	tblrd		*
  1205   001EB4  50F5               	movf	tablat,w,c
  1206   001EB6  0A25               	xorlw	37
  1207   001EB8  A4D8               	btfss	status,2,c
  1208   001EBA  EF61  F00F         	goto	u3381
  1209   001EBE  EF63  F00F         	goto	u3380
  1210   001EC2                     u3381:
  1211   001EC2  EF70  F010         	goto	l3146
  1212   001EC6                     u3380:
  1213   001EC6                     
  1214                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1215   001EC6  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1216   001ECA  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1217   001ECE  2ADE               	incf	postinc2,f,c
  1218   001ED0  0E00               	movlw	0
  1219   001ED2  22DD               	addwfc	postdec2,f,c
  1220   001ED4                     
  1221                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1222   001ED4  0E00               	movlw	0
  1223   001ED6  0100               	movlb	0	; () banked
  1224   001ED8  6FD0               	movwf	(_width+1)& (0+255),b
  1225   001EDA  0E00               	movlw	0
  1226   001EDC  6FCF               	movwf	_width& (0+255),b
  1227   001EDE  C0CF  F0D3         	movff	_width,_flags
  1228   001EE2                     
  1229                           ; BSR set to: 0
  1230                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1231   001EE2  69D1               	setf	_prec& (0+255),b
  1232   001EE4  69D2               	setf	(_prec+1)& (0+255),b
  1233   001EE6                     
  1234                           ; BSR set to: 0
  1235                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  1236   001EE6  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1237   001EEA  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1238   001EEE  CFDE FFF6          	movff	postinc2,tblptrl
  1239   001EF2  CFDD FFF7          	movff	postdec2,tblptrh
  1240   001EF6                     	if	0	;tblptru may be non-zero
  1241   001EF6                     	endif
  1242   001EF6                     	if	0	;tblptru may be non-zero
  1243   001EF6                     	endif
  1244   001EF6  0008               	tblrd		*
  1245   001EF8  50F5               	movf	tablat,w,c
  1246   001EFA  0A2E               	xorlw	46
  1247   001EFC  A4D8               	btfss	status,2,c
  1248   001EFE  EF83  F00F         	goto	u3391
  1249   001F02  EF85  F00F         	goto	u3390
  1250   001F06                     u3391:
  1251   001F06  EF9A  F00F         	goto	l3108
  1252   001F0A                     u3390:
  1253   001F0A                     
  1254                           ; BSR set to: 0
  1255                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  1256   001F0A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1257   001F0E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1258   001F12  2ADE               	incf	postinc2,f,c
  1259   001F14  0E00               	movlw	0
  1260   001F16  22DD               	addwfc	postdec2,f,c
  1261   001F18                     
  1262                           ; BSR set to: 0
  1263                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1264   001F18  C08E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1265   001F1C  C08F  F008         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1266   001F20  C090  F009         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1267   001F24  C091  F00A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1268   001F28  ECFC  F014         	call	_read_prec_or_width	;wreg free
  1269   001F2C  C007  F0D1         	movff	?_read_prec_or_width,_prec
  1270   001F30  C008  F0D2         	movff	?_read_prec_or_width+1,_prec+1
  1271   001F34                     l3108:
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  1274   001F34  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1275   001F38  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1276   001F3C  CFDE F099          	movff	postinc2,vfpfcnvrt@cp
  1277   001F40  CFDD F09A          	movff	postdec2,vfpfcnvrt@cp+1
  1278   001F44                     
  1279                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  1280   001F44  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1281   001F48  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1282   001F4C                     	if	0	;tblptru may be non-zero
  1283   001F4C                     	endif
  1284   001F4C                     	if	0	;tblptru may be non-zero
  1285   001F4C                     	endif
  1286   001F4C  0008               	tblrd		*
  1287   001F4E  CFF5 F098          	movff	tablat,vfpfcnvrt@c
  1288                           
  1289                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  1290   001F52  EFB7  F00F         	goto	l3120
  1291   001F56                     l3112:
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  1295   001F56  4B99               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  1296   001F58  2B9A               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  1297                           
  1298                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  1299   001F5A  EFD1  F00F         	goto	l3122
  1300   001F5E                     l3114:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  1304   001F5E  0E6C               	movlw	108
  1305   001F60  6F98               	movwf	vfpfcnvrt@c& (0+255),b
  1306                           
  1307                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  1308   001F62  EFD1  F00F         	goto	l3122
  1309   001F66                     l3116:
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  1313   001F66  0E00               	movlw	0
  1314   001F68  6F98               	movwf	vfpfcnvrt@c& (0+255),b
  1315                           
  1316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  1317   001F6A  EFD1  F00F         	goto	l3122
  1318   001F6E                     l3120:
  1319   001F6E  0100               	movlb	0	; () banked
  1320   001F70  5198               	movf	vfpfcnvrt@c& (0+255),w,b
  1321   001F72  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  1322   001F74  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1323                           
  1324                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1325                           ; Switch size 1, requested type "simple"
  1326                           ; Number of cases is 1, Range of values is 0 to 0
  1327                           ; switch strategies available:
  1328                           ; Name         Instructions Cycles
  1329                           ; simple_byte            4     3 (average)
  1330                           ;	Chosen strategy is simple_byte
  1331   001F76  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1332   001F78  0A00               	xorlw	0	; case 0
  1333   001F7A  B4D8               	btfsc	status,2,c
  1334   001F7C  EFC2  F00F         	goto	l3400
  1335   001F80  EFB3  F00F         	goto	l3116
  1336   001F84                     l3400:
  1337                           
  1338                           ; BSR set to: 0
  1339                           ; Switch size 1, requested type "simple"
  1340                           ; Number of cases is 3, Range of values is 76 to 108
  1341                           ; switch strategies available:
  1342                           ; Name         Instructions Cycles
  1343                           ; simple_byte           10     6 (average)
  1344                           ;	Chosen strategy is simple_byte
  1345   001F84  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  1346   001F86  0A4C               	xorlw	76	; case 76
  1347   001F88  B4D8               	btfsc	status,2,c
  1348   001F8A  EFAB  F00F         	goto	l3112
  1349   001F8E  0A2A               	xorlw	42	; case 102
  1350   001F90  B4D8               	btfsc	status,2,c
  1351   001F92  EFAF  F00F         	goto	l3114
  1352   001F96  0A0A               	xorlw	10	; case 108
  1353   001F98  B4D8               	btfsc	status,2,c
  1354   001F9A  EFAB  F00F         	goto	l3112
  1355   001F9E  EFB3  F00F         	goto	l3116
  1356   001FA2                     l3122:
  1357                           
  1358                           ; BSR set to: 0
  1359   001FA2  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1360   001FA6  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1361   001FAA                     	if	0	;tblptru may be non-zero
  1362   001FAA                     	endif
  1363   001FAA                     	if	0	;tblptru may be non-zero
  1364   001FAA                     	endif
  1365   001FAA  0008               	tblrd		*
  1366   001FAC  50F5               	movf	tablat,w,c
  1367   001FAE  0A66               	xorlw	102
  1368   001FB0  A4D8               	btfss	status,2,c
  1369   001FB2  EFDD  F00F         	goto	u3401
  1370   001FB6  EFDF  F00F         	goto	u3400
  1371   001FBA                     u3401:
  1372   001FBA  EF67  F010         	goto	l3142
  1373   001FBE                     u3400:
  1374   001FBE  EF15  F010         	goto	l3130
  1375   001FC2                     l3124:
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1379   001FC2  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1380   001FC6  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1381   001FCA  CFDF F092          	movff	indf2,??_vfpfcnvrt
  1382   001FCE  0E04               	movlw	4
  1383   001FD0  26DE               	addwf	postinc2,f,c
  1384   001FD2  CFDF F093          	movff	indf2,??_vfpfcnvrt+1
  1385   001FD6  0E00               	movlw	0
  1386   001FD8  22DD               	addwfc	postdec2,f,c
  1387   001FDA  C092  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1388   001FDE  C093  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1389   001FE2  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg
  1390   001FE6  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+1
  1391   001FEA  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg+2
  1392   001FEE  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+3
  1393                           
  1394                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  1395   001FF2  EF2A  F010         	goto	l3132
  1396   001FF6                     l3126:
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1400   001FF6  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1401   001FFA  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1402   001FFE  CFDF F092          	movff	indf2,??_vfpfcnvrt
  1403   002002  0E04               	movlw	4
  1404   002004  26DE               	addwf	postinc2,f,c
  1405   002006  CFDF F093          	movff	indf2,??_vfpfcnvrt+1
  1406   00200A  0E00               	movlw	0
  1407   00200C  22DD               	addwfc	postdec2,f,c
  1408   00200E  C092  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1409   002012  C093  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1410   002016  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg
  1411   00201A  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+1
  1412   00201E  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg+2
  1413   002022  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+3
  1414                           
  1415                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  1416   002026  EF2A  F010         	goto	l3132
  1417   00202A                     l3130:
  1418                           
  1419                           ; BSR set to: 0
  1420   00202A  5198               	movf	vfpfcnvrt@c& (0+255),w,b
  1421   00202C  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  1422   00202E  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1423                           
  1424                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1425                           ; Switch size 1, requested type "simple"
  1426                           ; Number of cases is 1, Range of values is 0 to 0
  1427                           ; switch strategies available:
  1428                           ; Name         Instructions Cycles
  1429                           ; simple_byte            4     3 (average)
  1430                           ;	Chosen strategy is simple_byte
  1431   002030  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1432   002032  0A00               	xorlw	0	; case 0
  1433   002034  B4D8               	btfsc	status,2,c
  1434   002036  EF1F  F010         	goto	l3402
  1435   00203A  EF2A  F010         	goto	l3132
  1436   00203E                     l3402:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ; Switch size 1, requested type "simple"
  1440                           ; Number of cases is 2, Range of values is 76 to 108
  1441                           ; switch strategies available:
  1442                           ; Name         Instructions Cycles
  1443                           ; simple_byte            7     4 (average)
  1444                           ;	Chosen strategy is simple_byte
  1445   00203E  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  1446   002040  0A4C               	xorlw	76	; case 76
  1447   002042  B4D8               	btfsc	status,2,c
  1448   002044  EFFB  F00F         	goto	l3126
  1449   002048  0A20               	xorlw	32	; case 108
  1450   00204A  B4D8               	btfsc	status,2,c
  1451   00204C  EFE1  F00F         	goto	l3124
  1452   002050  EF2A  F010         	goto	l3132
  1453   002054                     l3132:
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  1457   002054  0E01               	movlw	1
  1458   002056  2599               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1459   002058  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  1460   00205A  0E00               	movlw	0
  1461   00205C  219A               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1462   00205E  6F93               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1463   002060  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1464   002064  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1465   002068  C092  FFDE         	movff	??_vfpfcnvrt,postinc2
  1466   00206C  C093  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1467                           
  1468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  1469   002070  EF51  F010         	goto	l3140
  1470   002074                     l3134:
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1474   002074  C08C  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1475   002078  C08D  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1476   00207C  C094  F057         	movff	vfpfcnvrt@convarg,efgtoa@f
  1477   002080  C095  F058         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1478   002084  C096  F059         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1479   002088  C097  F05A         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1480   00208C  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1481   002090  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1482   002094                     	if	0	;tblptru may be non-zero
  1483   002094                     	endif
  1484   002094                     	if	0	;tblptru may be non-zero
  1485   002094                     	endif
  1486   002094  0008               	tblrd		*
  1487   002096  CFF5 F05B          	movff	tablat,efgtoa@c
  1488   00209A  EC13  F004         	call	_efgtoa	;wreg free
  1489   00209E  EF84  F010         	goto	l889
  1490   0020A2                     l3140:
  1491                           
  1492                           ; BSR set to: 0
  1493   0020A2  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1494   0020A6  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1495   0020AA                     	if	0	;tblptru may be non-zero
  1496   0020AA                     	endif
  1497   0020AA                     	if	0	;tblptru may be non-zero
  1498   0020AA                     	endif
  1499   0020AA  0008               	tblrd		*
  1500   0020AC  50F5               	movf	tablat,w,c
  1501   0020AE  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  1502   0020B0  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1503                           
  1504                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1505                           ; Switch size 1, requested type "simple"
  1506                           ; Number of cases is 1, Range of values is 0 to 0
  1507                           ; switch strategies available:
  1508                           ; Name         Instructions Cycles
  1509                           ; simple_byte            4     3 (average)
  1510                           ;	Chosen strategy is simple_byte
  1511   0020B2  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1512   0020B4  0A00               	xorlw	0	; case 0
  1513   0020B6  B4D8               	btfsc	status,2,c
  1514   0020B8  EF60  F010         	goto	l3404
  1515   0020BC  EF67  F010         	goto	l3142
  1516   0020C0                     l3404:
  1517                           
  1518                           ; BSR set to: 0
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 1, Range of values is 102 to 102
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte            4     3 (average)
  1524                           ;	Chosen strategy is simple_byte
  1525   0020C0  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  1526   0020C2  0A66               	xorlw	102	; case 102
  1527   0020C4  B4D8               	btfsc	status,2,c
  1528   0020C6  EF3A  F010         	goto	l3134
  1529   0020CA  EF67  F010         	goto	l3142
  1530   0020CE                     l3142:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1533   0020CE  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1534   0020D2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1535   0020D6  2ADE               	incf	postinc2,f,c
  1536   0020D8  0E00               	movlw	0
  1537   0020DA  22DD               	addwfc	postdec2,f,c
  1538   0020DC  EF84  F010         	goto	l889
  1539   0020E0                     l3146:
  1540                           
  1541                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1542   0020E0  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1543   0020E4  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1544   0020E8  CFDE FFF6          	movff	postinc2,tblptrl
  1545   0020EC  CFDD FFF7          	movff	postdec2,tblptrh
  1546   0020F0                     	if	0	;tblptru may be non-zero
  1547   0020F0                     	endif
  1548   0020F0                     	if	0	;tblptru may be non-zero
  1549   0020F0                     	endif
  1550   0020F0  0008               	tblrd		*
  1551   0020F2  50F5               	movf	tablat,w,c
  1552   0020F4  6E01               	movwf	fputc@c^0,c
  1553   0020F6  6A02               	clrf	(fputc@c+1)^0,c
  1554   0020F8  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1555   0020FC  C08D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1556   002100  EC97  F014         	call	_fputc	;wreg free
  1557   002104  EF67  F010         	goto	l3142
  1558   002108                     l889:
  1559   002108  0012               	return		;funcret
  1560   00210A                     __end_of_vfpfcnvrt:
  1561                           	callstack 0
  1562                           
  1563 ;; *************** function _read_prec_or_width *****************
  1564 ;; Defined at:
  1565 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  fmt             2    6[COMRAM] PTR PTR const unsigned c
  1568 ;;		 -> vfprintf@cfmt(2), 
  1569 ;;  ap              2    8[COMRAM] PTR PTR void [1]
  1570 ;;		 -> sprintf@ap(2), 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  c               1   12[COMRAM] unsigned char 
  1573 ;;  n               2   13[COMRAM] int 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  2    6[COMRAM] int 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1583 ;;      Params:         4       0       0       0       0       0       0       0       0
  1584 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1585 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1586 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1587 ;;Total ram usage:        9 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; Hardware stack levels required when called: 2
  1590 ;; This function calls:
  1591 ;;		___wmul
  1592 ;; This function is called by:
  1593 ;;		_vfpfcnvrt
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text4
  1598   0029F8                     __ptext4:
  1599                           	callstack 0
  1600   0029F8                     _read_prec_or_width:
  1601                           	callstack 25
  1602   0029F8                     
  1603                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  1604   0029F8  0E00               	movlw	0
  1605   0029FA  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1606   0029FC  0E00               	movlw	0
  1607   0029FE  6E0E               	movwf	read_prec_or_width@n^0,c
  1608   002A00                     
  1609                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  1610   002A00  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1611   002A04  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1612   002A08  CFDE FFF6          	movff	postinc2,tblptrl
  1613   002A0C  CFDD FFF7          	movff	postdec2,tblptrh
  1614   002A10                     	if	0	;tblptru may be non-zero
  1615   002A10                     	endif
  1616   002A10                     	if	0	;tblptru may be non-zero
  1617   002A10                     	endif
  1618   002A10  0008               	tblrd		*
  1619   002A12  50F5               	movf	tablat,w,c
  1620   002A14  0A2A               	xorlw	42
  1621   002A16  A4D8               	btfss	status,2,c
  1622   002A18  EF10  F015         	goto	u3361
  1623   002A1C  EF12  F015         	goto	u3360
  1624   002A20                     u3361:
  1625   002A20  EF46  F015         	goto	l3074
  1626   002A24                     u3360:
  1627   002A24                     
  1628                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  1629   002A24  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1630   002A28  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1631   002A2C  2ADE               	incf	postinc2,f,c
  1632   002A2E  0E00               	movlw	0
  1633   002A30  22DD               	addwfc	postdec2,f,c
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1636   002A32  C009  FFD9         	movff	read_prec_or_width@ap,fsr2l
  1637   002A36  C00A  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  1638   002A3A  CFDF F00B          	movff	indf2,??_read_prec_or_width
  1639   002A3E  0E02               	movlw	2
  1640   002A40  26DE               	addwf	postinc2,f,c
  1641   002A42  CFDF F00C          	movff	indf2,??_read_prec_or_width+1
  1642   002A46  0E00               	movlw	0
  1643   002A48  22DD               	addwfc	postdec2,f,c
  1644   002A4A  C00B  FFD9         	movff	??_read_prec_or_width,fsr2l
  1645   002A4E  C00C  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  1646   002A52  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  1647   002A56  CFDD F00F          	movff	postdec2,read_prec_or_width@n+1
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  1650   002A5A  EF5A  F015         	goto	l865
  1651   002A5E                     l3070:
  1652                           
  1653                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  1654   002A5E  C00E  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  1655   002A62  C00F  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1656   002A66  0E00               	movlw	0
  1657   002A68  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1658   002A6A  0E0A               	movlw	10
  1659   002A6C  6E03               	movwf	___wmul@multiplicand^0,c
  1660   002A6E  ECF6  F017         	call	___wmul	;wreg free
  1661   002A72  500D               	movf	read_prec_or_width@c^0,w,c
  1662   002A74  2401               	addwf	?___wmul^0,w,c
  1663   002A76  6E0E               	movwf	read_prec_or_width@n^0,c
  1664   002A78  0E00               	movlw	0
  1665   002A7A  2002               	addwfc	(?___wmul+1)^0,w,c
  1666   002A7C  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1667   002A7E                     
  1668                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  1669   002A7E  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1670   002A82  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1671   002A86  2ADE               	incf	postinc2,f,c
  1672   002A88  0E00               	movlw	0
  1673   002A8A  22DD               	addwfc	postdec2,f,c
  1674   002A8C                     l3074:
  1675                           
  1676                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1677   002A8C  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1678   002A90  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1679   002A94  CFDE FFF6          	movff	postinc2,tblptrl
  1680   002A98  CFDD FFF7          	movff	postdec2,tblptrh
  1681   002A9C                     	if	0	;tblptru may be non-zero
  1682   002A9C                     	endif
  1683   002A9C                     	if	0	;tblptru may be non-zero
  1684   002A9C                     	endif
  1685   002A9C  0008               	tblrd		*
  1686   002A9E  50F5               	movf	tablat,w,c
  1687   002AA0  0FD0               	addlw	208
  1688   002AA2  6E0D               	movwf	read_prec_or_width@c^0,c
  1689   002AA4  0E09               	movlw	9
  1690   002AA6  640D               	cpfsgt	read_prec_or_width@c^0,c
  1691   002AA8  EF58  F015         	goto	u3371
  1692   002AAC  EF5A  F015         	goto	u3370
  1693   002AB0                     u3371:
  1694   002AB0  EF2F  F015         	goto	l3070
  1695   002AB4                     u3370:
  1696   002AB4                     l865:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  1699   002AB4  C00E  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  1700   002AB8  C00F  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1701   002ABC  0012               	return		;funcret
  1702   002ABE                     __end_of_read_prec_or_width:
  1703                           	callstack 0
  1704                           
  1705 ;; *************** function ___wmul *****************
  1706 ;; Defined at:
  1707 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  multiplier      2    0[COMRAM] unsigned int 
  1710 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  product         2    4[COMRAM] unsigned int 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  2    0[COMRAM] unsigned int 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0, prodl, prodh
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1722 ;;      Params:         4       0       0       0       0       0       0       0       0
  1723 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1725 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1726 ;;Total ram usage:        6 bytes
  1727 ;; Hardware stack levels used: 1
  1728 ;; Hardware stack levels required when called: 1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_read_prec_or_width
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text5
  1737   002FEC                     __ptext5:
  1738                           	callstack 0
  1739   002FEC                     ___wmul:
  1740                           	callstack 25
  1741   002FEC  5001               	movf	___wmul@multiplier^0,w,c
  1742   002FEE  0203               	mulwf	___wmul@multiplicand^0,c
  1743   002FF0  CFF3 F005          	movff	prodl,___wmul@product
  1744   002FF4  CFF4 F006          	movff	prodh,___wmul@product+1
  1745   002FF8  5001               	movf	___wmul@multiplier^0,w,c
  1746   002FFA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1747   002FFC  50F3               	movf	243,w,c
  1748   002FFE  2606               	addwf	(___wmul@product+1)^0,f,c
  1749   003000  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1750   003002  0203               	mulwf	___wmul@multiplicand^0,c
  1751   003004  50F3               	movf	243,w,c
  1752   003006  2606               	addwf	(___wmul@product+1)^0,f,c
  1753   003008  C005  F001         	movff	___wmul@product,?___wmul
  1754   00300C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1755   003010  0012               	return		;funcret
  1756   003012                     __end_of___wmul:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function _efgtoa *****************
  1760 ;; Defined at:
  1761 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  1764 ;;		 -> sprintf@f(12), 
  1765 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  1766 ;;  c               1   90[COMRAM] unsigned char 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  u               4   40[BANK0 ] struct flui
  1769 ;;  g               4   36[BANK0 ] struct flui
  1770 ;;  l               4   29[BANK0 ] struct flui
  1771 ;;  h               4   25[BANK0 ] struct flui
  1772 ;;  ou              4   19[BANK0 ] struct flui
  1773 ;;  n               2   34[BANK0 ] int 
  1774 ;;  i               2   23[BANK0 ] int 
  1775 ;;  w               2   17[BANK0 ] int 
  1776 ;;  e               2   15[BANK0 ] int 
  1777 ;;  m               2   13[BANK0 ] int 
  1778 ;;  d               2   11[BANK0 ] int 
  1779 ;;  t               2    4[BANK0 ] int 
  1780 ;;  p               2    2[BANK0 ] int 
  1781 ;;  ne              2    0[BANK0 ] int 
  1782 ;;  sign            1   33[BANK0 ] unsigned char 
  1783 ;;  nmode           1   10[BANK0 ] unsigned char 
  1784 ;;  mode            1    9[BANK0 ] unsigned char 
  1785 ;;  pp              1    8[BANK0 ] unsigned char 
  1786 ;;  esign           1    0        unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1796 ;;      Params:         7       0       0       0       0       0       0       0       0
  1797 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1798 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1799 ;;      Totals:         9      44       0       0       0       0       0       0       0
  1800 ;;Total ram usage:       53 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 5
  1803 ;; This function calls:
  1804 ;;		___fladd
  1805 ;;		___fldiv
  1806 ;;		___fleq
  1807 ;;		___flge
  1808 ;;		___flmul
  1809 ;;		___flneg
  1810 ;;		___flsub
  1811 ;;		___fltol
  1812 ;;		___fpclassifyf
  1813 ;;		_floorf
  1814 ;;		_labs
  1815 ;;		_memcpy
  1816 ;;		_pad
  1817 ;;		_strcpy
  1818 ;; This function is called by:
  1819 ;;		_vfpfcnvrt
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text6
  1824   000826                     __ptext6:
  1825                           	callstack 0
  1826   000826                     _efgtoa:
  1827                           	callstack 22
  1828   000826                     
  1829                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  1830   000826  0E00               	movlw	0
  1831   000828  0100               	movlb	0	; () banked
  1832   00082A  6F81               	movwf	efgtoa@sign& (0+255),b
  1833   00082C                     
  1834                           ; BSR set to: 0
  1835                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  1836   00082C  C057  F084         	movff	efgtoa@f,efgtoa@g
  1837   000830  C058  F085         	movff	efgtoa@f+1,efgtoa@g+1
  1838   000834  C059  F086         	movff	efgtoa@f+2,efgtoa@g+2
  1839   000838  C05A  F087         	movff	efgtoa@f+3,efgtoa@g+3
  1840   00083C                     
  1841                           ; BSR set to: 0
  1842                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  1843   00083C  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1844   00083E  EF25  F004         	goto	u3040
  1845   000842  EF23  F004         	goto	u3041
  1846   000846                     u3041:
  1847   000846  EF39  F004         	goto	l2852
  1848   00084A                     u3040:
  1849   00084A                     
  1850                           ; BSR set to: 0
  1851                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  1852   00084A  0E01               	movlw	1
  1853   00084C  6F81               	movwf	efgtoa@sign& (0+255),b
  1854   00084E                     
  1855                           ; BSR set to: 0
  1856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  1857   00084E  C084  F001         	movff	efgtoa@g,___flneg@f1
  1858   000852  C085  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1859   000856  C086  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1860   00085A  C087  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1861   00085E  EC96  F017         	call	___flneg	;wreg free
  1862   000862  C001  F084         	movff	?___flneg,efgtoa@g
  1863   000866  C002  F085         	movff	?___flneg+1,efgtoa@g+1
  1864   00086A  C003  F086         	movff	?___flneg+2,efgtoa@g+2
  1865   00086E  C004  F087         	movff	?___flneg+3,efgtoa@g+3
  1866   000872                     l2852:
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  1869   000872  0E00               	movlw	0
  1870   000874  0100               	movlb	0	; () banked
  1871   000876  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1872   000878  0E00               	movlw	0
  1873   00087A  6F82               	movwf	efgtoa@n& (0+255),b
  1874   00087C                     
  1875                           ; BSR set to: 0
  1876                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  1877   00087C  C0CF  F071         	movff	_width,efgtoa@w
  1878   000880  C0D0  F072         	movff	_width+1,efgtoa@w+1
  1879   000884                     
  1880                           ; BSR set to: 0
  1881                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  1882   000884  5181               	movf	efgtoa@sign& (0+255),w,b
  1883   000886  B4D8               	btfsc	status,2,c
  1884   000888  EF48  F004         	goto	u3051
  1885   00088C  EF4A  F004         	goto	u3050
  1886   000890                     u3051:
  1887   000890  EF5E  F004         	goto	l2866
  1888   000894                     u3050:
  1889   000894                     
  1890                           ; BSR set to: 0
  1891                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  1892   000894  5181               	movf	efgtoa@sign& (0+255),w,b
  1893   000896  A4D8               	btfss	status,2,c
  1894   000898  EF50  F004         	goto	u3061
  1895   00089C  EF52  F004         	goto	u3060
  1896   0008A0                     u3061:
  1897   0008A0  EF58  F004         	goto	l2862
  1898   0008A4                     u3060:
  1899   0008A4                     
  1900                           ; BSR set to: 0
  1901   0008A4  0E00               	movlw	0
  1902   0008A6  6F67               	movwf	(_efgtoa$893+1)& (0+255),b
  1903   0008A8  0E2B               	movlw	43
  1904   0008AA  6F66               	movwf	_efgtoa$893& (0+255),b
  1905   0008AC  EF5C  F004         	goto	l2864
  1906   0008B0                     l2862:
  1907                           
  1908                           ; BSR set to: 0
  1909   0008B0  0E00               	movlw	0
  1910   0008B2  6F67               	movwf	(_efgtoa$893+1)& (0+255),b
  1911   0008B4  0E2D               	movlw	45
  1912   0008B6  6F66               	movwf	_efgtoa$893& (0+255),b
  1913   0008B8                     l2864:
  1914                           
  1915                           ; BSR set to: 0
  1916   0008B8  C066  F081         	movff	_efgtoa$893,efgtoa@sign
  1917   0008BC                     l2866:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1921   0008BC  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  1922   0008C0  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1923   0008C4  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1924   0008C8  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1925   0008CC  EC18  F014         	call	___fpclassifyf	;wreg free
  1926   0008D0  0401               	decf	?___fpclassifyf^0,w,c
  1927   0008D2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1928   0008D4  A4D8               	btfss	status,2,c
  1929   0008D6  EF6F  F004         	goto	u3071
  1930   0008DA  EF71  F004         	goto	u3070
  1931   0008DE                     u3071:
  1932   0008DE  EFA4  F004         	goto	l2884
  1933   0008E2                     u3070:
  1934   0008E2                     
  1935                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  1936   0008E2  0100               	movlb	0	; () banked
  1937   0008E4  5181               	movf	efgtoa@sign& (0+255),w,b
  1938   0008E6  B4D8               	btfsc	status,2,c
  1939   0008E8  EF78  F004         	goto	u3081
  1940   0008EC  EF7A  F004         	goto	u3080
  1941   0008F0                     u3081:
  1942   0008F0  EF83  F004         	goto	l2876
  1943   0008F4                     u3080:
  1944   0008F4                     
  1945                           ; BSR set to: 0
  1946                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  1947   0008F4  C081  F100         	movff	efgtoa@sign,_dbuf
  1948   0008F8                     
  1949                           ; BSR set to: 0
  1950                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  1951   0008F8  0771               	decf	efgtoa@w& (0+255),f,b
  1952   0008FA  A0D8               	btfss	status,0,c
  1953   0008FC  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1954   0008FE                     
  1955                           ; BSR set to: 0
  1956                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  1957   0008FE  0E00               	movlw	0
  1958   000900  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1959   000902  0E01               	movlw	1
  1960   000904  6F82               	movwf	efgtoa@n& (0+255),b
  1961   000906                     l2876:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  1965   000906  0E00               	movlw	low _dbuf
  1966   000908  2582               	addwf	efgtoa@n& (0+255),w,b
  1967   00090A  6E01               	movwf	strcpy@dest^0,c
  1968   00090C  0E01               	movlw	high _dbuf
  1969   00090E  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1970   000910  6E02               	movwf	(strcpy@dest+1)^0,c
  1971   000912  0E1D               	movlw	low STR_3
  1972   000914  6E03               	movwf	strcpy@src^0,c
  1973   000916  0E08               	movlw	high STR_3
  1974   000918  6E04               	movwf	(strcpy@src+1)^0,c
  1975   00091A  EC76  F017         	call	_strcpy	;wreg free
  1976   00091E                     l2878:
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1979   00091E  0100               	movlb	0	; () banked
  1980   000920  0EFD               	movlw	253
  1981   000922  2771               	addwf	efgtoa@w& (0+255),f,b
  1982   000924  0EFF               	movlw	255
  1983   000926  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1984   000928                     
  1985                           ; BSR set to: 0
  1986                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1987   000928  C055  F011         	movff	efgtoa@fp,pad@fp
  1988   00092C  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  1989   000930  0E00               	movlw	low _dbuf
  1990   000932  6E13               	movwf	pad@buf^0,c
  1991   000934  0E01               	movlw	high _dbuf
  1992   000936  6E14               	movwf	(pad@buf+1)^0,c
  1993   000938  C071  F015         	movff	efgtoa@w,pad@p
  1994   00093C  C072  F016         	movff	efgtoa@w+1,pad@p+1
  1995   000940  ECB4  F015         	call	_pad	;wreg free
  1996   000944  EF0E  F009         	goto	l820
  1997   000948                     l2884:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2000   000948  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  2001   00094C  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2002   000950  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2003   000954  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2004   000958  EC18  F014         	call	___fpclassifyf	;wreg free
  2005   00095C  5001               	movf	?___fpclassifyf^0,w,c
  2006   00095E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2007   000960  A4D8               	btfss	status,2,c
  2008   000962  EFB5  F004         	goto	u3091
  2009   000966  EFB7  F004         	goto	u3090
  2010   00096A                     u3091:
  2011   00096A  EFD7  F004         	goto	l2902
  2012   00096E                     u3090:
  2013   00096E                     
  2014                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  2015   00096E  0100               	movlb	0	; () banked
  2016   000970  5181               	movf	efgtoa@sign& (0+255),w,b
  2017   000972  B4D8               	btfsc	status,2,c
  2018   000974  EFBE  F004         	goto	u3101
  2019   000978  EFC0  F004         	goto	u3100
  2020   00097C                     u3101:
  2021   00097C  EFC9  F004         	goto	l2894
  2022   000980                     u3100:
  2023   000980                     
  2024                           ; BSR set to: 0
  2025                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  2026   000980  C081  F100         	movff	efgtoa@sign,_dbuf
  2027   000984                     
  2028                           ; BSR set to: 0
  2029                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  2030   000984  0771               	decf	efgtoa@w& (0+255),f,b
  2031   000986  A0D8               	btfss	status,0,c
  2032   000988  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2033   00098A                     
  2034                           ; BSR set to: 0
  2035                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  2036   00098A  0E00               	movlw	0
  2037   00098C  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2038   00098E  0E01               	movlw	1
  2039   000990  6F82               	movwf	efgtoa@n& (0+255),b
  2040   000992                     l2894:
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  2044   000992  0E00               	movlw	low _dbuf
  2045   000994  2582               	addwf	efgtoa@n& (0+255),w,b
  2046   000996  6E01               	movwf	strcpy@dest^0,c
  2047   000998  0E01               	movlw	high _dbuf
  2048   00099A  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2049   00099C  6E02               	movwf	(strcpy@dest+1)^0,c
  2050   00099E  0E21               	movlw	low STR_6
  2051   0009A0  6E03               	movwf	strcpy@src^0,c
  2052   0009A2  0E08               	movlw	high STR_6
  2053   0009A4  6E04               	movwf	(strcpy@src+1)^0,c
  2054   0009A6  EC76  F017         	call	_strcpy	;wreg free
  2055   0009AA  EF8F  F004         	goto	l2878
  2056   0009AE                     l2902:
  2057                           
  2058                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  2059   0009AE  0E00               	movlw	0
  2060   0009B0  0100               	movlb	0	; () banked
  2061   0009B2  6F88               	movwf	efgtoa@u& (0+255),b
  2062   0009B4  0E00               	movlw	0
  2063   0009B6  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2064   0009B8  0E80               	movlw	128
  2065   0009BA  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2066   0009BC  0E3F               	movlw	63
  2067   0009BE  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2068                           
  2069                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  2070   0009C0  0E00               	movlw	0
  2071   0009C2  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2072   0009C4  0E00               	movlw	0
  2073   0009C6  6F6F               	movwf	efgtoa@e& (0+255),b
  2074   0009C8                     
  2075                           ; BSR set to: 0
  2076                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  2077   0009C8  C084  F001         	movff	efgtoa@g,___fleq@ff1
  2078   0009CC  C085  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2079   0009D0  C086  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2080   0009D4  C087  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2081   0009D8  0E00               	movlw	0
  2082   0009DA  6E05               	movwf	___fleq@ff2^0,c
  2083   0009DC  0E00               	movlw	0
  2084   0009DE  6E06               	movwf	(___fleq@ff2+1)^0,c
  2085   0009E0  0E00               	movlw	0
  2086   0009E2  6E07               	movwf	(___fleq@ff2+2)^0,c
  2087   0009E4  0E00               	movlw	0
  2088   0009E6  6E08               	movwf	(___fleq@ff2+3)^0,c
  2089   0009E8  EC5F  F015         	call	___fleq	;wreg free
  2090   0009EC  B0D8               	btfsc	status,0,c
  2091   0009EE  EFFB  F004         	goto	u3111
  2092   0009F2  EFFD  F004         	goto	u3110
  2093   0009F6                     u3111:
  2094   0009F6  EFDC  F005         	goto	l823
  2095   0009FA                     u3110:
  2096   0009FA  EF0A  F005         	goto	l2910
  2097   0009FE                     l825:
  2098                           
  2099                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  2100   0009FE  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2101   000A02  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2102   000A06  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2103   000A0A  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2104   000A0E                     
  2105                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  2106   000A0E  0100               	movlb	0	; () banked
  2107   000A10  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2108   000A12  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2109   000A14                     l2910:
  2110                           
  2111                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2112   000A14  C088  F00F         	movff	efgtoa@u,___flmul@b
  2113   000A18  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2114   000A1C  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2115   000A20  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2116   000A24  0E00               	movlw	0
  2117   000A26  6E13               	movwf	___flmul@a^0,c
  2118   000A28  0E00               	movlw	0
  2119   000A2A  6E14               	movwf	(___flmul@a+1)^0,c
  2120   000A2C  0E20               	movlw	32
  2121   000A2E  6E15               	movwf	(___flmul@a+2)^0,c
  2122   000A30  0E41               	movlw	65
  2123   000A32  6E16               	movwf	(___flmul@a+3)^0,c
  2124   000A34  EC6F  F00B         	call	___flmul	;wreg free
  2125   000A38  C00F  F073         	movff	?___flmul,efgtoa@ou
  2126   000A3C  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2127   000A40  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2128   000A44  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2129   000A48  0100               	movlb	0	; () banked
  2130   000A4A  5173               	movf	efgtoa@ou& (0+255),w,b
  2131   000A4C  5D84               	subwf	efgtoa@g& (0+255),w,b
  2132   000A4E  6E01               	movwf	labs@a^0,c
  2133   000A50  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2134   000A52  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2135   000A54  6E02               	movwf	(labs@a+1)^0,c
  2136   000A56  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2137   000A58  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2138   000A5A  6E03               	movwf	(labs@a+2)^0,c
  2139   000A5C  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2140   000A5E  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2141   000A60  6E04               	movwf	(labs@a+3)^0,c
  2142   000A62  EC63  F016         	call	_labs	;wreg free
  2143   000A66  BE04               	btfsc	(?_labs+3)^0,7,c
  2144   000A68  EF41  F005         	goto	u3121
  2145   000A6C  5004               	movf	(?_labs+3)^0,w,c
  2146   000A6E  1003               	iorwf	(?_labs+2)^0,w,c
  2147   000A70  1002               	iorwf	(?_labs+1)^0,w,c
  2148   000A72  E109               	bnz	u3120
  2149   000A74  0E02               	movlw	2
  2150   000A76  5C01               	subwf	?_labs^0,w,c
  2151   000A78  A0D8               	btfss	status,0,c
  2152   000A7A  EF41  F005         	goto	u3121
  2153   000A7E  EF43  F005         	goto	u3120
  2154   000A82                     u3121:
  2155   000A82  EFFF  F004         	goto	l825
  2156   000A86                     u3120:
  2157   000A86  C073  F028         	movff	efgtoa@ou,___flge@ff1
  2158   000A8A  C074  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2159   000A8E  C075  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2160   000A92  C076  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2161   000A96  C084  F02C         	movff	efgtoa@g,___flge@ff2
  2162   000A9A  C085  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2163   000A9E  C086  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2164   000AA2  C087  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2165   000AA6  EC96  F013         	call	___flge	;wreg free
  2166   000AAA  A0D8               	btfss	status,0,c
  2167   000AAC  EF5A  F005         	goto	u3131
  2168   000AB0  EF5C  F005         	goto	u3130
  2169   000AB4                     u3131:
  2170   000AB4  EFFF  F004         	goto	l825
  2171   000AB8                     u3130:
  2172   000AB8                     
  2173                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2174   000AB8  0100               	movlb	0	; () banked
  2175   000ABA  5188               	movf	efgtoa@u& (0+255),w,b
  2176   000ABC  5D84               	subwf	efgtoa@g& (0+255),w,b
  2177   000ABE  6E01               	movwf	labs@a^0,c
  2178   000AC0  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2179   000AC2  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2180   000AC4  6E02               	movwf	(labs@a+1)^0,c
  2181   000AC6  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2182   000AC8  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2183   000ACA  6E03               	movwf	(labs@a+2)^0,c
  2184   000ACC  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2185   000ACE  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2186   000AD0  6E04               	movwf	(labs@a+3)^0,c
  2187   000AD2  EC63  F016         	call	_labs	;wreg free
  2188   000AD6  BE04               	btfsc	(?_labs+3)^0,7,c
  2189   000AD8  EF7B  F005         	goto	u3140
  2190   000ADC  5004               	movf	(?_labs+3)^0,w,c
  2191   000ADE  1003               	iorwf	(?_labs+2)^0,w,c
  2192   000AE0  1002               	iorwf	(?_labs+1)^0,w,c
  2193   000AE2  E107               	bnz	u3141
  2194   000AE4  0E02               	movlw	2
  2195   000AE6  5C01               	subwf	?_labs^0,w,c
  2196   000AE8  B0D8               	btfsc	status,0,c
  2197   000AEA  EF79  F005         	goto	u3141
  2198   000AEE  EF7B  F005         	goto	u3140
  2199   000AF2                     u3141:
  2200   000AF2  EFC3  F005         	goto	l2928
  2201   000AF6                     u3140:
  2202   000AF6                     l2918:
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  2205   000AF6  C088  F084         	movff	efgtoa@u,efgtoa@g
  2206   000AFA  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  2207   000AFE  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  2208   000B02  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  2211   000B06  EFDC  F005         	goto	l823
  2212   000B0A                     l2920:
  2213                           
  2214                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  2215   000B0A  C088  F028         	movff	efgtoa@u,___fldiv@b
  2216   000B0E  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2217   000B12  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2218   000B16  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2219   000B1A  0E00               	movlw	0
  2220   000B1C  6E2C               	movwf	___fldiv@a^0,c
  2221   000B1E  0E00               	movlw	0
  2222   000B20  6E2D               	movwf	(___fldiv@a+1)^0,c
  2223   000B22  0E20               	movlw	32
  2224   000B24  6E2E               	movwf	(___fldiv@a+2)^0,c
  2225   000B26  0E41               	movlw	65
  2226   000B28  6E2F               	movwf	(___fldiv@a+3)^0,c
  2227   000B2A  EC84  F00D         	call	___fldiv	;wreg free
  2228   000B2E  C028  F088         	movff	?___fldiv,efgtoa@u
  2229   000B32  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2230   000B36  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2231   000B3A  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2232   000B3E                     
  2233                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  2234   000B3E  0100               	movlb	0	; () banked
  2235   000B40  076F               	decf	efgtoa@e& (0+255),f,b
  2236   000B42  A0D8               	btfss	status,0,c
  2237   000B44  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2238   000B46                     
  2239                           ; BSR set to: 0
  2240                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2241   000B46  5188               	movf	efgtoa@u& (0+255),w,b
  2242   000B48  5D84               	subwf	efgtoa@g& (0+255),w,b
  2243   000B4A  6E01               	movwf	labs@a^0,c
  2244   000B4C  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2245   000B4E  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2246   000B50  6E02               	movwf	(labs@a+1)^0,c
  2247   000B52  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2248   000B54  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2249   000B56  6E03               	movwf	(labs@a+2)^0,c
  2250   000B58  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2251   000B5A  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2252   000B5C  6E04               	movwf	(labs@a+3)^0,c
  2253   000B5E  EC63  F016         	call	_labs	;wreg free
  2254   000B62  BE04               	btfsc	(?_labs+3)^0,7,c
  2255   000B64  EFC1  F005         	goto	u3150
  2256   000B68  5004               	movf	(?_labs+3)^0,w,c
  2257   000B6A  1003               	iorwf	(?_labs+2)^0,w,c
  2258   000B6C  1002               	iorwf	(?_labs+1)^0,w,c
  2259   000B6E  E107               	bnz	u3151
  2260   000B70  0E02               	movlw	2
  2261   000B72  5C01               	subwf	?_labs^0,w,c
  2262   000B74  B0D8               	btfsc	status,0,c
  2263   000B76  EFBF  F005         	goto	u3151
  2264   000B7A  EFC1  F005         	goto	u3150
  2265   000B7E                     u3151:
  2266   000B7E  EFC3  F005         	goto	l2928
  2267   000B82                     u3150:
  2268   000B82  EF7B  F005         	goto	l2918
  2269   000B86                     l2928:
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  2272   000B86  C084  F028         	movff	efgtoa@g,___flge@ff1
  2273   000B8A  C085  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2274   000B8E  C086  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2275   000B92  C087  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2276   000B96  C088  F02C         	movff	efgtoa@u,___flge@ff2
  2277   000B9A  C089  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2278   000B9E  C08A  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2279   000BA2  C08B  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2280   000BA6  EC96  F013         	call	___flge	;wreg free
  2281   000BAA  A0D8               	btfss	status,0,c
  2282   000BAC  EFDA  F005         	goto	u3161
  2283   000BB0  EFDC  F005         	goto	u3160
  2284   000BB4                     u3161:
  2285   000BB4  EF85  F005         	goto	l2920
  2286   000BB8                     u3160:
  2287   000BB8                     l823:
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  2290   000BB8  C05B  F069         	movff	efgtoa@c,efgtoa@mode
  2291                           
  2292                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  2293   000BBC  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2294   000BC0                     
  2295                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  2296   000BC0  0100               	movlb	0	; () banked
  2297   000BC2  BFD2               	btfsc	(_prec+1)& (0+255),7,b
  2298   000BC4  EFE6  F005         	goto	u3171
  2299   000BC8  EFE8  F005         	goto	u3170
  2300   000BCC                     u3171:
  2301   000BCC  EFEE  F005         	goto	l2934
  2302   000BD0                     u3170:
  2303   000BD0                     
  2304                           ; BSR set to: 0
  2305   000BD0  C0D1  F062         	movff	_prec,efgtoa@p
  2306   000BD4  C0D2  F063         	movff	_prec+1,efgtoa@p+1
  2307   000BD8  EFF2  F005         	goto	l2936
  2308   000BDC                     l2934:
  2309                           
  2310                           ; BSR set to: 0
  2311   000BDC  0E00               	movlw	0
  2312   000BDE  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2313   000BE0  0E06               	movlw	6
  2314   000BE2  6F62               	movwf	efgtoa@p& (0+255),b
  2315   000BE4                     l2936:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  2319   000BE4  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2320   000BE8  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2321   000BEC                     
  2322                           ; BSR set to: 0
  2323                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  2324   000BEC  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2325   000BEE  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2326   000BF0                     
  2327                           ; BSR set to: 0
  2328                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  2329   000BF0  0E66               	movlw	102
  2330   000BF2  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2331   000BF4  A4D8               	btfss	status,2,c
  2332   000BF6  EFFF  F005         	goto	u3181
  2333   000BFA  EF01  F006         	goto	u3180
  2334   000BFE                     u3181:
  2335   000BFE  EF21  F006         	goto	l2950
  2336   000C02                     u3180:
  2337   000C02                     
  2338                           ; BSR set to: 0
  2339                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  2340   000C02  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2341   000C04  EF08  F006         	goto	u3190
  2342   000C08  EF06  F006         	goto	u3191
  2343   000C0C                     u3191:
  2344   000C0C  EF14  F006         	goto	l2946
  2345   000C10                     u3190:
  2346   000C10                     
  2347                           ; BSR set to: 0
  2348                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  2349   000C10  0E00               	movlw	0
  2350   000C12  6F88               	movwf	efgtoa@u& (0+255),b
  2351   000C14  0E00               	movlw	0
  2352   000C16  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2353   000C18  0E80               	movlw	128
  2354   000C1A  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2355   000C1C  0E3F               	movlw	63
  2356   000C1E  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  2359   000C20  0E00               	movlw	0
  2360   000C22  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2361   000C24  0E00               	movlw	0
  2362   000C26  6F6F               	movwf	efgtoa@e& (0+255),b
  2363   000C28                     l2946:
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  2367   000C28  0E67               	movlw	103
  2368   000C2A  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2369   000C2C  B4D8               	btfsc	status,2,c
  2370   000C2E  EF1B  F006         	goto	u3201
  2371   000C32  EF1D  F006         	goto	u3200
  2372   000C36                     u3201:
  2373   000C36  EF21  F006         	goto	l2950
  2374   000C3A                     u3200:
  2375   000C3A                     
  2376                           ; BSR set to: 0
  2377                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  2378   000C3A  516F               	movf	efgtoa@e& (0+255),w,b
  2379   000C3C  276D               	addwf	efgtoa@m& (0+255),f,b
  2380   000C3E  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2381   000C40  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2382   000C42                     l2950:
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  2386   000C42  0E00               	movlw	0
  2387   000C44  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2388   000C46  0E00               	movlw	0
  2389   000C48  6F77               	movwf	efgtoa@i& (0+255),b
  2390   000C4A                     
  2391                           ; BSR set to: 0
  2392                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  2393   000C4A  C084  F079         	movff	efgtoa@g,efgtoa@h
  2394   000C4E  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2395   000C52  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2396   000C56  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2397   000C5A                     
  2398                           ; BSR set to: 0
  2399                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  2400   000C5A  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2401   000C5E  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2402   000C62  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2403   000C66  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2406   000C6A  EFB2  F006         	goto	l2964
  2407   000C6E                     l2956:
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  2411   000C6E  C079  F028         	movff	efgtoa@h,___fldiv@b
  2412   000C72  C07A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2413   000C76  C07B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2414   000C7A  C07C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2415   000C7E  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2416   000C82  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2417   000C86  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2418   000C8A  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2419   000C8E  EC84  F00D         	call	___fldiv	;wreg free
  2420   000C92  C028  F041         	movff	?___fldiv,floorf@x
  2421   000C96  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2422   000C9A  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2423   000C9E  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2424   000CA2  EC85  F010         	call	_floorf	;wreg free
  2425   000CA6  C041  F07D         	movff	?_floorf,efgtoa@l
  2426   000CAA  C042  F07E         	movff	?_floorf+1,efgtoa@l+1
  2427   000CAE  C043  F07F         	movff	?_floorf+2,efgtoa@l+2
  2428   000CB2  C044  F080         	movff	?_floorf+3,efgtoa@l+3
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  2431   000CB6  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2432   000CBA  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2433   000CBE  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2434   000CC2  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2435   000CC6  EC13  F013         	call	___fltol	;wreg free
  2436   000CCA  C001  F06B         	movff	?___fltol,efgtoa@d
  2437   000CCE  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2438   000CD2                     
  2439                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  2440   000CD2  C079  F028         	movff	efgtoa@h,___flsub@b
  2441   000CD6  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  2442   000CDA  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2443   000CDE  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2444   000CE2  C07D  F013         	movff	efgtoa@l,___flmul@a
  2445   000CE6  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  2446   000CEA  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  2447   000CEE  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  2448   000CF2  C088  F00F         	movff	efgtoa@u,___flmul@b
  2449   000CF6  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2450   000CFA  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2451   000CFE  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2452   000D02  EC6F  F00B         	call	___flmul	;wreg free
  2453   000D06  C00F  F02C         	movff	?___flmul,___flsub@a
  2454   000D0A  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2455   000D0E  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2456   000D12  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2457   000D16  EC0F  F017         	call	___flsub	;wreg free
  2458   000D1A  C028  F079         	movff	?___flsub,efgtoa@h
  2459   000D1E  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  2460   000D22  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  2461   000D26  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  2462   000D2A                     
  2463                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  2464   000D2A  C088  F028         	movff	efgtoa@u,___fldiv@b
  2465   000D2E  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2466   000D32  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2467   000D36  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2468   000D3A  0E00               	movlw	0
  2469   000D3C  6E2C               	movwf	___fldiv@a^0,c
  2470   000D3E  0E00               	movlw	0
  2471   000D40  6E2D               	movwf	(___fldiv@a+1)^0,c
  2472   000D42  0E20               	movlw	32
  2473   000D44  6E2E               	movwf	(___fldiv@a+2)^0,c
  2474   000D46  0E41               	movlw	65
  2475   000D48  6E2F               	movwf	(___fldiv@a+3)^0,c
  2476   000D4A  EC84  F00D         	call	___fldiv	;wreg free
  2477   000D4E  C028  F088         	movff	?___fldiv,efgtoa@u
  2478   000D52  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2479   000D56  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2480   000D5A  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2481   000D5E                     
  2482                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  2483   000D5E  0100               	movlb	0	; () banked
  2484   000D60  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2485   000D62  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2486   000D64                     l2964:
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2490   000D64  516D               	movf	efgtoa@m& (0+255),w,b
  2491   000D66  5D77               	subwf	efgtoa@i& (0+255),w,b
  2492   000D68  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2493   000D6A  0A80               	xorlw	128
  2494   000D6C  6E5C               	movwf	??_efgtoa^0,c
  2495   000D6E  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2496   000D70  0A80               	xorlw	128
  2497   000D72  585C               	subwfb	??_efgtoa^0,w,c
  2498   000D74  A0D8               	btfss	status,0,c
  2499   000D76  EFBF  F006         	goto	u3211
  2500   000D7A  EFC1  F006         	goto	u3210
  2501   000D7E                     u3211:
  2502   000D7E  EF37  F006         	goto	l2956
  2503   000D82                     u3210:
  2504   000D82                     
  2505                           ; BSR set to: 0
  2506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  2507   000D82  C088  F00F         	movff	efgtoa@u,___flmul@b
  2508   000D86  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2509   000D8A  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2510   000D8E  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2511   000D92  0E00               	movlw	0
  2512   000D94  6E13               	movwf	___flmul@a^0,c
  2513   000D96  0E00               	movlw	0
  2514   000D98  6E14               	movwf	(___flmul@a+1)^0,c
  2515   000D9A  0EA0               	movlw	160
  2516   000D9C  6E15               	movwf	(___flmul@a+2)^0,c
  2517   000D9E  0E40               	movlw	64
  2518   000DA0  6E16               	movwf	(___flmul@a+3)^0,c
  2519   000DA2  EC6F  F00B         	call	___flmul	;wreg free
  2520   000DA6  C00F  F07D         	movff	?___flmul,efgtoa@l
  2521   000DAA  C010  F07E         	movff	?___flmul+1,efgtoa@l+1
  2522   000DAE  C011  F07F         	movff	?___flmul+2,efgtoa@l+2
  2523   000DB2  C012  F080         	movff	?___flmul+3,efgtoa@l+3
  2524   000DB6                     
  2525                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  2526   000DB6  C079  F028         	movff	efgtoa@h,___flge@ff1
  2527   000DBA  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2528   000DBE  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2529   000DC2  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2530   000DC6  C07D  F02C         	movff	efgtoa@l,___flge@ff2
  2531   000DCA  C07E  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2532   000DCE  C07F  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2533   000DD2  C080  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2534   000DD6  EC96  F013         	call	___flge	;wreg free
  2535   000DDA  B0D8               	btfsc	status,0,c
  2536   000DDC  EFF2  F006         	goto	u3221
  2537   000DE0  EFF4  F006         	goto	u3220
  2538   000DE4                     u3221:
  2539   000DE4  EFFF  F006         	goto	l2972
  2540   000DE8                     u3220:
  2541   000DE8                     
  2542                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  2543   000DE8  0E00               	movlw	0
  2544   000DEA  0100               	movlb	0	; () banked
  2545   000DEC  6F7D               	movwf	efgtoa@l& (0+255),b
  2546   000DEE  0E00               	movlw	0
  2547   000DF0  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2548   000DF2  0E00               	movlw	0
  2549   000DF4  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2550   000DF6  0E00               	movlw	0
  2551   000DF8  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2552                           
  2553                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  2554   000DFA  EF28  F007         	goto	l2978
  2555   000DFE                     l2972:
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  2558   000DFE  C079  F001         	movff	efgtoa@h,___fleq@ff1
  2559   000E02  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2560   000E06  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2561   000E0A  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2562   000E0E  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  2563   000E12  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2564   000E16  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2565   000E1A  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2566   000E1E  EC5F  F015         	call	___fleq	;wreg free
  2567   000E22  A0D8               	btfss	status,0,c
  2568   000E24  EF16  F007         	goto	u3231
  2569   000E28  EF18  F007         	goto	u3230
  2570   000E2C                     u3231:
  2571   000E2C  EF28  F007         	goto	l2978
  2572   000E30                     u3230:
  2573   000E30  0100               	movlb	0	; () banked
  2574   000E32  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2575   000E34  EF1E  F007         	goto	u3241
  2576   000E38  EF20  F007         	goto	u3240
  2577   000E3C                     u3241:
  2578   000E3C  EF28  F007         	goto	l2978
  2579   000E40                     u3240:
  2580   000E40                     
  2581                           ; BSR set to: 0
  2582                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  2583   000E40  0E00               	movlw	0
  2584   000E42  6F7D               	movwf	efgtoa@l& (0+255),b
  2585   000E44  0E00               	movlw	0
  2586   000E46  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2587   000E48  0E00               	movlw	0
  2588   000E4A  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2589   000E4C  0E00               	movlw	0
  2590   000E4E  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2591   000E50                     l2978:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  2594   000E50  C084  F001         	movff	efgtoa@g,___fladd@b
  2595   000E54  C085  F002         	movff	efgtoa@g+1,___fladd@b+1
  2596   000E58  C086  F003         	movff	efgtoa@g+2,___fladd@b+2
  2597   000E5C  C087  F004         	movff	efgtoa@g+3,___fladd@b+3
  2598   000E60  C07D  F005         	movff	efgtoa@l,___fladd@a
  2599   000E64  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  2600   000E68  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  2601   000E6C  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  2602   000E70  EC0F  F009         	call	___fladd	;wreg free
  2603   000E74  C001  F079         	movff	?___fladd,efgtoa@h
  2604   000E78  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  2605   000E7C  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  2606   000E80  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  2607   000E84                     
  2608                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  2609   000E84  C079  F028         	movff	efgtoa@h,___flge@ff1
  2610   000E88  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2611   000E8C  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2612   000E90  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2613   000E94  0E00               	movlw	0
  2614   000E96  6E13               	movwf	___flmul@a^0,c
  2615   000E98  0E00               	movlw	0
  2616   000E9A  6E14               	movwf	(___flmul@a+1)^0,c
  2617   000E9C  0E20               	movlw	32
  2618   000E9E  6E15               	movwf	(___flmul@a+2)^0,c
  2619   000EA0  0E41               	movlw	65
  2620   000EA2  6E16               	movwf	(___flmul@a+3)^0,c
  2621   000EA4  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2622   000EA8  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2623   000EAC  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2624   000EB0  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2625   000EB4  EC6F  F00B         	call	___flmul	;wreg free
  2626   000EB8  C00F  F02C         	movff	?___flmul,___flge@ff2
  2627   000EBC  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2628   000EC0  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2629   000EC4  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2630   000EC8  EC96  F013         	call	___flge	;wreg free
  2631   000ECC  A0D8               	btfss	status,0,c
  2632   000ECE  EF6B  F007         	goto	u3251
  2633   000ED2  EF6D  F007         	goto	u3250
  2634   000ED6                     u3251:
  2635   000ED6  EF96  F007         	goto	l2990
  2636   000EDA                     u3250:
  2637   000EDA                     
  2638                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  2639   000EDA  0100               	movlb	0	; () banked
  2640   000EDC  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2641   000EDE  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2642   000EE0                     
  2643                           ; BSR set to: 0
  2644                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  2645   000EE0  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2646   000EE4  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2647   000EE8  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2648   000EEC  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2649   000EF0  0E00               	movlw	0
  2650   000EF2  6E13               	movwf	___flmul@a^0,c
  2651   000EF4  0E00               	movlw	0
  2652   000EF6  6E14               	movwf	(___flmul@a+1)^0,c
  2653   000EF8  0E20               	movlw	32
  2654   000EFA  6E15               	movwf	(___flmul@a+2)^0,c
  2655   000EFC  0E41               	movlw	65
  2656   000EFE  6E16               	movwf	(___flmul@a+3)^0,c
  2657   000F00  EC6F  F00B         	call	___flmul	;wreg free
  2658   000F04  C00F  F073         	movff	?___flmul,efgtoa@ou
  2659   000F08  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2660   000F0C  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2661   000F10  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2662   000F14                     
  2663                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  2664   000F14  0E66               	movlw	102
  2665   000F16  0100               	movlb	0	; () banked
  2666   000F18  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2667   000F1A  A4D8               	btfss	status,2,c
  2668   000F1C  EF92  F007         	goto	u3261
  2669   000F20  EF94  F007         	goto	u3260
  2670   000F24                     u3261:
  2671   000F24  EF96  F007         	goto	l2990
  2672   000F28                     u3260:
  2673   000F28                     
  2674                           ; BSR set to: 0
  2675                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  2676   000F28  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2677   000F2A  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2678   000F2C                     l2990:
  2679                           
  2680                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  2681   000F2C  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2682   000F30  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2683   000F34  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2684   000F38  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2685   000F3C                     
  2686                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  2687   000F3C  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2688   000F40  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2689   000F44                     
  2690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  2691   000F44  0E00               	movlw	0
  2692   000F46  0100               	movlb	0	; () banked
  2693   000F48  6F68               	movwf	efgtoa@pp& (0+255),b
  2694   000F4A                     
  2695                           ; BSR set to: 0
  2696                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  2697   000F4A  0E00               	movlw	0
  2698   000F4C  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2699   000F4E  0E00               	movlw	0
  2700   000F50  6F64               	movwf	efgtoa@t& (0+255),b
  2701   000F52                     
  2702                           ; BSR set to: 0
  2703                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  2704   000F52  0E00               	movlw	0
  2705   000F54  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2706   000F56  0E00               	movlw	0
  2707   000F58  6F77               	movwf	efgtoa@i& (0+255),b
  2708                           
  2709                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2710   000F5A  EF94  F008         	goto	l3040
  2711   000F5E                     l3000:
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  2715   000F5E  C079  F028         	movff	efgtoa@h,___fldiv@b
  2716   000F62  C07A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2717   000F66  C07B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2718   000F6A  C07C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2719   000F6E  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2720   000F72  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2721   000F76  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2722   000F7A  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2723   000F7E  EC84  F00D         	call	___fldiv	;wreg free
  2724   000F82  C028  F041         	movff	?___fldiv,floorf@x
  2725   000F86  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2726   000F8A  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2727   000F8E  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2728   000F92  EC85  F010         	call	_floorf	;wreg free
  2729   000F96  C041  F07D         	movff	?_floorf,efgtoa@l
  2730   000F9A  C042  F07E         	movff	?_floorf+1,efgtoa@l+1
  2731   000F9E  C043  F07F         	movff	?_floorf+2,efgtoa@l+2
  2732   000FA2  C044  F080         	movff	?_floorf+3,efgtoa@l+3
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2735   000FA6  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2736   000FAA  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2737   000FAE  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2738   000FB2  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2739   000FB6  EC13  F013         	call	___fltol	;wreg free
  2740   000FBA  BE02               	btfsc	(?___fltol+1)^0,7,c
  2741   000FBC  EFEB  F007         	goto	u3270
  2742   000FC0  5002               	movf	(?___fltol+1)^0,w,c
  2743   000FC2  E107               	bnz	u3271
  2744   000FC4  0E0A               	movlw	10
  2745   000FC6  5C01               	subwf	?___fltol^0,w,c
  2746   000FC8  B0D8               	btfsc	status,0,c
  2747   000FCA  EFE9  F007         	goto	u3271
  2748   000FCE  EFEB  F007         	goto	u3270
  2749   000FD2                     u3271:
  2750   000FD2  EFFB  F007         	goto	l3004
  2751   000FD6                     u3270:
  2752   000FD6  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2753   000FDA  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2754   000FDE  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2755   000FE2  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2756   000FE6  EC13  F013         	call	___fltol	;wreg free
  2757   000FEA  C001  F06B         	movff	?___fltol,efgtoa@d
  2758   000FEE  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2759   000FF2  EF00  F008         	goto	l853
  2760   000FF6                     l3004:
  2761   000FF6  0E00               	movlw	0
  2762   000FF8  0100               	movlb	0	; () banked
  2763   000FFA  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2764   000FFC  0E09               	movlw	9
  2765   000FFE  6F6B               	movwf	efgtoa@d& (0+255),b
  2766   001000                     l853:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  2769   001000  0100               	movlb	0	; () banked
  2770   001002  5168               	movf	efgtoa@pp& (0+255),w,b
  2771   001004  A4D8               	btfss	status,2,c
  2772   001006  EF07  F008         	goto	u3281
  2773   00100A  EF09  F008         	goto	u3280
  2774   00100E                     u3281:
  2775   00100E  EF31  F008         	goto	l3024
  2776   001012                     u3280:
  2777   001012                     
  2778                           ; BSR set to: 0
  2779   001012  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2780   001014  EF10  F008         	goto	u3290
  2781   001018  EF0E  F008         	goto	u3291
  2782   00101C                     u3291:
  2783   00101C  EF31  F008         	goto	l3024
  2784   001020                     u3290:
  2785   001020                     
  2786                           ; BSR set to: 0
  2787                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  2788   001020  0E00               	movlw	low _dbuf
  2789   001022  2582               	addwf	efgtoa@n& (0+255),w,b
  2790   001024  6ED9               	movwf	fsr2l,c
  2791   001026  0E01               	movlw	high _dbuf
  2792   001028  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2793   00102A  6EDA               	movwf	fsr2h,c
  2794   00102C  0E2E               	movlw	46
  2795   00102E  6EDF               	movwf	indf2,c
  2796   001030                     
  2797                           ; BSR set to: 0
  2798   001030  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2799   001032  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2800   001034                     
  2801                           ; BSR set to: 0
  2802                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  2803   001034  0771               	decf	efgtoa@w& (0+255),f,b
  2804   001036  A0D8               	btfss	status,0,c
  2805   001038  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2806   00103A                     
  2807                           ; BSR set to: 0
  2808                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  2809   00103A  0E01               	movlw	1
  2810   00103C  6F68               	movwf	efgtoa@pp& (0+255),b
  2811   00103E  EF31  F008         	goto	l3024
  2812   001042                     l3016:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  2816   001042  0E00               	movlw	low _dbuf
  2817   001044  2582               	addwf	efgtoa@n& (0+255),w,b
  2818   001046  6ED9               	movwf	fsr2l,c
  2819   001048  0E01               	movlw	high _dbuf
  2820   00104A  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2821   00104C  6EDA               	movwf	fsr2h,c
  2822   00104E  0E30               	movlw	48
  2823   001050  6EDF               	movwf	indf2,c
  2824   001052                     
  2825                           ; BSR set to: 0
  2826   001052  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2827   001054  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2828   001056                     
  2829                           ; BSR set to: 0
  2830                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  2831   001056  0771               	decf	efgtoa@w& (0+255),f,b
  2832   001058  A0D8               	btfss	status,0,c
  2833   00105A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2834   00105C                     
  2835                           ; BSR set to: 0
  2836                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  2837   00105C  0764               	decf	efgtoa@t& (0+255),f,b
  2838   00105E  A0D8               	btfss	status,0,c
  2839   001060  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2840   001062                     l3024:
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  2844   001062  5164               	movf	efgtoa@t& (0+255),w,b
  2845   001064  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2846   001066  A4D8               	btfss	status,2,c
  2847   001068  EF38  F008         	goto	u3301
  2848   00106C  EF3A  F008         	goto	u3300
  2849   001070                     u3301:
  2850   001070  EF21  F008         	goto	l3016
  2851   001074                     u3300:
  2852   001074                     
  2853                           ; BSR set to: 0
  2854                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2855   001074  0E00               	movlw	low _dbuf
  2856   001076  2582               	addwf	efgtoa@n& (0+255),w,b
  2857   001078  6ED9               	movwf	fsr2l,c
  2858   00107A  0E01               	movlw	high _dbuf
  2859   00107C  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2860   00107E  6EDA               	movwf	fsr2h,c
  2861   001080  516B               	movf	efgtoa@d& (0+255),w,b
  2862   001082  0F30               	addlw	48
  2863   001084  6EDF               	movwf	indf2,c
  2864   001086                     
  2865                           ; BSR set to: 0
  2866   001086  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2867   001088  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2868   00108A                     
  2869                           ; BSR set to: 0
  2870                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  2871   00108A  0771               	decf	efgtoa@w& (0+255),f,b
  2872   00108C  A0D8               	btfss	status,0,c
  2873   00108E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2874   001090                     
  2875                           ; BSR set to: 0
  2876                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  2877   001090  C079  F028         	movff	efgtoa@h,___flsub@b
  2878   001094  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  2879   001098  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2880   00109C  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2881   0010A0  C07D  F013         	movff	efgtoa@l,___flmul@a
  2882   0010A4  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  2883   0010A8  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  2884   0010AC  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  2885   0010B0  C088  F00F         	movff	efgtoa@u,___flmul@b
  2886   0010B4  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2887   0010B8  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2888   0010BC  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2889   0010C0  EC6F  F00B         	call	___flmul	;wreg free
  2890   0010C4  C00F  F02C         	movff	?___flmul,___flsub@a
  2891   0010C8  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2892   0010CC  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2893   0010D0  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2894   0010D4  EC0F  F017         	call	___flsub	;wreg free
  2895   0010D8  C028  F079         	movff	?___flsub,efgtoa@h
  2896   0010DC  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  2897   0010E0  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  2898   0010E4  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  2899   0010E8                     
  2900                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  2901   0010E8  C088  F028         	movff	efgtoa@u,___fldiv@b
  2902   0010EC  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2903   0010F0  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2904   0010F4  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2905   0010F8  0E00               	movlw	0
  2906   0010FA  6E2C               	movwf	___fldiv@a^0,c
  2907   0010FC  0E00               	movlw	0
  2908   0010FE  6E2D               	movwf	(___fldiv@a+1)^0,c
  2909   001100  0E20               	movlw	32
  2910   001102  6E2E               	movwf	(___fldiv@a+2)^0,c
  2911   001104  0E41               	movlw	65
  2912   001106  6E2F               	movwf	(___fldiv@a+3)^0,c
  2913   001108  EC84  F00D         	call	___fldiv	;wreg free
  2914   00110C  C028  F088         	movff	?___fldiv,efgtoa@u
  2915   001110  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2916   001114  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2917   001118  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2918   00111C                     
  2919                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  2920   00111C  0100               	movlb	0	; () banked
  2921   00111E  0760               	decf	efgtoa@ne& (0+255),f,b
  2922   001120  A0D8               	btfss	status,0,c
  2923   001122  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2924   001124                     
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  2927   001124  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2928   001126  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2929   001128                     l3040:
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2933   001128  516D               	movf	efgtoa@m& (0+255),w,b
  2934   00112A  5D77               	subwf	efgtoa@i& (0+255),w,b
  2935   00112C  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2936   00112E  0A80               	xorlw	128
  2937   001130  6E5C               	movwf	??_efgtoa^0,c
  2938   001132  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2939   001134  0A80               	xorlw	128
  2940   001136  585C               	subwfb	??_efgtoa^0,w,c
  2941   001138  B0D8               	btfsc	status,0,c
  2942   00113A  EFA1  F008         	goto	u3311
  2943   00113E  EFA3  F008         	goto	u3310
  2944   001142                     u3311:
  2945   001142  EFB1  F008         	goto	l3044
  2946   001146                     u3310:
  2947   001146                     
  2948                           ; BSR set to: 0
  2949   001146  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2950   001148  EFAF  F008         	goto	u3321
  2951   00114C  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2952   00114E  E109               	bnz	u3320
  2953   001150  0E4B               	movlw	75
  2954   001152  5D82               	subwf	efgtoa@n& (0+255),w,b
  2955   001154  A0D8               	btfss	status,0,c
  2956   001156  EFAF  F008         	goto	u3321
  2957   00115A  EFB1  F008         	goto	u3320
  2958   00115E                     u3321:
  2959   00115E  EFAF  F007         	goto	l3000
  2960   001162                     u3320:
  2961   001162                     l3044:
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  2965   001162  0E00               	movlw	0
  2966   001164  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2967   001166  0E4F               	movlw	79
  2968   001168  6F77               	movwf	efgtoa@i& (0+255),b
  2969   00116A                     
  2970                           ; BSR set to: 0
  2971                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  2972   00116A  0E00               	movlw	low _dbuf
  2973   00116C  2577               	addwf	efgtoa@i& (0+255),w,b
  2974   00116E  6ED9               	movwf	fsr2l,c
  2975   001170  0E01               	movlw	high _dbuf
  2976   001172  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2977   001174  6EDA               	movwf	fsr2h,c
  2978   001176  6ADF               	clrf	indf2,c
  2979   001178                     
  2980                           ; BSR set to: 0
  2981                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  2982   001178  0E00               	movlw	low _dbuf
  2983   00117A  6E5C               	movwf	??_efgtoa^0,c
  2984   00117C  0E01               	movlw	high _dbuf
  2985   00117E  6E5D               	movwf	(??_efgtoa+1)^0,c
  2986   001180  5182               	movf	efgtoa@n& (0+255),w,b
  2987   001182  5E5C               	subwf	??_efgtoa^0,f,c
  2988   001184  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2989   001186  5A5D               	subwfb	(??_efgtoa+1)^0,f,c
  2990   001188  5177               	movf	efgtoa@i& (0+255),w,b
  2991   00118A  245C               	addwf	??_efgtoa^0,w,c
  2992   00118C  6E01               	movwf	memcpy@d1^0,c
  2993   00118E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2994   001190  205D               	addwfc	(??_efgtoa+1)^0,w,c
  2995   001192  6E02               	movwf	(memcpy@d1+1)^0,c
  2996   001194  0E00               	movlw	low _dbuf
  2997   001196  6E03               	movwf	memcpy@s1^0,c
  2998   001198  0E01               	movlw	high _dbuf
  2999   00119A  6E04               	movwf	(memcpy@s1+1)^0,c
  3000   00119C  C082  F005         	movff	efgtoa@n,memcpy@n
  3001   0011A0  C083  F006         	movff	efgtoa@n+1,memcpy@n+1
  3002   0011A4  ECE7  F016         	call	_memcpy	;wreg free
  3003   0011A8                     
  3004                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  3005   0011A8  0100               	movlb	0	; () banked
  3006   0011AA  5182               	movf	efgtoa@n& (0+255),w,b
  3007   0011AC  5D77               	subwf	efgtoa@i& (0+255),w,b
  3008   0011AE  6F82               	movwf	efgtoa@n& (0+255),b
  3009   0011B0  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3010   0011B2  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3011   0011B4  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3012   0011B6                     
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  3015   0011B6  5181               	movf	efgtoa@sign& (0+255),w,b
  3016   0011B8  A4D8               	btfss	status,2,c
  3017   0011BA  EFE1  F008         	goto	u3331
  3018   0011BE  EFE4  F008         	goto	u3330
  3019   0011C2                     u3331:
  3020   0011C2  0E01               	movlw	1
  3021   0011C4  EFE5  F008         	goto	u3340
  3022   0011C8                     u3330:
  3023   0011C8  0E00               	movlw	0
  3024   0011CA                     u3340:
  3025   0011CA  6F77               	movwf	efgtoa@i& (0+255),b
  3026   0011CC  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3027   0011CE                     
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  3030   0011CE  5181               	movf	efgtoa@sign& (0+255),w,b
  3031   0011D0  B4D8               	btfsc	status,2,c
  3032   0011D2  EFED  F008         	goto	u3351
  3033   0011D6  EFEF  F008         	goto	u3350
  3034   0011DA                     u3351:
  3035   0011DA  EFFA  F008         	goto	l3058
  3036   0011DE                     u3350:
  3037   0011DE                     
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  3040   0011DE  0782               	decf	efgtoa@n& (0+255),f,b
  3041   0011E0  A0D8               	btfss	status,0,c
  3042   0011E2  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  3043   0011E4  0E00               	movlw	low _dbuf
  3044   0011E6  2582               	addwf	efgtoa@n& (0+255),w,b
  3045   0011E8  6ED9               	movwf	fsr2l,c
  3046   0011EA  0E01               	movlw	high _dbuf
  3047   0011EC  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3048   0011EE  6EDA               	movwf	fsr2h,c
  3049   0011F0  C081  FFDF         	movff	efgtoa@sign,indf2
  3050   0011F4                     l3058:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  3054   0011F4  5177               	movf	efgtoa@i& (0+255),w,b
  3055   0011F6  5F71               	subwf	efgtoa@w& (0+255),f,b
  3056   0011F8  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3057   0011FA  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3058   0011FC                     
  3059                           ; BSR set to: 0
  3060                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3061   0011FC  C055  F011         	movff	efgtoa@fp,pad@fp
  3062   001200  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  3063   001204  0E00               	movlw	low _dbuf
  3064   001206  2582               	addwf	efgtoa@n& (0+255),w,b
  3065   001208  6E13               	movwf	pad@buf^0,c
  3066   00120A  0E01               	movlw	high _dbuf
  3067   00120C  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3068   00120E  6E14               	movwf	(pad@buf+1)^0,c
  3069   001210  C071  F015         	movff	efgtoa@w,pad@p
  3070   001214  C072  F016         	movff	efgtoa@w+1,pad@p+1
  3071   001218  ECB4  F015         	call	_pad	;wreg free
  3072   00121C                     l820:
  3073   00121C  0012               	return		;funcret
  3074   00121E                     __end_of_efgtoa:
  3075                           	callstack 0
  3076                           
  3077 ;; *************** function _strcpy *****************
  3078 ;; Defined at:
  3079 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3082 ;;		 -> dbuf(80), 
  3083 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3084 ;;		 -> STR_6(4), STR_3(4), 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  d               2    6[COMRAM] PTR unsigned char 
  3087 ;;		 -> dbuf(80), 
  3088 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3089 ;;		 -> STR_6(4), STR_3(4), 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  2    0[COMRAM] PTR unsigned char 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3099 ;;      Params:         4       0       0       0       0       0       0       0       0
  3100 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3102 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3103 ;;Total ram usage:        8 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 1
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_efgtoa
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text7
  3114   002EEC                     __ptext7:
  3115                           	callstack 0
  3116   002EEC                     _strcpy:
  3117                           	callstack 25
  3118   002EEC  C003  F005         	movff	strcpy@src,strcpy@s
  3119   002EF0  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3120   002EF4  C001  F007         	movff	strcpy@dest,strcpy@d
  3121   002EF8  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3122   002EFC                     l2796:
  3123   002EFC  C005  FFF6         	movff	strcpy@s,tblptrl
  3124   002F00  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3125   002F04  4A05               	infsnz	strcpy@s^0,f,c
  3126   002F06  2A06               	incf	(strcpy@s+1)^0,f,c
  3127   002F08                     	if	0	;tblptru may be non-zero
  3128   002F08                     	endif
  3129   002F08                     	if	0	;tblptru may be non-zero
  3130   002F08                     	endif
  3131   002F08  C007  FFD9         	movff	strcpy@d,fsr2l
  3132   002F0C  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3133   002F10  4A07               	infsnz	strcpy@d^0,f,c
  3134   002F12  2A08               	incf	(strcpy@d+1)^0,f,c
  3135   002F14  0008               	tblrd		*
  3136   002F16  CFF5 FFDF          	movff	tablat,indf2
  3137   002F1A  50DF               	movf	indf2,w,c
  3138   002F1C  A4D8               	btfss	status,2,c
  3139   002F1E  EF93  F017         	goto	u2911
  3140   002F22  EF95  F017         	goto	u2910
  3141   002F26                     u2911:
  3142   002F26  EF7E  F017         	goto	l2796
  3143   002F2A                     u2910:
  3144   002F2A  0012               	return		;funcret
  3145   002F2C                     __end_of_strcpy:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function _pad *****************
  3149 ;; Defined at:
  3150 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3153 ;;		 -> sprintf@f(12), 
  3154 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3155 ;;		 -> dbuf(80), 
  3156 ;;  p               2   20[COMRAM] int 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  w               2   25[COMRAM] int 
  3159 ;;  i               2   23[COMRAM] int 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3169 ;;      Params:         6       0       0       0       0       0       0       0       0
  3170 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3171 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3172 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3173 ;;Total ram usage:       11 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 4
  3176 ;; This function calls:
  3177 ;;		_fputc
  3178 ;;		_fputs
  3179 ;; This function is called by:
  3180 ;;		_efgtoa
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text8
  3185   002B68                     __ptext8:
  3186                           	callstack 0
  3187   002B68                     _pad:
  3188                           	callstack 22
  3189   002B68                     
  3190                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3191   002B68  BE16               	btfsc	(pad@p+1)^0,7,c
  3192   002B6A  EFB9  F015         	goto	u2821
  3193   002B6E  EFBB  F015         	goto	u2820
  3194   002B72                     u2821:
  3195   002B72  EFC1  F015         	goto	l2762
  3196   002B76                     u2820:
  3197   002B76  C015  F01A         	movff	pad@p,pad@w
  3198   002B7A  C016  F01B         	movff	pad@p+1,pad@w+1
  3199   002B7E  EFC5  F015         	goto	l805
  3200   002B82                     l2762:
  3201   002B82  0E00               	movlw	0
  3202   002B84  6E1B               	movwf	(pad@w+1)^0,c
  3203   002B86  0E00               	movlw	0
  3204   002B88  6E1A               	movwf	pad@w^0,c
  3205   002B8A                     l805:
  3206                           
  3207                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3208   002B8A  0E00               	movlw	0
  3209   002B8C  6E19               	movwf	(pad@i+1)^0,c
  3210   002B8E  0E00               	movlw	0
  3211   002B90  6E18               	movwf	pad@i^0,c
  3212                           
  3213                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3214   002B92  EFD7  F015         	goto	l2768
  3215   002B96                     l2764:
  3216                           
  3217                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3218   002B96  0E00               	movlw	0
  3219   002B98  6E02               	movwf	(fputc@c+1)^0,c
  3220   002B9A  0E20               	movlw	32
  3221   002B9C  6E01               	movwf	fputc@c^0,c
  3222   002B9E  C011  F003         	movff	pad@fp,fputc@fp
  3223   002BA2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3224   002BA6  EC97  F014         	call	_fputc	;wreg free
  3225   002BAA                     
  3226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3227   002BAA  4A18               	infsnz	pad@i^0,f,c
  3228   002BAC  2A19               	incf	(pad@i+1)^0,f,c
  3229   002BAE                     l2768:
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3232   002BAE  501A               	movf	pad@w^0,w,c
  3233   002BB0  5C18               	subwf	pad@i^0,w,c
  3234   002BB2  5019               	movf	(pad@i+1)^0,w,c
  3235   002BB4  0A80               	xorlw	128
  3236   002BB6  6E17               	movwf	??_pad^0,c
  3237   002BB8  501B               	movf	(pad@w+1)^0,w,c
  3238   002BBA  0A80               	xorlw	128
  3239   002BBC  5817               	subwfb	??_pad^0,w,c
  3240   002BBE  A0D8               	btfss	status,0,c
  3241   002BC0  EFE4  F015         	goto	u2831
  3242   002BC4  EFE6  F015         	goto	u2830
  3243   002BC8                     u2831:
  3244   002BC8  EFCB  F015         	goto	l2764
  3245   002BCC                     u2830:
  3246   002BCC                     
  3247                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3248   002BCC  C013  F00A         	movff	pad@buf,fputs@s
  3249   002BD0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3250   002BD4  C011  F00C         	movff	pad@fp,fputs@fp
  3251   002BD8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3252   002BDC  EC32  F017         	call	_fputs	;wreg free
  3253   002BE0  0012               	return		;funcret
  3254   002BE2                     __end_of_pad:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function _fputs *****************
  3258 ;; Defined at:
  3259 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3262 ;;		 -> dbuf(80), 
  3263 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3264 ;;		 -> sprintf@f(12), 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  i               2   14[COMRAM] int 
  3267 ;;  c               1   13[COMRAM] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  2    9[COMRAM] int 
  3270 ;; Registers used:
  3271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3277 ;;      Params:         4       0       0       0       0       0       0       0       0
  3278 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3280 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3281 ;;Total ram usage:        7 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 3
  3284 ;; This function calls:
  3285 ;;		_fputc
  3286 ;; This function is called by:
  3287 ;;		_pad
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text9
  3292   002E64                     __ptext9:
  3293                           	callstack 0
  3294   002E64                     _fputs:
  3295                           	callstack 22
  3296   002E64  0E00               	movlw	0
  3297   002E66  6E10               	movwf	(fputs@i+1)^0,c
  3298   002E68  0E00               	movlw	0
  3299   002E6A  6E0F               	movwf	fputs@i^0,c
  3300   002E6C  EF43  F017         	goto	l2386
  3301   002E70                     l2382:
  3302   002E70  C00E  F001         	movff	fputs@c,fputc@c
  3303   002E74  6A02               	clrf	(fputc@c+1)^0,c
  3304   002E76  C00C  F003         	movff	fputs@fp,fputc@fp
  3305   002E7A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3306   002E7E  EC97  F014         	call	_fputc	;wreg free
  3307   002E82  4A0F               	infsnz	fputs@i^0,f,c
  3308   002E84  2A10               	incf	(fputs@i+1)^0,f,c
  3309   002E86                     l2386:
  3310   002E86  500F               	movf	fputs@i^0,w,c
  3311   002E88  240A               	addwf	fputs@s^0,w,c
  3312   002E8A  6ED9               	movwf	fsr2l,c
  3313   002E8C  5010               	movf	(fputs@i+1)^0,w,c
  3314   002E8E  200B               	addwfc	(fputs@s+1)^0,w,c
  3315   002E90  6EDA               	movwf	fsr2h,c
  3316   002E92  50DF               	movf	indf2,w,c
  3317   002E94  6E0E               	movwf	fputs@c^0,c
  3318   002E96  500E               	movf	fputs@c^0,w,c
  3319   002E98  A4D8               	btfss	status,2,c
  3320   002E9A  EF51  F017         	goto	u2231
  3321   002E9E  EF53  F017         	goto	u2230
  3322   002EA2                     u2231:
  3323   002EA2  EF38  F017         	goto	l2382
  3324   002EA6                     u2230:
  3325   002EA6  0012               	return		;funcret
  3326   002EA8                     __end_of_fputs:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function _fputc *****************
  3330 ;; Defined at:
  3331 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  c               2    0[COMRAM] int 
  3334 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3335 ;;		 -> sprintf@f(12), 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  2    0[COMRAM] int 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3347 ;;      Params:         4       0       0       0       0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3349 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3350 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3351 ;;Total ram usage:        9 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 2
  3354 ;; This function calls:
  3355 ;;		_putch
  3356 ;; This function is called by:
  3357 ;;		_pad
  3358 ;;		_vfpfcnvrt
  3359 ;;		_fputs
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text10
  3364   00292E                     __ptext10:
  3365                           	callstack 0
  3366   00292E                     _fputc:
  3367                           	callstack 25
  3368   00292E  5003               	movf	fputc@fp^0,w,c
  3369   002930  1004               	iorwf	(fputc@fp+1)^0,w,c
  3370   002932  B4D8               	btfsc	status,2,c
  3371   002934  EF9E  F014         	goto	u1801
  3372   002938  EFA0  F014         	goto	u1800
  3373   00293C                     u1801:
  3374   00293C  EFA9  F014         	goto	l2168
  3375   002940                     u1800:
  3376   002940  5003               	movf	fputc@fp^0,w,c
  3377   002942  1004               	iorwf	(fputc@fp+1)^0,w,c
  3378   002944  A4D8               	btfss	status,2,c
  3379   002946  EFA7  F014         	goto	u1811
  3380   00294A  EFA9  F014         	goto	u1810
  3381   00294E                     u1811:
  3382   00294E  EFAE  F014         	goto	l2170
  3383   002952                     u1810:
  3384   002952                     l2168:
  3385   002952  5001               	movf	fputc@c^0,w,c
  3386   002954  EC23  F018         	call	_putch
  3387   002958  EFFB  F014         	goto	l945
  3388   00295C                     l2170:
  3389   00295C  EE20 F00A          	lfsr	2,10
  3390   002960  5003               	movf	fputc@fp^0,w,c
  3391   002962  26D9               	addwf	fsr2l,f,c
  3392   002964  5004               	movf	(fputc@fp+1)^0,w,c
  3393   002966  22DA               	addwfc	fsr2h,f,c
  3394   002968  50DE               	movf	postinc2,w,c
  3395   00296A  10DE               	iorwf	postinc2,w,c
  3396   00296C  B4D8               	btfsc	status,2,c
  3397   00296E  EFBB  F014         	goto	u1821
  3398   002972  EFBD  F014         	goto	u1820
  3399   002976                     u1821:
  3400   002976  EFD8  F014         	goto	l2174
  3401   00297A                     u1820:
  3402   00297A  EE20 F00A          	lfsr	2,10
  3403   00297E  5003               	movf	fputc@fp^0,w,c
  3404   002980  26D9               	addwf	fsr2l,f,c
  3405   002982  5004               	movf	(fputc@fp+1)^0,w,c
  3406   002984  22DA               	addwfc	fsr2h,f,c
  3407   002986  EE10 F003          	lfsr	1,3
  3408   00298A  5003               	movf	fputc@fp^0,w,c
  3409   00298C  26E1               	addwf	fsr1l,f,c
  3410   00298E  5004               	movf	(fputc@fp+1)^0,w,c
  3411   002990  22E2               	addwfc	fsr1h,f,c
  3412   002992  50DE               	movf	postinc2,w,c
  3413   002994  5CE6               	subwf	postinc1,w,c
  3414   002996  50E6               	movf	postinc1,w,c
  3415   002998  0A80               	xorlw	128
  3416   00299A  6E09               	movwf	(??_fputc+4)^0,c
  3417   00299C  50DE               	movf	postinc2,w,c
  3418   00299E  0A80               	xorlw	128
  3419   0029A0  5809               	subwfb	(??_fputc+4)^0,w,c
  3420   0029A2  B0D8               	btfsc	status,0,c
  3421   0029A4  EFD6  F014         	goto	u1831
  3422   0029A8  EFD8  F014         	goto	u1830
  3423   0029AC                     u1831:
  3424   0029AC  EFFB  F014         	goto	l945
  3425   0029B0                     u1830:
  3426   0029B0                     l2174:
  3427   0029B0  EE20 F003          	lfsr	2,3
  3428   0029B4  5003               	movf	fputc@fp^0,w,c
  3429   0029B6  26D9               	addwf	fsr2l,f,c
  3430   0029B8  5004               	movf	(fputc@fp+1)^0,w,c
  3431   0029BA  22DA               	addwfc	fsr2h,f,c
  3432   0029BC  CFDE F005          	movff	postinc2,??_fputc
  3433   0029C0  CFDD F006          	movff	postdec2,??_fputc+1
  3434   0029C4  C003  FFD9         	movff	fputc@fp,fsr2l
  3435   0029C8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3436   0029CC  CFDE F007          	movff	postinc2,??_fputc+2
  3437   0029D0  CFDD F008          	movff	postdec2,??_fputc+3
  3438   0029D4  5005               	movf	??_fputc^0,w,c
  3439   0029D6  2407               	addwf	(??_fputc+2)^0,w,c
  3440   0029D8  6ED9               	movwf	fsr2l,c
  3441   0029DA  5006               	movf	(??_fputc+1)^0,w,c
  3442   0029DC  2008               	addwfc	(??_fputc+3)^0,w,c
  3443   0029DE  6EDA               	movwf	fsr2h,c
  3444   0029E0  C001  FFDF         	movff	fputc@c,indf2
  3445   0029E4  EE20 F003          	lfsr	2,3
  3446   0029E8  5003               	movf	fputc@fp^0,w,c
  3447   0029EA  26D9               	addwf	fsr2l,f,c
  3448   0029EC  5004               	movf	(fputc@fp+1)^0,w,c
  3449   0029EE  22DA               	addwfc	fsr2h,f,c
  3450   0029F0  2ADE               	incf	postinc2,f,c
  3451   0029F2  0E00               	movlw	0
  3452   0029F4  22DD               	addwfc	postdec2,f,c
  3453   0029F6                     l945:
  3454   0029F6  0012               	return		;funcret
  3455   0029F8                     __end_of_fputc:
  3456                           	callstack 0
  3457                           
  3458 ;; *************** function _putch *****************
  3459 ;; Defined at:
  3460 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  c               1    wreg     unsigned char 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  c               1    0[COMRAM] unsigned char 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3474 ;;      Params:         0       0       0       0       0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3477 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 1
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_fputc
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text11
  3489   003046                     __ptext11:
  3490                           	callstack 0
  3491   003046                     _putch:
  3492                           	callstack 25
  3493   003046  0012               	return		;funcret
  3494   003048                     __end_of_putch:
  3495                           	callstack 0
  3496                           
  3497 ;; *************** function _memcpy *****************
  3498 ;; Defined at:
  3499 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  d1              2    0[COMRAM] PTR void 
  3502 ;;		 -> dbuf(80), 
  3503 ;;  s1              2    2[COMRAM] PTR const void 
  3504 ;;		 -> dbuf(80), 
  3505 ;;  n               2    4[COMRAM] unsigned int 
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3508 ;;		 -> dbuf(80), 
  3509 ;;  d               2    6[COMRAM] PTR unsigned char 
  3510 ;;		 -> dbuf(80), 
  3511 ;;  tmp             1   10[COMRAM] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  2    0[COMRAM] PTR void 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3521 ;;      Params:         6       0       0       0       0       0       0       0       0
  3522 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3524 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3525 ;;Total ram usage:       11 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 1
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_efgtoa
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text12
  3536   002DCE                     __ptext12:
  3537                           	callstack 0
  3538   002DCE                     _memcpy:
  3539                           	callstack 25
  3540   002DCE  C003  F009         	movff	memcpy@s1,memcpy@s
  3541   002DD2  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3542   002DD6  C001  F007         	movff	memcpy@d1,memcpy@d
  3543   002DDA  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3544   002DDE  EF01  F017         	goto	l2840
  3545   002DE2                     l2832:
  3546   002DE2  C009  FFD9         	movff	memcpy@s,fsr2l
  3547   002DE6  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3548   002DEA  50DF               	movf	indf2,w,c
  3549   002DEC  6E0B               	movwf	memcpy@tmp^0,c
  3550   002DEE  4A09               	infsnz	memcpy@s^0,f,c
  3551   002DF0  2A0A               	incf	(memcpy@s+1)^0,f,c
  3552   002DF2  C007  FFD9         	movff	memcpy@d,fsr2l
  3553   002DF6  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3554   002DFA  C00B  FFDF         	movff	memcpy@tmp,indf2
  3555   002DFE  4A07               	infsnz	memcpy@d^0,f,c
  3556   002E00  2A08               	incf	(memcpy@d+1)^0,f,c
  3557   002E02                     l2840:
  3558   002E02  0605               	decf	memcpy@n^0,f,c
  3559   002E04  A0D8               	btfss	status,0,c
  3560   002E06  0606               	decf	(memcpy@n+1)^0,f,c
  3561   002E08  2805               	incf	memcpy@n^0,w,c
  3562   002E0A  E106               	bnz	u3031
  3563   002E0C  2806               	incf	(memcpy@n+1)^0,w,c
  3564   002E0E  A4D8               	btfss	status,2,c
  3565   002E10  EF0C  F017         	goto	u3031
  3566   002E14  EF0E  F017         	goto	u3030
  3567   002E18                     u3031:
  3568   002E18  EFF1  F016         	goto	l2832
  3569   002E1C                     u3030:
  3570   002E1C  0012               	return		;funcret
  3571   002E1E                     __end_of_memcpy:
  3572                           	callstack 0
  3573                           
  3574 ;; *************** function _labs *****************
  3575 ;; Defined at:
  3576 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  a               4    0[COMRAM] long 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  4    0[COMRAM] long 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3590 ;;      Params:         4       0       0       0       0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3592 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3593 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3594 ;;Total ram usage:        8 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 1
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_efgtoa
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text13
  3605   002CC6                     __ptext13:
  3606                           	callstack 0
  3607   002CC6                     _labs:
  3608                           	callstack 25
  3609   002CC6  BE04               	btfsc	(labs@a+3)^0,7,c
  3610   002CC8  EF72  F016         	goto	u2920
  3611   002CCC  5004               	movf	(labs@a+3)^0,w,c
  3612   002CCE  1003               	iorwf	(labs@a+2)^0,w,c
  3613   002CD0  1002               	iorwf	(labs@a+1)^0,w,c
  3614   002CD2  E106               	bnz	u2921
  3615   002CD4  0401               	decf	labs@a^0,w,c
  3616   002CD6  B0D8               	btfsc	status,0,c
  3617   002CD8  EF70  F016         	goto	u2921
  3618   002CDC  EF72  F016         	goto	u2920
  3619   002CE0                     u2921:
  3620   002CE0  EF8D  F016         	goto	l924
  3621   002CE4                     u2920:
  3622   002CE4  C001  F005         	movff	labs@a,??_labs
  3623   002CE8  C002  F006         	movff	labs@a+1,??_labs+1
  3624   002CEC  C003  F007         	movff	labs@a+2,??_labs+2
  3625   002CF0  C004  F008         	movff	labs@a+3,??_labs+3
  3626   002CF4  1E05               	comf	??_labs^0,f,c
  3627   002CF6  1E06               	comf	(??_labs+1)^0,f,c
  3628   002CF8  1E07               	comf	(??_labs+2)^0,f,c
  3629   002CFA  1E08               	comf	(??_labs+3)^0,f,c
  3630   002CFC  2A05               	incf	??_labs^0,f,c
  3631   002CFE  0E00               	movlw	0
  3632   002D00  2206               	addwfc	(??_labs+1)^0,f,c
  3633   002D02  2207               	addwfc	(??_labs+2)^0,f,c
  3634   002D04  2208               	addwfc	(??_labs+3)^0,f,c
  3635   002D06  C005  F001         	movff	??_labs,?_labs
  3636   002D0A  C006  F002         	movff	??_labs+1,?_labs+1
  3637   002D0E  C007  F003         	movff	??_labs+2,?_labs+2
  3638   002D12  C008  F004         	movff	??_labs+3,?_labs+3
  3639   002D16  EF95  F016         	goto	l927
  3640   002D1A                     l924:
  3641   002D1A  C001  F001         	movff	labs@a,?_labs
  3642   002D1E  C002  F002         	movff	labs@a+1,?_labs+1
  3643   002D22  C003  F003         	movff	labs@a+2,?_labs+2
  3644   002D26  C004  F004         	movff	labs@a+3,?_labs+3
  3645   002D2A                     l927:
  3646   002D2A  0012               	return		;funcret
  3647   002D2C                     __end_of_labs:
  3648                           	callstack 0
  3649                           
  3650 ;; *************** function _floorf *****************
  3651 ;; Defined at:
  3652 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  x               4   64[COMRAM] float 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  u               4   80[COMRAM] struct .
  3657 ;;  m               4   74[COMRAM] unsigned long 
  3658 ;;  e               2   78[COMRAM] int 
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  4   64[COMRAM] float 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3668 ;;      Params:         4       0       0       0       0       0       0       0       0
  3669 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3670 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3671 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3672 ;;Total ram usage:       20 bytes
  3673 ;; Hardware stack levels used: 1
  3674 ;; Hardware stack levels required when called: 1
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_efgtoa
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text14
  3683   00210A                     __ptext14:
  3684                           	callstack 0
  3685   00210A                     _floorf:
  3686                           	callstack 25
  3687   00210A  C0C7  F051         	movff	floorf@F526,floorf@u
  3688   00210E  C0C8  F052         	movff	floorf@F526+1,floorf@u+1
  3689   002112  C0C9  F053         	movff	floorf@F526+2,floorf@u+2
  3690   002116  C0CA  F054         	movff	floorf@F526+3,floorf@u+3
  3691   00211A  C041  F051         	movff	floorf@x,floorf@u
  3692   00211E  C042  F052         	movff	floorf@x+1,floorf@u+1
  3693   002122  C043  F053         	movff	floorf@x+2,floorf@u+2
  3694   002126  C044  F054         	movff	floorf@x+3,floorf@u+3
  3695   00212A  0E81               	movlw	129
  3696   00212C  6E45               	movwf	??_floorf^0,c
  3697   00212E  0EFF               	movlw	255
  3698   002130  6E46               	movwf	(??_floorf+1)^0,c
  3699   002132  C051  F047         	movff	floorf@u,??_floorf+2
  3700   002136  C052  F048         	movff	floorf@u+1,??_floorf+3
  3701   00213A  C053  F049         	movff	floorf@u+2,??_floorf+4
  3702   00213E  C054  F04A         	movff	floorf@u+3,??_floorf+5
  3703   002142  0E18               	movlw	24
  3704   002144  EFA9  F010         	goto	u2930
  3705   002148                     u2935:
  3706   002148  90D8               	bcf	status,0,c
  3707   00214A  324A               	rrcf	(??_floorf+5)^0,f,c
  3708   00214C  3249               	rrcf	(??_floorf+4)^0,f,c
  3709   00214E  3248               	rrcf	(??_floorf+3)^0,f,c
  3710   002150  3247               	rrcf	(??_floorf+2)^0,f,c
  3711   002152                     u2930:
  3712   002152  2EE8               	decfsz	wreg,f,c
  3713   002154  EFA4  F010         	goto	u2935
  3714   002158  5047               	movf	(??_floorf+2)^0,w,c
  3715   00215A  2445               	addwf	??_floorf^0,w,c
  3716   00215C  6E4F               	movwf	floorf@e^0,c
  3717   00215E  0E00               	movlw	0
  3718   002160  2046               	addwfc	(??_floorf+1)^0,w,c
  3719   002162  6E50               	movwf	(floorf@e+1)^0,c
  3720   002164  BE50               	btfsc	(floorf@e+1)^0,7,c
  3721   002166  EFBE  F010         	goto	u2941
  3722   00216A  5050               	movf	(floorf@e+1)^0,w,c
  3723   00216C  E109               	bnz	u2940
  3724   00216E  0E17               	movlw	23
  3725   002170  5C4F               	subwf	floorf@e^0,w,c
  3726   002172  A0D8               	btfss	status,0,c
  3727   002174  EFBE  F010         	goto	u2941
  3728   002178  EFC0  F010         	goto	u2940
  3729   00217C                     u2941:
  3730   00217C  EFCA  F010         	goto	l2808
  3731   002180                     u2940:
  3732   002180                     l2806:
  3733   002180  C041  F041         	movff	floorf@x,?_floorf
  3734   002184  C042  F042         	movff	floorf@x+1,?_floorf+1
  3735   002188  C043  F043         	movff	floorf@x+2,?_floorf+2
  3736   00218C  C044  F044         	movff	floorf@x+3,?_floorf+3
  3737   002190  EF8D  F011         	goto	l913
  3738   002194                     l2808:
  3739   002194  BE50               	btfsc	(floorf@e+1)^0,7,c
  3740   002196  EFCF  F010         	goto	u2951
  3741   00219A  EFD1  F010         	goto	u2950
  3742   00219E                     u2951:
  3743   00219E  EF41  F011         	goto	l2818
  3744   0021A2                     u2950:
  3745   0021A2  C04F  F045         	movff	floorf@e,??_floorf
  3746   0021A6  0EFF               	movlw	255
  3747   0021A8  6E46               	movwf	(??_floorf+1)^0,c
  3748   0021AA  0EFF               	movlw	255
  3749   0021AC  6E47               	movwf	(??_floorf+2)^0,c
  3750   0021AE  0E7F               	movlw	127
  3751   0021B0  6E48               	movwf	(??_floorf+3)^0,c
  3752   0021B2  0E00               	movlw	0
  3753   0021B4  6E49               	movwf	(??_floorf+4)^0,c
  3754   0021B6                     u2965:
  3755   0021B6  6645               	tstfsz	??_floorf^0,c
  3756   0021B8  EFE0  F010         	goto	u2966
  3757   0021BC  EFE8  F010         	goto	u2967
  3758   0021C0                     u2966:
  3759   0021C0  3449               	rlcf	(??_floorf+4)^0,w,c
  3760   0021C2  3249               	rrcf	(??_floorf+4)^0,f,c
  3761   0021C4  3248               	rrcf	(??_floorf+3)^0,f,c
  3762   0021C6  3247               	rrcf	(??_floorf+2)^0,f,c
  3763   0021C8  3246               	rrcf	(??_floorf+1)^0,f,c
  3764   0021CA  2E45               	decfsz	??_floorf^0,f,c
  3765   0021CC  EFDB  F010         	goto	u2965
  3766   0021D0                     u2967:
  3767   0021D0  C046  F04B         	movff	??_floorf+1,floorf@m
  3768   0021D4  C047  F04C         	movff	??_floorf+2,floorf@m+1
  3769   0021D8  C048  F04D         	movff	??_floorf+3,floorf@m+2
  3770   0021DC  C049  F04E         	movff	??_floorf+4,floorf@m+3
  3771   0021E0  504B               	movf	floorf@m^0,w,c
  3772   0021E2  1451               	andwf	floorf@u^0,w,c
  3773   0021E4  6E45               	movwf	??_floorf^0,c
  3774   0021E6  504C               	movf	(floorf@m+1)^0,w,c
  3775   0021E8  1452               	andwf	(floorf@u+1)^0,w,c
  3776   0021EA  6E46               	movwf	(??_floorf+1)^0,c
  3777   0021EC  504D               	movf	(floorf@m+2)^0,w,c
  3778   0021EE  1453               	andwf	(floorf@u+2)^0,w,c
  3779   0021F0  6E47               	movwf	(??_floorf+2)^0,c
  3780   0021F2  504E               	movf	(floorf@m+3)^0,w,c
  3781   0021F4  1454               	andwf	(floorf@u+3)^0,w,c
  3782   0021F6  6E48               	movwf	(??_floorf+3)^0,c
  3783   0021F8  5045               	movf	??_floorf^0,w,c
  3784   0021FA  1046               	iorwf	(??_floorf+1)^0,w,c
  3785   0021FC  1047               	iorwf	(??_floorf+2)^0,w,c
  3786   0021FE  1048               	iorwf	(??_floorf+3)^0,w,c
  3787   002200  A4D8               	btfss	status,2,c
  3788   002202  EF05  F011         	goto	u2971
  3789   002206  EF07  F011         	goto	u2970
  3790   00220A                     u2971:
  3791   00220A  EF09  F011         	goto	l2814
  3792   00220E                     u2970:
  3793   00220E  EFC0  F010         	goto	l2806
  3794   002212                     l2814:
  3795   002212  C051  F045         	movff	floorf@u,??_floorf
  3796   002216  C052  F046         	movff	floorf@u+1,??_floorf+1
  3797   00221A  C053  F047         	movff	floorf@u+2,??_floorf+2
  3798   00221E  C054  F048         	movff	floorf@u+3,??_floorf+3
  3799   002222  0E20               	movlw	32
  3800   002224  EF19  F011         	goto	u2980
  3801   002228                     u2985:
  3802   002228  90D8               	bcf	status,0,c
  3803   00222A  3248               	rrcf	(??_floorf+3)^0,f,c
  3804   00222C  3247               	rrcf	(??_floorf+2)^0,f,c
  3805   00222E  3246               	rrcf	(??_floorf+1)^0,f,c
  3806   002230  3245               	rrcf	??_floorf^0,f,c
  3807   002232                     u2980:
  3808   002232  2EE8               	decfsz	wreg,f,c
  3809   002234  EF14  F011         	goto	u2985
  3810   002238  5045               	movf	??_floorf^0,w,c
  3811   00223A  1046               	iorwf	(??_floorf+1)^0,w,c
  3812   00223C  1047               	iorwf	(??_floorf+2)^0,w,c
  3813   00223E  1048               	iorwf	(??_floorf+3)^0,w,c
  3814   002240  B4D8               	btfsc	status,2,c
  3815   002242  EF25  F011         	goto	u2991
  3816   002246  EF27  F011         	goto	u2990
  3817   00224A                     u2991:
  3818   00224A  EF2F  F011         	goto	l916
  3819   00224E                     u2990:
  3820   00224E  504B               	movf	floorf@m^0,w,c
  3821   002250  2651               	addwf	floorf@u^0,f,c
  3822   002252  504C               	movf	(floorf@m+1)^0,w,c
  3823   002254  2252               	addwfc	(floorf@u+1)^0,f,c
  3824   002256  504D               	movf	(floorf@m+2)^0,w,c
  3825   002258  2253               	addwfc	(floorf@u+2)^0,f,c
  3826   00225A  504E               	movf	(floorf@m+3)^0,w,c
  3827   00225C  2254               	addwfc	(floorf@u+3)^0,f,c
  3828   00225E                     l916:
  3829   00225E  1C4B               	comf	floorf@m^0,w,c
  3830   002260  6E45               	movwf	??_floorf^0,c
  3831   002262  1C4C               	comf	(floorf@m+1)^0,w,c
  3832   002264  6E46               	movwf	(??_floorf+1)^0,c
  3833   002266  1C4D               	comf	(floorf@m+2)^0,w,c
  3834   002268  6E47               	movwf	(??_floorf+2)^0,c
  3835   00226A  1C4E               	comf	(floorf@m+3)^0,w,c
  3836   00226C  6E48               	movwf	(??_floorf+3)^0,c
  3837   00226E  5045               	movf	??_floorf^0,w,c
  3838   002270  1651               	andwf	floorf@u^0,f,c
  3839   002272  5046               	movf	(??_floorf+1)^0,w,c
  3840   002274  1652               	andwf	(floorf@u+1)^0,f,c
  3841   002276  5047               	movf	(??_floorf+2)^0,w,c
  3842   002278  1653               	andwf	(floorf@u+2)^0,f,c
  3843   00227A  5048               	movf	(??_floorf+3)^0,w,c
  3844   00227C  1654               	andwf	(floorf@u+3)^0,f,c
  3845   00227E  EF85  F011         	goto	l2826
  3846   002282                     l2818:
  3847   002282  C051  F045         	movff	floorf@u,??_floorf
  3848   002286  C052  F046         	movff	floorf@u+1,??_floorf+1
  3849   00228A  C053  F047         	movff	floorf@u+2,??_floorf+2
  3850   00228E  C054  F048         	movff	floorf@u+3,??_floorf+3
  3851   002292  0E20               	movlw	32
  3852   002294  EF51  F011         	goto	u3000
  3853   002298                     u3005:
  3854   002298  90D8               	bcf	status,0,c
  3855   00229A  3248               	rrcf	(??_floorf+3)^0,f,c
  3856   00229C  3247               	rrcf	(??_floorf+2)^0,f,c
  3857   00229E  3246               	rrcf	(??_floorf+1)^0,f,c
  3858   0022A0  3245               	rrcf	??_floorf^0,f,c
  3859   0022A2                     u3000:
  3860   0022A2  2EE8               	decfsz	wreg,f,c
  3861   0022A4  EF4C  F011         	goto	u3005
  3862   0022A8  5045               	movf	??_floorf^0,w,c
  3863   0022AA  1046               	iorwf	(??_floorf+1)^0,w,c
  3864   0022AC  1047               	iorwf	(??_floorf+2)^0,w,c
  3865   0022AE  1048               	iorwf	(??_floorf+3)^0,w,c
  3866   0022B0  A4D8               	btfss	status,2,c
  3867   0022B2  EF5D  F011         	goto	u3011
  3868   0022B6  EF5F  F011         	goto	u3010
  3869   0022BA                     u3011:
  3870   0022BA  EF69  F011         	goto	l2822
  3871   0022BE                     u3010:
  3872   0022BE  0E00               	movlw	0
  3873   0022C0  6E51               	movwf	floorf@u^0,c
  3874   0022C2  0E00               	movlw	0
  3875   0022C4  6E52               	movwf	(floorf@u+1)^0,c
  3876   0022C6  0E00               	movlw	0
  3877   0022C8  6E53               	movwf	(floorf@u+2)^0,c
  3878   0022CA  0E00               	movlw	0
  3879   0022CC  6E54               	movwf	(floorf@u+3)^0,c
  3880   0022CE  EF85  F011         	goto	l2826
  3881   0022D2                     l2822:
  3882   0022D2  90D8               	bcf	status,0,c
  3883   0022D4  3451               	rlcf	floorf@u^0,w,c
  3884   0022D6  6E45               	movwf	??_floorf^0,c
  3885   0022D8  3452               	rlcf	(floorf@u+1)^0,w,c
  3886   0022DA  6E46               	movwf	(??_floorf+1)^0,c
  3887   0022DC  3453               	rlcf	(floorf@u+2)^0,w,c
  3888   0022DE  6E47               	movwf	(??_floorf+2)^0,c
  3889   0022E0  3454               	rlcf	(floorf@u+3)^0,w,c
  3890   0022E2  6E48               	movwf	(??_floorf+3)^0,c
  3891   0022E4  5045               	movf	??_floorf^0,w,c
  3892   0022E6  1046               	iorwf	(??_floorf+1)^0,w,c
  3893   0022E8  1047               	iorwf	(??_floorf+2)^0,w,c
  3894   0022EA  1048               	iorwf	(??_floorf+3)^0,w,c
  3895   0022EC  B4D8               	btfsc	status,2,c
  3896   0022EE  EF7B  F011         	goto	u3021
  3897   0022F2  EF7D  F011         	goto	u3020
  3898   0022F6                     u3021:
  3899   0022F6  EF85  F011         	goto	l2826
  3900   0022FA                     u3020:
  3901   0022FA  0E00               	movlw	0
  3902   0022FC  6E51               	movwf	floorf@u^0,c
  3903   0022FE  0E00               	movlw	0
  3904   002300  6E52               	movwf	(floorf@u+1)^0,c
  3905   002302  0E80               	movlw	128
  3906   002304  6E53               	movwf	(floorf@u+2)^0,c
  3907   002306  0EBF               	movlw	191
  3908   002308  6E54               	movwf	(floorf@u+3)^0,c
  3909   00230A                     l2826:
  3910   00230A  C051  F041         	movff	floorf@u,?_floorf
  3911   00230E  C052  F042         	movff	floorf@u+1,?_floorf+1
  3912   002312  C053  F043         	movff	floorf@u+2,?_floorf+2
  3913   002316  C054  F044         	movff	floorf@u+3,?_floorf+3
  3914   00231A                     l913:
  3915   00231A  0012               	return		;funcret
  3916   00231C                     __end_of_floorf:
  3917                           	callstack 0
  3918                           
  3919 ;; *************** function ___fpclassifyf *****************
  3920 ;; Defined at:
  3921 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  x               4    0[COMRAM] float 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  u               4   10[COMRAM] struct .
  3926 ;;  e               2    8[COMRAM] int 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  2    0[COMRAM] int 
  3929 ;; Registers used:
  3930 ;;		wreg, status,2, status,0
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3936 ;;      Params:         4       0       0       0       0       0       0       0       0
  3937 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3938 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3939 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3940 ;;Total ram usage:       14 bytes
  3941 ;; Hardware stack levels used: 1
  3942 ;; Hardware stack levels required when called: 1
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_efgtoa
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text15
  3951   002830                     __ptext15:
  3952                           	callstack 0
  3953   002830                     ___fpclassifyf:
  3954                           	callstack 25
  3955   002830  C0CB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3956   002834  C0CC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3957   002838  C0CD  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3958   00283C  C0CE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3959   002840  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  3960   002844  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3961   002848  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3962   00284C  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3963   002850  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3964   002854  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3965   002858  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3966   00285C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3967   002860  0E18               	movlw	24
  3968   002862  EF38  F014         	goto	u2840
  3969   002866                     u2845:
  3970   002866  90D8               	bcf	status,0,c
  3971   002868  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  3972   00286A  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  3973   00286C  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  3974   00286E  3205               	rrcf	??___fpclassifyf^0,f,c
  3975   002870                     u2840:
  3976   002870  2EE8               	decfsz	wreg,f,c
  3977   002872  EF33  F014         	goto	u2845
  3978   002876  5005               	movf	??___fpclassifyf^0,w,c
  3979   002878  6E09               	movwf	___fpclassifyf@e^0,c
  3980   00287A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  3981   00287C  5009               	movf	___fpclassifyf@e^0,w,c
  3982   00287E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3983   002880  A4D8               	btfss	status,2,c
  3984   002882  EF45  F014         	goto	u2851
  3985   002886  EF47  F014         	goto	u2850
  3986   00288A                     u2851:
  3987   00288A  EF67  F014         	goto	l2784
  3988   00288E                     u2850:
  3989   00288E  90D8               	bcf	status,0,c
  3990   002890  340B               	rlcf	___fpclassifyf@u^0,w,c
  3991   002892  6E05               	movwf	??___fpclassifyf^0,c
  3992   002894  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3993   002896  6E06               	movwf	(??___fpclassifyf+1)^0,c
  3994   002898  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3995   00289A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  3996   00289C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3997   00289E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  3998   0028A0  5005               	movf	??___fpclassifyf^0,w,c
  3999   0028A2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4000   0028A4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4001   0028A6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4002   0028A8  A4D8               	btfss	status,2,c
  4003   0028AA  EF59  F014         	goto	u2861
  4004   0028AE  EF5B  F014         	goto	u2860
  4005   0028B2                     u2861:
  4006   0028B2  EF61  F014         	goto	l2780
  4007   0028B6                     u2860:
  4008   0028B6  0E00               	movlw	0
  4009   0028B8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4010   0028BA  0E02               	movlw	2
  4011   0028BC  6E01               	movwf	?___fpclassifyf^0,c
  4012   0028BE  EF96  F014         	goto	l906
  4013   0028C2                     l2780:
  4014   0028C2  0E00               	movlw	0
  4015   0028C4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4016   0028C6  0E03               	movlw	3
  4017   0028C8  6E01               	movwf	?___fpclassifyf^0,c
  4018   0028CA  EF96  F014         	goto	l906
  4019   0028CE                     l2784:
  4020   0028CE  2809               	incf	___fpclassifyf@e^0,w,c
  4021   0028D0  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4022   0028D2  A4D8               	btfss	status,2,c
  4023   0028D4  EF6E  F014         	goto	u2871
  4024   0028D8  EF70  F014         	goto	u2870
  4025   0028DC                     u2871:
  4026   0028DC  EF92  F014         	goto	l2790
  4027   0028E0                     u2870:
  4028   0028E0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4029   0028E4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4030   0028E8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4031   0028EC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4032   0028F0  0E09               	movlw	9
  4033   0028F2                     u2885:
  4034   0028F2  90D8               	bcf	status,0,c
  4035   0028F4  3605               	rlcf	??___fpclassifyf^0,f,c
  4036   0028F6  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4037   0028F8  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4038   0028FA  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4039   0028FC  2EE8               	decfsz	wreg,f,c
  4040   0028FE  EF79  F014         	goto	u2885
  4041   002902  5005               	movf	??___fpclassifyf^0,w,c
  4042   002904  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4043   002906  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4044   002908  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4045   00290A  B4D8               	btfsc	status,2,c
  4046   00290C  EF8A  F014         	goto	u2891
  4047   002910  EF8D  F014         	goto	u2890
  4048   002914                     u2891:
  4049   002914  0E01               	movlw	1
  4050   002916  EF8E  F014         	goto	u2900
  4051   00291A                     u2890:
  4052   00291A  0E00               	movlw	0
  4053   00291C                     u2900:
  4054   00291C  6E01               	movwf	?___fpclassifyf^0,c
  4055   00291E  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4056   002920  EF96  F014         	goto	l906
  4057   002924                     l2790:
  4058   002924  0E00               	movlw	0
  4059   002926  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4060   002928  0E04               	movlw	4
  4061   00292A  6E01               	movwf	?___fpclassifyf^0,c
  4062   00292C                     l906:
  4063   00292C  0012               	return		;funcret
  4064   00292E                     __end_of___fpclassifyf:
  4065                           	callstack 0
  4066                           
  4067 ;; *************** function ___fltol *****************
  4068 ;; Defined at:
  4069 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  f1              4    0[COMRAM] int 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  exp1            1    9[COMRAM] unsigned char 
  4074 ;;  sign1           1    8[COMRAM] unsigned char 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  4    0[COMRAM] long 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4084 ;;      Params:         4       0       0       0       0       0       0       0       0
  4085 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4086 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4087 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4088 ;;Total ram usage:       10 bytes
  4089 ;; Hardware stack levels used: 1
  4090 ;; Hardware stack levels required when called: 1
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_efgtoa
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text16
  4099   002626                     __ptext16:
  4100                           	callstack 0
  4101   002626                     ___fltol:
  4102                           	callstack 25
  4103   002626  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4104   002628  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4105   00262A  6E0A               	movwf	___fltol@exp1^0,c
  4106   00262C  500A               	movf	___fltol@exp1^0,w,c
  4107   00262E  A4D8               	btfss	status,2,c
  4108   002630  EF1C  F013         	goto	u2751
  4109   002634  EF1E  F013         	goto	u2750
  4110   002638                     u2751:
  4111   002638  EF28  F013         	goto	l2720
  4112   00263C                     u2750:
  4113   00263C                     l2716:
  4114   00263C  0E00               	movlw	0
  4115   00263E  6E01               	movwf	?___fltol^0,c
  4116   002640  0E00               	movlw	0
  4117   002642  6E02               	movwf	(?___fltol+1)^0,c
  4118   002644  0E00               	movlw	0
  4119   002646  6E03               	movwf	(?___fltol+2)^0,c
  4120   002648  0E00               	movlw	0
  4121   00264A  6E04               	movwf	(?___fltol+3)^0,c
  4122   00264C  EF95  F013         	goto	l394
  4123   002650                     l2720:
  4124   002650  C001  F005         	movff	___fltol@f1,??___fltol
  4125   002654  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4126   002658  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4127   00265C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4128   002660  0E20               	movlw	32
  4129   002662  EF38  F013         	goto	u2760
  4130   002666                     u2765:
  4131   002666  90D8               	bcf	status,0,c
  4132   002668  3208               	rrcf	(??___fltol+3)^0,f,c
  4133   00266A  3207               	rrcf	(??___fltol+2)^0,f,c
  4134   00266C  3206               	rrcf	(??___fltol+1)^0,f,c
  4135   00266E  3205               	rrcf	??___fltol^0,f,c
  4136   002670                     u2760:
  4137   002670  2EE8               	decfsz	wreg,f,c
  4138   002672  EF33  F013         	goto	u2765
  4139   002676  5005               	movf	??___fltol^0,w,c
  4140   002678  6E09               	movwf	___fltol@sign1^0,c
  4141   00267A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4142   00267C  0EFF               	movlw	255
  4143   00267E  1601               	andwf	___fltol@f1^0,f,c
  4144   002680  0EFF               	movlw	255
  4145   002682  1602               	andwf	(___fltol@f1+1)^0,f,c
  4146   002684  0EFF               	movlw	255
  4147   002686  1603               	andwf	(___fltol@f1+2)^0,f,c
  4148   002688  0E00               	movlw	0
  4149   00268A  1604               	andwf	(___fltol@f1+3)^0,f,c
  4150   00268C  0E96               	movlw	150
  4151   00268E  5E0A               	subwf	___fltol@exp1^0,f,c
  4152   002690  BE0A               	btfsc	___fltol@exp1^0,7,c
  4153   002692  EF4F  F013         	goto	u2770
  4154   002696  EF4D  F013         	goto	u2771
  4155   00269A                     u2771:
  4156   00269A  EF65  F013         	goto	l2740
  4157   00269E                     u2770:
  4158   00269E  500A               	movf	___fltol@exp1^0,w,c
  4159   0026A0  0A80               	xorlw	128
  4160   0026A2  0F97               	addlw	151
  4161   0026A4  B0D8               	btfsc	status,0,c
  4162   0026A6  EF57  F013         	goto	u2781
  4163   0026AA  EF59  F013         	goto	u2780
  4164   0026AE                     u2781:
  4165   0026AE  EF5B  F013         	goto	l2736
  4166   0026B2                     u2780:
  4167   0026B2  EF1E  F013         	goto	l2716
  4168   0026B6                     l2736:
  4169   0026B6  90D8               	bcf	status,0,c
  4170   0026B8  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4171   0026BA  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4172   0026BC  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4173   0026BE  3201               	rrcf	___fltol@f1^0,f,c
  4174   0026C0  3E0A               	incfsz	___fltol@exp1^0,f,c
  4175   0026C2  EF5B  F013         	goto	l2736
  4176   0026C6  EF7D  F013         	goto	l2750
  4177   0026CA                     l2740:
  4178   0026CA  0E1F               	movlw	31
  4179   0026CC  640A               	cpfsgt	___fltol@exp1^0,c
  4180   0026CE  EF6B  F013         	goto	u2791
  4181   0026D2  EF6D  F013         	goto	u2790
  4182   0026D6                     u2791:
  4183   0026D6  EF75  F013         	goto	l2748
  4184   0026DA                     u2790:
  4185   0026DA  EF1E  F013         	goto	l2716
  4186   0026DE                     l2746:
  4187   0026DE  90D8               	bcf	status,0,c
  4188   0026E0  3601               	rlcf	___fltol@f1^0,f,c
  4189   0026E2  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4190   0026E4  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4191   0026E6  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4192   0026E8  060A               	decf	___fltol@exp1^0,f,c
  4193   0026EA                     l2748:
  4194   0026EA  500A               	movf	___fltol@exp1^0,w,c
  4195   0026EC  A4D8               	btfss	status,2,c
  4196   0026EE  EF7B  F013         	goto	u2801
  4197   0026F2  EF7D  F013         	goto	u2800
  4198   0026F6                     u2801:
  4199   0026F6  EF6F  F013         	goto	l2746
  4200   0026FA                     u2800:
  4201   0026FA                     l2750:
  4202   0026FA  5009               	movf	___fltol@sign1^0,w,c
  4203   0026FC  B4D8               	btfsc	status,2,c
  4204   0026FE  EF83  F013         	goto	u2811
  4205   002702  EF85  F013         	goto	u2810
  4206   002706                     u2811:
  4207   002706  EF8D  F013         	goto	l2754
  4208   00270A                     u2810:
  4209   00270A  1E04               	comf	(___fltol@f1+3)^0,f,c
  4210   00270C  1E03               	comf	(___fltol@f1+2)^0,f,c
  4211   00270E  1E02               	comf	(___fltol@f1+1)^0,f,c
  4212   002710  6C01               	negf	___fltol@f1^0,c
  4213   002712  0E00               	movlw	0
  4214   002714  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4215   002716  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4216   002718  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4217   00271A                     l2754:
  4218   00271A  C001  F001         	movff	___fltol@f1,?___fltol
  4219   00271E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4220   002722  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4221   002726  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4222   00272A                     l394:
  4223   00272A  0012               	return		;funcret
  4224   00272C                     __end_of___fltol:
  4225                           	callstack 0
  4226                           
  4227 ;; *************** function ___flsub *****************
  4228 ;; Defined at:
  4229 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  b               4   39[COMRAM] long 
  4232 ;;  a               4   43[COMRAM] long 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  4   39[COMRAM] long 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4244 ;;      Params:         8       0       0       0       0       0       0       0       0
  4245 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4247 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4248 ;;Total ram usage:        8 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; Hardware stack levels required when called: 2
  4251 ;; This function calls:
  4252 ;;		___fladd
  4253 ;; This function is called by:
  4254 ;;		_efgtoa
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text17
  4259   002E1E                     __ptext17:
  4260                           	callstack 0
  4261   002E1E                     ___flsub:
  4262                           	callstack 24
  4263   002E1E  0E00               	movlw	0
  4264   002E20  1A2C               	xorwf	___flsub@a^0,f,c
  4265   002E22  0E00               	movlw	0
  4266   002E24  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4267   002E26  0E00               	movlw	0
  4268   002E28  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4269   002E2A  0E80               	movlw	128
  4270   002E2C  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4271   002E2E  C028  F001         	movff	___flsub@b,___fladd@b
  4272   002E32  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4273   002E36  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4274   002E3A  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4275   002E3E  C02C  F005         	movff	___flsub@a,___fladd@a
  4276   002E42  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4277   002E46  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4278   002E4A  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4279   002E4E  EC0F  F009         	call	___fladd	;wreg free
  4280   002E52  C001  F028         	movff	?___fladd,?___flsub
  4281   002E56  C002  F029         	movff	?___fladd+1,?___flsub+1
  4282   002E5A  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4283   002E5E  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4284   002E62  0012               	return		;funcret
  4285   002E64                     __end_of___flsub:
  4286                           	callstack 0
  4287                           
  4288 ;; *************** function ___fladd *****************
  4289 ;; Defined at:
  4290 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  b               4    0[COMRAM] long 
  4293 ;;  a               4    4[COMRAM] long 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  grs             1   15[COMRAM] unsigned char 
  4296 ;;  bexp            1   14[COMRAM] unsigned char 
  4297 ;;  aexp            1   13[COMRAM] unsigned char 
  4298 ;;  signs           1   12[COMRAM] unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  4    0[COMRAM] unsigned char 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4308 ;;      Params:         8       0       0       0       0       0       0       0       0
  4309 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4310 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4311 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4312 ;;Total ram usage:       16 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; Hardware stack levels required when called: 1
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		___flsub
  4319 ;;		_efgtoa
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text18
  4324   00121E                     __ptext18:
  4325                           	callstack 0
  4326   00121E                     ___fladd:
  4327                           	callstack 24
  4328   00121E  5004               	movf	(___fladd@b+3)^0,w,c
  4329   001220  0B80               	andlw	128
  4330   001222  6E0D               	movwf	___fladd@signs^0,c
  4331   001224  5004               	movf	(___fladd@b+3)^0,w,c
  4332   001226  2404               	addwf	(___fladd@b+3)^0,w,c
  4333   001228  6E0F               	movwf	___fladd@bexp^0,c
  4334   00122A  AE03               	btfss	(___fladd@b+2)^0,7,c
  4335   00122C  EF1A  F009         	goto	u1841
  4336   001230  EF1C  F009         	goto	u1840
  4337   001234                     u1841:
  4338   001234  EF1D  F009         	goto	l2184
  4339   001238                     u1840:
  4340   001238  800F               	bsf	___fladd@bexp^0,0,c
  4341   00123A                     l2184:
  4342   00123A  500F               	movf	___fladd@bexp^0,w,c
  4343   00123C  B4D8               	btfsc	status,2,c
  4344   00123E  EF23  F009         	goto	u1851
  4345   001242  EF25  F009         	goto	u1850
  4346   001246                     u1851:
  4347   001246  EF3A  F009         	goto	l2194
  4348   00124A                     u1850:
  4349   00124A  280F               	incf	___fladd@bexp^0,w,c
  4350   00124C  A4D8               	btfss	status,2,c
  4351   00124E  EF2B  F009         	goto	u1861
  4352   001252  EF2D  F009         	goto	u1860
  4353   001256                     u1861:
  4354   001256  EF35  F009         	goto	l2190
  4355   00125A                     u1860:
  4356   00125A  0E00               	movlw	0
  4357   00125C  6E01               	movwf	___fladd@b^0,c
  4358   00125E  0E00               	movlw	0
  4359   001260  6E02               	movwf	(___fladd@b+1)^0,c
  4360   001262  0E00               	movlw	0
  4361   001264  6E03               	movwf	(___fladd@b+2)^0,c
  4362   001266  0E00               	movlw	0
  4363   001268  6E04               	movwf	(___fladd@b+3)^0,c
  4364   00126A                     l2190:
  4365   00126A  8E03               	bsf	(___fladd@b+2)^0,7,c
  4366   00126C  0E00               	movlw	0
  4367   00126E  6E04               	movwf	(___fladd@b+3)^0,c
  4368   001270  EF42  F009         	goto	l2196
  4369   001274                     l2194:
  4370   001274  0E00               	movlw	0
  4371   001276  6E01               	movwf	___fladd@b^0,c
  4372   001278  0E00               	movlw	0
  4373   00127A  6E02               	movwf	(___fladd@b+1)^0,c
  4374   00127C  0E00               	movlw	0
  4375   00127E  6E03               	movwf	(___fladd@b+2)^0,c
  4376   001280  0E00               	movlw	0
  4377   001282  6E04               	movwf	(___fladd@b+3)^0,c
  4378   001284                     l2196:
  4379   001284  5008               	movf	(___fladd@a+3)^0,w,c
  4380   001286  0B80               	andlw	128
  4381   001288  6E0E               	movwf	___fladd@aexp^0,c
  4382   00128A  500D               	movf	___fladd@signs^0,w,c
  4383   00128C  180E               	xorwf	___fladd@aexp^0,w,c
  4384   00128E  B4D8               	btfsc	status,2,c
  4385   001290  EF4C  F009         	goto	u1871
  4386   001294  EF4E  F009         	goto	u1870
  4387   001298                     u1871:
  4388   001298  EF4F  F009         	goto	l2202
  4389   00129C                     u1870:
  4390   00129C  8C0D               	bsf	___fladd@signs^0,6,c
  4391   00129E                     l2202:
  4392   00129E  5008               	movf	(___fladd@a+3)^0,w,c
  4393   0012A0  2408               	addwf	(___fladd@a+3)^0,w,c
  4394   0012A2  6E0E               	movwf	___fladd@aexp^0,c
  4395   0012A4  AE07               	btfss	(___fladd@a+2)^0,7,c
  4396   0012A6  EF57  F009         	goto	u1881
  4397   0012AA  EF59  F009         	goto	u1880
  4398   0012AE                     u1881:
  4399   0012AE  EF5A  F009         	goto	l2208
  4400   0012B2                     u1880:
  4401   0012B2  800E               	bsf	___fladd@aexp^0,0,c
  4402   0012B4                     l2208:
  4403   0012B4  500E               	movf	___fladd@aexp^0,w,c
  4404   0012B6  B4D8               	btfsc	status,2,c
  4405   0012B8  EF60  F009         	goto	u1891
  4406   0012BC  EF62  F009         	goto	u1890
  4407   0012C0                     u1891:
  4408   0012C0  EF77  F009         	goto	l2218
  4409   0012C4                     u1890:
  4410   0012C4  280E               	incf	___fladd@aexp^0,w,c
  4411   0012C6  A4D8               	btfss	status,2,c
  4412   0012C8  EF68  F009         	goto	u1901
  4413   0012CC  EF6A  F009         	goto	u1900
  4414   0012D0                     u1901:
  4415   0012D0  EF72  F009         	goto	l2214
  4416   0012D4                     u1900:
  4417   0012D4  0E00               	movlw	0
  4418   0012D6  6E05               	movwf	___fladd@a^0,c
  4419   0012D8  0E00               	movlw	0
  4420   0012DA  6E06               	movwf	(___fladd@a+1)^0,c
  4421   0012DC  0E00               	movlw	0
  4422   0012DE  6E07               	movwf	(___fladd@a+2)^0,c
  4423   0012E0  0E00               	movlw	0
  4424   0012E2  6E08               	movwf	(___fladd@a+3)^0,c
  4425   0012E4                     l2214:
  4426   0012E4  8E07               	bsf	(___fladd@a+2)^0,7,c
  4427   0012E6  0E00               	movlw	0
  4428   0012E8  6E08               	movwf	(___fladd@a+3)^0,c
  4429   0012EA  EF7F  F009         	goto	l2220
  4430   0012EE                     l2218:
  4431   0012EE  0E00               	movlw	0
  4432   0012F0  6E05               	movwf	___fladd@a^0,c
  4433   0012F2  0E00               	movlw	0
  4434   0012F4  6E06               	movwf	(___fladd@a+1)^0,c
  4435   0012F6  0E00               	movlw	0
  4436   0012F8  6E07               	movwf	(___fladd@a+2)^0,c
  4437   0012FA  0E00               	movlw	0
  4438   0012FC  6E08               	movwf	(___fladd@a+3)^0,c
  4439   0012FE                     l2220:
  4440   0012FE  500F               	movf	___fladd@bexp^0,w,c
  4441   001300  5C0E               	subwf	___fladd@aexp^0,w,c
  4442   001302  B0D8               	btfsc	status,0,c
  4443   001304  EF86  F009         	goto	u1911
  4444   001308  EF88  F009         	goto	u1910
  4445   00130C                     u1911:
  4446   00130C  EFAF  F009         	goto	l2256
  4447   001310                     u1910:
  4448   001310  AC0D               	btfss	___fladd@signs^0,6,c
  4449   001312  EF8D  F009         	goto	u1921
  4450   001316  EF8F  F009         	goto	u1920
  4451   00131A                     u1921:
  4452   00131A  EF91  F009         	goto	l2226
  4453   00131E                     u1920:
  4454   00131E  0E80               	movlw	128
  4455   001320  1A0D               	xorwf	___fladd@signs^0,f,c
  4456   001322                     l2226:
  4457   001322  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4458   001326  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4459   00132A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4460   00132E  C001  F010         	movff	___fladd@b,___fladd@grs
  4461   001332  C005  F001         	movff	___fladd@a,___fladd@b
  4462   001336  C010  F005         	movff	___fladd@grs,___fladd@a
  4463   00133A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4464   00133E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4465   001342  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4466   001346  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4467   00134A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4468   00134E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4469   001352  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4470   001356  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4471   00135A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4472   00135E                     l2256:
  4473   00135E  0E00               	movlw	0
  4474   001360  6E10               	movwf	___fladd@grs^0,c
  4475   001362  500F               	movf	___fladd@bexp^0,w,c
  4476   001364  C00E  F009         	movff	___fladd@aexp,??___fladd
  4477   001368  6A0A               	clrf	(??___fladd+1)^0,c
  4478   00136A  5E09               	subwf	??___fladd^0,f,c
  4479   00136C  0E00               	movlw	0
  4480   00136E  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4481   001370  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4482   001372  EFC4  F009         	goto	u1931
  4483   001376  500A               	movf	(??___fladd+1)^0,w,c
  4484   001378  E109               	bnz	u1930
  4485   00137A  0E1A               	movlw	26
  4486   00137C  5C09               	subwf	??___fladd^0,w,c
  4487   00137E  A0D8               	btfss	status,0,c
  4488   001380  EFC4  F009         	goto	u1931
  4489   001384  EFC6  F009         	goto	u1930
  4490   001388                     u1931:
  4491   001388  EFFD  F009         	goto	l626
  4492   00138C                     u1930:
  4493   00138C  5001               	movf	___fladd@b^0,w,c
  4494   00138E  1002               	iorwf	(___fladd@b+1)^0,w,c
  4495   001390  1003               	iorwf	(___fladd@b+2)^0,w,c
  4496   001392  1004               	iorwf	(___fladd@b+3)^0,w,c
  4497   001394  A4D8               	btfss	status,2,c
  4498   001396  EFCF  F009         	goto	u1941
  4499   00139A  EFD2  F009         	goto	u1940
  4500   00139E                     u1941:
  4501   00139E  0E01               	movlw	1
  4502   0013A0  EFD3  F009         	goto	u1950
  4503   0013A4                     u1940:
  4504   0013A4  0E00               	movlw	0
  4505   0013A6                     u1950:
  4506   0013A6  6E10               	movwf	___fladd@grs^0,c
  4507   0013A8  0E00               	movlw	0
  4508   0013AA  6E01               	movwf	___fladd@b^0,c
  4509   0013AC  0E00               	movlw	0
  4510   0013AE  6E02               	movwf	(___fladd@b+1)^0,c
  4511   0013B0  0E00               	movlw	0
  4512   0013B2  6E03               	movwf	(___fladd@b+2)^0,c
  4513   0013B4  0E00               	movlw	0
  4514   0013B6  6E04               	movwf	(___fladd@b+3)^0,c
  4515   0013B8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4516   0013BC  EF06  F00A         	goto	l625
  4517   0013C0                     l627:
  4518   0013C0  A010               	btfss	___fladd@grs^0,0,c
  4519   0013C2  EFE5  F009         	goto	u1961
  4520   0013C6  EFE7  F009         	goto	u1960
  4521   0013CA                     u1961:
  4522   0013CA  EFED  F009         	goto	l2268
  4523   0013CE                     u1960:
  4524   0013CE  90D8               	bcf	status,0,c
  4525   0013D0  3010               	rrcf	___fladd@grs^0,w,c
  4526   0013D2  0901               	iorlw	1
  4527   0013D4  6E10               	movwf	___fladd@grs^0,c
  4528   0013D6  EFEF  F009         	goto	l2270
  4529   0013DA                     l2268:
  4530   0013DA  90D8               	bcf	status,0,c
  4531   0013DC  3210               	rrcf	___fladd@grs^0,f,c
  4532   0013DE                     l2270:
  4533   0013DE  A001               	btfss	___fladd@b^0,0,c
  4534   0013E0  EFF4  F009         	goto	u1971
  4535   0013E4  EFF6  F009         	goto	u1970
  4536   0013E8                     u1971:
  4537   0013E8  EFF7  F009         	goto	l2274
  4538   0013EC                     u1970:
  4539   0013EC  8E10               	bsf	___fladd@grs^0,7,c
  4540   0013EE                     l2274:
  4541   0013EE  3404               	rlcf	(___fladd@b+3)^0,w,c
  4542   0013F0  3204               	rrcf	(___fladd@b+3)^0,f,c
  4543   0013F2  3203               	rrcf	(___fladd@b+2)^0,f,c
  4544   0013F4  3202               	rrcf	(___fladd@b+1)^0,f,c
  4545   0013F6  3201               	rrcf	___fladd@b^0,f,c
  4546   0013F8  2A0F               	incf	___fladd@bexp^0,f,c
  4547   0013FA                     l626:
  4548   0013FA  500E               	movf	___fladd@aexp^0,w,c
  4549   0013FC  5C0F               	subwf	___fladd@bexp^0,w,c
  4550   0013FE  A0D8               	btfss	status,0,c
  4551   001400  EF04  F00A         	goto	u1981
  4552   001404  EF06  F00A         	goto	u1980
  4553   001408                     u1981:
  4554   001408  EFE0  F009         	goto	l627
  4555   00140C                     u1980:
  4556   00140C                     l625:
  4557   00140C  BC0D               	btfsc	___fladd@signs^0,6,c
  4558   00140E  EF0B  F00A         	goto	u1991
  4559   001412  EF0D  F00A         	goto	u1990
  4560   001416                     u1991:
  4561   001416  EF4D  F00A         	goto	l2302
  4562   00141A                     u1990:
  4563   00141A  500F               	movf	___fladd@bexp^0,w,c
  4564   00141C  A4D8               	btfss	status,2,c
  4565   00141E  EF13  F00A         	goto	u2001
  4566   001422  EF15  F00A         	goto	u2000
  4567   001426                     u2001:
  4568   001426  EF1F  F00A         	goto	l2284
  4569   00142A                     u2000:
  4570   00142A  0E00               	movlw	0
  4571   00142C  6E01               	movwf	?___fladd^0,c
  4572   00142E  0E00               	movlw	0
  4573   001430  6E02               	movwf	(?___fladd+1)^0,c
  4574   001432  0E00               	movlw	0
  4575   001434  6E03               	movwf	(?___fladd+2)^0,c
  4576   001436  0E00               	movlw	0
  4577   001438  6E04               	movwf	(?___fladd+3)^0,c
  4578   00143A  EF6E  F00B         	goto	l634
  4579   00143E                     l2284:
  4580   00143E  5005               	movf	___fladd@a^0,w,c
  4581   001440  2601               	addwf	___fladd@b^0,f,c
  4582   001442  5006               	movf	(___fladd@a+1)^0,w,c
  4583   001444  2202               	addwfc	(___fladd@b+1)^0,f,c
  4584   001446  5007               	movf	(___fladd@a+2)^0,w,c
  4585   001448  2203               	addwfc	(___fladd@b+2)^0,f,c
  4586   00144A  5008               	movf	(___fladd@a+3)^0,w,c
  4587   00144C  2204               	addwfc	(___fladd@b+3)^0,f,c
  4588   00144E  A004               	btfss	(___fladd@b+3)^0,0,c
  4589   001450  EF2C  F00A         	goto	u2011
  4590   001454  EF2E  F00A         	goto	u2010
  4591   001458                     u2011:
  4592   001458  EFDA  F00A         	goto	l2338
  4593   00145C                     u2010:
  4594   00145C  A010               	btfss	___fladd@grs^0,0,c
  4595   00145E  EF33  F00A         	goto	u2021
  4596   001462  EF35  F00A         	goto	u2020
  4597   001466                     u2021:
  4598   001466  EF3B  F00A         	goto	l2292
  4599   00146A                     u2020:
  4600   00146A  90D8               	bcf	status,0,c
  4601   00146C  3010               	rrcf	___fladd@grs^0,w,c
  4602   00146E  0901               	iorlw	1
  4603   001470  6E10               	movwf	___fladd@grs^0,c
  4604   001472  EF3D  F00A         	goto	l2294
  4605   001476                     l2292:
  4606   001476  90D8               	bcf	status,0,c
  4607   001478  3210               	rrcf	___fladd@grs^0,f,c
  4608   00147A                     l2294:
  4609   00147A  A001               	btfss	___fladd@b^0,0,c
  4610   00147C  EF42  F00A         	goto	u2031
  4611   001480  EF44  F00A         	goto	u2030
  4612   001484                     u2031:
  4613   001484  EF45  F00A         	goto	l2298
  4614   001488                     u2030:
  4615   001488  8E10               	bsf	___fladd@grs^0,7,c
  4616   00148A                     l2298:
  4617   00148A  3404               	rlcf	(___fladd@b+3)^0,w,c
  4618   00148C  3204               	rrcf	(___fladd@b+3)^0,f,c
  4619   00148E  3203               	rrcf	(___fladd@b+2)^0,f,c
  4620   001490  3202               	rrcf	(___fladd@b+1)^0,f,c
  4621   001492  3201               	rrcf	___fladd@b^0,f,c
  4622   001494  2A0F               	incf	___fladd@bexp^0,f,c
  4623   001496  EFDA  F00A         	goto	l2338
  4624   00149A                     l2302:
  4625   00149A  5005               	movf	___fladd@a^0,w,c
  4626   00149C  5C01               	subwf	___fladd@b^0,w,c
  4627   00149E  5006               	movf	(___fladd@a+1)^0,w,c
  4628   0014A0  5802               	subwfb	(___fladd@b+1)^0,w,c
  4629   0014A2  5007               	movf	(___fladd@a+2)^0,w,c
  4630   0014A4  5803               	subwfb	(___fladd@b+2)^0,w,c
  4631   0014A6  5004               	movf	(___fladd@b+3)^0,w,c
  4632   0014A8  0A80               	xorlw	128
  4633   0014AA  6E09               	movwf	??___fladd^0,c
  4634   0014AC  5008               	movf	(___fladd@a+3)^0,w,c
  4635   0014AE  0A80               	xorlw	128
  4636   0014B0  5809               	subwfb	??___fladd^0,w,c
  4637   0014B2  B0D8               	btfsc	status,0,c
  4638   0014B4  EF5E  F00A         	goto	u2041
  4639   0014B8  EF60  F00A         	goto	u2040
  4640   0014BC                     u2041:
  4641   0014BC  EF8B  F00A         	goto	l2312
  4642   0014C0                     u2040:
  4643   0014C0  5001               	movf	___fladd@b^0,w,c
  4644   0014C2  5C05               	subwf	___fladd@a^0,w,c
  4645   0014C4  6E09               	movwf	??___fladd^0,c
  4646   0014C6  5002               	movf	(___fladd@b+1)^0,w,c
  4647   0014C8  5806               	subwfb	(___fladd@a+1)^0,w,c
  4648   0014CA  6E0A               	movwf	(??___fladd+1)^0,c
  4649   0014CC  5003               	movf	(___fladd@b+2)^0,w,c
  4650   0014CE  5807               	subwfb	(___fladd@a+2)^0,w,c
  4651   0014D0  6E0B               	movwf	(??___fladd+2)^0,c
  4652   0014D2  5004               	movf	(___fladd@b+3)^0,w,c
  4653   0014D4  5808               	subwfb	(___fladd@a+3)^0,w,c
  4654   0014D6  6E0C               	movwf	(??___fladd+3)^0,c
  4655   0014D8  0EFF               	movlw	255
  4656   0014DA  2409               	addwf	??___fladd^0,w,c
  4657   0014DC  6E01               	movwf	___fladd@b^0,c
  4658   0014DE  0EFF               	movlw	255
  4659   0014E0  200A               	addwfc	(??___fladd+1)^0,w,c
  4660   0014E2  6E02               	movwf	(___fladd@b+1)^0,c
  4661   0014E4  0EFF               	movlw	255
  4662   0014E6  200B               	addwfc	(??___fladd+2)^0,w,c
  4663   0014E8  6E03               	movwf	(___fladd@b+2)^0,c
  4664   0014EA  0EFF               	movlw	255
  4665   0014EC  200C               	addwfc	(??___fladd+3)^0,w,c
  4666   0014EE  6E04               	movwf	(___fladd@b+3)^0,c
  4667   0014F0  0E80               	movlw	128
  4668   0014F2  1A0D               	xorwf	___fladd@signs^0,f,c
  4669   0014F4  6C10               	negf	___fladd@grs^0,c
  4670   0014F6  5010               	movf	___fladd@grs^0,w,c
  4671   0014F8  A4D8               	btfss	status,2,c
  4672   0014FA  EF81  F00A         	goto	u2051
  4673   0014FE  EF83  F00A         	goto	u2050
  4674   001502                     u2051:
  4675   001502  EF93  F00A         	goto	l642
  4676   001506                     u2050:
  4677   001506  0E01               	movlw	1
  4678   001508  2601               	addwf	___fladd@b^0,f,c
  4679   00150A  0E00               	movlw	0
  4680   00150C  2202               	addwfc	(___fladd@b+1)^0,f,c
  4681   00150E  2203               	addwfc	(___fladd@b+2)^0,f,c
  4682   001510  2204               	addwfc	(___fladd@b+3)^0,f,c
  4683   001512  EF93  F00A         	goto	l642
  4684   001516                     l2312:
  4685   001516  5005               	movf	___fladd@a^0,w,c
  4686   001518  5E01               	subwf	___fladd@b^0,f,c
  4687   00151A  5006               	movf	(___fladd@a+1)^0,w,c
  4688   00151C  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4689   00151E  5007               	movf	(___fladd@a+2)^0,w,c
  4690   001520  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4691   001522  5008               	movf	(___fladd@a+3)^0,w,c
  4692   001524  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4693   001526                     l642:
  4694   001526  5001               	movf	___fladd@b^0,w,c
  4695   001528  1002               	iorwf	(___fladd@b+1)^0,w,c
  4696   00152A  1003               	iorwf	(___fladd@b+2)^0,w,c
  4697   00152C  1004               	iorwf	(___fladd@b+3)^0,w,c
  4698   00152E  A4D8               	btfss	status,2,c
  4699   001530  EF9C  F00A         	goto	u2061
  4700   001534  EF9E  F00A         	goto	u2060
  4701   001538                     u2061:
  4702   001538  EFD3  F00A         	goto	l2336
  4703   00153C                     u2060:
  4704   00153C  5010               	movf	___fladd@grs^0,w,c
  4705   00153E  A4D8               	btfss	status,2,c
  4706   001540  EFA4  F00A         	goto	u2071
  4707   001544  EFA6  F00A         	goto	u2070
  4708   001548                     u2071:
  4709   001548  EFD3  F00A         	goto	l2336
  4710   00154C                     u2070:
  4711   00154C  0E00               	movlw	0
  4712   00154E  6E01               	movwf	?___fladd^0,c
  4713   001550  0E00               	movlw	0
  4714   001552  6E02               	movwf	(?___fladd+1)^0,c
  4715   001554  0E00               	movlw	0
  4716   001556  6E03               	movwf	(?___fladd+2)^0,c
  4717   001558  0E00               	movlw	0
  4718   00155A  6E04               	movwf	(?___fladd+3)^0,c
  4719   00155C  EF6E  F00B         	goto	l634
  4720   001560                     l2320:
  4721   001560  90D8               	bcf	status,0,c
  4722   001562  3601               	rlcf	___fladd@b^0,f,c
  4723   001564  3602               	rlcf	(___fladd@b+1)^0,f,c
  4724   001566  3603               	rlcf	(___fladd@b+2)^0,f,c
  4725   001568  3604               	rlcf	(___fladd@b+3)^0,f,c
  4726   00156A  AE10               	btfss	___fladd@grs^0,7,c
  4727   00156C  EFBA  F00A         	goto	u2081
  4728   001570  EFBC  F00A         	goto	u2080
  4729   001574                     u2081:
  4730   001574  EFBD  F00A         	goto	l2326
  4731   001578                     u2080:
  4732   001578  8001               	bsf	___fladd@b^0,0,c
  4733   00157A                     l2326:
  4734   00157A  A010               	btfss	___fladd@grs^0,0,c
  4735   00157C  EFC2  F00A         	goto	u2091
  4736   001580  EFC4  F00A         	goto	u2090
  4737   001584                     u2091:
  4738   001584  EFC8  F00A         	goto	l2330
  4739   001588                     u2090:
  4740   001588  80D8               	bsf	status,0,c
  4741   00158A  3610               	rlcf	___fladd@grs^0,f,c
  4742   00158C  EFCA  F00A         	goto	l2332
  4743   001590                     l2330:
  4744   001590  90D8               	bcf	status,0,c
  4745   001592  3610               	rlcf	___fladd@grs^0,f,c
  4746   001594                     l2332:
  4747   001594  500F               	movf	___fladd@bexp^0,w,c
  4748   001596  B4D8               	btfsc	status,2,c
  4749   001598  EFD0  F00A         	goto	u2101
  4750   00159C  EFD2  F00A         	goto	u2100
  4751   0015A0                     u2101:
  4752   0015A0  EFD3  F00A         	goto	l2336
  4753   0015A4                     u2100:
  4754   0015A4  060F               	decf	___fladd@bexp^0,f,c
  4755   0015A6                     l2336:
  4756   0015A6  AE03               	btfss	(___fladd@b+2)^0,7,c
  4757   0015A8  EFD8  F00A         	goto	u2111
  4758   0015AC  EFDA  F00A         	goto	u2110
  4759   0015B0                     u2111:
  4760   0015B0  EFB0  F00A         	goto	l2320
  4761   0015B4                     u2110:
  4762   0015B4                     l2338:
  4763   0015B4  0E00               	movlw	0
  4764   0015B6  6E0E               	movwf	___fladd@aexp^0,c
  4765   0015B8  AE10               	btfss	___fladd@grs^0,7,c
  4766   0015BA  EFE1  F00A         	goto	u2121
  4767   0015BE  EFE3  F00A         	goto	u2120
  4768   0015C2                     u2121:
  4769   0015C2  EFFB  F00A         	goto	l651
  4770   0015C6                     u2120:
  4771   0015C6  C010  F009         	movff	___fladd@grs,??___fladd
  4772   0015CA  0E7F               	movlw	127
  4773   0015CC  1609               	andwf	??___fladd^0,f,c
  4774   0015CE  B4D8               	btfsc	status,2,c
  4775   0015D0  EFEC  F00A         	goto	u2131
  4776   0015D4  EFEE  F00A         	goto	u2130
  4777   0015D8                     u2131:
  4778   0015D8  EFF2  F00A         	goto	l652
  4779   0015DC                     u2130:
  4780   0015DC                     l2344:
  4781   0015DC  0E01               	movlw	1
  4782   0015DE  6E0E               	movwf	___fladd@aexp^0,c
  4783   0015E0  EFFB  F00A         	goto	l651
  4784   0015E4                     l652:
  4785   0015E4  A001               	btfss	___fladd@b^0,0,c
  4786   0015E6  EFF7  F00A         	goto	u2141
  4787   0015EA  EFF9  F00A         	goto	u2140
  4788   0015EE                     u2141:
  4789   0015EE  EFFB  F00A         	goto	l651
  4790   0015F2                     u2140:
  4791   0015F2  EFEE  F00A         	goto	l2344
  4792   0015F6                     l651:
  4793   0015F6  500E               	movf	___fladd@aexp^0,w,c
  4794   0015F8  B4D8               	btfsc	status,2,c
  4795   0015FA  EF01  F00B         	goto	u2151
  4796   0015FE  EF03  F00B         	goto	u2150
  4797   001602                     u2151:
  4798   001602  EF2E  F00B         	goto	l2356
  4799   001606                     u2150:
  4800   001606  0E01               	movlw	1
  4801   001608  2601               	addwf	___fladd@b^0,f,c
  4802   00160A  0E00               	movlw	0
  4803   00160C  2202               	addwfc	(___fladd@b+1)^0,f,c
  4804   00160E  2203               	addwfc	(___fladd@b+2)^0,f,c
  4805   001610  2204               	addwfc	(___fladd@b+3)^0,f,c
  4806   001612  A004               	btfss	(___fladd@b+3)^0,0,c
  4807   001614  EF0E  F00B         	goto	u2161
  4808   001618  EF10  F00B         	goto	u2160
  4809   00161C                     u2161:
  4810   00161C  EF2E  F00B         	goto	l2356
  4811   001620                     u2160:
  4812   001620  C001  F009         	movff	___fladd@b,??___fladd
  4813   001624  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4814   001628  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4815   00162C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4816   001630  340C               	rlcf	(??___fladd+3)^0,w,c
  4817   001632  320C               	rrcf	(??___fladd+3)^0,f,c
  4818   001634  320B               	rrcf	(??___fladd+2)^0,f,c
  4819   001636  320A               	rrcf	(??___fladd+1)^0,f,c
  4820   001638  3209               	rrcf	??___fladd^0,f,c
  4821   00163A  C009  F001         	movff	??___fladd,___fladd@b
  4822   00163E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4823   001642  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4824   001646  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4825   00164A  280F               	incf	___fladd@bexp^0,w,c
  4826   00164C  B4D8               	btfsc	status,2,c
  4827   00164E  EF2B  F00B         	goto	u2171
  4828   001652  EF2D  F00B         	goto	u2170
  4829   001656                     u2171:
  4830   001656  EF2E  F00B         	goto	l2356
  4831   00165A                     u2170:
  4832   00165A  2A0F               	incf	___fladd@bexp^0,f,c
  4833   00165C                     l2356:
  4834   00165C  280F               	incf	___fladd@bexp^0,w,c
  4835   00165E  B4D8               	btfsc	status,2,c
  4836   001660  EF34  F00B         	goto	u2181
  4837   001664  EF36  F00B         	goto	u2180
  4838   001668                     u2181:
  4839   001668  EF3E  F00B         	goto	l2360
  4840   00166C                     u2180:
  4841   00166C  500F               	movf	___fladd@bexp^0,w,c
  4842   00166E  A4D8               	btfss	status,2,c
  4843   001670  EF3C  F00B         	goto	u2191
  4844   001674  EF3E  F00B         	goto	u2190
  4845   001678                     u2191:
  4846   001678  EF50  F00B         	goto	l2364
  4847   00167C                     u2190:
  4848   00167C                     l2360:
  4849   00167C  0E00               	movlw	0
  4850   00167E  6E01               	movwf	___fladd@b^0,c
  4851   001680  0E00               	movlw	0
  4852   001682  6E02               	movwf	(___fladd@b+1)^0,c
  4853   001684  0E00               	movlw	0
  4854   001686  6E03               	movwf	(___fladd@b+2)^0,c
  4855   001688  0E00               	movlw	0
  4856   00168A  6E04               	movwf	(___fladd@b+3)^0,c
  4857   00168C  500F               	movf	___fladd@bexp^0,w,c
  4858   00168E  A4D8               	btfss	status,2,c
  4859   001690  EF4C  F00B         	goto	u2201
  4860   001694  EF4E  F00B         	goto	u2200
  4861   001698                     u2201:
  4862   001698  EF50  F00B         	goto	l2364
  4863   00169C                     u2200:
  4864   00169C  0E00               	movlw	0
  4865   00169E  6E0D               	movwf	___fladd@signs^0,c
  4866   0016A0                     l2364:
  4867   0016A0  A00F               	btfss	___fladd@bexp^0,0,c
  4868   0016A2  EF55  F00B         	goto	u2211
  4869   0016A6  EF57  F00B         	goto	u2210
  4870   0016AA                     u2211:
  4871   0016AA  EF5A  F00B         	goto	l2368
  4872   0016AE                     u2210:
  4873   0016AE  8E03               	bsf	(___fladd@b+2)^0,7,c
  4874   0016B0  EF5B  F00B         	goto	l2370
  4875   0016B4                     l2368:
  4876   0016B4  9E03               	bcf	(___fladd@b+2)^0,7,c
  4877   0016B6                     l2370:
  4878   0016B6  90D8               	bcf	status,0,c
  4879   0016B8  300F               	rrcf	___fladd@bexp^0,w,c
  4880   0016BA  6E04               	movwf	(___fladd@b+3)^0,c
  4881   0016BC  AE0D               	btfss	___fladd@signs^0,7,c
  4882   0016BE  EF63  F00B         	goto	u2221
  4883   0016C2  EF65  F00B         	goto	u2220
  4884   0016C6                     u2221:
  4885   0016C6  EF66  F00B         	goto	l2376
  4886   0016CA                     u2220:
  4887   0016CA  8E04               	bsf	(___fladd@b+3)^0,7,c
  4888   0016CC                     l2376:
  4889   0016CC  C001  F001         	movff	___fladd@b,?___fladd
  4890   0016D0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4891   0016D4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4892   0016D8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4893   0016DC                     l634:
  4894   0016DC  0012               	return		;funcret
  4895   0016DE                     __end_of___fladd:
  4896                           	callstack 0
  4897                           
  4898 ;; *************** function ___flneg *****************
  4899 ;; Defined at:
  4900 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  f1              4    0[COMRAM] unsigned char 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  4    0[COMRAM] unsigned char 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4914 ;;      Params:         4       0       0       0       0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4917 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4918 ;;Total ram usage:        4 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; Hardware stack levels required when called: 1
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_efgtoa
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text19
  4929   002F2C                     __ptext19:
  4930                           	callstack 0
  4931   002F2C                     ___flneg:
  4932                           	callstack 25
  4933   002F2C  5001               	movf	___flneg@f1^0,w,c
  4934   002F2E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4935   002F30  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4936   002F32  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4937   002F34  B4D8               	btfsc	status,2,c
  4938   002F36  EF9F  F017         	goto	u2741
  4939   002F3A  EFA1  F017         	goto	u2740
  4940   002F3E                     u2741:
  4941   002F3E  EFA9  F017         	goto	l2710
  4942   002F42                     u2740:
  4943   002F42  0E00               	movlw	0
  4944   002F44  1A01               	xorwf	___flneg@f1^0,f,c
  4945   002F46  0E00               	movlw	0
  4946   002F48  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4947   002F4A  0E00               	movlw	0
  4948   002F4C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4949   002F4E  0E80               	movlw	128
  4950   002F50  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4951   002F52                     l2710:
  4952   002F52  C001  F001         	movff	___flneg@f1,?___flneg
  4953   002F56  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4954   002F5A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4955   002F5E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4956   002F62  0012               	return		;funcret
  4957   002F64                     __end_of___flneg:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function ___flmul *****************
  4961 ;; Defined at:
  4962 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  b               4   14[COMRAM] unsigned char 
  4965 ;;  a               4   18[COMRAM] unsigned char 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  prod            4   33[COMRAM] struct .
  4968 ;;  grs             4   27[COMRAM] unsigned long 
  4969 ;;  temp            2   37[COMRAM] struct .
  4970 ;;  bexp            1   32[COMRAM] unsigned char 
  4971 ;;  aexp            1   31[COMRAM] unsigned char 
  4972 ;;  sign            1   26[COMRAM] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  4   14[COMRAM] unsigned char 
  4975 ;; Registers used:
  4976 ;;		wreg, status,2, status,0, prodl, prodh
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4982 ;;      Params:         8       0       0       0       0       0       0       0       0
  4983 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4984 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4985 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4986 ;;Total ram usage:       25 bytes
  4987 ;; Hardware stack levels used: 1
  4988 ;; Hardware stack levels required when called: 1
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_main
  4993 ;;		_efgtoa
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text20
  4998   0016DE                     __ptext20:
  4999                           	callstack 0
  5000   0016DE                     ___flmul:
  5001                           	callstack 25
  5002   0016DE  5012               	movf	(___flmul@b+3)^0,w,c
  5003   0016E0  0B80               	andlw	128
  5004   0016E2  6E1B               	movwf	___flmul@sign^0,c
  5005   0016E4  5012               	movf	(___flmul@b+3)^0,w,c
  5006   0016E6  2412               	addwf	(___flmul@b+3)^0,w,c
  5007   0016E8  6E21               	movwf	___flmul@bexp^0,c
  5008   0016EA  AE11               	btfss	(___flmul@b+2)^0,7,c
  5009   0016EC  EF7A  F00B         	goto	u2471
  5010   0016F0  EF7C  F00B         	goto	u2470
  5011   0016F4                     u2471:
  5012   0016F4  EF7D  F00B         	goto	l2538
  5013   0016F8                     u2470:
  5014   0016F8  8021               	bsf	___flmul@bexp^0,0,c
  5015   0016FA                     l2538:
  5016   0016FA  5021               	movf	___flmul@bexp^0,w,c
  5017   0016FC  B4D8               	btfsc	status,2,c
  5018   0016FE  EF83  F00B         	goto	u2481
  5019   001702  EF85  F00B         	goto	u2480
  5020   001706                     u2481:
  5021   001706  EF98  F00B         	goto	l2546
  5022   00170A                     u2480:
  5023   00170A  2821               	incf	___flmul@bexp^0,w,c
  5024   00170C  A4D8               	btfss	status,2,c
  5025   00170E  EF8B  F00B         	goto	u2491
  5026   001712  EF8D  F00B         	goto	u2490
  5027   001716                     u2491:
  5028   001716  EF95  F00B         	goto	l2544
  5029   00171A                     u2490:
  5030   00171A  0E00               	movlw	0
  5031   00171C  6E0F               	movwf	___flmul@b^0,c
  5032   00171E  0E00               	movlw	0
  5033   001720  6E10               	movwf	(___flmul@b+1)^0,c
  5034   001722  0E00               	movlw	0
  5035   001724  6E11               	movwf	(___flmul@b+2)^0,c
  5036   001726  0E00               	movlw	0
  5037   001728  6E12               	movwf	(___flmul@b+3)^0,c
  5038   00172A                     l2544:
  5039   00172A  8E11               	bsf	(___flmul@b+2)^0,7,c
  5040   00172C  EFA0  F00B         	goto	l2548
  5041   001730                     l2546:
  5042   001730  0E00               	movlw	0
  5043   001732  6E0F               	movwf	___flmul@b^0,c
  5044   001734  0E00               	movlw	0
  5045   001736  6E10               	movwf	(___flmul@b+1)^0,c
  5046   001738  0E00               	movlw	0
  5047   00173A  6E11               	movwf	(___flmul@b+2)^0,c
  5048   00173C  0E00               	movlw	0
  5049   00173E  6E12               	movwf	(___flmul@b+3)^0,c
  5050   001740                     l2548:
  5051   001740  5016               	movf	(___flmul@a+3)^0,w,c
  5052   001742  0B80               	andlw	128
  5053   001744  1A1B               	xorwf	___flmul@sign^0,f,c
  5054   001746  5016               	movf	(___flmul@a+3)^0,w,c
  5055   001748  2416               	addwf	(___flmul@a+3)^0,w,c
  5056   00174A  6E20               	movwf	___flmul@aexp^0,c
  5057   00174C  AE15               	btfss	(___flmul@a+2)^0,7,c
  5058   00174E  EFAB  F00B         	goto	u2501
  5059   001752  EFAD  F00B         	goto	u2500
  5060   001756                     u2501:
  5061   001756  EFAE  F00B         	goto	l2556
  5062   00175A                     u2500:
  5063   00175A  8020               	bsf	___flmul@aexp^0,0,c
  5064   00175C                     l2556:
  5065   00175C  5020               	movf	___flmul@aexp^0,w,c
  5066   00175E  B4D8               	btfsc	status,2,c
  5067   001760  EFB4  F00B         	goto	u2511
  5068   001764  EFB6  F00B         	goto	u2510
  5069   001768                     u2511:
  5070   001768  EFC9  F00B         	goto	l2564
  5071   00176C                     u2510:
  5072   00176C  2820               	incf	___flmul@aexp^0,w,c
  5073   00176E  A4D8               	btfss	status,2,c
  5074   001770  EFBC  F00B         	goto	u2521
  5075   001774  EFBE  F00B         	goto	u2520
  5076   001778                     u2521:
  5077   001778  EFC6  F00B         	goto	l2562
  5078   00177C                     u2520:
  5079   00177C  0E00               	movlw	0
  5080   00177E  6E13               	movwf	___flmul@a^0,c
  5081   001780  0E00               	movlw	0
  5082   001782  6E14               	movwf	(___flmul@a+1)^0,c
  5083   001784  0E00               	movlw	0
  5084   001786  6E15               	movwf	(___flmul@a+2)^0,c
  5085   001788  0E00               	movlw	0
  5086   00178A  6E16               	movwf	(___flmul@a+3)^0,c
  5087   00178C                     l2562:
  5088   00178C  8E15               	bsf	(___flmul@a+2)^0,7,c
  5089   00178E  EFD1  F00B         	goto	l711
  5090   001792                     l2564:
  5091   001792  0E00               	movlw	0
  5092   001794  6E13               	movwf	___flmul@a^0,c
  5093   001796  0E00               	movlw	0
  5094   001798  6E14               	movwf	(___flmul@a+1)^0,c
  5095   00179A  0E00               	movlw	0
  5096   00179C  6E15               	movwf	(___flmul@a+2)^0,c
  5097   00179E  0E00               	movlw	0
  5098   0017A0  6E16               	movwf	(___flmul@a+3)^0,c
  5099   0017A2                     l711:
  5100   0017A2  5020               	movf	___flmul@aexp^0,w,c
  5101   0017A4  B4D8               	btfsc	status,2,c
  5102   0017A6  EFD7  F00B         	goto	u2531
  5103   0017AA  EFD9  F00B         	goto	u2530
  5104   0017AE                     u2531:
  5105   0017AE  EFE1  F00B         	goto	l2568
  5106   0017B2                     u2530:
  5107   0017B2  5021               	movf	___flmul@bexp^0,w,c
  5108   0017B4  A4D8               	btfss	status,2,c
  5109   0017B6  EFDF  F00B         	goto	u2541
  5110   0017BA  EFE1  F00B         	goto	u2540
  5111   0017BE                     u2541:
  5112   0017BE  EFEB  F00B         	goto	l2572
  5113   0017C2                     u2540:
  5114   0017C2                     l2568:
  5115   0017C2  0E00               	movlw	0
  5116   0017C4  6E0F               	movwf	?___flmul^0,c
  5117   0017C6  0E00               	movlw	0
  5118   0017C8  6E10               	movwf	(?___flmul+1)^0,c
  5119   0017CA  0E00               	movlw	0
  5120   0017CC  6E11               	movwf	(?___flmul+2)^0,c
  5121   0017CE  0E00               	movlw	0
  5122   0017D0  6E12               	movwf	(?___flmul+3)^0,c
  5123   0017D2  EF83  F00D         	goto	l715
  5124   0017D6                     l2572:
  5125   0017D6  5015               	movf	(___flmul@a+2)^0,w,c
  5126   0017D8  020F               	mulwf	___flmul@b^0,c
  5127   0017DA  CFF3 F026          	movff	prodl,___flmul@temp
  5128   0017DE  CFF4 F027          	movff	prodh,___flmul@temp+1
  5129   0017E2  5026               	movf	___flmul@temp^0,w,c
  5130   0017E4  6E1C               	movwf	___flmul@grs^0,c
  5131   0017E6  6A1D               	clrf	(___flmul@grs+1)^0,c
  5132   0017E8  6A1E               	clrf	(___flmul@grs+2)^0,c
  5133   0017EA  6A1F               	clrf	(___flmul@grs+3)^0,c
  5134   0017EC  5027               	movf	(___flmul@temp+1)^0,w,c
  5135   0017EE  6E22               	movwf	___flmul@prod^0,c
  5136   0017F0  6A23               	clrf	(___flmul@prod+1)^0,c
  5137   0017F2  6A24               	clrf	(___flmul@prod+2)^0,c
  5138   0017F4  6A25               	clrf	(___flmul@prod+3)^0,c
  5139   0017F6  5014               	movf	(___flmul@a+1)^0,w,c
  5140   0017F8  0210               	mulwf	(___flmul@b+1)^0,c
  5141   0017FA  CFF3 F026          	movff	prodl,___flmul@temp
  5142   0017FE  CFF4 F027          	movff	prodh,___flmul@temp+1
  5143   001802  5026               	movf	___flmul@temp^0,w,c
  5144   001804  261C               	addwf	___flmul@grs^0,f,c
  5145   001806  0E00               	movlw	0
  5146   001808  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5147   00180A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5148   00180C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5149   00180E  5027               	movf	(___flmul@temp+1)^0,w,c
  5150   001810  2622               	addwf	___flmul@prod^0,f,c
  5151   001812  0E00               	movlw	0
  5152   001814  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5153   001816  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5154   001818  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5155   00181A  5013               	movf	___flmul@a^0,w,c
  5156   00181C  0211               	mulwf	(___flmul@b+2)^0,c
  5157   00181E  CFF3 F026          	movff	prodl,___flmul@temp
  5158   001822  CFF4 F027          	movff	prodh,___flmul@temp+1
  5159   001826  5026               	movf	___flmul@temp^0,w,c
  5160   001828  261C               	addwf	___flmul@grs^0,f,c
  5161   00182A  0E00               	movlw	0
  5162   00182C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5163   00182E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5164   001830  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5165   001832  5027               	movf	(___flmul@temp+1)^0,w,c
  5166   001834  2622               	addwf	___flmul@prod^0,f,c
  5167   001836  0E00               	movlw	0
  5168   001838  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5169   00183A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5170   00183C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5171   00183E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5172   001842  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5173   001846  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5174   00184A  6A1C               	clrf	___flmul@grs^0,c
  5175   00184C  5013               	movf	___flmul@a^0,w,c
  5176   00184E  0210               	mulwf	(___flmul@b+1)^0,c
  5177   001850  CFF3 F026          	movff	prodl,___flmul@temp
  5178   001854  CFF4 F027          	movff	prodh,___flmul@temp+1
  5179   001858  5026               	movf	___flmul@temp^0,w,c
  5180   00185A  261C               	addwf	___flmul@grs^0,f,c
  5181   00185C  5027               	movf	(___flmul@temp+1)^0,w,c
  5182   00185E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5183   001860  0E00               	movlw	0
  5184   001862  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5185   001864  0E00               	movlw	0
  5186   001866  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5187   001868  5014               	movf	(___flmul@a+1)^0,w,c
  5188   00186A  020F               	mulwf	___flmul@b^0,c
  5189   00186C  CFF3 F026          	movff	prodl,___flmul@temp
  5190   001870  CFF4 F027          	movff	prodh,___flmul@temp+1
  5191   001874  5026               	movf	___flmul@temp^0,w,c
  5192   001876  261C               	addwf	___flmul@grs^0,f,c
  5193   001878  5027               	movf	(___flmul@temp+1)^0,w,c
  5194   00187A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5195   00187C  0E00               	movlw	0
  5196   00187E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5197   001880  0E00               	movlw	0
  5198   001882  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5199   001884  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5200   001888  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5201   00188C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5202   001890  6A1C               	clrf	___flmul@grs^0,c
  5203   001892  5013               	movf	___flmul@a^0,w,c
  5204   001894  020F               	mulwf	___flmul@b^0,c
  5205   001896  CFF3 F026          	movff	prodl,___flmul@temp
  5206   00189A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5207   00189E  5026               	movf	___flmul@temp^0,w,c
  5208   0018A0  261C               	addwf	___flmul@grs^0,f,c
  5209   0018A2  5027               	movf	(___flmul@temp+1)^0,w,c
  5210   0018A4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5211   0018A6  0E00               	movlw	0
  5212   0018A8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5213   0018AA  0E00               	movlw	0
  5214   0018AC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5215   0018AE  5015               	movf	(___flmul@a+2)^0,w,c
  5216   0018B0  0210               	mulwf	(___flmul@b+1)^0,c
  5217   0018B2  CFF3 F026          	movff	prodl,___flmul@temp
  5218   0018B6  CFF4 F027          	movff	prodh,___flmul@temp+1
  5219   0018BA  5026               	movf	___flmul@temp^0,w,c
  5220   0018BC  2622               	addwf	___flmul@prod^0,f,c
  5221   0018BE  5027               	movf	(___flmul@temp+1)^0,w,c
  5222   0018C0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5223   0018C2  0E00               	movlw	0
  5224   0018C4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5225   0018C6  0E00               	movlw	0
  5226   0018C8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5227   0018CA  5014               	movf	(___flmul@a+1)^0,w,c
  5228   0018CC  0211               	mulwf	(___flmul@b+2)^0,c
  5229   0018CE  CFF3 F026          	movff	prodl,___flmul@temp
  5230   0018D2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5231   0018D6  5026               	movf	___flmul@temp^0,w,c
  5232   0018D8  2622               	addwf	___flmul@prod^0,f,c
  5233   0018DA  5027               	movf	(___flmul@temp+1)^0,w,c
  5234   0018DC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5235   0018DE  0E00               	movlw	0
  5236   0018E0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5237   0018E2  0E00               	movlw	0
  5238   0018E4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5239   0018E6  5015               	movf	(___flmul@a+2)^0,w,c
  5240   0018E8  0211               	mulwf	(___flmul@b+2)^0,c
  5241   0018EA  CFF3 F026          	movff	prodl,___flmul@temp
  5242   0018EE  CFF4 F027          	movff	prodh,___flmul@temp+1
  5243   0018F2  5026               	movf	___flmul@temp^0,w,c
  5244   0018F4  6E17               	movwf	??___flmul^0,c
  5245   0018F6  5027               	movf	(___flmul@temp+1)^0,w,c
  5246   0018F8  6E18               	movwf	(??___flmul+1)^0,c
  5247   0018FA  6A19               	clrf	(??___flmul+2)^0,c
  5248   0018FC  6A1A               	clrf	(??___flmul+3)^0,c
  5249   0018FE  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5250   001902  C018  F019         	movff	??___flmul+1,??___flmul+2
  5251   001906  C017  F018         	movff	??___flmul,??___flmul+1
  5252   00190A  6A17               	clrf	??___flmul^0,c
  5253   00190C  5017               	movf	??___flmul^0,w,c
  5254   00190E  2622               	addwf	___flmul@prod^0,f,c
  5255   001910  5018               	movf	(??___flmul+1)^0,w,c
  5256   001912  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5257   001914  5019               	movf	(??___flmul+2)^0,w,c
  5258   001916  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5259   001918  501A               	movf	(??___flmul+3)^0,w,c
  5260   00191A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5261   00191C  C01C  F017         	movff	___flmul@grs,??___flmul
  5262   001920  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5263   001924  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5264   001928  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5265   00192C  0E19               	movlw	25
  5266   00192E  EF9E  F00C         	goto	u2550
  5267   001932                     u2555:
  5268   001932  90D8               	bcf	status,0,c
  5269   001934  321A               	rrcf	(??___flmul+3)^0,f,c
  5270   001936  3219               	rrcf	(??___flmul+2)^0,f,c
  5271   001938  3218               	rrcf	(??___flmul+1)^0,f,c
  5272   00193A  3217               	rrcf	??___flmul^0,f,c
  5273   00193C                     u2550:
  5274   00193C  2EE8               	decfsz	wreg,f,c
  5275   00193E  EF99  F00C         	goto	u2555
  5276   001942  5017               	movf	??___flmul^0,w,c
  5277   001944  2622               	addwf	___flmul@prod^0,f,c
  5278   001946  5018               	movf	(??___flmul+1)^0,w,c
  5279   001948  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5280   00194A  5019               	movf	(??___flmul+2)^0,w,c
  5281   00194C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5282   00194E  501A               	movf	(??___flmul+3)^0,w,c
  5283   001950  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5284   001952  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5285   001956  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5286   00195A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5287   00195E  6A1C               	clrf	___flmul@grs^0,c
  5288   001960  5020               	movf	___flmul@aexp^0,w,c
  5289   001962  C021  F017         	movff	___flmul@bexp,??___flmul
  5290   001966  6A18               	clrf	(??___flmul+1)^0,c
  5291   001968  2617               	addwf	??___flmul^0,f,c
  5292   00196A  0E00               	movlw	0
  5293   00196C  2218               	addwfc	(??___flmul+1)^0,f,c
  5294   00196E  0E82               	movlw	130
  5295   001970  2417               	addwf	??___flmul^0,w,c
  5296   001972  6E26               	movwf	___flmul@temp^0,c
  5297   001974  0EFF               	movlw	255
  5298   001976  2018               	addwfc	(??___flmul+1)^0,w,c
  5299   001978  6E27               	movwf	(___flmul@temp+1)^0,c
  5300   00197A  EFD4  F00C         	goto	l2620
  5301   00197E                     l2614:
  5302   00197E  90D8               	bcf	status,0,c
  5303   001980  3622               	rlcf	___flmul@prod^0,f,c
  5304   001982  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5305   001984  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5306   001986  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5307   001988  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5308   00198A  EFC9  F00C         	goto	u2561
  5309   00198E  EFCB  F00C         	goto	u2560
  5310   001992                     u2561:
  5311   001992  EFCC  F00C         	goto	l718
  5312   001996                     u2560:
  5313   001996  8022               	bsf	___flmul@prod^0,0,c
  5314   001998                     l718:
  5315   001998  90D8               	bcf	status,0,c
  5316   00199A  361C               	rlcf	___flmul@grs^0,f,c
  5317   00199C  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5318   00199E  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5319   0019A0  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5320   0019A2  0626               	decf	___flmul@temp^0,f,c
  5321   0019A4  A0D8               	btfss	status,0,c
  5322   0019A6  0627               	decf	(___flmul@temp+1)^0,f,c
  5323   0019A8                     l2620:
  5324   0019A8  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5325   0019AA  EFD9  F00C         	goto	u2571
  5326   0019AE  EFDB  F00C         	goto	u2570
  5327   0019B2                     u2571:
  5328   0019B2  EFBF  F00C         	goto	l2614
  5329   0019B6                     u2570:
  5330   0019B6  0E00               	movlw	0
  5331   0019B8  6E20               	movwf	___flmul@aexp^0,c
  5332   0019BA  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5333   0019BC  EFE2  F00C         	goto	u2581
  5334   0019C0  EFE4  F00C         	goto	u2580
  5335   0019C4                     u2581:
  5336   0019C4  EF08  F00D         	goto	l720
  5337   0019C8                     u2580:
  5338   0019C8  0EFF               	movlw	255
  5339   0019CA  141C               	andwf	___flmul@grs^0,w,c
  5340   0019CC  6E17               	movwf	??___flmul^0,c
  5341   0019CE  0EFF               	movlw	255
  5342   0019D0  141D               	andwf	(___flmul@grs+1)^0,w,c
  5343   0019D2  6E18               	movwf	(??___flmul+1)^0,c
  5344   0019D4  0EFF               	movlw	255
  5345   0019D6  141E               	andwf	(___flmul@grs+2)^0,w,c
  5346   0019D8  6E19               	movwf	(??___flmul+2)^0,c
  5347   0019DA  0E7F               	movlw	127
  5348   0019DC  141F               	andwf	(___flmul@grs+3)^0,w,c
  5349   0019DE  6E1A               	movwf	(??___flmul+3)^0,c
  5350   0019E0  5017               	movf	??___flmul^0,w,c
  5351   0019E2  1018               	iorwf	(??___flmul+1)^0,w,c
  5352   0019E4  1019               	iorwf	(??___flmul+2)^0,w,c
  5353   0019E6  101A               	iorwf	(??___flmul+3)^0,w,c
  5354   0019E8  B4D8               	btfsc	status,2,c
  5355   0019EA  EFF9  F00C         	goto	u2591
  5356   0019EE  EFFB  F00C         	goto	u2590
  5357   0019F2                     u2591:
  5358   0019F2  EFFF  F00C         	goto	l721
  5359   0019F6                     u2590:
  5360   0019F6                     l2628:
  5361   0019F6  0E01               	movlw	1
  5362   0019F8  6E20               	movwf	___flmul@aexp^0,c
  5363   0019FA  EF08  F00D         	goto	l720
  5364   0019FE                     l721:
  5365   0019FE  A022               	btfss	___flmul@prod^0,0,c
  5366   001A00  EF04  F00D         	goto	u2601
  5367   001A04  EF06  F00D         	goto	u2600
  5368   001A08                     u2601:
  5369   001A08  EF08  F00D         	goto	l720
  5370   001A0C                     u2600:
  5371   001A0C  EFFB  F00C         	goto	l2628
  5372   001A10                     l720:
  5373   001A10  5020               	movf	___flmul@aexp^0,w,c
  5374   001A12  B4D8               	btfsc	status,2,c
  5375   001A14  EF0E  F00D         	goto	u2611
  5376   001A18  EF10  F00D         	goto	u2610
  5377   001A1C                     u2611:
  5378   001A1C  EF34  F00D         	goto	l2640
  5379   001A20                     u2610:
  5380   001A20  0E01               	movlw	1
  5381   001A22  2622               	addwf	___flmul@prod^0,f,c
  5382   001A24  0E00               	movlw	0
  5383   001A26  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5384   001A28  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5385   001A2A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5386   001A2C  A025               	btfss	(___flmul@prod+3)^0,0,c
  5387   001A2E  EF1B  F00D         	goto	u2621
  5388   001A32  EF1D  F00D         	goto	u2620
  5389   001A36                     u2621:
  5390   001A36  EF34  F00D         	goto	l2640
  5391   001A3A                     u2620:
  5392   001A3A  C022  F017         	movff	___flmul@prod,??___flmul
  5393   001A3E  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5394   001A42  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5395   001A46  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5396   001A4A  341A               	rlcf	(??___flmul+3)^0,w,c
  5397   001A4C  321A               	rrcf	(??___flmul+3)^0,f,c
  5398   001A4E  3219               	rrcf	(??___flmul+2)^0,f,c
  5399   001A50  3218               	rrcf	(??___flmul+1)^0,f,c
  5400   001A52  3217               	rrcf	??___flmul^0,f,c
  5401   001A54  C017  F022         	movff	??___flmul,___flmul@prod
  5402   001A58  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5403   001A5C  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5404   001A60  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5405   001A64  4A26               	infsnz	___flmul@temp^0,f,c
  5406   001A66  2A27               	incf	(___flmul@temp+1)^0,f,c
  5407   001A68                     l2640:
  5408   001A68  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5409   001A6A  EF3F  F00D         	goto	u2631
  5410   001A6E  5027               	movf	(___flmul@temp+1)^0,w,c
  5411   001A70  E108               	bnz	u2630
  5412   001A72  2826               	incf	___flmul@temp^0,w,c
  5413   001A74  A0D8               	btfss	status,0,c
  5414   001A76  EF3F  F00D         	goto	u2631
  5415   001A7A  EF41  F00D         	goto	u2630
  5416   001A7E                     u2631:
  5417   001A7E  EF4B  F00D         	goto	l2644
  5418   001A82                     u2630:
  5419   001A82  0E00               	movlw	0
  5420   001A84  6E22               	movwf	___flmul@prod^0,c
  5421   001A86  0E00               	movlw	0
  5422   001A88  6E23               	movwf	(___flmul@prod+1)^0,c
  5423   001A8A  0E80               	movlw	128
  5424   001A8C  6E24               	movwf	(___flmul@prod+2)^0,c
  5425   001A8E  0E7F               	movlw	127
  5426   001A90  6E25               	movwf	(___flmul@prod+3)^0,c
  5427   001A92  EF79  F00D         	goto	l2656
  5428   001A96                     l2644:
  5429   001A96  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5430   001A98  EF58  F00D         	goto	u2640
  5431   001A9C  5027               	movf	(___flmul@temp+1)^0,w,c
  5432   001A9E  E106               	bnz	u2641
  5433   001AA0  0426               	decf	___flmul@temp^0,w,c
  5434   001AA2  B0D8               	btfsc	status,0,c
  5435   001AA4  EF56  F00D         	goto	u2641
  5436   001AA8  EF58  F00D         	goto	u2640
  5437   001AAC                     u2641:
  5438   001AAC  EF64  F00D         	goto	l728
  5439   001AB0                     u2640:
  5440   001AB0  0E00               	movlw	0
  5441   001AB2  6E22               	movwf	___flmul@prod^0,c
  5442   001AB4  0E00               	movlw	0
  5443   001AB6  6E23               	movwf	(___flmul@prod+1)^0,c
  5444   001AB8  0E00               	movlw	0
  5445   001ABA  6E24               	movwf	(___flmul@prod+2)^0,c
  5446   001ABC  0E00               	movlw	0
  5447   001ABE  6E25               	movwf	(___flmul@prod+3)^0,c
  5448   001AC0  0E00               	movlw	0
  5449   001AC2  6E1B               	movwf	___flmul@sign^0,c
  5450   001AC4  EF79  F00D         	goto	l2656
  5451   001AC8                     l728:
  5452   001AC8  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5453   001ACC  0EFF               	movlw	255
  5454   001ACE  1622               	andwf	___flmul@prod^0,f,c
  5455   001AD0  0EFF               	movlw	255
  5456   001AD2  1623               	andwf	(___flmul@prod+1)^0,f,c
  5457   001AD4  0E7F               	movlw	127
  5458   001AD6  1624               	andwf	(___flmul@prod+2)^0,f,c
  5459   001AD8  0E00               	movlw	0
  5460   001ADA  1625               	andwf	(___flmul@prod+3)^0,f,c
  5461   001ADC  A021               	btfss	___flmul@bexp^0,0,c
  5462   001ADE  EF73  F00D         	goto	u2651
  5463   001AE2  EF75  F00D         	goto	u2650
  5464   001AE6                     u2651:
  5465   001AE6  EF76  F00D         	goto	l2654
  5466   001AEA                     u2650:
  5467   001AEA  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5468   001AEC                     l2654:
  5469   001AEC  90D8               	bcf	status,0,c
  5470   001AEE  3021               	rrcf	___flmul@bexp^0,w,c
  5471   001AF0  6E25               	movwf	(___flmul@prod+3)^0,c
  5472   001AF2                     l2656:
  5473   001AF2  501B               	movf	___flmul@sign^0,w,c
  5474   001AF4  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5475   001AF6  C022  F00F         	movff	___flmul@prod,?___flmul
  5476   001AFA  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5477   001AFE  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5478   001B02  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5479   001B06                     l715:
  5480   001B06  0012               	return		;funcret
  5481   001B08                     __end_of___flmul:
  5482                           	callstack 0
  5483                           
  5484 ;; *************** function ___flge *****************
  5485 ;; Defined at:
  5486 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  ff1             4   39[COMRAM] unsigned char 
  5489 ;;  ff2             4   43[COMRAM] unsigned char 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;		None
  5492 ;; Return value:  Size  Location     Type
  5493 ;;		None               void
  5494 ;; Registers used:
  5495 ;;		wreg, status,2, status,0
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5501 ;;      Params:         8       0       0       0       0       0       0       0       0
  5502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5503 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5504 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5505 ;;Total ram usage:       12 bytes
  5506 ;; Hardware stack levels used: 1
  5507 ;; Hardware stack levels required when called: 1
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_efgtoa
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text21
  5516   00272C                     __ptext21:
  5517                           	callstack 0
  5518   00272C                     ___flge:
  5519                           	callstack 25
  5520   00272C  0E00               	movlw	0
  5521   00272E  1428               	andwf	___flge@ff1^0,w,c
  5522   002730  6E30               	movwf	??___flge^0,c
  5523   002732  0E00               	movlw	0
  5524   002734  1429               	andwf	(___flge@ff1+1)^0,w,c
  5525   002736  6E31               	movwf	(??___flge+1)^0,c
  5526   002738  0E80               	movlw	128
  5527   00273A  142A               	andwf	(___flge@ff1+2)^0,w,c
  5528   00273C  6E32               	movwf	(??___flge+2)^0,c
  5529   00273E  0E7F               	movlw	127
  5530   002740  142B               	andwf	(___flge@ff1+3)^0,w,c
  5531   002742  6E33               	movwf	(??___flge+3)^0,c
  5532   002744  5030               	movf	??___flge^0,w,c
  5533   002746  1031               	iorwf	(??___flge+1)^0,w,c
  5534   002748  1032               	iorwf	(??___flge+2)^0,w,c
  5535   00274A  1033               	iorwf	(??___flge+3)^0,w,c
  5536   00274C  A4D8               	btfss	status,2,c
  5537   00274E  EFAB  F013         	goto	u2691
  5538   002752  EFAD  F013         	goto	u2690
  5539   002756                     u2691:
  5540   002756  EFB5  F013         	goto	l2688
  5541   00275A                     u2690:
  5542   00275A  0E00               	movlw	0
  5543   00275C  6E28               	movwf	___flge@ff1^0,c
  5544   00275E  0E00               	movlw	0
  5545   002760  6E29               	movwf	(___flge@ff1+1)^0,c
  5546   002762  0E00               	movlw	0
  5547   002764  6E2A               	movwf	(___flge@ff1+2)^0,c
  5548   002766  0E00               	movlw	0
  5549   002768  6E2B               	movwf	(___flge@ff1+3)^0,c
  5550   00276A                     l2688:
  5551   00276A  0E00               	movlw	0
  5552   00276C  142C               	andwf	___flge@ff2^0,w,c
  5553   00276E  6E30               	movwf	??___flge^0,c
  5554   002770  0E00               	movlw	0
  5555   002772  142D               	andwf	(___flge@ff2+1)^0,w,c
  5556   002774  6E31               	movwf	(??___flge+1)^0,c
  5557   002776  0E80               	movlw	128
  5558   002778  142E               	andwf	(___flge@ff2+2)^0,w,c
  5559   00277A  6E32               	movwf	(??___flge+2)^0,c
  5560   00277C  0E7F               	movlw	127
  5561   00277E  142F               	andwf	(___flge@ff2+3)^0,w,c
  5562   002780  6E33               	movwf	(??___flge+3)^0,c
  5563   002782  5030               	movf	??___flge^0,w,c
  5564   002784  1031               	iorwf	(??___flge+1)^0,w,c
  5565   002786  1032               	iorwf	(??___flge+2)^0,w,c
  5566   002788  1033               	iorwf	(??___flge+3)^0,w,c
  5567   00278A  A4D8               	btfss	status,2,c
  5568   00278C  EFCA  F013         	goto	u2701
  5569   002790  EFCC  F013         	goto	u2700
  5570   002794                     u2701:
  5571   002794  EFD4  F013         	goto	l2692
  5572   002798                     u2700:
  5573   002798  0E00               	movlw	0
  5574   00279A  6E2C               	movwf	___flge@ff2^0,c
  5575   00279C  0E00               	movlw	0
  5576   00279E  6E2D               	movwf	(___flge@ff2+1)^0,c
  5577   0027A0  0E00               	movlw	0
  5578   0027A2  6E2E               	movwf	(___flge@ff2+2)^0,c
  5579   0027A4  0E00               	movlw	0
  5580   0027A6  6E2F               	movwf	(___flge@ff2+3)^0,c
  5581   0027A8                     l2692:
  5582   0027A8  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5583   0027AA  EFD9  F013         	goto	u2711
  5584   0027AE  EFDB  F013         	goto	u2710
  5585   0027B2                     u2711:
  5586   0027B2  EFE4  F013         	goto	l2696
  5587   0027B6                     u2710:
  5588   0027B6  6C28               	negf	___flge@ff1^0,c
  5589   0027B8  1E29               	comf	(___flge@ff1+1)^0,f,c
  5590   0027BA  B0D8               	btfsc	status,0,c
  5591   0027BC  2A29               	incf	(___flge@ff1+1)^0,f,c
  5592   0027BE  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5593   0027C0  B0D8               	btfsc	status,0,c
  5594   0027C2  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5595   0027C4  0E80               	movlw	128
  5596   0027C6  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5597   0027C8                     l2696:
  5598   0027C8  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5599   0027CA  EFE9  F013         	goto	u2721
  5600   0027CE  EFEB  F013         	goto	u2720
  5601   0027D2                     u2721:
  5602   0027D2  EFF4  F013         	goto	l362
  5603   0027D6                     u2720:
  5604   0027D6  6C2C               	negf	___flge@ff2^0,c
  5605   0027D8  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5606   0027DA  B0D8               	btfsc	status,0,c
  5607   0027DC  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5608   0027DE  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5609   0027E0  B0D8               	btfsc	status,0,c
  5610   0027E2  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5611   0027E4  0E80               	movlw	128
  5612   0027E6  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5613   0027E8                     l362:
  5614   0027E8  0E00               	movlw	0
  5615   0027EA  1A28               	xorwf	___flge@ff1^0,f,c
  5616   0027EC  0E00               	movlw	0
  5617   0027EE  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5618   0027F0  0E00               	movlw	0
  5619   0027F2  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5620   0027F4  0E80               	movlw	128
  5621   0027F6  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5622   0027F8  0E00               	movlw	0
  5623   0027FA  1A2C               	xorwf	___flge@ff2^0,f,c
  5624   0027FC  0E00               	movlw	0
  5625   0027FE  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5626   002800  0E00               	movlw	0
  5627   002802  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5628   002804  0E80               	movlw	128
  5629   002806  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5630   002808  502C               	movf	___flge@ff2^0,w,c
  5631   00280A  5C28               	subwf	___flge@ff1^0,w,c
  5632   00280C  502D               	movf	(___flge@ff2+1)^0,w,c
  5633   00280E  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5634   002810  502E               	movf	(___flge@ff2+2)^0,w,c
  5635   002812  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5636   002814  502F               	movf	(___flge@ff2+3)^0,w,c
  5637   002816  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5638   002818  B0D8               	btfsc	status,0,c
  5639   00281A  EF11  F014         	goto	u2731
  5640   00281E  EF13  F014         	goto	u2730
  5641   002822                     u2731:
  5642   002822  EF16  F014         	goto	l2702
  5643   002826                     u2730:
  5644   002826  90D8               	bcf	status,0,c
  5645   002828  EF17  F014         	goto	l367
  5646   00282C                     l2702:
  5647   00282C  80D8               	bsf	status,0,c
  5648   00282E                     l367:
  5649   00282E  0012               	return		;funcret
  5650   002830                     __end_of___flge:
  5651                           	callstack 0
  5652                           
  5653 ;; *************** function ___fleq *****************
  5654 ;; Defined at:
  5655 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  ff1             4    0[COMRAM] unsigned char 
  5658 ;;  ff2             4    4[COMRAM] unsigned char 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;		None
  5661 ;; Return value:  Size  Location     Type
  5662 ;;		None               void
  5663 ;; Registers used:
  5664 ;;		wreg, status,2, status,0
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5670 ;;      Params:         8       0       0       0       0       0       0       0       0
  5671 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5672 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5673 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5674 ;;Total ram usage:       12 bytes
  5675 ;; Hardware stack levels used: 1
  5676 ;; Hardware stack levels required when called: 1
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		_efgtoa
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           	psect	text22
  5685   002ABE                     __ptext22:
  5686                           	callstack 0
  5687   002ABE                     ___fleq:
  5688                           	callstack 25
  5689   002ABE  0E00               	movlw	0
  5690   002AC0  1401               	andwf	___fleq@ff1^0,w,c
  5691   002AC2  6E09               	movwf	??___fleq^0,c
  5692   002AC4  0E00               	movlw	0
  5693   002AC6  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5694   002AC8  6E0A               	movwf	(??___fleq+1)^0,c
  5695   002ACA  0E80               	movlw	128
  5696   002ACC  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5697   002ACE  6E0B               	movwf	(??___fleq+2)^0,c
  5698   002AD0  0E7F               	movlw	127
  5699   002AD2  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5700   002AD4  6E0C               	movwf	(??___fleq+3)^0,c
  5701   002AD6  5009               	movf	??___fleq^0,w,c
  5702   002AD8  100A               	iorwf	(??___fleq+1)^0,w,c
  5703   002ADA  100B               	iorwf	(??___fleq+2)^0,w,c
  5704   002ADC  100C               	iorwf	(??___fleq+3)^0,w,c
  5705   002ADE  A4D8               	btfss	status,2,c
  5706   002AE0  EF74  F015         	goto	u2661
  5707   002AE4  EF76  F015         	goto	u2660
  5708   002AE8                     u2661:
  5709   002AE8  EF7E  F015         	goto	l2672
  5710   002AEC                     u2660:
  5711   002AEC  0E00               	movlw	0
  5712   002AEE  6E01               	movwf	___fleq@ff1^0,c
  5713   002AF0  0E00               	movlw	0
  5714   002AF2  6E02               	movwf	(___fleq@ff1+1)^0,c
  5715   002AF4  0E00               	movlw	0
  5716   002AF6  6E03               	movwf	(___fleq@ff1+2)^0,c
  5717   002AF8  0E00               	movlw	0
  5718   002AFA  6E04               	movwf	(___fleq@ff1+3)^0,c
  5719   002AFC                     l2672:
  5720   002AFC  0E00               	movlw	0
  5721   002AFE  1405               	andwf	___fleq@ff2^0,w,c
  5722   002B00  6E09               	movwf	??___fleq^0,c
  5723   002B02  0E00               	movlw	0
  5724   002B04  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5725   002B06  6E0A               	movwf	(??___fleq+1)^0,c
  5726   002B08  0E80               	movlw	128
  5727   002B0A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5728   002B0C  6E0B               	movwf	(??___fleq+2)^0,c
  5729   002B0E  0E7F               	movlw	127
  5730   002B10  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5731   002B12  6E0C               	movwf	(??___fleq+3)^0,c
  5732   002B14  5009               	movf	??___fleq^0,w,c
  5733   002B16  100A               	iorwf	(??___fleq+1)^0,w,c
  5734   002B18  100B               	iorwf	(??___fleq+2)^0,w,c
  5735   002B1A  100C               	iorwf	(??___fleq+3)^0,w,c
  5736   002B1C  A4D8               	btfss	status,2,c
  5737   002B1E  EF93  F015         	goto	u2671
  5738   002B22  EF95  F015         	goto	u2670
  5739   002B26                     u2671:
  5740   002B26  EF9D  F015         	goto	l2676
  5741   002B2A                     u2670:
  5742   002B2A  0E00               	movlw	0
  5743   002B2C  6E05               	movwf	___fleq@ff2^0,c
  5744   002B2E  0E00               	movlw	0
  5745   002B30  6E06               	movwf	(___fleq@ff2+1)^0,c
  5746   002B32  0E00               	movlw	0
  5747   002B34  6E07               	movwf	(___fleq@ff2+2)^0,c
  5748   002B36  0E00               	movlw	0
  5749   002B38  6E08               	movwf	(___fleq@ff2+3)^0,c
  5750   002B3A                     l2676:
  5751   002B3A  5005               	movf	___fleq@ff2^0,w,c
  5752   002B3C  1801               	xorwf	___fleq@ff1^0,w,c
  5753   002B3E  E10F               	bnz	u2680
  5754   002B40  5006               	movf	(___fleq@ff2+1)^0,w,c
  5755   002B42  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5756   002B44  E10C               	bnz	u2680
  5757   002B46  5007               	movf	(___fleq@ff2+2)^0,w,c
  5758   002B48  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5759   002B4A  E109               	bnz	u2680
  5760   002B4C  5008               	movf	(___fleq@ff2+3)^0,w,c
  5761   002B4E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5762   002B50  B4D8               	btfsc	status,2,c
  5763   002B52  EFAD  F015         	goto	u2681
  5764   002B56  EFAF  F015         	goto	u2680
  5765   002B5A                     u2681:
  5766   002B5A  EFB2  F015         	goto	l2680
  5767   002B5E                     u2680:
  5768   002B5E  90D8               	bcf	status,0,c
  5769   002B60  EFB3  F015         	goto	l356
  5770   002B64                     l2680:
  5771   002B64  80D8               	bsf	status,0,c
  5772   002B66                     l356:
  5773   002B66  0012               	return		;funcret
  5774   002B68                     __end_of___fleq:
  5775                           	callstack 0
  5776                           
  5777 ;; *************** function ___fldiv *****************
  5778 ;; Defined at:
  5779 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  b               4   39[COMRAM] unsigned char 
  5782 ;;  a               4   43[COMRAM] unsigned char 
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;  grs             4   58[COMRAM] unsigned long 
  5785 ;;  rem             4   51[COMRAM] unsigned long 
  5786 ;;  new_exp         2   56[COMRAM] short 
  5787 ;;  aexp            1   63[COMRAM] unsigned char 
  5788 ;;  bexp            1   62[COMRAM] unsigned char 
  5789 ;;  sign            1   55[COMRAM] unsigned char 
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  4   39[COMRAM] unsigned char 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5799 ;;      Params:         8       0       0       0       0       0       0       0       0
  5800 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5801 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5802 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5803 ;;Total ram usage:       25 bytes
  5804 ;; Hardware stack levels used: 1
  5805 ;; Hardware stack levels required when called: 1
  5806 ;; This function calls:
  5807 ;;		Nothing
  5808 ;; This function is called by:
  5809 ;;		_main
  5810 ;;		_efgtoa
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text23
  5815   001B08                     __ptext23:
  5816                           	callstack 0
  5817   001B08                     ___fldiv:
  5818                           	callstack 25
  5819   001B08  502B               	movf	(___fldiv@b+3)^0,w,c
  5820   001B0A  0B80               	andlw	128
  5821   001B0C  6E38               	movwf	___fldiv@sign^0,c
  5822   001B0E  502B               	movf	(___fldiv@b+3)^0,w,c
  5823   001B10  242B               	addwf	(___fldiv@b+3)^0,w,c
  5824   001B12  6E3F               	movwf	___fldiv@bexp^0,c
  5825   001B14  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  5826   001B16  EF8F  F00D         	goto	u2241
  5827   001B1A  EF91  F00D         	goto	u2240
  5828   001B1E                     u2241:
  5829   001B1E  EF92  F00D         	goto	l2400
  5830   001B22                     u2240:
  5831   001B22  803F               	bsf	___fldiv@bexp^0,0,c
  5832   001B24                     l2400:
  5833   001B24  503F               	movf	___fldiv@bexp^0,w,c
  5834   001B26  B4D8               	btfsc	status,2,c
  5835   001B28  EF98  F00D         	goto	u2251
  5836   001B2C  EF9A  F00D         	goto	u2250
  5837   001B30                     u2251:
  5838   001B30  EFAF  F00D         	goto	l2410
  5839   001B34                     u2250:
  5840   001B34  283F               	incf	___fldiv@bexp^0,w,c
  5841   001B36  A4D8               	btfss	status,2,c
  5842   001B38  EFA0  F00D         	goto	u2261
  5843   001B3C  EFA2  F00D         	goto	u2260
  5844   001B40                     u2261:
  5845   001B40  EFAA  F00D         	goto	l2406
  5846   001B44                     u2260:
  5847   001B44  0E00               	movlw	0
  5848   001B46  6E28               	movwf	___fldiv@b^0,c
  5849   001B48  0E00               	movlw	0
  5850   001B4A  6E29               	movwf	(___fldiv@b+1)^0,c
  5851   001B4C  0E00               	movlw	0
  5852   001B4E  6E2A               	movwf	(___fldiv@b+2)^0,c
  5853   001B50  0E00               	movlw	0
  5854   001B52  6E2B               	movwf	(___fldiv@b+3)^0,c
  5855   001B54                     l2406:
  5856   001B54  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  5857   001B56  0E00               	movlw	0
  5858   001B58  6E2B               	movwf	(___fldiv@b+3)^0,c
  5859   001B5A  EFB7  F00D         	goto	l2412
  5860   001B5E                     l2410:
  5861   001B5E  0E00               	movlw	0
  5862   001B60  6E28               	movwf	___fldiv@b^0,c
  5863   001B62  0E00               	movlw	0
  5864   001B64  6E29               	movwf	(___fldiv@b+1)^0,c
  5865   001B66  0E00               	movlw	0
  5866   001B68  6E2A               	movwf	(___fldiv@b+2)^0,c
  5867   001B6A  0E00               	movlw	0
  5868   001B6C  6E2B               	movwf	(___fldiv@b+3)^0,c
  5869   001B6E                     l2412:
  5870   001B6E  502F               	movf	(___fldiv@a+3)^0,w,c
  5871   001B70  0B80               	andlw	128
  5872   001B72  1A38               	xorwf	___fldiv@sign^0,f,c
  5873   001B74  502F               	movf	(___fldiv@a+3)^0,w,c
  5874   001B76  242F               	addwf	(___fldiv@a+3)^0,w,c
  5875   001B78  6E40               	movwf	___fldiv@aexp^0,c
  5876   001B7A  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  5877   001B7C  EFC2  F00D         	goto	u2271
  5878   001B80  EFC4  F00D         	goto	u2270
  5879   001B84                     u2271:
  5880   001B84  EFC5  F00D         	goto	l2420
  5881   001B88                     u2270:
  5882   001B88  8040               	bsf	___fldiv@aexp^0,0,c
  5883   001B8A                     l2420:
  5884   001B8A  5040               	movf	___fldiv@aexp^0,w,c
  5885   001B8C  B4D8               	btfsc	status,2,c
  5886   001B8E  EFCB  F00D         	goto	u2281
  5887   001B92  EFCD  F00D         	goto	u2280
  5888   001B96                     u2281:
  5889   001B96  EFE2  F00D         	goto	l2430
  5890   001B9A                     u2280:
  5891   001B9A  2840               	incf	___fldiv@aexp^0,w,c
  5892   001B9C  A4D8               	btfss	status,2,c
  5893   001B9E  EFD3  F00D         	goto	u2291
  5894   001BA2  EFD5  F00D         	goto	u2290
  5895   001BA6                     u2291:
  5896   001BA6  EFDD  F00D         	goto	l2426
  5897   001BAA                     u2290:
  5898   001BAA  0E00               	movlw	0
  5899   001BAC  6E2C               	movwf	___fldiv@a^0,c
  5900   001BAE  0E00               	movlw	0
  5901   001BB0  6E2D               	movwf	(___fldiv@a+1)^0,c
  5902   001BB2  0E00               	movlw	0
  5903   001BB4  6E2E               	movwf	(___fldiv@a+2)^0,c
  5904   001BB6  0E00               	movlw	0
  5905   001BB8  6E2F               	movwf	(___fldiv@a+3)^0,c
  5906   001BBA                     l2426:
  5907   001BBA  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  5908   001BBC  0E00               	movlw	0
  5909   001BBE  6E2F               	movwf	(___fldiv@a+3)^0,c
  5910   001BC0  EFEA  F00D         	goto	l2432
  5911   001BC4                     l2430:
  5912   001BC4  0E00               	movlw	0
  5913   001BC6  6E2C               	movwf	___fldiv@a^0,c
  5914   001BC8  0E00               	movlw	0
  5915   001BCA  6E2D               	movwf	(___fldiv@a+1)^0,c
  5916   001BCC  0E00               	movlw	0
  5917   001BCE  6E2E               	movwf	(___fldiv@a+2)^0,c
  5918   001BD0  0E00               	movlw	0
  5919   001BD2  6E2F               	movwf	(___fldiv@a+3)^0,c
  5920   001BD4                     l2432:
  5921   001BD4  502C               	movf	___fldiv@a^0,w,c
  5922   001BD6  102D               	iorwf	(___fldiv@a+1)^0,w,c
  5923   001BD8  102E               	iorwf	(___fldiv@a+2)^0,w,c
  5924   001BDA  102F               	iorwf	(___fldiv@a+3)^0,w,c
  5925   001BDC  A4D8               	btfss	status,2,c
  5926   001BDE  EFF3  F00D         	goto	u2301
  5927   001BE2  EFF5  F00D         	goto	u2300
  5928   001BE6                     u2301:
  5929   001BE6  EF0D  F00E         	goto	l2444
  5930   001BEA                     u2300:
  5931   001BEA  0E00               	movlw	0
  5932   001BEC  6E28               	movwf	___fldiv@b^0,c
  5933   001BEE  0E00               	movlw	0
  5934   001BF0  6E29               	movwf	(___fldiv@b+1)^0,c
  5935   001BF2  0E00               	movlw	0
  5936   001BF4  6E2A               	movwf	(___fldiv@b+2)^0,c
  5937   001BF6  0E00               	movlw	0
  5938   001BF8  6E2B               	movwf	(___fldiv@b+3)^0,c
  5939   001BFA  0E80               	movlw	128
  5940   001BFC  122A               	iorwf	(___fldiv@b+2)^0,f,c
  5941   001BFE  0E7F               	movlw	127
  5942   001C00  122B               	iorwf	(___fldiv@b+3)^0,f,c
  5943   001C02                     l2438:
  5944   001C02  5038               	movf	___fldiv@sign^0,w,c
  5945   001C04  122B               	iorwf	(___fldiv@b+3)^0,f,c
  5946   001C06  C028  F028         	movff	___fldiv@b,?___fldiv
  5947   001C0A  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  5948   001C0E  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  5949   001C12  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  5950   001C16  EF50  F00F         	goto	l679
  5951   001C1A                     l2444:
  5952   001C1A  503F               	movf	___fldiv@bexp^0,w,c
  5953   001C1C  A4D8               	btfss	status,2,c
  5954   001C1E  EF13  F00E         	goto	u2311
  5955   001C22  EF15  F00E         	goto	u2310
  5956   001C26                     u2311:
  5957   001C26  EF1F  F00E         	goto	l2452
  5958   001C2A                     u2310:
  5959   001C2A  0E00               	movlw	0
  5960   001C2C  6E28               	movwf	?___fldiv^0,c
  5961   001C2E  0E00               	movlw	0
  5962   001C30  6E29               	movwf	(?___fldiv+1)^0,c
  5963   001C32  0E00               	movlw	0
  5964   001C34  6E2A               	movwf	(?___fldiv+2)^0,c
  5965   001C36  0E00               	movlw	0
  5966   001C38  6E2B               	movwf	(?___fldiv+3)^0,c
  5967   001C3A  EF50  F00F         	goto	l679
  5968   001C3E                     l2452:
  5969   001C3E  5040               	movf	___fldiv@aexp^0,w,c
  5970   001C40  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  5971   001C44  6A31               	clrf	(??___fldiv+1)^0,c
  5972   001C46  5E30               	subwf	??___fldiv^0,f,c
  5973   001C48  0E00               	movlw	0
  5974   001C4A  5A31               	subwfb	(??___fldiv+1)^0,f,c
  5975   001C4C  0E7F               	movlw	127
  5976   001C4E  2430               	addwf	??___fldiv^0,w,c
  5977   001C50  6E39               	movwf	___fldiv@new_exp^0,c
  5978   001C52  0E00               	movlw	0
  5979   001C54  2031               	addwfc	(??___fldiv+1)^0,w,c
  5980   001C56  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  5981   001C58  C028  F034         	movff	___fldiv@b,___fldiv@rem
  5982   001C5C  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  5983   001C60  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  5984   001C64  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  5985   001C68  0E00               	movlw	0
  5986   001C6A  6E28               	movwf	___fldiv@b^0,c
  5987   001C6C  0E00               	movlw	0
  5988   001C6E  6E29               	movwf	(___fldiv@b+1)^0,c
  5989   001C70  0E00               	movlw	0
  5990   001C72  6E2A               	movwf	(___fldiv@b+2)^0,c
  5991   001C74  0E00               	movlw	0
  5992   001C76  6E2B               	movwf	(___fldiv@b+3)^0,c
  5993   001C78  0E00               	movlw	0
  5994   001C7A  6E3B               	movwf	___fldiv@grs^0,c
  5995   001C7C  0E00               	movlw	0
  5996   001C7E  6E3C               	movwf	(___fldiv@grs+1)^0,c
  5997   001C80  0E00               	movlw	0
  5998   001C82  6E3D               	movwf	(___fldiv@grs+2)^0,c
  5999   001C84  0E00               	movlw	0
  6000   001C86  6E3E               	movwf	(___fldiv@grs+3)^0,c
  6001   001C88  0E00               	movlw	0
  6002   001C8A  6E40               	movwf	___fldiv@aexp^0,c
  6003   001C8C  EF80  F00E         	goto	l681
  6004   001C90                     l2462:
  6005   001C90  5040               	movf	___fldiv@aexp^0,w,c
  6006   001C92  B4D8               	btfsc	status,2,c
  6007   001C94  EF4E  F00E         	goto	u2321
  6008   001C98  EF50  F00E         	goto	u2320
  6009   001C9C                     u2321:
  6010   001C9C  EF67  F00E         	goto	l2470
  6011   001CA0                     u2320:
  6012   001CA0  90D8               	bcf	status,0,c
  6013   001CA2  3634               	rlcf	___fldiv@rem^0,f,c
  6014   001CA4  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  6015   001CA6  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  6016   001CA8  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  6017   001CAA  90D8               	bcf	status,0,c
  6018   001CAC  3628               	rlcf	___fldiv@b^0,f,c
  6019   001CAE  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6020   001CB0  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6021   001CB2  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6022   001CB4  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6023   001CB6  EF5F  F00E         	goto	u2331
  6024   001CBA  EF61  F00E         	goto	u2330
  6025   001CBE                     u2331:
  6026   001CBE  EF62  F00E         	goto	l684
  6027   001CC2                     u2330:
  6028   001CC2  8028               	bsf	___fldiv@b^0,0,c
  6029   001CC4                     l684:
  6030   001CC4  90D8               	bcf	status,0,c
  6031   001CC6  363B               	rlcf	___fldiv@grs^0,f,c
  6032   001CC8  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6033   001CCA  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6034   001CCC  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6035   001CCE                     l2470:
  6036   001CCE  502C               	movf	___fldiv@a^0,w,c
  6037   001CD0  5C34               	subwf	___fldiv@rem^0,w,c
  6038   001CD2  502D               	movf	(___fldiv@a+1)^0,w,c
  6039   001CD4  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6040   001CD6  502E               	movf	(___fldiv@a+2)^0,w,c
  6041   001CD8  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6042   001CDA  502F               	movf	(___fldiv@a+3)^0,w,c
  6043   001CDC  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6044   001CDE  A0D8               	btfss	status,0,c
  6045   001CE0  EF74  F00E         	goto	u2341
  6046   001CE4  EF76  F00E         	goto	u2340
  6047   001CE8                     u2341:
  6048   001CE8  EF7F  F00E         	goto	l2476
  6049   001CEC                     u2340:
  6050   001CEC  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6051   001CEE  502C               	movf	___fldiv@a^0,w,c
  6052   001CF0  5E34               	subwf	___fldiv@rem^0,f,c
  6053   001CF2  502D               	movf	(___fldiv@a+1)^0,w,c
  6054   001CF4  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6055   001CF6  502E               	movf	(___fldiv@a+2)^0,w,c
  6056   001CF8  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6057   001CFA  502F               	movf	(___fldiv@a+3)^0,w,c
  6058   001CFC  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6059   001CFE                     l2476:
  6060   001CFE  2A40               	incf	___fldiv@aexp^0,f,c
  6061   001D00                     l681:
  6062   001D00  0E19               	movlw	25
  6063   001D02  6440               	cpfsgt	___fldiv@aexp^0,c
  6064   001D04  EF86  F00E         	goto	u2351
  6065   001D08  EF88  F00E         	goto	u2350
  6066   001D0C                     u2351:
  6067   001D0C  EF48  F00E         	goto	l2462
  6068   001D10                     u2350:
  6069   001D10  5034               	movf	___fldiv@rem^0,w,c
  6070   001D12  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  6071   001D14  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  6072   001D16  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  6073   001D18  B4D8               	btfsc	status,2,c
  6074   001D1A  EF91  F00E         	goto	u2361
  6075   001D1E  EF93  F00E         	goto	u2360
  6076   001D22                     u2361:
  6077   001D22  EFAB  F00E         	goto	l2488
  6078   001D26                     u2360:
  6079   001D26  803B               	bsf	___fldiv@grs^0,0,c
  6080   001D28  EFAB  F00E         	goto	l2488
  6081   001D2C                     l2482:
  6082   001D2C  90D8               	bcf	status,0,c
  6083   001D2E  3628               	rlcf	___fldiv@b^0,f,c
  6084   001D30  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6085   001D32  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6086   001D34  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6087   001D36  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6088   001D38  EFA0  F00E         	goto	u2371
  6089   001D3C  EFA2  F00E         	goto	u2370
  6090   001D40                     u2371:
  6091   001D40  EFA3  F00E         	goto	l690
  6092   001D44                     u2370:
  6093   001D44  8028               	bsf	___fldiv@b^0,0,c
  6094   001D46                     l690:
  6095   001D46  90D8               	bcf	status,0,c
  6096   001D48  363B               	rlcf	___fldiv@grs^0,f,c
  6097   001D4A  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6098   001D4C  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6099   001D4E  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6100   001D50  0639               	decf	___fldiv@new_exp^0,f,c
  6101   001D52  A0D8               	btfss	status,0,c
  6102   001D54  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  6103   001D56                     l2488:
  6104   001D56  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6105   001D58  EFB0  F00E         	goto	u2381
  6106   001D5C  EFB2  F00E         	goto	u2380
  6107   001D60                     u2381:
  6108   001D60  EF96  F00E         	goto	l2482
  6109   001D64                     u2380:
  6110   001D64  0E00               	movlw	0
  6111   001D66  6E40               	movwf	___fldiv@aexp^0,c
  6112   001D68  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6113   001D6A  EFB9  F00E         	goto	u2391
  6114   001D6E  EFBB  F00E         	goto	u2390
  6115   001D72                     u2391:
  6116   001D72  EFDF  F00E         	goto	l692
  6117   001D76                     u2390:
  6118   001D76  0EFF               	movlw	255
  6119   001D78  143B               	andwf	___fldiv@grs^0,w,c
  6120   001D7A  6E30               	movwf	??___fldiv^0,c
  6121   001D7C  0EFF               	movlw	255
  6122   001D7E  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6123   001D80  6E31               	movwf	(??___fldiv+1)^0,c
  6124   001D82  0EFF               	movlw	255
  6125   001D84  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6126   001D86  6E32               	movwf	(??___fldiv+2)^0,c
  6127   001D88  0E7F               	movlw	127
  6128   001D8A  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6129   001D8C  6E33               	movwf	(??___fldiv+3)^0,c
  6130   001D8E  5030               	movf	??___fldiv^0,w,c
  6131   001D90  1031               	iorwf	(??___fldiv+1)^0,w,c
  6132   001D92  1032               	iorwf	(??___fldiv+2)^0,w,c
  6133   001D94  1033               	iorwf	(??___fldiv+3)^0,w,c
  6134   001D96  B4D8               	btfsc	status,2,c
  6135   001D98  EFD0  F00E         	goto	u2401
  6136   001D9C  EFD2  F00E         	goto	u2400
  6137   001DA0                     u2401:
  6138   001DA0  EFD6  F00E         	goto	l693
  6139   001DA4                     u2400:
  6140   001DA4                     l2496:
  6141   001DA4  0E01               	movlw	1
  6142   001DA6  6E40               	movwf	___fldiv@aexp^0,c
  6143   001DA8  EFDF  F00E         	goto	l692
  6144   001DAC                     l693:
  6145   001DAC  A028               	btfss	___fldiv@b^0,0,c
  6146   001DAE  EFDB  F00E         	goto	u2411
  6147   001DB2  EFDD  F00E         	goto	u2410
  6148   001DB6                     u2411:
  6149   001DB6  EFDF  F00E         	goto	l692
  6150   001DBA                     u2410:
  6151   001DBA  EFD2  F00E         	goto	l2496
  6152   001DBE                     l692:
  6153   001DBE  5040               	movf	___fldiv@aexp^0,w,c
  6154   001DC0  B4D8               	btfsc	status,2,c
  6155   001DC2  EFE5  F00E         	goto	u2421
  6156   001DC6  EFE7  F00E         	goto	u2420
  6157   001DCA                     u2421:
  6158   001DCA  EF0B  F00F         	goto	l2508
  6159   001DCE                     u2420:
  6160   001DCE  0E01               	movlw	1
  6161   001DD0  2628               	addwf	___fldiv@b^0,f,c
  6162   001DD2  0E00               	movlw	0
  6163   001DD4  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6164   001DD6  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6165   001DD8  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6166   001DDA  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6167   001DDC  EFF2  F00E         	goto	u2431
  6168   001DE0  EFF4  F00E         	goto	u2430
  6169   001DE4                     u2431:
  6170   001DE4  EF0B  F00F         	goto	l2508
  6171   001DE8                     u2430:
  6172   001DE8  C028  F030         	movff	___fldiv@b,??___fldiv
  6173   001DEC  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6174   001DF0  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6175   001DF4  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6176   001DF8  3433               	rlcf	(??___fldiv+3)^0,w,c
  6177   001DFA  3233               	rrcf	(??___fldiv+3)^0,f,c
  6178   001DFC  3232               	rrcf	(??___fldiv+2)^0,f,c
  6179   001DFE  3231               	rrcf	(??___fldiv+1)^0,f,c
  6180   001E00  3230               	rrcf	??___fldiv^0,f,c
  6181   001E02  C030  F028         	movff	??___fldiv,___fldiv@b
  6182   001E06  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6183   001E0A  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6184   001E0E  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6185   001E12  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6186   001E14  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6187   001E16                     l2508:
  6188   001E16  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6189   001E18  EF16  F00F         	goto	u2441
  6190   001E1C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6191   001E1E  E108               	bnz	u2440
  6192   001E20  2839               	incf	___fldiv@new_exp^0,w,c
  6193   001E22  A0D8               	btfss	status,0,c
  6194   001E24  EF16  F00F         	goto	u2441
  6195   001E28  EF18  F00F         	goto	u2440
  6196   001E2C                     u2441:
  6197   001E2C  EF23  F00F         	goto	l2512
  6198   001E30                     u2440:
  6199   001E30  0E00               	movlw	0
  6200   001E32  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6201   001E34  6839               	setf	___fldiv@new_exp^0,c
  6202   001E36  0E00               	movlw	0
  6203   001E38  6E28               	movwf	___fldiv@b^0,c
  6204   001E3A  0E00               	movlw	0
  6205   001E3C  6E29               	movwf	(___fldiv@b+1)^0,c
  6206   001E3E  0E00               	movlw	0
  6207   001E40  6E2A               	movwf	(___fldiv@b+2)^0,c
  6208   001E42  0E00               	movlw	0
  6209   001E44  6E2B               	movwf	(___fldiv@b+3)^0,c
  6210   001E46                     l2512:
  6211   001E46  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6212   001E48  EF30  F00F         	goto	u2450
  6213   001E4C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6214   001E4E  E106               	bnz	u2451
  6215   001E50  0439               	decf	___fldiv@new_exp^0,w,c
  6216   001E52  B0D8               	btfsc	status,0,c
  6217   001E54  EF2E  F00F         	goto	u2451
  6218   001E58  EF30  F00F         	goto	u2450
  6219   001E5C                     u2451:
  6220   001E5C  EF3E  F00F         	goto	l2516
  6221   001E60                     u2450:
  6222   001E60  0E00               	movlw	0
  6223   001E62  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6224   001E64  0E00               	movlw	0
  6225   001E66  6E39               	movwf	___fldiv@new_exp^0,c
  6226   001E68  0E00               	movlw	0
  6227   001E6A  6E28               	movwf	___fldiv@b^0,c
  6228   001E6C  0E00               	movlw	0
  6229   001E6E  6E29               	movwf	(___fldiv@b+1)^0,c
  6230   001E70  0E00               	movlw	0
  6231   001E72  6E2A               	movwf	(___fldiv@b+2)^0,c
  6232   001E74  0E00               	movlw	0
  6233   001E76  6E2B               	movwf	(___fldiv@b+3)^0,c
  6234   001E78  0E00               	movlw	0
  6235   001E7A  6E38               	movwf	___fldiv@sign^0,c
  6236   001E7C                     l2516:
  6237   001E7C  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6238   001E80  A03F               	btfss	___fldiv@bexp^0,0,c
  6239   001E82  EF45  F00F         	goto	u2461
  6240   001E86  EF47  F00F         	goto	u2460
  6241   001E8A                     u2461:
  6242   001E8A  EF4A  F00F         	goto	l2522
  6243   001E8E                     u2460:
  6244   001E8E  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6245   001E90  EF4B  F00F         	goto	l2524
  6246   001E94                     l2522:
  6247   001E94  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  6248   001E96                     l2524:
  6249   001E96  90D8               	bcf	status,0,c
  6250   001E98  303F               	rrcf	___fldiv@bexp^0,w,c
  6251   001E9A  6E2B               	movwf	(___fldiv@b+3)^0,c
  6252   001E9C  EF01  F00E         	goto	l2438
  6253   001EA0                     l679:
  6254   001EA0  0012               	return		;funcret
  6255   001EA2                     __end_of___fldiv:
  6256                           	callstack 0
  6257                           
  6258 ;; *************** function ___xxtofl *****************
  6259 ;; Defined at:
  6260 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;  sign            1    wreg     unsigned char 
  6263 ;;  val             4    0[COMRAM] long 
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;  sign            1    8[COMRAM] unsigned char 
  6266 ;;  arg             4   10[COMRAM] unsigned long 
  6267 ;;  exp             1    9[COMRAM] unsigned char 
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  4    0[COMRAM] unsigned char 
  6270 ;; Registers used:
  6271 ;;		wreg, status,2, status,0
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6277 ;;      Params:         4       0       0       0       0       0       0       0       0
  6278 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6279 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6280 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6281 ;;Total ram usage:       14 bytes
  6282 ;; Hardware stack levels used: 1
  6283 ;; Hardware stack levels required when called: 1
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_main
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           	psect	text24
  6292   00231C                     __ptext24:
  6293                           	callstack 0
  6294   00231C                     ___xxtofl:
  6295                           	callstack 29
  6296                           
  6297                           ;incstack = 0
  6298                           ;___xxtofl@sign stored from wreg
  6299   00231C  6E09               	movwf	___xxtofl@sign^0,c
  6300   00231E  5009               	movf	___xxtofl@sign^0,w,c
  6301   002320  B4D8               	btfsc	status,2,c
  6302   002322  EF95  F011         	goto	u3471
  6303   002326  EF97  F011         	goto	u3470
  6304   00232A                     u3471:
  6305   00232A  EFB9  F011         	goto	l752
  6306   00232E                     u3470:
  6307   00232E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6308   002330  EF9E  F011         	goto	u3480
  6309   002334  EF9C  F011         	goto	u3481
  6310   002338                     u3481:
  6311   002338  EFB9  F011         	goto	l752
  6312   00233C                     u3480:
  6313   00233C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6314   002340  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6315   002344  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6316   002348  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6317   00234C  1E05               	comf	??___xxtofl^0,f,c
  6318   00234E  1E06               	comf	(??___xxtofl+1)^0,f,c
  6319   002350  1E07               	comf	(??___xxtofl+2)^0,f,c
  6320   002352  1E08               	comf	(??___xxtofl+3)^0,f,c
  6321   002354  2A05               	incf	??___xxtofl^0,f,c
  6322   002356  0E00               	movlw	0
  6323   002358  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6324   00235A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6325   00235C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6326   00235E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6327   002362  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6328   002366  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6329   00236A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6330   00236E  EFC1  F011         	goto	l3246
  6331   002372                     l752:
  6332   002372  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6333   002376  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6334   00237A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6335   00237E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6336   002382                     l3246:
  6337   002382  5001               	movf	___xxtofl@val^0,w,c
  6338   002384  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6339   002386  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6340   002388  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6341   00238A  A4D8               	btfss	status,2,c
  6342   00238C  EFCA  F011         	goto	u3491
  6343   002390  EFCC  F011         	goto	u3490
  6344   002394                     u3491:
  6345   002394  EFD6  F011         	goto	l3252
  6346   002398                     u3490:
  6347   002398  0E00               	movlw	0
  6348   00239A  6E01               	movwf	?___xxtofl^0,c
  6349   00239C  0E00               	movlw	0
  6350   00239E  6E02               	movwf	(?___xxtofl+1)^0,c
  6351   0023A0  0E00               	movlw	0
  6352   0023A2  6E03               	movwf	(?___xxtofl+2)^0,c
  6353   0023A4  0E00               	movlw	0
  6354   0023A6  6E04               	movwf	(?___xxtofl+3)^0,c
  6355   0023A8  EF67  F012         	goto	l755
  6356   0023AC                     l3252:
  6357   0023AC  0E96               	movlw	150
  6358   0023AE  6E0A               	movwf	___xxtofl@exp^0,c
  6359   0023B0  EFE0  F011         	goto	l3256
  6360   0023B4                     l3254:
  6361   0023B4  2A0A               	incf	___xxtofl@exp^0,f,c
  6362   0023B6  90D8               	bcf	status,0,c
  6363   0023B8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6364   0023BA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6365   0023BC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6366   0023BE  320B               	rrcf	___xxtofl@arg^0,f,c
  6367   0023C0                     l3256:
  6368   0023C0  0E00               	movlw	0
  6369   0023C2  140B               	andwf	___xxtofl@arg^0,w,c
  6370   0023C4  6E05               	movwf	??___xxtofl^0,c
  6371   0023C6  0E00               	movlw	0
  6372   0023C8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6373   0023CA  6E06               	movwf	(??___xxtofl+1)^0,c
  6374   0023CC  0E00               	movlw	0
  6375   0023CE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6376   0023D0  6E07               	movwf	(??___xxtofl+2)^0,c
  6377   0023D2  0EFE               	movlw	254
  6378   0023D4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6379   0023D6  6E08               	movwf	(??___xxtofl+3)^0,c
  6380   0023D8  5005               	movf	??___xxtofl^0,w,c
  6381   0023DA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6382   0023DC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6383   0023DE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6384   0023E0  A4D8               	btfss	status,2,c
  6385   0023E2  EFF5  F011         	goto	u3501
  6386   0023E6  EFF7  F011         	goto	u3500
  6387   0023EA                     u3501:
  6388   0023EA  EFDA  F011         	goto	l3254
  6389   0023EE                     u3500:
  6390   0023EE  EF05  F012         	goto	l759
  6391   0023F2                     l3258:
  6392   0023F2  2A0A               	incf	___xxtofl@exp^0,f,c
  6393   0023F4  0E01               	movlw	1
  6394   0023F6  260B               	addwf	___xxtofl@arg^0,f,c
  6395   0023F8  0E00               	movlw	0
  6396   0023FA  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6397   0023FC  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6398   0023FE  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6399   002400  90D8               	bcf	status,0,c
  6400   002402  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6401   002404  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6402   002406  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6403   002408  320B               	rrcf	___xxtofl@arg^0,f,c
  6404   00240A                     l759:
  6405   00240A  0E00               	movlw	0
  6406   00240C  140B               	andwf	___xxtofl@arg^0,w,c
  6407   00240E  6E05               	movwf	??___xxtofl^0,c
  6408   002410  0E00               	movlw	0
  6409   002412  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6410   002414  6E06               	movwf	(??___xxtofl+1)^0,c
  6411   002416  0E00               	movlw	0
  6412   002418  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6413   00241A  6E07               	movwf	(??___xxtofl+2)^0,c
  6414   00241C  0EFF               	movlw	255
  6415   00241E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6416   002420  6E08               	movwf	(??___xxtofl+3)^0,c
  6417   002422  5005               	movf	??___xxtofl^0,w,c
  6418   002424  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6419   002426  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6420   002428  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6421   00242A  A4D8               	btfss	status,2,c
  6422   00242C  EF1A  F012         	goto	u3511
  6423   002430  EF1C  F012         	goto	u3510
  6424   002434                     u3511:
  6425   002434  EFF9  F011         	goto	l3258
  6426   002438                     u3510:
  6427   002438  EF24  F012         	goto	l3266
  6428   00243C                     l3264:
  6429   00243C  060A               	decf	___xxtofl@exp^0,f,c
  6430   00243E  90D8               	bcf	status,0,c
  6431   002440  360B               	rlcf	___xxtofl@arg^0,f,c
  6432   002442  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6433   002444  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6434   002446  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6435   002448                     l3266:
  6436   002448  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6437   00244A  EF29  F012         	goto	u3521
  6438   00244E  EF2B  F012         	goto	u3520
  6439   002452                     u3521:
  6440   002452  EF33  F012         	goto	l766
  6441   002456                     u3520:
  6442   002456  0E02               	movlw	2
  6443   002458  600A               	cpfslt	___xxtofl@exp^0,c
  6444   00245A  EF31  F012         	goto	u3531
  6445   00245E  EF33  F012         	goto	u3530
  6446   002462                     u3531:
  6447   002462  EF1E  F012         	goto	l3264
  6448   002466                     u3530:
  6449   002466                     l766:
  6450   002466  B00A               	btfsc	___xxtofl@exp^0,0,c
  6451   002468  EF38  F012         	goto	u3541
  6452   00246C  EF3A  F012         	goto	u3540
  6453   002470                     u3541:
  6454   002470  EF3B  F012         	goto	l3272
  6455   002474                     u3540:
  6456   002474  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6457   002476                     l3272:
  6458   002476  90D8               	bcf	status,0,c
  6459   002478  320A               	rrcf	___xxtofl@exp^0,f,c
  6460   00247A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6461   00247E  6A06               	clrf	(??___xxtofl+1)^0,c
  6462   002480  6A07               	clrf	(??___xxtofl+2)^0,c
  6463   002482  6A08               	clrf	(??___xxtofl+3)^0,c
  6464   002484  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6465   002488  6A07               	clrf	(??___xxtofl+2)^0,c
  6466   00248A  6A06               	clrf	(??___xxtofl+1)^0,c
  6467   00248C  6A05               	clrf	??___xxtofl^0,c
  6468   00248E  5005               	movf	??___xxtofl^0,w,c
  6469   002490  120B               	iorwf	___xxtofl@arg^0,f,c
  6470   002492  5006               	movf	(??___xxtofl+1)^0,w,c
  6471   002494  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6472   002496  5007               	movf	(??___xxtofl+2)^0,w,c
  6473   002498  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6474   00249A  5008               	movf	(??___xxtofl+3)^0,w,c
  6475   00249C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6476   00249E  5009               	movf	___xxtofl@sign^0,w,c
  6477   0024A0  B4D8               	btfsc	status,2,c
  6478   0024A2  EF55  F012         	goto	u3551
  6479   0024A6  EF57  F012         	goto	u3550
  6480   0024AA                     u3551:
  6481   0024AA  EF5F  F012         	goto	l3282
  6482   0024AE                     u3550:
  6483   0024AE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6484   0024B0  EF5E  F012         	goto	u3560
  6485   0024B4  EF5C  F012         	goto	u3561
  6486   0024B8                     u3561:
  6487   0024B8  EF5F  F012         	goto	l3282
  6488   0024BC                     u3560:
  6489   0024BC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6490   0024BE                     l3282:
  6491   0024BE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6492   0024C2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6493   0024C6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6494   0024CA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6495   0024CE                     l755:
  6496   0024CE  0012               	return		;funcret
  6497   0024D0                     __end_of___xxtofl:
  6498                           	callstack 0
  6499                           
  6500 ;; *************** function _Init_Internal_Oscillator *****************
  6501 ;; Defined at:
  6502 ;;		line 106 in file "main.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;		None
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;		None
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6516 ;;      Params:         0       0       0       0       0       0       0       0       0
  6517 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6519 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6520 ;;Total ram usage:        0 bytes
  6521 ;; Hardware stack levels used: 1
  6522 ;; Hardware stack levels required when called: 1
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_main
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text25
  6531   003012                     __ptext25:
  6532                           	callstack 0
  6533   003012                     _Init_Internal_Oscillator:
  6534                           	callstack 29
  6535   003012                     
  6536                           ;main.c: 109:     OSCCON = 0x00;
  6537   003012  0E00               	movlw	0
  6538   003014  6ED3               	movwf	211,c	;volatile
  6539                           
  6540                           ;main.c: 112:     OSCCONbits.IRCF = 0b111;
  6541   003016  0E70               	movlw	112
  6542   003018  12D3               	iorwf	211,f,c	;volatile
  6543                           
  6544                           ;main.c: 113:     OSCCONbits.SCS = 0b11;
  6545   00301A  0E03               	movlw	3
  6546   00301C  12D3               	iorwf	211,f,c	;volatile
  6547   00301E  0012               	return		;funcret
  6548   003020                     __end_of_Init_Internal_Oscillator:
  6549                           	callstack 0
  6550                           
  6551 ;; *************** function _Init_ADC_Module *****************
  6552 ;; Defined at:
  6553 ;;		line 76 in file "main.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;		None
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  1    wreg      void 
  6560 ;; Registers used:
  6561 ;;		wreg, status,2
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6567 ;;      Params:         0       0       0       0       0       0       0       0       0
  6568 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6570 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6571 ;;Total ram usage:        0 bytes
  6572 ;; Hardware stack levels used: 1
  6573 ;; Hardware stack levels required when called: 1
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_main
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           	psect	text26
  6582   002F64                     __ptext26:
  6583                           	callstack 0
  6584   002F64                     _Init_ADC_Module:
  6585                           	callstack 29
  6586   002F64                     
  6587                           ;main.c: 79:     ADCON0 = 0x00;
  6588   002F64  0E00               	movlw	0
  6589   002F66  6EC2               	movwf	194,c	;volatile
  6590                           
  6591                           ;main.c: 80:     ADCON1 = 0x00;
  6592   002F68  0E00               	movlw	0
  6593   002F6A  6EC1               	movwf	193,c	;volatile
  6594                           
  6595                           ;main.c: 81:     ADCON2 = 0x00;
  6596   002F6C  0E00               	movlw	0
  6597   002F6E  6EC0               	movwf	192,c	;volatile
  6598   002F70                     
  6599                           ;main.c: 84:     ADCON0bits.ADON = 0;
  6600   002F70  90C2               	bcf	194,0,c	;volatile
  6601                           
  6602                           ;main.c: 85:     ADCON0bits.CHS = 0b0001;
  6603   002F72  50C2               	movf	194,w,c	;volatile
  6604   002F74  0BC3               	andlw	-61
  6605   002F76  0904               	iorlw	4
  6606   002F78  6EC2               	movwf	194,c	;volatile
  6607                           
  6608                           ;main.c: 87:     ADCON1bits.VCFG = 0b00;
  6609   002F7A  0ECF               	movlw	-49
  6610   002F7C  16C1               	andwf	193,f,c	;volatile
  6611                           
  6612                           ;main.c: 88:     ADCON1bits.PCFG = 0b1101;
  6613   002F7E  50C1               	movf	193,w,c	;volatile
  6614   002F80  0BF0               	andlw	-16
  6615   002F82  090D               	iorlw	13
  6616   002F84  6EC1               	movwf	193,c	;volatile
  6617   002F86                     
  6618                           ;main.c: 90:     ADCON2bits.ADFM = 0;
  6619   002F86  9EC0               	bcf	192,7,c	;volatile
  6620                           
  6621                           ;main.c: 91:     ADCON2bits.ADCS = 0b001;
  6622   002F88  50C0               	movf	192,w,c	;volatile
  6623   002F8A  0BF8               	andlw	-8
  6624   002F8C  0901               	iorlw	1
  6625   002F8E  6EC0               	movwf	192,c	;volatile
  6626                           
  6627                           ;main.c: 100:     ADCON2bits.ACQT = 0b110;
  6628   002F90  50C0               	movf	192,w,c	;volatile
  6629   002F92  0BC7               	andlw	-57
  6630   002F94  0930               	iorlw	48
  6631   002F96  6EC0               	movwf	192,c	;volatile
  6632   002F98                     
  6633                           ;main.c: 103:     ADCON0bits.ADON = 1;
  6634   002F98  80C2               	bsf	194,0,c	;volatile
  6635   002F9A  0012               	return		;funcret
  6636   002F9C                     __end_of_Init_ADC_Module:
  6637                           	callstack 0
  6638                           
  6639 ;; *************** function _FM_Lcd_Set_Cursor *****************
  6640 ;; Defined at:
  6641 ;;		line 62 in file "FM_LCD16X2_Easy.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  filas           1    wreg     enum E3201
  6644 ;;  columna         1    5[COMRAM] enum E3205
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  filas           1    6[COMRAM] enum E3201
  6647 ;;  base_pos        1    7[COMRAM] unsigned char 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      void 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2, status,0, cstack
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6657 ;;      Params:         1       0       0       0       0       0       0       0       0
  6658 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6660 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6661 ;;Total ram usage:        3 bytes
  6662 ;; Hardware stack levels used: 1
  6663 ;; Hardware stack levels required when called: 3
  6664 ;; This function calls:
  6665 ;;		_FM_Lcd_Send_Command
  6666 ;; This function is called by:
  6667 ;;		_main
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text27
  6672   002EA8                     __ptext27:
  6673                           	callstack 0
  6674   002EA8                     _FM_Lcd_Set_Cursor:
  6675                           	callstack 27
  6676                           
  6677                           ;incstack = 0
  6678                           ;FM_Lcd_Set_Cursor@filas stored from wreg
  6679   002EA8  6E07               	movwf	FM_Lcd_Set_Cursor@filas^0,c
  6680   002EAA                     
  6681                           ;FM_LCD16X2_Easy.c: 62: void FM_Lcd_Set_Cursor (_row_lcd_t filas, _column_lcd_t columna)
      +                          ;FM_LCD16X2_Easy.c: 63: {;FM_LCD16X2_Easy.c: 64:     char base_pos = 0x00;
  6682   002EAA  0E00               	movlw	0
  6683   002EAC  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^0,c
  6684   002EAE                     
  6685                           ;FM_LCD16X2_Easy.c: 65:     if(filas == ROW_1)
  6686   002EAE  5007               	movf	FM_Lcd_Set_Cursor@filas^0,w,c
  6687   002EB0  A4D8               	btfss	status,2,c
  6688   002EB2  EF5D  F017         	goto	u3421
  6689   002EB6  EF5F  F017         	goto	u3420
  6690   002EBA                     u3421:
  6691   002EBA  EF63  F017         	goto	l3210
  6692   002EBE                     u3420:
  6693   002EBE                     
  6694                           ;FM_LCD16X2_Easy.c: 66:     {;FM_LCD16X2_Easy.c: 67:         base_pos = 0x80;
  6695   002EBE  0E80               	movlw	128
  6696   002EC0  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^0,c
  6697                           
  6698                           ;FM_LCD16X2_Easy.c: 68:     }
  6699   002EC2  EF70  F017         	goto	l3214
  6700   002EC6                     l3210:
  6701   002EC6  0407               	decf	FM_Lcd_Set_Cursor@filas^0,w,c
  6702   002EC8  A4D8               	btfss	status,2,c
  6703   002ECA  EF69  F017         	goto	u3431
  6704   002ECE  EF6B  F017         	goto	u3430
  6705   002ED2                     u3431:
  6706   002ED2  EF6F  F017         	goto	l89
  6707   002ED6                     u3430:
  6708   002ED6                     
  6709                           ;FM_LCD16X2_Easy.c: 70:     {;FM_LCD16X2_Easy.c: 71:         base_pos = 0xC0;
  6710   002ED6  0EC0               	movlw	192
  6711   002ED8  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^0,c
  6712                           
  6713                           ;FM_LCD16X2_Easy.c: 72:     }
  6714   002EDA  EF70  F017         	goto	l3214
  6715   002EDE                     l89:
  6716                           
  6717                           ;FM_LCD16X2_Easy.c: 74:     {;FM_LCD16X2_Easy.c: 75:         __nop();
  6718   002EDE  F000               	nop	
  6719   002EE0                     l3214:
  6720                           
  6721                           ;FM_LCD16X2_Easy.c: 79:     base_pos += columna;
  6722   002EE0  5006               	movf	FM_Lcd_Set_Cursor@columna^0,w,c
  6723   002EE2  2608               	addwf	FM_Lcd_Set_Cursor@base_pos^0,f,c
  6724   002EE4                     
  6725                           ;FM_LCD16X2_Easy.c: 80:     FM_Lcd_Send_Command(base_pos);
  6726   002EE4  5008               	movf	FM_Lcd_Set_Cursor@base_pos^0,w,c
  6727   002EE6  EC16  F018         	call	_FM_Lcd_Send_Command
  6728   002EEA  0012               	return		;funcret
  6729   002EEC                     __end_of_FM_Lcd_Set_Cursor:
  6730                           	callstack 0
  6731                           
  6732 ;; *************** function _FM_Lcd_Send_String *****************
  6733 ;; Defined at:
  6734 ;;		line 52 in file "FM_LCD16X2_Easy.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  cadena          2    5[COMRAM] PTR unsigned char 
  6737 ;;		 -> data_vol(16), STR_1(14), 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  index           1    9[COMRAM] unsigned char 
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  1    wreg      void 
  6742 ;; Registers used:
  6743 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6749 ;;      Params:         2       0       0       0       0       0       0       0       0
  6750 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6751 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6752 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6753 ;;Total ram usage:        5 bytes
  6754 ;; Hardware stack levels used: 1
  6755 ;; Hardware stack levels required when called: 3
  6756 ;; This function calls:
  6757 ;;		_FM_Lcd_Send_Character
  6758 ;; This function is called by:
  6759 ;;		_main
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           	psect	text28
  6764   002BE2                     __ptext28:
  6765                           	callstack 0
  6766   002BE2                     _FM_Lcd_Send_String:
  6767                           	callstack 27
  6768   002BE2                     
  6769                           ;FM_LCD16X2_Easy.c: 52: void FM_Lcd_Send_String (char *cadena);FM_LCD16X2_Easy.c: 53: {;
      +                          FM_LCD16X2_Easy.c: 54:     uint8_t index = 0;
  6770   002BE2  0E00               	movlw	0
  6771   002BE4  6E0A               	movwf	FM_Lcd_Send_String@index^0,c
  6772                           
  6773                           ;FM_LCD16X2_Easy.c: 55:     while(cadena[index] != '\0')
  6774   002BE6  EF0E  F016         	goto	l3226
  6775   002BEA                     l3222:
  6776                           
  6777                           ;FM_LCD16X2_Easy.c: 56:     {;FM_LCD16X2_Easy.c: 57:         FM_Lcd_Send_Character(caden
      +                          a[index]);
  6778   002BEA  500A               	movf	FM_Lcd_Send_String@index^0,w,c
  6779   002BEC  2406               	addwf	FM_Lcd_Send_String@cadena^0,w,c
  6780   002BEE  6E08               	movwf	??_FM_Lcd_Send_String^0,c
  6781   002BF0  0E00               	movlw	0
  6782   002BF2  2007               	addwfc	(FM_Lcd_Send_String@cadena+1)^0,w,c
  6783   002BF4  6E09               	movwf	(??_FM_Lcd_Send_String+1)^0,c
  6784   002BF6  C008  FFF6         	movff	??_FM_Lcd_Send_String,tblptrl
  6785   002BFA  C009  FFF7         	movff	??_FM_Lcd_Send_String+1,tblptrh
  6786   002BFE  6AF8               	clrf	tblptru,c
  6787   002C00  0E07               	movlw	(high __ramtop+-1)
  6788   002C02  64F7               	cpfsgt	tblptrh,c
  6789   002C04  D003               	bra	u3447
  6790   002C06  0008               	tblrd		*
  6791   002C08  50F5               	movf	tablat,w,c
  6792   002C0A  D005               	bra	u3440
  6793   002C0C                     u3447:
  6794   002C0C  CFF6 FFE1          	movff	tblptrl,fsr1l
  6795   002C10  CFF7 FFE2          	movff	tblptrh,fsr1h
  6796   002C14  50E7               	movf	indf1,w,c
  6797   002C16                     u3440:
  6798   002C16  EC10  F018         	call	_FM_Lcd_Send_Character
  6799   002C1A                     
  6800                           ;FM_LCD16X2_Easy.c: 58:         index++;
  6801   002C1A  2A0A               	incf	FM_Lcd_Send_String@index^0,f,c
  6802   002C1C                     l3226:
  6803                           
  6804                           ;FM_LCD16X2_Easy.c: 55:     while(cadena[index] != '\0')
  6805   002C1C  500A               	movf	FM_Lcd_Send_String@index^0,w,c
  6806   002C1E  2406               	addwf	FM_Lcd_Send_String@cadena^0,w,c
  6807   002C20  6E08               	movwf	??_FM_Lcd_Send_String^0,c
  6808   002C22  0E00               	movlw	0
  6809   002C24  2007               	addwfc	(FM_Lcd_Send_String@cadena+1)^0,w,c
  6810   002C26  6E09               	movwf	(??_FM_Lcd_Send_String+1)^0,c
  6811   002C28  C008  FFF6         	movff	??_FM_Lcd_Send_String,tblptrl
  6812   002C2C  C009  FFF7         	movff	??_FM_Lcd_Send_String+1,tblptrh
  6813   002C30  6AF8               	clrf	tblptru,c
  6814   002C32  0E07               	movlw	(high __ramtop+-1)
  6815   002C34  64F7               	cpfsgt	tblptrh,c
  6816   002C36  D003               	bra	u3457
  6817   002C38  0008               	tblrd		*
  6818   002C3A  50F5               	movf	tablat,w,c
  6819   002C3C  D005               	bra	u3450
  6820   002C3E                     u3457:
  6821   002C3E  CFF6 FFE1          	movff	tblptrl,fsr1l
  6822   002C42  CFF7 FFE2          	movff	tblptrh,fsr1h
  6823   002C46  50E7               	movf	indf1,w,c
  6824   002C48                     u3450:
  6825   002C48  0900               	iorlw	0
  6826   002C4A  A4D8               	btfss	status,2,c
  6827   002C4C  EF2A  F016         	goto	u3461
  6828   002C50  EF2C  F016         	goto	u3460
  6829   002C54                     u3461:
  6830   002C54  EFF5  F015         	goto	l3222
  6831   002C58                     u3460:
  6832   002C58  0012               	return		;funcret
  6833   002C5A                     __end_of_FM_Lcd_Send_String:
  6834                           	callstack 0
  6835                           
  6836 ;; *************** function _FM_Lcd_Send_Character *****************
  6837 ;; Defined at:
  6838 ;;		line 45 in file "FM_LCD16X2_Easy.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;  character_to    1    wreg     unsigned char 
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;  character_to    1    4[COMRAM] unsigned char 
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  1    wreg      void 
  6845 ;; Registers used:
  6846 ;;		wreg, status,2, status,0, cstack
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6852 ;;      Params:         0       0       0       0       0       0       0       0       0
  6853 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6855 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6856 ;;Total ram usage:        1 bytes
  6857 ;; Hardware stack levels used: 1
  6858 ;; Hardware stack levels required when called: 2
  6859 ;; This function calls:
  6860 ;;		_FM_Lcd_Send_Nibble
  6861 ;; This function is called by:
  6862 ;;		_FM_Lcd_Send_String
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           	psect	text29
  6867   003020                     __ptext29:
  6868                           	callstack 0
  6869   003020                     _FM_Lcd_Send_Character:
  6870                           	callstack 27
  6871                           
  6872                           ;incstack = 0
  6873                           ;FM_Lcd_Send_Character@character_to_send stored from wreg
  6874   003020  6E05               	movwf	FM_Lcd_Send_Character@character_to_send^0,c
  6875   003022                     
  6876                           ;FM_LCD16X2_Easy.c: 45: void FM_Lcd_Send_Character (char character_to_send);FM_LCD16X2_E
      +                          asy.c: 46: {;FM_LCD16X2_Easy.c: 47:     LATD |= (1 << 0);;
  6877   003022  808C               	bsf	140,0,c	;volatile
  6878   003024                     
  6879                           ;FM_LCD16X2_Easy.c: 48:     FM_Lcd_Send_Nibble(character_to_send);
  6880   003024  5005               	movf	FM_Lcd_Send_Character@character_to_send^0,w,c
  6881   003026  EC2D  F016         	call	_FM_Lcd_Send_Nibble
  6882   00302A  0012               	return		;funcret
  6883   00302C                     __end_of_FM_Lcd_Send_Character:
  6884                           	callstack 0
  6885                           
  6886 ;; *************** function _FM_Lcd_Easy_Init *****************
  6887 ;; Defined at:
  6888 ;;		line 84 in file "FM_LCD16X2_Easy.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;		None
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;		None
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  1    wreg      void 
  6895 ;; Registers used:
  6896 ;;		wreg, status,2, status,0, cstack
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6902 ;;      Params:         0       0       0       0       0       0       0       0       0
  6903 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6905 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6906 ;;Total ram usage:        0 bytes
  6907 ;; Hardware stack levels used: 1
  6908 ;; Hardware stack levels required when called: 3
  6909 ;; This function calls:
  6910 ;;		_FM_Lcd_Easy_Gpio_Init
  6911 ;;		_FM_Lcd_Send_Command
  6912 ;; This function is called by:
  6913 ;;		_main
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917                           	psect	text30
  6918   002F9C                     __ptext30:
  6919                           	callstack 0
  6920   002F9C                     _FM_Lcd_Easy_Init:
  6921                           	callstack 27
  6922   002F9C                     
  6923                           ;FM_LCD16X2_Easy.c: 86:     FM_Lcd_Easy_Gpio_Init();
  6924   002F9C  EC1C  F018         	call	_FM_Lcd_Easy_Gpio_Init	;wreg free
  6925                           
  6926                           ;FM_LCD16X2_Easy.c: 88:     FM_Lcd_Send_Command(0x01);
  6927   002FA0  0E01               	movlw	1
  6928   002FA2  EC16  F018         	call	_FM_Lcd_Send_Command
  6929                           
  6930                           ;FM_LCD16X2_Easy.c: 89:     FM_Lcd_Send_Command(0x02);
  6931   002FA6  0E02               	movlw	2
  6932   002FA8  EC16  F018         	call	_FM_Lcd_Send_Command
  6933                           
  6934                           ;FM_LCD16X2_Easy.c: 90:     FM_Lcd_Send_Command(0x06);
  6935   002FAC  0E06               	movlw	6
  6936   002FAE  EC16  F018         	call	_FM_Lcd_Send_Command
  6937                           
  6938                           ;FM_LCD16X2_Easy.c: 91:     FM_Lcd_Send_Command(0x0C);
  6939   002FB2  0E0C               	movlw	12
  6940   002FB4  EC16  F018         	call	_FM_Lcd_Send_Command
  6941                           
  6942                           ;FM_LCD16X2_Easy.c: 92:     FM_Lcd_Send_Command(0x10);
  6943   002FB8  0E10               	movlw	16
  6944   002FBA  EC16  F018         	call	_FM_Lcd_Send_Command
  6945                           
  6946                           ;FM_LCD16X2_Easy.c: 93:     FM_Lcd_Send_Command(0x2C);
  6947   002FBE  0E2C               	movlw	44
  6948   002FC0  EC16  F018         	call	_FM_Lcd_Send_Command
  6949   002FC4  0012               	return		;funcret
  6950   002FC6                     __end_of_FM_Lcd_Easy_Init:
  6951                           	callstack 0
  6952                           
  6953 ;; *************** function _FM_Lcd_Send_Command *****************
  6954 ;; Defined at:
  6955 ;;		line 39 in file "FM_LCD16X2_Easy.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  command_to_s    1    wreg     unsigned char 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;  command_to_s    1    4[COMRAM] unsigned char 
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  1    wreg      void 
  6962 ;; Registers used:
  6963 ;;		wreg, status,2, status,0, cstack
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6969 ;;      Params:         0       0       0       0       0       0       0       0       0
  6970 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6972 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6973 ;;Total ram usage:        1 bytes
  6974 ;; Hardware stack levels used: 1
  6975 ;; Hardware stack levels required when called: 2
  6976 ;; This function calls:
  6977 ;;		_FM_Lcd_Send_Nibble
  6978 ;; This function is called by:
  6979 ;;		_FM_Lcd_Set_Cursor
  6980 ;;		_FM_Lcd_Easy_Init
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           	psect	text31
  6985   00302C                     __ptext31:
  6986                           	callstack 0
  6987   00302C                     _FM_Lcd_Send_Command:
  6988                           	callstack 27
  6989                           
  6990                           ;incstack = 0
  6991                           ;FM_Lcd_Send_Command@command_to_send stored from wreg
  6992   00302C  6E05               	movwf	FM_Lcd_Send_Command@command_to_send^0,c
  6993   00302E                     
  6994                           ;FM_LCD16X2_Easy.c: 39: void FM_Lcd_Send_Command (char command_to_send);FM_LCD16X2_Easy.
      +                          c: 40: {;FM_LCD16X2_Easy.c: 41:     LATD &= ~(1 << 0);;
  6995   00302E  908C               	bcf	140,0,c	;volatile
  6996   003030                     
  6997                           ;FM_LCD16X2_Easy.c: 42:     FM_Lcd_Send_Nibble(command_to_send);
  6998   003030  5005               	movf	FM_Lcd_Send_Command@command_to_send^0,w,c
  6999   003032  EC2D  F016         	call	_FM_Lcd_Send_Nibble
  7000   003036  0012               	return		;funcret
  7001   003038                     __end_of_FM_Lcd_Send_Command:
  7002                           	callstack 0
  7003                           
  7004 ;; *************** function _FM_Lcd_Send_Nibble *****************
  7005 ;; Defined at:
  7006 ;;		line 19 in file "FM_LCD16X2_Easy.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;  byte_to_send    1    wreg     unsigned char 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;  byte_to_send    1    1[COMRAM] unsigned char 
  7011 ;;  lower_bits      1    3[COMRAM] unsigned char 
  7012 ;;  upper_bits      1    2[COMRAM] unsigned char 
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  1    wreg      void 
  7015 ;; Registers used:
  7016 ;;		wreg, status,2, status,0
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7022 ;;      Params:         0       0       0       0       0       0       0       0       0
  7023 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7024 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7025 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7026 ;;Total ram usage:        4 bytes
  7027 ;; Hardware stack levels used: 1
  7028 ;; Hardware stack levels required when called: 1
  7029 ;; This function calls:
  7030 ;;		Nothing
  7031 ;; This function is called by:
  7032 ;;		_FM_Lcd_Send_Command
  7033 ;;		_FM_Lcd_Send_Character
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           	psect	text32
  7038   002C5A                     __ptext32:
  7039                           	callstack 0
  7040   002C5A                     _FM_Lcd_Send_Nibble:
  7041                           	callstack 27
  7042                           
  7043                           ;incstack = 0
  7044                           ;FM_Lcd_Send_Nibble@byte_to_send stored from wreg
  7045   002C5A  6E02               	movwf	FM_Lcd_Send_Nibble@byte_to_send^0,c
  7046   002C5C                     
  7047                           ;FM_LCD16X2_Easy.c: 19: void FM_Lcd_Send_Nibble (char byte_to_send);FM_LCD16X2_Easy.c: 2
      +                          0: {;FM_LCD16X2_Easy.c: 21:     char upper_bits, lower_bits;;FM_LCD16X2_Easy.c: 23:     
      +                          upper_bits = (byte_to_send & 0xF0);
  7048   002C5C  5002               	movf	FM_Lcd_Send_Nibble@byte_to_send^0,w,c
  7049   002C5E  0BF0               	andlw	240
  7050   002C60  6E03               	movwf	FM_Lcd_Send_Nibble@upper_bits^0,c
  7051                           
  7052                           ;FM_LCD16X2_Easy.c: 24:     lower_bits = (byte_to_send & 0x0F) << 4;
  7053   002C62  C002  F001         	movff	FM_Lcd_Send_Nibble@byte_to_send,??_FM_Lcd_Send_Nibble
  7054   002C66  0E0F               	movlw	15
  7055   002C68  1601               	andwf	??_FM_Lcd_Send_Nibble^0,f,c
  7056   002C6A  3801               	swapf	??_FM_Lcd_Send_Nibble^0,w,c
  7057   002C6C  0BF0               	andlw	240
  7058   002C6E  6E04               	movwf	FM_Lcd_Send_Nibble@lower_bits^0,c
  7059                           
  7060                           ;FM_LCD16X2_Easy.c: 30:     LATD |= upper_bits;
  7061   002C70  5003               	movf	FM_Lcd_Send_Nibble@upper_bits^0,w,c	;volatile
  7062   002C72  128C               	iorwf	140,f,c	;volatile
  7063   002C74                     
  7064                           ;FM_LCD16X2_Easy.c: 31:     LATD |= (1 << 2);; _delay((unsigned long)((1)*(8000000UL/400
      +                          0.0))); LATD &= ~(1 << 2);; _delay((unsigned long)((1)*(8000000UL/4000.0)));;
  7065   002C74  848C               	bsf	140,2,c	;volatile
  7066   002C76  0E03               	movlw	3
  7067   002C78  6E01               	movwf	??_FM_Lcd_Send_Nibble^0,c
  7068   002C7A  0E98               	movlw	152
  7069   002C7C                     u3607:
  7070   002C7C  2EE8               	decfsz	wreg,f,c
  7071   002C7E  D7FE               	bra	u3607
  7072   002C80  2E01               	decfsz	??_FM_Lcd_Send_Nibble^0,f,c
  7073   002C82  D7FC               	bra	u3607
  7074   002C84  948C               	bcf	140,2,c	;volatile
  7075   002C86  0E03               	movlw	3
  7076   002C88  6E01               	movwf	??_FM_Lcd_Send_Nibble^0,c
  7077   002C8A  0E98               	movlw	152
  7078   002C8C                     u3617:
  7079   002C8C  2EE8               	decfsz	wreg,f,c
  7080   002C8E  D7FE               	bra	u3617
  7081   002C90  2E01               	decfsz	??_FM_Lcd_Send_Nibble^0,f,c
  7082   002C92  D7FC               	bra	u3617
  7083   002C94                     
  7084                           ;FM_LCD16X2_Easy.c: 32:     LATD &= ~upper_bits;
  7085   002C94  5003               	movf	FM_Lcd_Send_Nibble@upper_bits^0,w,c	;volatile
  7086   002C96  0AFF               	xorlw	255
  7087   002C98  168C               	andwf	140,f,c	;volatile
  7088   002C9A                     
  7089                           ;FM_LCD16X2_Easy.c: 33:     LATD |= lower_bits;
  7090   002C9A  5004               	movf	FM_Lcd_Send_Nibble@lower_bits^0,w,c	;volatile
  7091   002C9C  128C               	iorwf	140,f,c	;volatile
  7092                           
  7093                           ;FM_LCD16X2_Easy.c: 34:     LATD |= (1 << 2);; _delay((unsigned long)((1)*(8000000UL/400
      +                          0.0))); LATD &= ~(1 << 2);; _delay((unsigned long)((1)*(8000000UL/4000.0)));;
  7094   002C9E  848C               	bsf	140,2,c	;volatile
  7095   002CA0  0E03               	movlw	3
  7096   002CA2  6E01               	movwf	??_FM_Lcd_Send_Nibble^0,c
  7097   002CA4  0E98               	movlw	152
  7098   002CA6                     u3627:
  7099   002CA6  2EE8               	decfsz	wreg,f,c
  7100   002CA8  D7FE               	bra	u3627
  7101   002CAA  2E01               	decfsz	??_FM_Lcd_Send_Nibble^0,f,c
  7102   002CAC  D7FC               	bra	u3627
  7103   002CAE  948C               	bcf	140,2,c	;volatile
  7104   002CB0  0E03               	movlw	3
  7105   002CB2  6E01               	movwf	??_FM_Lcd_Send_Nibble^0,c
  7106   002CB4  0E98               	movlw	152
  7107   002CB6                     u3637:
  7108   002CB6  2EE8               	decfsz	wreg,f,c
  7109   002CB8  D7FE               	bra	u3637
  7110   002CBA  2E01               	decfsz	??_FM_Lcd_Send_Nibble^0,f,c
  7111   002CBC  D7FC               	bra	u3637
  7112   002CBE                     
  7113                           ;FM_LCD16X2_Easy.c: 35:     LATD &= ~lower_bits;
  7114   002CBE  5004               	movf	FM_Lcd_Send_Nibble@lower_bits^0,w,c	;volatile
  7115   002CC0  0AFF               	xorlw	255
  7116   002CC2  168C               	andwf	140,f,c	;volatile
  7117   002CC4  0012               	return		;funcret
  7118   002CC6                     __end_of_FM_Lcd_Send_Nibble:
  7119                           	callstack 0
  7120                           
  7121 ;; *************** function _FM_Lcd_Easy_Gpio_Init *****************
  7122 ;; Defined at:
  7123 ;;		line 7 in file "FM_LCD16X2_Easy.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;		None
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  bits_data       1    0        unsigned char 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      void 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7137 ;;      Params:         0       0       0       0       0       0       0       0       0
  7138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7140 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7141 ;;Total ram usage:        0 bytes
  7142 ;; Hardware stack levels used: 1
  7143 ;; Hardware stack levels required when called: 1
  7144 ;; This function calls:
  7145 ;;		Nothing
  7146 ;; This function is called by:
  7147 ;;		_FM_Lcd_Easy_Init
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           	psect	text33
  7152   003038                     __ptext33:
  7153                           	callstack 0
  7154   003038                     _FM_Lcd_Easy_Gpio_Init:
  7155                           	callstack 28
  7156   003038                     
  7157                           ;FM_LCD16X2_Easy.c: 15:     TRISD = 0x00;
  7158   003038  0E00               	movlw	0
  7159   00303A  6E95               	movwf	149,c	;volatile
  7160   00303C                     
  7161                           ;FM_LCD16X2_Easy.c: 16:     LATD &= ~(1 << 1);
  7162   00303C  928C               	bcf	140,1,c	;volatile
  7163   00303E  0012               	return		;funcret
  7164   003040                     __end_of_FM_Lcd_Easy_Gpio_Init:
  7165                           	callstack 0
  7166                           
  7167 ;; *************** function _ISR *****************
  7168 ;; Defined at:
  7169 ;;		line 22 in file "main.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;		None
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;		None
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1    wreg      void 
  7176 ;; Registers used:
  7177 ;;		None
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7183 ;;      Params:         0       0       0       0       0       0       0       0       0
  7184 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7186 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7187 ;;Total ram usage:        0 bytes
  7188 ;; Hardware stack levels used: 1
  7189 ;; This function calls:
  7190 ;;		Nothing
  7191 ;; This function is called by:
  7192 ;;		Interrupt level 2
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	intcode
  7197   000008                     __pintcode:
  7198                           	callstack 0
  7199   000008                     _ISR:
  7200                           	callstack 22
  7201                           
  7202                           ;incstack = 0
  7203   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7204   00000A  ED20  F018         	call	int_func,f	;refresh shadow registers
  7205                           
  7206                           	psect	intcode_body
  7207   003040                     __pintcode_body:
  7208                           	callstack 22
  7209   003040                     int_func:
  7210                           	callstack 22
  7211   003040  0006               	pop		; remove dummy address from shadow register refresh
  7212   003042  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7213   003044  0011               	retfie		f
  7214   003046                     __end_of_ISR:
  7215                           	callstack 0
  7216                           
  7217                           	psect	rparam
  7218   000000                     
  7219                           	psect	temp
  7220   00005E                     btemp:
  7221                           	callstack 0
  7222   00005E                     	ds	1
  7223   000000                     int$flags	set	btemp
  7224   000000                     wtemp8	set	btemp+1
  7225   000000                     ttemp5	set	btemp+1
  7226   000000                     ttemp6	set	btemp+4
  7227   000000                     ttemp7	set	btemp+8
  7228                           
  7229                           	psect	idloc
  7230                           
  7231                           ;Config register IDLOC0 @ 0x200000
  7232                           ;	unspecified, using default values
  7233   200000                     	org	2097152
  7234   200000  FF                 	db	255
  7235                           
  7236                           ;Config register IDLOC1 @ 0x200001
  7237                           ;	unspecified, using default values
  7238   200001                     	org	2097153
  7239   200001  FF                 	db	255
  7240                           
  7241                           ;Config register IDLOC2 @ 0x200002
  7242                           ;	unspecified, using default values
  7243   200002                     	org	2097154
  7244   200002  FF                 	db	255
  7245                           
  7246                           ;Config register IDLOC3 @ 0x200003
  7247                           ;	unspecified, using default values
  7248   200003                     	org	2097155
  7249   200003  FF                 	db	255
  7250                           
  7251                           ;Config register IDLOC4 @ 0x200004
  7252                           ;	unspecified, using default values
  7253   200004                     	org	2097156
  7254   200004  FF                 	db	255
  7255                           
  7256                           ;Config register IDLOC5 @ 0x200005
  7257                           ;	unspecified, using default values
  7258   200005                     	org	2097157
  7259   200005  FF                 	db	255
  7260                           
  7261                           ;Config register IDLOC6 @ 0x200006
  7262                           ;	unspecified, using default values
  7263   200006                     	org	2097158
  7264   200006  FF                 	db	255
  7265                           
  7266                           ;Config register IDLOC7 @ 0x200007
  7267                           ;	unspecified, using default values
  7268   200007                     	org	2097159
  7269   200007  FF                 	db	255
  7270                           
  7271                           	psect	config
  7272                           
  7273                           ;Config register CONFIG1L @ 0x300000
  7274                           ;	PLL Prescaler Selection bits
  7275                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  7276                           ;	System Clock Postscaler Selection bits
  7277                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  7278                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7279                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  7280   300000                     	org	3145728
  7281   300000  00                 	db	0
  7282                           
  7283                           ;Config register CONFIG1H @ 0x300001
  7284                           ;	Oscillator Selection bits
  7285                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
  7286                           ;	Fail-Safe Clock Monitor Enable bit
  7287                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7288                           ;	Internal/External Oscillator Switchover bit
  7289                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7290   300001                     	org	3145729
  7291   300001  0B                 	db	11
  7292                           
  7293                           ;Config register CONFIG2L @ 0x300002
  7294                           ;	Power-up Timer Enable bit
  7295                           ;	PWRT = OFF, PWRT disabled
  7296                           ;	Brown-out Reset Enable bits
  7297                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  7298                           ;	Brown-out Reset Voltage bits
  7299                           ;	BORV = 3, Minimum setting 2.05V
  7300                           ;	USB Voltage Regulator Enable bit
  7301                           ;	VREGEN = OFF, USB voltage regulator disabled
  7302   300002                     	org	3145730
  7303   300002  19                 	db	25
  7304                           
  7305                           ;Config register CONFIG2H @ 0x300003
  7306                           ;	Watchdog Timer Enable bit
  7307                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7308                           ;	Watchdog Timer Postscale Select bits
  7309                           ;	WDTPS = 32768, 1:32768
  7310   300003                     	org	3145731
  7311   300003  1E                 	db	30
  7312                           
  7313                           ; Padding undefined space
  7314   300004                     	org	3145732
  7315   300004  FF                 	db	255
  7316                           
  7317                           ;Config register CONFIG3H @ 0x300005
  7318                           ;	CCP2 MUX bit
  7319                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  7320                           ;	PORTB A/D Enable bit
  7321                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7322                           ;	Low-Power Timer 1 Oscillator Enable bit
  7323                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7324                           ;	MCLR Pin Enable bit
  7325                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7326   300005                     	org	3145733
  7327   300005  81                 	db	129
  7328                           
  7329                           ;Config register CONFIG4L @ 0x300006
  7330                           ;	Stack Full/Underflow Reset Enable bit
  7331                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  7332                           ;	Single-Supply ICSP Enable bit
  7333                           ;	LVP = OFF, Single-Supply ICSP disabled
  7334                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7335                           ;	ICPRT = OFF, ICPORT disabled
  7336                           ;	Extended Instruction Set Enable bit
  7337                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7338                           ;	Background Debugger Enable bit
  7339                           ;	DEBUG = 0x1, unprogrammed default
  7340   300006                     	org	3145734
  7341   300006  80                 	db	128
  7342                           
  7343                           ; Padding undefined space
  7344   300007                     	org	3145735
  7345   300007  FF                 	db	255
  7346                           
  7347                           ;Config register CONFIG5L @ 0x300008
  7348                           ;	Code Protection bit
  7349                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  7350                           ;	Code Protection bit
  7351                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  7352                           ;	Code Protection bit
  7353                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  7354                           ;	Code Protection bit
  7355                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  7356   300008                     	org	3145736
  7357   300008  0F                 	db	15
  7358                           
  7359                           ;Config register CONFIG5H @ 0x300009
  7360                           ;	Boot Block Code Protection bit
  7361                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  7362                           ;	Data EEPROM Code Protection bit
  7363                           ;	CPD = OFF, Data EEPROM is not code-protected
  7364   300009                     	org	3145737
  7365   300009  C0                 	db	192
  7366                           
  7367                           ;Config register CONFIG6L @ 0x30000A
  7368                           ;	Write Protection bit
  7369                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  7370                           ;	Write Protection bit
  7371                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  7372                           ;	Write Protection bit
  7373                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  7374                           ;	Write Protection bit
  7375                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  7376   30000A                     	org	3145738
  7377   30000A  0F                 	db	15
  7378                           
  7379                           ;Config register CONFIG6H @ 0x30000B
  7380                           ;	Configuration Register Write Protection bit
  7381                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7382                           ;	Boot Block Write Protection bit
  7383                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  7384                           ;	Data EEPROM Write Protection bit
  7385                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7386   30000B                     	org	3145739
  7387   30000B  E0                 	db	224
  7388                           
  7389                           ;Config register CONFIG7L @ 0x30000C
  7390                           ;	Table Read Protection bit
  7391                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7392                           ;	Table Read Protection bit
  7393                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7394                           ;	Table Read Protection bit
  7395                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7396                           ;	Table Read Protection bit
  7397                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7398   30000C                     	org	3145740
  7399   30000C  0F                 	db	15
  7400                           
  7401                           ;Config register CONFIG7H @ 0x30000D
  7402                           ;	Boot Block Table Read Protection bit
  7403                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  7404   30000D                     	org	3145741
  7405   30000D  40                 	db	64
  7406                           tosu	equ	0xFFF
  7407                           tosh	equ	0xFFE
  7408                           tosl	equ	0xFFD
  7409                           stkptr	equ	0xFFC
  7410                           pclatu	equ	0xFFB
  7411                           pclath	equ	0xFFA
  7412                           pcl	equ	0xFF9
  7413                           tblptru	equ	0xFF8
  7414                           tblptrh	equ	0xFF7
  7415                           tblptrl	equ	0xFF6
  7416                           tablat	equ	0xFF5
  7417                           prodh	equ	0xFF4
  7418                           prodl	equ	0xFF3
  7419                           indf0	equ	0xFEF
  7420                           postinc0	equ	0xFEE
  7421                           postdec0	equ	0xFED
  7422                           preinc0	equ	0xFEC
  7423                           plusw0	equ	0xFEB
  7424                           fsr0h	equ	0xFEA
  7425                           fsr0l	equ	0xFE9
  7426                           wreg	equ	0xFE8
  7427                           indf1	equ	0xFE7
  7428                           postinc1	equ	0xFE6
  7429                           postdec1	equ	0xFE5
  7430                           preinc1	equ	0xFE4
  7431                           plusw1	equ	0xFE3
  7432                           fsr1h	equ	0xFE2
  7433                           fsr1l	equ	0xFE1
  7434                           bsr	equ	0xFE0
  7435                           indf2	equ	0xFDF
  7436                           postinc2	equ	0xFDE
  7437                           postdec2	equ	0xFDD
  7438                           preinc2	equ	0xFDC
  7439                           plusw2	equ	0xFDB
  7440                           fsr2h	equ	0xFDA
  7441                           fsr2l	equ	0xFD9
  7442                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         109
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160    103     132
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S851$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> data_vol(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S766$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S766$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    FM_Lcd_Send_String@cadena	PTR unsigned char  size(2) Largest target is 16
		 -> data_vol(BANK0[16]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _FM_Lcd_Set_Cursor->_FM_Lcd_Send_Command
    _FM_Lcd_Send_String->_FM_Lcd_Send_Character
    _FM_Lcd_Send_Character->_FM_Lcd_Send_Nibble
    _FM_Lcd_Easy_Init->_FM_Lcd_Send_Command
    _FM_Lcd_Send_Command->_FM_Lcd_Send_Nibble

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   28207
                                             89 BANK0     14    14      0
                   _FM_Lcd_Easy_Init
                 _FM_Lcd_Send_String
                  _FM_Lcd_Set_Cursor
                    _Init_ADC_Module
           _Init_Internal_Oscillator
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8   21817
                                             67 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   21462
                                             59 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6   21103
                                             44 BANK0     15     9      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     643
                                              6 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   19037
                                             84 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2455
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Init_Internal_Oscillator                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC_Module                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Set_Cursor                                    3     2      1     401
                                              5 COMRAM     3     2      1
                _FM_Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Send_String                                   5     3      2     398
                                              5 COMRAM     5     3      2
              _FM_Lcd_Send_Character
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Send_Character                                1     1      0     156
                                              4 COMRAM     1     1      0
                 _FM_Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Easy_Init                                     0     0      0     157
              _FM_Lcd_Easy_Gpio_Init
                _FM_Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Send_Command                                  1     1      0     156
                                              4 COMRAM     1     1      0
                 _FM_Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (3) _FM_Lcd_Send_Nibble                                   4     4      0     134
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Easy_Gpio_Init                                1     1      0       1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FM_Lcd_Easy_Init
     _FM_Lcd_Easy_Gpio_Init
     _FM_Lcd_Send_Command
       _FM_Lcd_Send_Nibble
   _FM_Lcd_Send_String
     _FM_Lcd_Send_Character
       _FM_Lcd_Send_Nibble
   _FM_Lcd_Set_Cursor
     _FM_Lcd_Send_Command
   _Init_ADC_Module
   _Init_Internal_Oscillator
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      50       8       31.2%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     67      84       6       82.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITBIGSFRhhh        2C      0       0      21        0.0%
BITBIGSFRlll        2C      0       0      25        0.0%
BITBIGSFRlh         2A      0       0      23        0.0%
BITBIGSFRhhl         E      0       0      22        0.0%
BITBIGSFRllh         8      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     131       3        0.0%
DATA                 0      0     131       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jun 26 15:58:18 2023

                          ___fldiv@aexp 0040                            ___fldiv@bexp 003F  
                          ___fldiv@sign 0038                                      l55 2F9A  
                                    l47 24F4                                      l72 2CC4  
                                    l58 301E                                      l75 3036  
                                    l91 2EEA                                      l84 2C58  
                                    l69 303E                                      l94 2FC4  
                                    l78 302A                                      l89 2EDE  
                                    l97 3010                     ___wmul@multiplicand 0003  
                                   l362 27E8                                     l371 2F62  
                                   l356 2B66                                     l367 282E  
                                   l711 17A2                                     l720 1A10  
                                   l721 19FE                                     l625 140C  
                                   l642 1526                                     l634 16DC  
                                   l626 13FA                                     l394 272A  
                                   l715 1B06                                     l651 15F6  
                                   l627 13C0                                     l652 15E4  
                                   l820 121C                                     l805 2B8A  
                                   l718 1998                                     l823 0BB8  
                                   l752 2372                                     l728 1AC8  
                                   l681 1D00                                     l913 231A  
                                   l809 2BE0                                     l825 09FE  
                                   l690 1D46                                     l906 292C  
                                   l755 24CE                                     l667 2E62  
                                   l692 1DBE                                     l684 1CC4  
                                   l916 225E                                     l924 2D1A  
                                   l693 1DAC                                     l933 2E1C  
                                   l853 1000                                     l766 2466  
                                   l759 240A                                     l679 1EA0  
                                   l927 2D2A                                     l775 2DCC  
                                   l945 29F6                                     l953 2EA6  
                                   l865 2AB4                                     l962 2F2A  
                                   l956 3046                                     l869 2ABC  
                                   l896 2D7C                                     l889 2108  
                                   _ISR 0008                                     _pad 2B68  
                                   wreg 0FE8                             main@adc_val 00C5  
                          ___flmul@aexp 0020                            ___flmul@bexp 0021  
                          ___flmul@sign 001B                            ___flmul@temp 0026  
                          ___flmul@prod 0022                                    ?_ISR 0001  
                          ___fltol@exp1 000A                                    l2200 129C  
                                  l3000 0F5E                                    l2210 12C4  
                                  l2202 129E                                    l3010 1030  
                                  l3002 0FD6                                    l2300 1494  
                                  l2220 12FE                                    l2212 12D4  
                                  l2204 12A4                                    l3020 1056  
                                  l3012 1034                                    l3004 0FF6  
                                  l3100 1EE2                                    l2310 1506  
                                  l2302 149A                                    l2230 132A  
                                  l2222 1310                                    l2214 12E4  
                                  l2206 12B2                                    l3030 108A  
                                  l3022 105C                                    l3014 103A  
                                  l3006 1012                                    l3110 1F44  
                                  l3102 1EE6                                    l3200 2F98  
                                  l2400 1B24                                    l2320 1560  
                                  l2304 14C0                                    l2312 1516  
                                  l2240 133E                                    l2232 132E  
                                  l2224 131E                                    l2216 12E6  
                                  l2208 12B4                                    l3032 1090  
                                  l3016 1042                                    l3008 1020  
                                  l3024 1062                                    l3040 1128  
                                  l3112 1F56                                    l3120 1F6E  
                                  l3104 1F0A                                    l3202 2F9C  
                                  l3210 2EC6                                    l2402 1B34  
                                  l2410 1B5E                                    l2330 1590  
                                  l2322 156A                                    l2314 153C  
                                  l2306 14F4                                    l2250 1352  
                                  l2242 1342                                    l2234 1332  
                                  l2226 1322                                    l2218 12EE  
                                  l2170 295C                                    l3050 11A8  
                                  l3042 1146                                    l3034 10E8  
                                  l3026 1074                                    l3018 1052  
                                  l3130 202A                                    l3114 1F5E  
                                  l3122 1FA2                                    l3106 1F18  
                                  l3220 2BE2                                    l3212 2ED6  
                                  l3204 2EAA                                    l2500 1DCE  
                                  l2420 1B8A                                    l2412 1B6E  
                                  l2404 1B44                                    l2340 15B8  
                                  l2332 1594                                    l2324 1578  
                                  l2316 154C                                    l2308 14F6  
                                  l2260 138C                                    l2252 1356  
                                  l2244 1346                                    l2236 1336  
                                  l2228 1326                                    l2180 122A  
                                  l2172 297A                                    l2164 292E  
                                  l3060 11FC                                    l3052 11B6  
                                  l3044 1162                                    l3036 111C  
                                  l3028 1086                                    l3140 20A2  
                                  l3132 2054                                    l3124 1FC2  
                                  l3116 1F66                                    l3108 1F34  
                                  l3300 259C                                    l3222 2BEA  
                                  l3214 2EE0                                    l3206 2EAE  
                                  l2510 1E30                                    l2502 1DDA  
                                  l2422 1B9A                                    l2430 1BC4  
                                  l2414 1B74                                    l2406 1B54  
                                  l2350 1612                                    l2342 15C6  
                                  l2334 15A4                                    l2326 157A  
                                  l2270 13DE                                    l2262 13A8  
                                  l2254 135A                                    l2246 134A  
                                  l2238 133A                                    l2190 126A  
                                  l2182 1238                                    l2174 29B0  
                                  l2166 2940                                    l3054 11CE  
                                  l3046 116A                                    l3038 1124  
                                  l3070 2A5E                                    l3134 2074  
                                  l3126 1FF6                                    l3142 20CE  
                                  l3230 2D90                                    l3302 25D0  
                                  l3080 2C84                                    l3224 2C1A  
                                  l3216 2EE4                                    l3208 2EBE  
                                  l3240 231E                                    l2520 1E8E  
                                  l2512 1E46                                    l2504 1DE8  
                                  l2440 1C06                                    l2432 1BD4  
                                  l2424 1BAA                                    l2416 1B7A  
                                  l2408 1B56                                    l2600 18AE  
                                  l2360 167C                                    l2352 1620  
                                  l2344 15DC                                    l2328 1588  
                                  l2336 15A6                                    l2280 142A  
                                  l2272 13EC                                    l2264 13B8  
                                  l2248 134E                                    l2256 135E  
                                  l2192 126C                                    l2184 123A  
                                  l2168 2952                                    l3056 11DE  
                                  l3048 1178                                    l3072 2A7E  
                                  l3064 29F8                                    l3400 1F84  
                                  l3232 2D98                                    l3304 25F6  
                                  l3170 3038                                    l3090 2CAE  
                                  l3082 2C86                                    l3226 2C1C  
                                  l3218 2EEA                                    l3242 232E  
                                  l2522 1E94                                    l2514 1E60  
                                  l2506 1E12                                    l2434 1BEA  
                                  l2426 1BBA                                    l2418 1B88  
                                  l2610 1952                                    l2602 18CA  
                                  l2370 16B6                                    l2362 169C  
                                  l2354 165A                                    l2290 146A  
                                  l2338 15B4                                    l2274 13EE  
                                  l2266 13CE                                    l2258 1362  
                                  l2186 124A                                    l2194 1274  
                                  l2178 121E                                    l3058 11F4  
                                  l3074 2A8C                                    l3066 2A00  
                                  l3402 203E                                    l3146 20E0  
                                  l3234 2DA0                                    l3306 2600  
                                  l3172 303C                                    l3092 2CBE  
                                  l3084 2C94                                    l3076 2C5C  
                                  l3180 3024                                    l3260 23F4  
                                  l3252 23AC                                    l3244 233C  
                                  l2524 1E96                                    l2516 1E7C  
                                  l2508 1E16                                    l2460 1C88  
                                  l2452 1C3E                                    l2436 1BFA  
                                  l2444 1C1A                                    l2428 1BBC  
                                  l2700 2826                                    l2620 19A8  
                                  l2612 1960                                    l2604 18D6  
                                  l2540 170A                                    l2532 16DE  
                                  l2372 16BC                                    l2364 16A0  
                                  l2348 1606                                    l2356 165C  
                                  l2292 1476                                    l2284 143E  
                                  l2276 13F8                                    l2268 13DA  
                                  l2196 1284                                    l2188 125A  
                                  l2380 2E64                                    l3068 2A24  
                                  l3404 20C0                                    l3236 2DBC  
                                  l3228 2D7E                                    l3308 260C  
                                  l3086 2C9A                                    l3078 2C74  
                                  l3174 302E                                    l3270 2474  
                                  l3262 2400                                    l3254 23B4  
                                  l3246 2382                                    l2518 1E80  
                                  l2470 1CCE                                    l2462 1C90  
                                  l2454 1C58                                    l2446 1C2A  
                                  l2438 1C02                                    l2702 282C  
                                  l2622 19B6                                    l2614 197E  
                                  l2606 18F2                                    l2550 1746  
                                  l2542 171A                                    l2534 16EA  
                                  l2710 2F52                                    l2374 16CA  
                                  l2366 16AE                                    l2358 166C  
                                  l2294 147A                                    l2286 144E  
                                  l2278 141A                                    l2198 128A  
                                  l2382 2E70                                    l2390 3008  
                                  l3094 1EA2                                    l3182 2D2C  
                                  l3088 2CA0                                    l3176 3030  
                                  l3192 3012                                    l3280 24BC  
                                  l3272 2476                                    l3264 243C  
                                  l3256 23C0                                    l3248 2398  
                                  l2480 1D26                                    l2472 1CEC  
                                  l2464 1CA0                                    l2456 1C68  
                                  l2448 1C2A                                    l2632 1A20  
                                  l2640 1A68                                    l2624 19BA  
                                  l2616 1988                                    l2608 191C  
                                  l2560 177C                                    l2552 174C  
                                  l2544 172A                                    l2536 16F8  
                                  l2376 16CC                                    l2368 16B4  
                                  l2296 1488                                    l2288 145C  
                                  l2720 2650                                    l2800 2CE4  
                                  l2384 2E82                                    l3096 1EC6  
                                  l3184 2D38                                    l3178 3022  
                                  l3194 2F64                                    l3282 24BE  
                                  l3274 247A                                    l3266 2448  
                                  l3258 23F2                                    l2490 1D64  
                                  l2482 1D2C                                    l2474 1CEE  
                                  l2466 1CB4                                    l2458 1C78  
                                  l2394 1B08                                    l2650 1ADC  
                                  l2642 1A82                                    l2634 1A2C  
                                  l2626 19C8                                    l2618 1996  
                                  l2562 178C                                    l2554 175A  
                                  l2546 1730                                    l2538 16FA  
                                  l2706 2F2C                                    l2298 148A  
                                  l2730 269E                                    l2722 267A  
                                  l2714 2626                                    l2810 21A2  
                                  l2802 210A                                    l2386 2E86  
                                  l3098 1ED4                                    l3186 2D56  
                                  l3290 24DC                                    l3196 2F70  
                                  l3276 249E                                    l3268 2456  
                                  l2492 1D68                                    l2484 1D36  
                                  l2476 1CFE                                    l2468 1CC2  
                                  l2396 1B14                                    l2652 1AEA  
                                  l2644 1A96                                    l2636 1A3A  
                                  l2628 19F6                                    l2580 180E  
                                  l2572 17D6                                    l2564 1792  
                                  l2556 175C                                    l2548 1740  
                                  l2708 2F42                                    l2740 26CA  
                                  l2724 267C                                    l2716 263C  
                                  l2820 22BE                                    l2804 212A  
                                  l2388 2FEC                                    l3188 2D72  
                                  l3292 24E6                                    l3198 2F86  
                                  l3278 24AE                                    l2494 1D76  
                                  l2486 1D44                                    l2478 1D10  
                                  l2398 1B22                                    l2670 2AEC  
                                  l2654 1AEC                                    l2646 1AB0  
                                  l2638 1A64                                    l2590 1858  
                                  l2582 1826                                    l2574 17E2  
                                  l2566 17B2                                    l2558 176C  
                                  l2662 2E1E                                    l2750 26FA  
                                  l2726 268C                                    l2822 22D2  
                                  l2814 2212                                    l2806 2180  
                                  l2830 2DCE                                    l2910 0A14  
                                  l2902 09AE                                    l3294 24F2  
                                  l3286 24D0                                    l2496 1DA4  
                                  l2488 1D56                                    l2680 2B64  
                                  l2672 2AFC                                    l2648 1ACC  
                                  l2656 1AF2                                    l2592 1868  
                                  l2584 1832                                    l2576 17EC  
                                  l2568 17C2                                    l2664 2E2E  
                                  l2752 270A                                    l2736 26B6  
                                  l2728 2690                                    l2824 22FA  
                                  l2816 224E                                    l2808 2194  
                                  l2832 2DE2                                    l2840 2E02  
                                  l2760 2B76                                    l2920 0B0A  
                                  l2912 0A48                                    l2904 09C8  
                                  l3296 2502                                    l3288 24D8  
                                  l2674 2B2A                                    l2690 2798  
                                  l2658 1AF6                                    l2594 1874  
                                  l2586 183E                                    l2578 1802  
                                  l2754 271A                                    l2746 26DE  
                                  l2738 26C0                                    l2826 230A  
                                  l2818 2282                                    l2834 2DEE  
                                  l2770 2BCC                                    l2762 2B82  
                                  l2930 0BC0                                    l2922 0B3E  
                                  l2914 0A86                                    l2850 084E  
                                  l2842 0826                                    l3298 2532  
                                  l2676 2B3A                                    l2668 2ABE  
                                  l2692 27A8                                    l2684 272C  
                                  l2596 1884                                    l2588 184C  
                                  l2748 26EA                                    l2780 28C2  
                                  l2772 2830                                    l2836 2DF2  
                                  l2764 2B96                                    l2940 0BF0  
                                  l2932 0BD0                                    l2924 0B46  
                                  l2916 0AB8                                    l2908 0A0E  
                                  l2860 08A4                                    l2852 0872  
                                  l2844 082C                                    l2678 2B5E  
                                  l2694 27B6                                    l2686 275A  
                                  l2598 189E                                    l2790 2924  
                                  l2774 2850                                    l2838 2DFE  
                                  l2766 2BAA                                    l2758 2B68  
                                  l2942 0C02                                    l2950 0C42  
                                  l2934 0BDC                                    l2918 0AF6  
                                  l2870 08F4                                    l2862 08B0  
                                  l2854 087C                                    l2846 083C  
                                  ?_pad 0011                                    l2696 27C8  
                                  l2688 276A                                    l2776 288E  
                                  l2784 28CE                                    l2768 2BAE  
                                  l2960 0D2A                                    l2952 0C4A  
                                  l2944 0C10                                    l2936 0BE4  
                                  l2928 0B86                                    l2880 0928  
                                  l2872 08F8                                    l2864 08B8  
                                  l2856 0884                                    l2848 084A  
                                  l2698 27D6                                    l2786 28E0  
                                  l2778 28B6                                    l2794 2EEC  
                                  l2970 0DE8                                    l2962 0D5E  
                                  l2954 0C5A                                    l2946 0C28  
                                  l2938 0BEC                                    l2890 0984  
                                  l2874 08FE                                    l2858 0894  
                                  l2866 08BC                                    l2796 2EFC  
                                  l2980 0E84                                    l2972 0DFE  
                                  l2956 0C6E                                    l2964 0D64  
                                  l2948 0C3A                                    l2892 098A  
                                  l2876 0906                                    l2868 08E2  
                                  l2884 0948                                    l2798 2CC6  
                                  l2982 0EDA                                    l2990 0F2C  
                                  l2974 0E30                                    l2966 0D82  
                                  l2958 0CD2                                    l2894 0992  
                                  l2886 096E                                    l2878 091E  
                                  l2992 0F3C                                    l2984 0EE0  
                                  l2976 0E40                                    l2968 0DB6  
                                  l2888 0980                                    l2994 0F44  
                                  l2986 0F14                                    l2978 0E50  
                                  l2996 0F4A                                    l2988 0F28  
                                  l2998 0F52                                    STR_1 0801  
                                  STR_2 080F                                    STR_3 081D  
                                  STR_6 0821                                    u2000 142A  
                                  u2001 1426                                    u2010 145C  
                                  u2011 1458                                    u2100 15A4  
                                  u2020 146A                                    u2101 15A0  
                                  u2021 1466                                    u2110 15B4  
                                  u2030 1488                                    u2111 15B0  
                                  u2031 1484                                    u2200 169C  
                                  u2120 15C6                                    u2040 14C0  
                                  u3000 22A2                                    u2201 1698  
                                  u2121 15C2                                    u2041 14BC  
                                  u2210 16AE                                    u2130 15DC  
                                  u2050 1506                                    u3010 22BE  
                                  u2211 16AA                                    u2131 15D8  
                                  u2051 1502                                    u3011 22BA  
                                  u2300 1BEA                                    u2220 16CA  
                                  u2140 15F2                                    u2060 153C  
                                  u3020 22FA                                    u3100 0980  
                                  u2301 1BE6                                    u2221 16C6  
                                  u2141 15EE                                    u2061 1538  
                                  u3021 22F6                                    u3005 2298  
                                  u3101 097C                                    u2310 1C2A  
                                  u2150 1606                                    u2070 154C  
                                  u3030 2E1C                                    u2230 2EA6  
                                  u3110 09FA                                    u2311 1C26  
                                  u2151 1602                                    u2071 1548  
                                  u3031 2E18                                    u2231 2EA2  
                                  u3111 09F6                                    u2400 1DA4  
                                  u2320 1CA0                                    u2240 1B22  
                                  u2160 1620                                    u2080 1578  
                                  u3200 0C3A                                    u3120 0A86  
                                  u3040 084A                                    _LATD 0F8C  
                                  u2401 1DA0                                    u2321 1C9C  
                                  u2241 1B1E                                    u2161 161C  
                                  u2081 1574                                    u3201 0C36  
                                  u3121 0A82                                    u3041 0846  
                                  u2410 1DBA                                    u2330 1CC2  
                                  u2250 1B34                                    u2170 165A  
                                  u2090 1588                                    u3210 0D82  
                                  u3130 0AB8                                    u3050 0894  
                                  u2411 1DB6                                    u2331 1CBE  
                                  u2251 1B30                                    u2171 1656  
                                  u2091 1584                                    u3211 0D7E  
                                  u3131 0AB4                                    u3051 0890  
                                  u2420 1DCE                                    u2340 1CEC  
                                  u2260 1B44                                    u2500 175A  
                                  u2180 166C                                    u3300 1074  
                                  u3220 0DE8                                    u3140 0AF6  
                                  u3060 08A4                                    u2421 1DCA  
                                  u2341 1CE8                                    u2261 1B40  
                                  u2501 1756                                    u2181 1668  
                                  u3301 1070                                    u3221 0DE4  
                                  u3141 0AF2                                    u3061 08A0  
                                  u2430 1DE8                                    u2350 1D10  
                                  u2270 1B88                                    u2510 176C  
                                  u2190 167C                                    u3310 1146  
                                  u3230 0E30                                    u3150 0B82  
                                  u3070 08E2                                    u2431 1DE4  
                                  u2351 1D0C                                    u2271 1B84  
                                  u2511 1768                                    u2191 1678  
                                  u3311 1142                                    u3231 0E2C  
                                  u3151 0B7E                                    u3071 08DE  
                                  u2440 1E30                                    u2360 1D26  
                                  u2280 1B9A                                    u2600 1A0C  
                                  u2520 177C                                    u1800 2940  
                                  u3320 1162                                    u3240 0E40  
                                  u3160 0BB8                                    u3080 08F4  
                                  u3400 1FBE                                    u2441 1E2C  
                                  u2361 1D22                                    u2281 1B96  
                                  u2601 1A08                                    u2521 1778  
                                  u1801 293C                                    u3321 115E  
                                  u3241 0E3C                                    u3161 0BB4  
                                  u3081 08F0                                    u3401 1FBA  
                                  u2450 1E60                                    u2370 1D44  
                                  u2290 1BAA                                    u2610 1A20  
                                  u2530 17B2                                    u1810 2952  
                                  u3330 11C8                                    u3250 0EDA  
                                  u3170 0BD0                                    u3090 096E  
                                  u3410 2D72                                    u2451 1E5C  
                                  u2371 1D40                                    u2291 1BA6  
                                  u2611 1A1C                                    u2531 17AE  
                                  u1811 294E                                    u3331 11C2  
                                  u3251 0ED6                                    u3171 0BCC  
                                  u3091 096A                                    u3411 2D6E  
                                  u3420 2EBE                                    u3500 23EE  
                                  u2460 1E8E                                    u2380 1D64  
                                  u2700 2798                                    u2620 1A3A  
                                  u2540 17C2                                    u1900 12D4  
                                  u1820 297A                                    u3340 11CA  
                                  u3260 0F28                                    u3180 0C02  
                                  u3421 2EBA                                    u3501 23EA  
                                  u2461 1E8A                                    u2381 1D60  
                                  u2701 2794                                    u2621 1A36  
                                  u2541 17BE                                    u1901 12D0  
                                  u1821 2976                                    u3261 0F24  
                                  u3181 0BFE                                    u3430 2ED6  
                                  u3510 2438                                    u2390 1D76  
                                  u2710 27B6                                    u2630 1A82  
                                  u2550 193C                                    u2470 16F8  
                                  u1910 1310                                    u1830 29B0  
                                  u3350 11DE                                    u3270 0FD6  
                                  u3190 0C10                                    u3431 2ED2  
                                  u3511 2434                                    u2391 1D72  
                                  u2711 27B2                                    u2631 1A7E  
                                  u2471 16F4                                    u1911 130C  
                                  u1831 29AC                                    u3351 11DA  
                                  u3271 0FD2                                    u3191 0C0C  
                                  u3440 2C16                                    u3520 2456  
                                  u2720 27D6                                    u2640 1AB0  
                                  u2560 1996                                    u2480 170A  
                                  u1920 131E                                    u1840 1238  
                                  u2800 26FA                                    u3280 1012  
                                  u3360 2A24                                    u3521 2452  
                                  u2721 27D2                                    u2641 1AAC  
                                  u2561 1992                                    u2481 1706  
                                  u1921 131A                                    u1841 1234  
                                  u2801 26F6                                    u3281 100E  
                                  u3361 2A20                                    u3450 2C48  
                                  u3530 2466                                    u2730 2826  
                                  u2650 1AEA                                    u2570 19B6  
                                  u2490 171A                                    u1930 138C  
                                  u1850 124A                                    u2810 270A  
                                  u3290 1020                                    u3370 2AB4  
                                  u3531 2462                                    u2731 2822  
                                  u2651 1AE6                                    u2571 19B2  
                                  u2555 1932                                    u2491 1716  
                                  u1931 1388                                    u1851 1246  
                                  u2811 2706                                    u3291 101C  
                                  u3371 2AB0                                    u3460 2C58  
                                  u3540 2474                                    u2660 2AEC  
                                  u2580 19C8                                    u2740 2F42  
                                  u1940 13A4                                    u1860 125A  
                                  u2900 291C                                    u2820 2B76  
                                  u3380 1EC6                                    u3461 2C54  
                                  u3541 2470                                    u2661 2AE8  
                                  u2581 19C4                                    u2741 2F3E  
                                  u1941 139E                                    u1861 1256  
                                  u2821 2B72                                    u3381 1EC2  
                                  u3550 24AE                                    u3470 232E  
                                  u2670 2B2A                                    u2590 19F6  
                                  u1950 13A6                                    u1870 129C  
                                  u2750 263C                                    u2830 2BCC  
                                  u2910 2F2A                                    u3390 1F0A  
                                  u3607 2C7C                                    u3447 2C0C  
                                  u3551 24AA                                    u3471 232A  
                                  u2671 2B26                                    u2591 19F2  
                                  u1871 1298                                    u2751 2638  
                                  u2831 2BC8                                    u2911 2F26  
                                  u3391 1F06                                    u3560 24BC  
                                  u3480 233C                                    u2680 2B5E  
                                  u1960 13CE                                    u1880 12B2  
                                  u2760 2670                                    u2840 2870  
                                  u2920 2CE4                                    u3617 2C8C  
                                  u3457 2C3E                                    u3561 24B8  
                                  u3481 2338                                    u2681 2B5A  
                                  u1961 13CA                                    u1881 12AE  
                                  u2921 2CE0                                    u3490 2398  
                                  u2690 275A                                    u1970 13EC  
                                  u1890 12C4                                    u2770 269E  
                                  u2850 288E                                    u2930 2152  
                                  u3570 2502                                    u3627 2CA6  
                                  u3491 2394                                    u2691 2756  
                                  u1971 13E8                                    u1891 12C0  
                                  u2771 269A                                    u2851 288A  
                                  u3571 24FE                                    u1980 140C  
                                  u2780 26B2                                    u2860 28B6  
                                  u2940 2180                                    u3637 2CB6  
                                  u1981 1408                                    u2781 26AE  
                                  u2765 2666                                    u2861 28B2  
                                  u2845 2866                                    u2941 217C  
                                  u1990 141A                                    u2790 26DA  
                                  u2870 28E0                                    u2950 21A2  
                                  u1991 1416                                    u2791 26D6  
                                  u2871 28DC                                    u2951 219E  
                                  u2935 2148                                    u3585 250C  
                                  u2890 291A                                    u2970 220E  
                                  u2891 2914                                    u2971 220A  
                                  u2980 2232                                    u2885 28F2  
                                  u2965 21B6                                    u3597 2614  
                                  u2990 224E                                    u2966 21C0  
                                  u2991 224A                                    u2967 21D0  
                                  u2985 2228                                    i2l39 3042  
            __end_of_FM_Lcd_Send_Nibble 2CC6                                    _dbuf 0100  
                                  _labs 2CC6                                    _main 24D0  
          FM_Lcd_Send_Nibble@upper_bits 0003                                    _prec 00D1  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr1h 0FE2                                    fsr2h 0FDA  
                                  indf1 0FE7                                    indf2 0FDF  
                                  fsr1l 0FE1                                    pad@w 001A  
                                  fsr2l 0FD9              __end_of_FM_Lcd_Send_String 2C5A  
                                  btemp 005E                 ??_FM_Lcd_Send_Character 0005  
                         ___fpclassifyf 2830                                    prodh 0FF4  
                                  prodl 0FF3                                    start 000E  
FM_Lcd_Send_Character@character_to_send 0005                         ___fldiv@new_exp 0039  
                 _FM_Lcd_Easy_Gpio_Init 3038                 __end_of_Init_ADC_Module 2F9C  
                          ___param_bank 0000                                   ??_ISR 0001  
                                 ??_pad 0017                           ___fltol@sign1 0009  
                                 ?_labs 0001                         __end_of___fladd 16DE  
                                 ?_main 0001                         __end_of___fldiv 1EA2  
                       __end_of___flneg 2F64                         __end_of___flmul 1B08  
                       __end_of___flsub 2E64                         __end_of___fltol 272C  
           __end_of_FM_Lcd_Send_Command 3038                            vfpfcnvrt@fmt 008E  
                                 _TRISD 0F95                                   _flags 00D3  
                   read_prec_or_width@c 000D                     read_prec_or_width@n 000E  
                                 _fputc 292E                                   _fputs 2E64  
                                 labs@a 0001                                   pad@fp 0011  
                                 _width 00CF                                   _putch 3046  
                                 tablat 0FF5                                   ttemp5 005F  
                                 ttemp6 0062                                   ttemp7 0066  
                                 status 0FD8                                   wtemp8 005F  
                       __end_of_sprintf 2DCE                          ?___fpclassifyf 0001  
                       __initialization 2FC6                            __end_of_labs 2D2C  
                          __end_of_main 2626                                  ??_labs 0005  
                                ??_main 00B9                           __activetblptr 0002  
            __end_of_read_prec_or_width 2ABE                                  _ADCON0 0FC2  
                                _ADCON1 0FC1                                  _ADCON2 0FC0  
                                ?_fputc 0001                                  ?_fputs 000A  
                                _ADRESH 0FC4                                  _ADRESL 0FC3  
                                ?_putch 0001                                  _OSCCON 0FD3  
                      __end_of___xxtofl 24D0                  ?_FM_Lcd_Easy_Gpio_Init 0001  
                          vfprintf@cfmt 00A1                        ?_Init_ADC_Module 0001  
                                ___flge 272C                                  ___fleq 2ABE  
                             ??___fladd 0009                                  ___wmul 2FEC  
                             ??___fldiv 0030                               ??___flneg 0005  
                             ??___flmul 0017                               ??___flsub 0030  
                             ??___fltol 0005                                  _efgtoa 0826  
                                _floorf 210A                                  _memcpy 2DCE  
                  read_prec_or_width@ap 0009                                  clear_0 2FCC  
                                clear_1 2FD8                                  isa$std 0001  
                                pad@buf 0013                                  _strcpy 2EEC  
                                fputc@c 0001                                  fputs@c 000E  
                                fputs@i 000F                                  fputs@s 000A  
                       ___fpclassifyf@e 0009                         ___fpclassifyf@u 000B  
                       ___fpclassifyf@x 0001                            __mediumconst 0000  
                                tblptrh 0FF7                                  tblptrl 0FF6  
                                tblptru 0FF8                                  putch@c 0001  
                      __end_of_vfprintf 2D7E                               ??_sprintf 005E  
                            ___flge@ff1 0028                              ___flge@ff2 002C  
                       ??___fpclassifyf 0005                            ___xxtofl@arg 000B  
                          ___xxtofl@exp 000A                            ___xxtofl@val 0001  
                            ___fleq@ff1 0001                              ___fleq@ff2 0005  
                            __accesstop 0060                 __end_of__initialization 2FDE  
                            ___flneg@f1 0001                           ___rparam_used 0001  
                            ___fltol@f1 0001                          __pcstackCOMRAM 0001  
                         __end_of_fputc 29F8                           __end_of_fputs 2EA8  
                         __end_of_putch 3048                        _FM_Lcd_Easy_Init 2F9C  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 00C7  
                            __pbssBANK1 0100           __end_of_FM_Lcd_Send_Character 302C  
                            _efgtoa$893 0066                                 ?___flge 0028  
                               ?___fleq 0001                      _FM_Lcd_Send_Nibble 2C5A  
                               ?___wmul 0001                                 ?_efgtoa 0055  
                               ?_floorf 0041                                 ?_memcpy 0001  
                    _FM_Lcd_Send_String 2BE2               ?_Init_Internal_Oscillator 0001  
                               ?_strcpy 0001                     ?_FM_Lcd_Send_Nibble 0001  
                             ?___xxtofl 0001                     ?_FM_Lcd_Send_String 0006  
                  ??_FM_Lcd_Send_Nibble 0001                    ??_FM_Lcd_Send_String 0008  
                               __Hparam 0000                                 __Lparam 0000  
                               ___fladd 121E                                 ___fldiv 1B08  
                               ___flneg 2F2C                                 ___flmul 16DE  
                               ___flsub 2E1E                                 ___fltol 2626  
                             ?_vfprintf 009B                            __psmallconst 0800  
                               __pcinit 2FC6                                 __ramtop 0800  
                               __ptext0 24D0                                 __ptext1 2D7E  
                               __ptext2 2D2C                                 __ptext3 1EA2  
                               __ptext4 29F8                                 __ptext5 2FEC  
                               __ptext6 0826                                 __ptext7 2EEC  
                               __ptext8 2B68                                 __ptext9 2E64  
                 read_prec_or_width@fmt 0007                              ??___xxtofl 0005  
                               efgtoa@c 005B                                 efgtoa@d 006B  
                               efgtoa@e 006F                                 efgtoa@f 0057  
                               efgtoa@g 0084                                 efgtoa@h 0079  
                               efgtoa@i 0077                                 efgtoa@l 007D  
                               efgtoa@m 006D                                 efgtoa@n 0082  
                               efgtoa@p 0062                                 efgtoa@t 0064  
                               efgtoa@u 0088                                 efgtoa@w 0071  
                               _sprintf 2D7E                          __pintcode_body 3040  
                  end_of_initialization 2FDE                                 floorf@e 004F  
                               floorf@m 004B                                 floorf@u 0051  
                               floorf@x 0041                                 memcpy@d 0007  
                               memcpy@n 0005                                 memcpy@s 0009  
               ??_FM_Lcd_Easy_Gpio_Init 0001                                 fputc@fp 0003  
                         __Lmediumconst 0000                                 int_func 3040  
                               fputs@fp 000C                      _read_prec_or_width 29F8  
                     __end_of_vfpfcnvrt 210A                              efgtoa@mode 0069  
                            efgtoa@sign 0081                                 postdec2 0FDD  
                   ?_read_prec_or_width 0007                                 postinc0 0FEE  
                               postinc1 0FE6                                 postinc2 0FDE  
                      vfpfcnvrt@convarg 0094                              ??_vfprintf 005E  
                               strcpy@d 0007                                 strcpy@s 0005  
                FM_Lcd_Set_Cursor@filas 0007                             ___fladd@grs 0010  
                         ___xxtofl@sign 0009                    ??_read_prec_or_width 000B  
                           ___fldiv@grs 003B                             ___fldiv@rem 0034  
                           ___flmul@grs 001C                __end_of_FM_Lcd_Easy_Init 2FC6  
             FM_Lcd_Set_Cursor@base_pos 0008                          __end_of___flge 2830  
                        __end_of___fleq 2B68                             vfpfcnvrt@ap 0090  
                           vfpfcnvrt@cp 0099                             vfpfcnvrt@fp 008C  
                        __end_of___wmul 3012                          __end_of_efgtoa 121E  
                        __end_of_floorf 231C                          __end_of_memcpy 2E1E  
                            floorf@F526 00C7                          __end_of_strcpy 2F2C  
                   start_initialization 2FC6                             __end_of_ISR 3046  
                           __end_of_pad 2BE2                FM_Lcd_Send_String@cadena 0006  
                 __end_of___fpclassifyf 292E        __end_of_Init_Internal_Oscillator 3020  
                           vfprintf@fmt 009D                                ??___flge 0030  
                              ??___fleq 0009                                ??___wmul 0005  
                              ??_efgtoa 005C                                ??_floorf 0045  
                              ??_memcpy 0007                                ??_strcpy 0005  
                             ___fladd@a 0005                               ___fladd@b 0001  
                             ___fldiv@a 002C                               ___fldiv@b 0028  
                             ___flmul@a 0013                               ___flmul@b 000F  
                             ___flsub@a 002C                               ___flsub@b 0028  
                         __pcstackBANK0 0060                               _main$1198 00C1  
                             __pintcode 0008                   _FM_Lcd_Send_Character 3020  
                              ?___fladd 0001                                ?___fldiv 0028  
                              ?___flneg 0001                                ?___flmul 000F  
                   _FM_Lcd_Send_Command 302C                                ?___flsub 0028  
                              ?___fltol 0001                       _FM_Lcd_Set_Cursor 2EA8  
                    ?_FM_Lcd_Set_Cursor 0006      FM_Lcd_Send_Command@command_to_send 0005  
                           __smallconst 0800                     ??_FM_Lcd_Set_Cursor 0007  
                  ?_FM_Lcd_Send_Command 0001                       ??_Init_ADC_Module 0001  
                              ?_sprintf 00A3                          ___wmul@product 0005  
         __end_of_FM_Lcd_Easy_Gpio_Init 3040               __end_of_FM_Lcd_Set_Cursor 2EEC  
              _Init_Internal_Oscillator 3012                               _vfpfcnvrt 1EA2  
                            _ADCON0bits 0FC2                              _ADCON1bits 0FC1  
                            _ADCON2bits 0FC0                       ___wmul@multiplier 0001  
                             main@volts 00BD                   ??_FM_Lcd_Send_Command 0005  
                            vfpfcnvrt@c 0098                       ?_FM_Lcd_Easy_Init 0001  
                    ??_FM_Lcd_Easy_Init 0006                 FM_Lcd_Send_String@index 000A  
                              __Hrparam 0000                               memcpy@tmp 000B  
                ?_FM_Lcd_Send_Character 0001                              vfprintf@ap 009F  
                              __Lrparam 0000                              vfprintf@fp 009B  
                            ?_vfpfcnvrt 008C                      ___fpclassifyf@F465 00CB  
                            sprintf@fmt 00A5                                ___xxtofl 231C  
                              _data_vol 00D4                                __ptext10 292E  
                              __ptext11 3046                                __ptext20 16DE  
                              __ptext12 2DCE                                __ptext21 272C  
                              __ptext13 2CC6                                __ptext30 2F9C  
                              __ptext22 2ABE                                __ptext14 210A  
                              __ptext31 302C                                __ptext23 1B08  
                              __ptext15 2830                                __ptext32 2C5A  
                              __ptext24 231C                                __ptext16 2626  
                              __ptext33 3038                                __ptext25 3012  
                              __ptext17 2E1E                                __ptext26 2F64  
                              __ptext18 121E                                __ptext27 2EA8  
                              __ptext19 2F2C                                __ptext28 2BE2  
                              __ptext29 3020                              strcpy@dest 0001  
                              efgtoa@fp 0055                                efgtoa@ne 0060  
                              efgtoa@pp 0068                                efgtoa@ou 0073  
                              isa$xinst 0000                                int$flags 005E  
                              _vfprintf 2D2C                                memcpy@d1 0001  
                              memcpy@s1 0003                                intlevel2 0000  
                             sprintf@ap 00AB          FM_Lcd_Send_Nibble@byte_to_send 0002  
                             strcpy@src 0003                              _OSCCONbits 0FD3  
                           efgtoa@nmode 006A                             ??_vfpfcnvrt 0092  
                       _Init_ADC_Module 2F64                                sprintf@f 00AD  
                              sprintf@s 00A3                           ___fladd@signs 000D  
              FM_Lcd_Set_Cursor@columna 0006              ??_Init_Internal_Oscillator 0001  
                          ___fladd@aexp 000E                            ___fladd@bexp 000F  
          FM_Lcd_Send_Nibble@lower_bits 0004  
