

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jun 26 15:15:48 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     _OSCCONbits	set	4051
    54   000000                     _ADCON2bits	set	4032
    55   000000                     _ADCON1bits	set	4033
    56   000000                     _ADCON0	set	4034
    57   000000                     _LATD	set	3980
    58   000000                     _TRISD	set	3989
    59   000000                     _ADCON2	set	4032
    60   000000                     _ADCON1	set	4033
    61   000000                     _ADCON0bits	set	4034
    62   000000                     _ADRESH	set	4036
    63   000000                     _OSCCON	set	4051
    64                           
    65                           ; #config settings
    66                           
    67                           	psect	cinit
    68   00008E                     __pcinit:
    69                           	callstack 0
    70   00008E                     start_initialization:
    71                           	callstack 0
    72   00008E                     __initialization:
    73                           	callstack 0
    74   00008E                     end_of_initialization:
    75                           	callstack 0
    76   00008E                     __end_of__initialization:
    77                           	callstack 0
    78   00008E  9002               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    79   000090  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    80   000092  0100               	movlb	0
    81   000094  EF09  F000         	goto	_main	;jump to C main() function
    82                           
    83                           	psect	cstackCOMRAM
    84   000001                     __pcstackCOMRAM:
    85                           	callstack 0
    86   000001                     ??_main:
    87   000001                     
    88                           ; 2 bytes @ 0x0
    89   000001                     	ds	1
    90                           
    91 ;;
    92 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    93 ;;
    94 ;; *************** function _main *****************
    95 ;; Defined at:
    96 ;;		line 32 in file "main.c"
    97 ;; Parameters:    Size  Location     Type
    98 ;;		None
    99 ;; Auto vars:     Size  Location     Type
   100 ;;		None
   101 ;; Return value:  Size  Location     Type
   102 ;;                  2   37[None  ] int 
   103 ;; Registers used:
   104 ;;		wreg, status,2, cstack
   105 ;; Tracked objects:
   106 ;;		On entry : 0/0
   107 ;;		On exit  : 0/0
   108 ;;		Unchanged: 0/0
   109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   110 ;;      Params:         0       0       0       0       0       0       0       0       0
   111 ;;      Locals:         0       0       0       0       0       0       0       0       0
   112 ;;      Temps:          1       0       0       0       0       0       0       0       0
   113 ;;      Totals:         1       0       0       0       0       0       0       0       0
   114 ;;Total ram usage:        1 bytes
   115 ;; Hardware stack levels required when called: 2
   116 ;; This function calls:
   117 ;;		_Init_ADC_Module
   118 ;;		_Init_Internal_Oscillator
   119 ;; This function is called by:
   120 ;;		Startup code after reset
   121 ;; This function uses a non-reentrant model
   122 ;;
   123                           
   124                           	psect	text0
   125   000012                     __ptext0:
   126                           	callstack 0
   127   000012                     _main:
   128                           	callstack 29
   129   000012                     
   130                           ;main.c: 35:     Init_Internal_Oscillator();
   131   000012  EC40  F000         	call	_Init_Internal_Oscillator	;wreg free
   132                           
   133                           ;main.c: 37:     Init_ADC_Module();
   134   000016  EC26  F000         	call	_Init_ADC_Module	;wreg free
   135   00001A                     
   136                           ;main.c: 39:     TRISD = 0x00;
   137   00001A  0E00               	movlw	0
   138   00001C  6E95               	movwf	149,c	;volatile
   139   00001E                     
   140                           ;main.c: 40:     LATD = 0x00;
   141   00001E  0E00               	movlw	0
   142   000020  6E8C               	movwf	140,c	;volatile
   143   000022                     l742:
   144                           
   145                           ;main.c: 43:     {;main.c: 45:         ADCON0bits.GO_NOT_DONE = 1;
   146   000022  82C2               	bsf	194,1,c	;volatile
   147   000024                     l39:
   148   000024  B2C2               	btfsc	194,1,c	;volatile
   149   000026  EF17  F000         	goto	u11
   150   00002A  EF19  F000         	goto	u10
   151   00002E                     u11:
   152   00002E  EF12  F000         	goto	l39
   153   000032                     u10:
   154   000032                     
   155                           ;main.c: 49:         LATD = ADRESH;
   156   000032  CFC4 FF8C          	movff	4036,3980	;volatile
   157   000036                     
   158                           ;main.c: 51:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
   159   000036  0E03               	movlw	3
   160   000038  6E01               	movwf	??_main^0,c
   161   00003A  0E98               	movlw	152
   162   00003C                     u27:
   163   00003C  2EE8               	decfsz	wreg,f,c
   164   00003E  D7FE               	bra	u27
   165   000040  2E01               	decfsz	??_main^0,f,c
   166   000042  D7FC               	bra	u27
   167   000044  EF11  F000         	goto	l742
   168   000048  EF07  F000         	goto	start
   169   00004C                     __end_of_main:
   170                           	callstack 0
   171                           
   172 ;; *************** function _Init_Internal_Oscillator *****************
   173 ;; Defined at:
   174 ;;		line 88 in file "main.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;		None
   177 ;; Auto vars:     Size  Location     Type
   178 ;;		None
   179 ;; Return value:  Size  Location     Type
   180 ;;                  1    wreg      void 
   181 ;; Registers used:
   182 ;;		wreg, status,2
   183 ;; Tracked objects:
   184 ;;		On entry : 0/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   188 ;;      Params:         0       0       0       0       0       0       0       0       0
   189 ;;      Locals:         0       0       0       0       0       0       0       0       0
   190 ;;      Temps:          0       0       0       0       0       0       0       0       0
   191 ;;      Totals:         0       0       0       0       0       0       0       0       0
   192 ;;Total ram usage:        0 bytes
   193 ;; Hardware stack levels used: 1
   194 ;; Hardware stack levels required when called: 1
   195 ;; This function calls:
   196 ;;		Nothing
   197 ;; This function is called by:
   198 ;;		_main
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text1
   203   000080                     __ptext1:
   204                           	callstack 0
   205   000080                     _Init_Internal_Oscillator:
   206                           	callstack 29
   207   000080                     
   208                           ;main.c: 91:     OSCCON = 0x00;
   209   000080  0E00               	movlw	0
   210   000082  6ED3               	movwf	211,c	;volatile
   211                           
   212                           ;main.c: 94:     OSCCONbits.IRCF = 0b111;
   213   000084  0E70               	movlw	112
   214   000086  12D3               	iorwf	211,f,c	;volatile
   215                           
   216                           ;main.c: 95:     OSCCONbits.SCS = 0b11;
   217   000088  0E03               	movlw	3
   218   00008A  12D3               	iorwf	211,f,c	;volatile
   219   00008C  0012               	return		;funcret
   220   00008E                     __end_of_Init_Internal_Oscillator:
   221                           	callstack 0
   222                           
   223 ;; *************** function _Init_ADC_Module *****************
   224 ;; Defined at:
   225 ;;		line 58 in file "main.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;		None
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, status,2
   234 ;; Tracked objects:
   235 ;;		On entry : 0/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   239 ;;      Params:         0       0       0       0       0       0       0       0       0
   240 ;;      Locals:         0       0       0       0       0       0       0       0       0
   241 ;;      Temps:          0       0       0       0       0       0       0       0       0
   242 ;;      Totals:         0       0       0       0       0       0       0       0       0
   243 ;;Total ram usage:        0 bytes
   244 ;; Hardware stack levels used: 1
   245 ;; Hardware stack levels required when called: 1
   246 ;; This function calls:
   247 ;;		Nothing
   248 ;; This function is called by:
   249 ;;		_main
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           	psect	text2
   254   00004C                     __ptext2:
   255                           	callstack 0
   256   00004C                     _Init_ADC_Module:
   257                           	callstack 29
   258   00004C                     
   259                           ;main.c: 61:     ADCON0 = 0x00;
   260   00004C  0E00               	movlw	0
   261   00004E  6EC2               	movwf	194,c	;volatile
   262                           
   263                           ;main.c: 62:     ADCON1 = 0x00;
   264   000050  0E00               	movlw	0
   265   000052  6EC1               	movwf	193,c	;volatile
   266                           
   267                           ;main.c: 63:     ADCON2 = 0x00;
   268   000054  0E00               	movlw	0
   269   000056  6EC0               	movwf	192,c	;volatile
   270   000058                     
   271                           ;main.c: 66:     ADCON0bits.ADON = 0;
   272   000058  90C2               	bcf	194,0,c	;volatile
   273                           
   274                           ;main.c: 67:     ADCON0bits.CHS = 0b0000;
   275   00005A  0EC3               	movlw	-61
   276   00005C  16C2               	andwf	194,f,c	;volatile
   277                           
   278                           ;main.c: 69:     ADCON1bits.VCFG = 0b00;
   279   00005E  0ECF               	movlw	-49
   280   000060  16C1               	andwf	193,f,c	;volatile
   281                           
   282                           ;main.c: 70:     ADCON1bits.PCFG = 0b1110;
   283   000062  50C1               	movf	193,w,c	;volatile
   284   000064  0BF0               	andlw	-16
   285   000066  090E               	iorlw	14
   286   000068  6EC1               	movwf	193,c	;volatile
   287   00006A                     
   288                           ;main.c: 72:     ADCON2bits.ADFM = 0;
   289   00006A  9EC0               	bcf	192,7,c	;volatile
   290                           
   291                           ;main.c: 73:     ADCON2bits.ADCS = 0b001;
   292   00006C  50C0               	movf	192,w,c	;volatile
   293   00006E  0BF8               	andlw	-8
   294   000070  0901               	iorlw	1
   295   000072  6EC0               	movwf	192,c	;volatile
   296                           
   297                           ;main.c: 82:     ADCON2bits.ACQT = 0b110;
   298   000074  50C0               	movf	192,w,c	;volatile
   299   000076  0BC7               	andlw	-57
   300   000078  0930               	iorlw	48
   301   00007A  6EC0               	movwf	192,c	;volatile
   302   00007C                     
   303                           ;main.c: 85:     ADCON0bits.ADON = 1;
   304   00007C  80C2               	bsf	194,0,c	;volatile
   305   00007E  0012               	return		;funcret
   306   000080                     __end_of_Init_ADC_Module:
   307                           	callstack 0
   308                           
   309 ;; *************** function _ISR *****************
   310 ;; Defined at:
   311 ;;		line 21 in file "main.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		None
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   325 ;;      Params:         0       0       0       0       0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0       0       0       0       0
   327 ;;      Temps:          0       0       0       0       0       0       0       0       0
   328 ;;      Totals:         0       0       0       0       0       0       0       0       0
   329 ;;Total ram usage:        0 bytes
   330 ;; Hardware stack levels used: 1
   331 ;; This function calls:
   332 ;;		Nothing
   333 ;; This function is called by:
   334 ;;		Interrupt level 2
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           	psect	intcode
   339   000008                     __pintcode:
   340                           	callstack 0
   341   000008                     _ISR:
   342                           	callstack 29
   343                           
   344                           ;incstack = 0
   345   000008  8202               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   346   00000A  ED4C  F000         	call	int_func,f	;refresh shadow registers
   347                           
   348                           	psect	intcode_body
   349   000098                     __pintcode_body:
   350                           	callstack 29
   351   000098                     int_func:
   352                           	callstack 29
   353   000098  0006               	pop		; remove dummy address from shadow register refresh
   354   00009A  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   355   00009C  0011               	retfie		f
   356   00009E                     __end_of_ISR:
   357                           	callstack 0
   358   000000                     
   359                           	psect	rparam
   360   000000                     
   361                           	psect	temp
   362   000002                     btemp:
   363                           	callstack 0
   364   000002                     	ds	1
   365   000000                     int$flags	set	btemp
   366   000000                     wtemp8	set	btemp+1
   367   000000                     ttemp5	set	btemp+1
   368   000000                     ttemp6	set	btemp+4
   369   000000                     ttemp7	set	btemp+8
   370                           
   371                           	psect	idloc
   372                           
   373                           ;Config register IDLOC0 @ 0x200000
   374                           ;	unspecified, using default values
   375   200000                     	org	2097152
   376   200000  FF                 	db	255
   377                           
   378                           ;Config register IDLOC1 @ 0x200001
   379                           ;	unspecified, using default values
   380   200001                     	org	2097153
   381   200001  FF                 	db	255
   382                           
   383                           ;Config register IDLOC2 @ 0x200002
   384                           ;	unspecified, using default values
   385   200002                     	org	2097154
   386   200002  FF                 	db	255
   387                           
   388                           ;Config register IDLOC3 @ 0x200003
   389                           ;	unspecified, using default values
   390   200003                     	org	2097155
   391   200003  FF                 	db	255
   392                           
   393                           ;Config register IDLOC4 @ 0x200004
   394                           ;	unspecified, using default values
   395   200004                     	org	2097156
   396   200004  FF                 	db	255
   397                           
   398                           ;Config register IDLOC5 @ 0x200005
   399                           ;	unspecified, using default values
   400   200005                     	org	2097157
   401   200005  FF                 	db	255
   402                           
   403                           ;Config register IDLOC6 @ 0x200006
   404                           ;	unspecified, using default values
   405   200006                     	org	2097158
   406   200006  FF                 	db	255
   407                           
   408                           ;Config register IDLOC7 @ 0x200007
   409                           ;	unspecified, using default values
   410   200007                     	org	2097159
   411   200007  FF                 	db	255
   412                           
   413                           	psect	config
   414                           
   415                           ;Config register CONFIG1L @ 0x300000
   416                           ;	PLL Prescaler Selection bits
   417                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   418                           ;	System Clock Postscaler Selection bits
   419                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   420                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   421                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   422   300000                     	org	3145728
   423   300000  00                 	db	0
   424                           
   425                           ;Config register CONFIG1H @ 0x300001
   426                           ;	Oscillator Selection bits
   427                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   428                           ;	Fail-Safe Clock Monitor Enable bit
   429                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   430                           ;	Internal/External Oscillator Switchover bit
   431                           ;	IESO = OFF, Oscillator Switchover mode disabled
   432   300001                     	org	3145729
   433   300001  0B                 	db	11
   434                           
   435                           ;Config register CONFIG2L @ 0x300002
   436                           ;	Power-up Timer Enable bit
   437                           ;	PWRT = OFF, PWRT disabled
   438                           ;	Brown-out Reset Enable bits
   439                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   440                           ;	Brown-out Reset Voltage bits
   441                           ;	BORV = 3, Minimum setting 2.05V
   442                           ;	USB Voltage Regulator Enable bit
   443                           ;	VREGEN = OFF, USB voltage regulator disabled
   444   300002                     	org	3145730
   445   300002  19                 	db	25
   446                           
   447                           ;Config register CONFIG2H @ 0x300003
   448                           ;	Watchdog Timer Enable bit
   449                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   450                           ;	Watchdog Timer Postscale Select bits
   451                           ;	WDTPS = 32768, 1:32768
   452   300003                     	org	3145731
   453   300003  1E                 	db	30
   454                           
   455                           ; Padding undefined space
   456   300004                     	org	3145732
   457   300004  FF                 	db	255
   458                           
   459                           ;Config register CONFIG3H @ 0x300005
   460                           ;	CCP2 MUX bit
   461                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   462                           ;	PORTB A/D Enable bit
   463                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   464                           ;	Low-Power Timer 1 Oscillator Enable bit
   465                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   466                           ;	MCLR Pin Enable bit
   467                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   468   300005                     	org	3145733
   469   300005  81                 	db	129
   470                           
   471                           ;Config register CONFIG4L @ 0x300006
   472                           ;	Stack Full/Underflow Reset Enable bit
   473                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   474                           ;	Single-Supply ICSP Enable bit
   475                           ;	LVP = OFF, Single-Supply ICSP disabled
   476                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   477                           ;	ICPRT = OFF, ICPORT disabled
   478                           ;	Extended Instruction Set Enable bit
   479                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   480                           ;	Background Debugger Enable bit
   481                           ;	DEBUG = 0x1, unprogrammed default
   482   300006                     	org	3145734
   483   300006  80                 	db	128
   484                           
   485                           ; Padding undefined space
   486   300007                     	org	3145735
   487   300007  FF                 	db	255
   488                           
   489                           ;Config register CONFIG5L @ 0x300008
   490                           ;	Code Protection bit
   491                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   492                           ;	Code Protection bit
   493                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   494                           ;	Code Protection bit
   495                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   496                           ;	Code Protection bit
   497                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   498   300008                     	org	3145736
   499   300008  0F                 	db	15
   500                           
   501                           ;Config register CONFIG5H @ 0x300009
   502                           ;	Boot Block Code Protection bit
   503                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   504                           ;	Data EEPROM Code Protection bit
   505                           ;	CPD = OFF, Data EEPROM is not code-protected
   506   300009                     	org	3145737
   507   300009  C0                 	db	192
   508                           
   509                           ;Config register CONFIG6L @ 0x30000A
   510                           ;	Write Protection bit
   511                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   512                           ;	Write Protection bit
   513                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   514                           ;	Write Protection bit
   515                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   516                           ;	Write Protection bit
   517                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   518   30000A                     	org	3145738
   519   30000A  0F                 	db	15
   520                           
   521                           ;Config register CONFIG6H @ 0x30000B
   522                           ;	Configuration Register Write Protection bit
   523                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   524                           ;	Boot Block Write Protection bit
   525                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   526                           ;	Data EEPROM Write Protection bit
   527                           ;	WRTD = OFF, Data EEPROM is not write-protected
   528   30000B                     	org	3145739
   529   30000B  E0                 	db	224
   530                           
   531                           ;Config register CONFIG7L @ 0x30000C
   532                           ;	Table Read Protection bit
   533                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   534                           ;	Table Read Protection bit
   535                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   536                           ;	Table Read Protection bit
   537                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   538                           ;	Table Read Protection bit
   539                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   540   30000C                     	org	3145740
   541   30000C  0F                 	db	15
   542                           
   543                           ;Config register CONFIG7H @ 0x30000D
   544                           ;	Boot Block Table Read Protection bit
   545                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   546   30000D                     	org	3145741
   547   30000D  40                 	db	64
   548                           tosu	equ	0xFFF
   549                           tosh	equ	0xFFE
   550                           tosl	equ	0xFFD
   551                           stkptr	equ	0xFFC
   552                           pclatu	equ	0xFFB
   553                           pclath	equ	0xFFA
   554                           pcl	equ	0xFF9
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           prodh	equ	0xFF4
   560                           prodl	equ	0xFF3
   561                           indf0	equ	0xFEF
   562                           postinc0	equ	0xFEE
   563                           postdec0	equ	0xFED
   564                           preinc0	equ	0xFEC
   565                           plusw0	equ	0xFEB
   566                           fsr0h	equ	0xFEA
   567                           fsr0l	equ	0xFE9
   568                           wreg	equ	0xFE8
   569                           indf1	equ	0xFE7
   570                           postinc1	equ	0xFE6
   571                           postdec1	equ	0xFE5
   572                           preinc1	equ	0xFE4
   573                           plusw1	equ	0xFE3
   574                           fsr1h	equ	0xFE2
   575                           fsr1l	equ	0xFE1
   576                           bsr	equ	0xFE0
   577                           indf2	equ	0xFDF
   578                           postinc2	equ	0xFDE
   579                           postdec2	equ	0xFDD
   580                           preinc2	equ	0xFDC
   581                           plusw2	equ	0xFDB
   582                           fsr2h	equ	0xFDA
   583                           fsr2l	equ	0xFD9
   584                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      1       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMRAM     1     1      0
                    _Init_ADC_Module
           _Init_Internal_Oscillator
 ---------------------------------------------------------------------------------
 (1) _Init_Internal_Oscillator                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC_Module                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_ADC_Module
   _Init_Internal_Oscillator

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      1       1       1        1.1%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRhhhh       2C      0       0      21        0.0%
BITBIGSFRhhhl        E      0       0      22        0.0%
BITBIGSFRhhl         1      0       0      23        0.0%
BITBIGSFRhl         2A      0       0      24        0.0%
BITBIGSFRlh          8      0       0      25        0.0%
BITBIGSFRll         2C      0       0      26        0.0%
BIGRAM             7FF      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jun 26 15:15:48 2023

                              l41 0032                                l50 008C                                l47 007E  
                              l39 0024                                u10 0032                                u11 002E  
                              u27 003C                               l730 0058                               l732 006A  
                             l740 001E                               l734 007C                               l726 0080  
                             l742 0022                               l728 004C                               l744 0036  
                             l736 0012                               l738 001A                               _ISR 0008  
                             wreg 0FE8                              ?_ISR 0001                              _LATD 0F8C  
                            i2l33 009A                              _main 0012                              btemp 0002  
                            start 000E           __end_of_Init_ADC_Module 0080                      ___param_bank 0000  
                           ??_ISR 0001                             ?_main 0001                             _TRISD 0F95  
                           ttemp5 0003                             ttemp6 0006                             ttemp7 000A  
                           wtemp8 0003                   __initialization 008E                      __end_of_main 004C  
                          ??_main 0001                     __activetblptr 0000                            _ADCON0 0FC2  
                          _ADCON1 0FC1                            _ADCON2 0FC0                            _ADRESH 0FC4  
                          _OSCCON 0FD3                  ?_Init_ADC_Module 0001                            isa$std 0001  
                      __accesstop 0060           __end_of__initialization 008E                     ___rparam_used 0001  
                  __pcstackCOMRAM 0001         ?_Init_Internal_Oscillator 0001                           __Hparam 0000  
                         __Lparam 0000                           __pcinit 008E                           __ramtop 0800  
                         __ptext0 0012                           __ptext1 0080                           __ptext2 004C  
                  __pintcode_body 0098              end_of_initialization 008E                           int_func 0098  
             start_initialization 008E                       __end_of_ISR 009E  __end_of_Init_Internal_Oscillator 008E  
                       __pintcode 0008                 ??_Init_ADC_Module 0001          _Init_Internal_Oscillator 0080  
                      _ADCON0bits 0FC2                        _ADCON1bits 0FC1                        _ADCON2bits 0FC0  
                        __Hrparam 0000                          __Lrparam 0000                          isa$xinst 0000  
                        int$flags 0002                          intlevel2 0000                        _OSCCONbits 0FD3  
                 _Init_ADC_Module 004C        ??_Init_Internal_Oscillator 0001  
